cset: moving following pidspec: 22542
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.676350704 seconds)
loading group "shootout"... done (took 1.148598374 seconds)
loading group "string"... done (took 0.431781645 seconds)
loading group "linalg"... done (took 7.875719657 seconds)
loading group "parallel"... done (took 0.151838084 seconds)
loading group "find"... done (took 1.261400612 seconds)
loading group "tuple"... done (took 1.94084997 seconds)
loading group "union"... done (took 12.925598855 seconds)
loading group "dates"... done (took 1.412530945 seconds)
loading group "micro"... done (took 0.221618479 seconds)
loading group "simd"... done (took 4.61845699 seconds)
loading group "io"... done (took 0.983488348 seconds)
loading group "random"... done (took 9.445072111 seconds)
loading group "problem"... done (took 1.57220514 seconds)
loading group "array"... done (took 20.719901139 seconds)
loading group "misc"... done (took 1.629742304 seconds)
loading group "scalar"... done (took 45.953655275 seconds)
loading group "sort"... done (took 3.65297076 seconds)
loading group "sparse"... done (took 13.945927735 seconds)
loading group "collection"... done (took 20.082900136 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.551086444 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129546996 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138809241 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123473111 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.157988454 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118657659 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127941076 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087924905 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.960724591 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149402166 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11380958 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.483784356 seconds)
done (took 5.576514769 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174880041 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087599977 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079537598 seconds)
  done (took 1.295708378 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067022503 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12865594 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068308003 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06872129 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068996973 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06817648 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068262529 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068040159 seconds)
  done (took 1.667092016 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073461247 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069812486 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067087128 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071767668 seconds)
  done (took 1.409577365 seconds)
done (took 5.759431291 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.255472273 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.109740543 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.302573869 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.324084227 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.439061469 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092920414 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075790758 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.071779655 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.131403516 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327294789 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.118299514 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.194271392 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.100061078 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.185497013 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.030292626 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.133023969 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087145126 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.125775772 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094388864 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13292393 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.367224488 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.077840594 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.083366067 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.072499404 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.070291374 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.653723703 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669809376 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145377585 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085226241 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.082167709 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.117948121 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.646086705 seconds)
  done (took 10.57258733 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100831109 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100959522 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070250794 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125892284 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097498064 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070655746 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076628697 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07039542 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092414981 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129174301 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091198222 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107601533 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067775063 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070507463 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.095486313 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197851795 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080842323 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082283839 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07029269 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080004026 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108357093 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079528048 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080250776 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080422317 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130258966 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169704771 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097877166 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09960566 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068220183 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083385252 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116890887 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129497923 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067779499 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067435064 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125250198 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099136935 seconds)
  done (took 4.653141318 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.183411221 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.095668822 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.105865538 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.618826391 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069727178 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.153045444 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23821663 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.076532463 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.395160409 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.125929605 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.156198186 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.126952298 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.143786454 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.126347603 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.080030007 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.337130685 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.125216501 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.34499855 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.073291738 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.076821613 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.069112981 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078236717 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.07083597 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066299702 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.079551614 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093755366 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.097898016 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.218752705 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.00900414 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.303017691 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070733536 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16948157 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.097201429 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.367959358 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.07306541 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.1020555 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067679894 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.396619434 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.129287745 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066883079 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172408309 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.130909237 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065918446 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.119644154 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082011824 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065829425 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.072549704 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.072859317 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.06974329 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079993169 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.08906775 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.105503251 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071324397 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066795405 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170807739 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066563264 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067525569 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068952889 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151832881 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066751559 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.157481375 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066111919 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070456406 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.09615085 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072398373 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.088740657 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119879777 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.333781098 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.04318472 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.071509101 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.207446458 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078272113 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.0682601 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.084824001 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070049865 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.071828747 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.070076205 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.082218672 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071864554 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069992101 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.115233014 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069376919 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.073749934 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.069929253 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.075037765 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103267045 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.0668952 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.458179453 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101039131 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.068056277 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.078444312 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109061009 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068295489 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.074148681 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.071075524 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.073538527 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.069274561 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.073414418 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075374089 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.09661479 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.075998498 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114325903 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.144575707 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072340925 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065920673 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.069592107 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.074354022 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075245379 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.072824192 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.070327516 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075105307 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.071107004 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068019518 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.122657224 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067195936 seconds)
  done (took 22.541271814 seconds)
done (took 40.081396722 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.257652993 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084379886 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.084783752 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085570385 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085628174 seconds)
  done (took 1.827098148 seconds)
done (took 3.038779056 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.137068365 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110251697 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066831149 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107131535 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067189408 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112491556 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108381878 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.087265787 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11186363 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067208927 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109172201 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067174618 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067675204 seconds)
  done (took 2.441431733 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082412329 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088679631 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071501328 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083454666 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064863957 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083577865 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082780692 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091140484 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082981995 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07473398 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065264179 seconds)
  done (took 2.076124729 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082372696 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084114588 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070646972 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082533931 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065282973 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084352402 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083176676 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088193928 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083648603 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076103953 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066113587 seconds)
  done (took 2.064173712 seconds)
done (took 7.781544298 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076283218 seconds)
  done (took 1.262987459 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.548449718 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.531096195 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078947834 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.099499284 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.206412205 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.110415423 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.237827277 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.082667101 seconds)
  done (took 8.263307902 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09799394 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08740531 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072719513 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071445519 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071641365 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071320302 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072088519 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071903946 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07356565 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072481309 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072173475 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072477534 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071630425 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071185676 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07126857 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07031192 seconds)
  done (took 2.467490424 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099771491 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098959179 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074479753 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075289381 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073376025 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07345399 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076164554 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075300146 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072072046 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074219676 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076570303 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074165072 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074568974 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065302157 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074770861 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077297673 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072244987 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075533087 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075467443 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07642637 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076069495 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065024703 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073699419 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074815955 seconds)
  done (took 3.13606558 seconds)
done (took 16.331033176 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11464781 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078402639 seconds)
  done (took 1.386428374 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081902942 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081595565 seconds)
  done (took 1.365671907 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077286459 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063052313 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08281564 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073648484 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063829839 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063590614 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081479503 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064352595 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063894784 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06386001 seconds)
  done (took 1.901655467 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065954654 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075416363 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069632681 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082777026 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070179726 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064938036 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068144547 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065088437 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.072134535 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063750238 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068708745 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083260557 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068201281 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085386311 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068368739 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068981176 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070860464 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068139981 seconds)
  done (took 2.489091639 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063587368 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064205959 seconds)
  done (took 1.343551229 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067167485 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064648923 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067488764 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06670359 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064161125 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063407605 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064028377 seconds)
  done (took 1.667340293 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.376332643 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135177039 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.342028289 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07127288 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08171666 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254255075 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066795954 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072127047 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072382058 seconds)
  done (took 2.725781851 seconds)
done (took 14.095514664 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081733082 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086702389 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.103200094 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.42665911 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093583202 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068647884 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11550238 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.182465525 seconds)
done (took 2.389965519 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.229567095 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.116124285 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.932541983 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.069636999 seconds)
  done (took 3.333455997 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343274045 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091622762 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078250006 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067914205 seconds)
  done (took 1.80572149 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0681585 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071881313 seconds)
  done (took 1.360917654 seconds)
done (took 7.960514517 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065827167 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065778224 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093421103 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066428593 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066100854 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065789473 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066143992 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067358755 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067279498 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067168348 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065823191 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066675457 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067031427 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066485949 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067311647 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067651351 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067341413 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066747699 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066180669 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066044394 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065920995 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065621889 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066148864 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066066983 seconds)
  done (took 2.880407902 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082868355 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068004646 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.06926383 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068826158 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069765253 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069093864 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069570941 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067697287 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069091044 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067901247 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069781349 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069798836 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067721973 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06965509 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068090569 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069731955 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069513224 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068301812 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067513603 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069646977 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068977689 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068320299 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069716329 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069512621 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069705777 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069620876 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068844056 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070117551 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071035218 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071400388 seconds)
  done (took 3.318886802 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066938702 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062585566 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064448556 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072759898 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063413134 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064849664 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063389952 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064643241 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065112107 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063668532 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06512357 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063655361 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063939182 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064750672 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064855058 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068289746 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082082099 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064405176 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063986814 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064567129 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06856648 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063620491 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064086836 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063790424 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063693684 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063654237 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066894283 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063748667 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065186611 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064170385 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067887217 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068654038 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064782637 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073083315 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068285434 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063705241 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067813805 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063529158 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.0644754 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064290606 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064089674 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063854878 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063819244 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073064211 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06399681 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065079206 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064026323 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06558754 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064634412 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066690379 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063883524 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064109815 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066586979 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065482898 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068913332 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063577827 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064780274 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063573755 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064210792 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063896742 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063054113 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062957258 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066732218 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064097611 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081483819 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072679028 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06395684 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064959081 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064577965 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067077774 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065361834 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080664377 seconds)
  done (took 5.980653297 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08916081 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090663659 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067292036 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068151719 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064750798 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064346216 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072737981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064277464 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069073681 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083564739 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064372724 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068917921 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068978553 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069141904 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065200084 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069651316 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088995967 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064411956 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064324747 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068285131 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063764847 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071894004 seconds)
  done (took 2.807115168 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148356917 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068329013 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105232547 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073945911 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072787443 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07506587 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070621199 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069876646 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070829786 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07080738 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070597758 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070036164 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07240836 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070695028 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070742648 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070493787 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0706594 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070477003 seconds)
  done (took 2.643709448 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078583911 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068686434 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087053524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068066541 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067929151 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067495118 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072458655 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072575545 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067687766 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068888012 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073721147 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06884616 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069171414 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069315193 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069040823 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069420607 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069052897 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069574493 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074055117 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073725687 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072937831 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073762136 seconds)
  done (took 2.82251986 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0785934 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066706704 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082022802 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069105434 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062828656 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062640387 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068399776 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067341716 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069274953 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06790933 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068855848 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064375459 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070991267 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06913429 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071432458 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068616078 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066944258 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067491669 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067282991 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062846186 seconds)
  done (took 2.624945047 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091410139 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065586334 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065470704 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071579262 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066176794 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065599031 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072083981 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065477156 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065610588 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087429436 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06783233 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068096477 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073377646 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07106497 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066959982 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071641858 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071311798 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071822137 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069108191 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065592569 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086432473 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065549954 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071719408 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06583124 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065931198 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065925657 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065602993 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069475195 seconds)
  done (took 3.222557374 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066192367 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06539028 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065849704 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067219682 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067275251 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067188421 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066865996 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067044355 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066805347 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067290238 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.0670865 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066866657 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066967718 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067082132 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066798593 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067644055 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066999512 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066933476 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067652791 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067898233 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067037568 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067217273 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066710195 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067266762 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067000452 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065293182 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065963003 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065715194 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065451252 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065482406 seconds)
  done (took 3.259379722 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075767139 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07498746 seconds)
  done (took 1.41152415 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064871106 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079216605 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061802501 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074600346 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073412992 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067367542 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073720741 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072606904 seconds)
  done (took 1.823536744 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.089596196 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078827647 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06506143 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082637059 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078713394 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.088804907 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132315444 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064519568 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07509825 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066445432 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08978535 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06669632 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074972741 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069596468 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074906919 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07870781 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062658423 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069257211 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065482607 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063471058 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065449221 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083979303 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07662743 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064636137 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071468935 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09510303 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087270364 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066243229 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073177245 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077621171 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074722228 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061918573 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064321933 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064948395 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0630787 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079784505 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086716854 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071626399 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077758181 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065427754 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075312679 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063075961 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073885335 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075941013 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081023482 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064701181 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064724825 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063147718 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065990303 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071007336 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062671531 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06924334 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062377706 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076650889 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072380875 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079203024 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063423261 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070847561 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07243635 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073197211 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078205285 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072482445 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075993373 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065211125 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082293412 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075304986 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078360073 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062847086 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061656339 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062714077 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077906039 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097515696 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074603736 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064643357 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065315034 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062700591 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072264593 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065306628 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076333112 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076121551 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064390085 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072493284 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077409972 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069332706 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071301576 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071389632 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063375506 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068494509 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065841222 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083370383 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063131676 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062737403 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065620165 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079226685 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071170095 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066579408 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065699451 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077203363 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063690126 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065888648 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06520449 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071049136 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079201841 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069649521 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074680057 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07758712 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078537735 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069506833 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07127168 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061703196 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064720869 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06659387 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075513764 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062388941 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071283761 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069894136 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065097084 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077453828 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063423266 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064902155 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077749926 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077051983 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063763416 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062781236 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072688062 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065089926 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0667038 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076265041 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062263423 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06192475 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061790369 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071050594 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062928943 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075406538 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067035175 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.202869422 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063238063 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064040391 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069378693 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077033123 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068803808 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071065764 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074622851 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071240924 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06384026 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076624202 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071568701 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067017321 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073634839 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068825757 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064072437 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068199516 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073695707 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.0652569 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073966548 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068201282 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073194938 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066329704 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064568189 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07162567 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066635772 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068406271 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071614757 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065197502 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081289816 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072518981 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064223718 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063823305 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072271808 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067563671 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.0652881 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068829799 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072433483 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066366397 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064110919 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065536583 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07160544 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08104052 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067029148 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065512652 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074984211 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081371141 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064002571 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071849176 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064058616 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065149684 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065040689 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078292243 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07496483 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068280585 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071615385 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062412227 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076434446 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076791239 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067448299 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063007786 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067342353 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068357848 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076434824 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068120183 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064875319 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063318078 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070869575 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066883966 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071344714 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064473234 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067227835 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069777201 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063324254 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070050332 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065416954 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079001953 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072206761 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063587702 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067067757 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063325841 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075792206 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063418893 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066256524 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067489563 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065464164 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06368925 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071239036 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062277117 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076806377 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076897484 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069882223 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067547314 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06438851 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076610821 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069978878 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072789688 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071912304 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073783422 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079433248 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067102 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071195714 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078687832 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064251954 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062571787 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075890393 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062821118 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063543628 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063298465 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063004703 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071748509 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070040691 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074001913 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061700811 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072601633 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064398753 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068206917 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064276016 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074343369 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073237847 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070528992 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077896907 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066297646 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066011159 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073864712 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065284583 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06563848 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066270755 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072407143 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065491631 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071079429 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067599339 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069286742 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06621873 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06257173 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070296578 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065014558 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070207696 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074093506 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064097159 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070591173 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.207415685 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067388105 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073675342 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070861798 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069312029 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074273954 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072116841 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071165036 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073688316 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064337038 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078424057 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.0652753 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078843844 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071041961 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063459067 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07165883 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07322698 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070474422 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066233453 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066107215 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071706697 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065531404 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072860718 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078707639 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067463574 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082633524 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076872767 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07206452 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073147257 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071347134 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071401443 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068292326 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070114505 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066174732 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071313225 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065520798 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075054444 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073281272 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070969477 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072231491 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066280628 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071265984 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067441046 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063707791 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068364333 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068568083 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065648653 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07876746 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06582656 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068660344 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064566379 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066360923 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065035454 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063600756 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0723566 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078236788 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066696809 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076537847 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068936493 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072316762 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081419147 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063535681 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064629199 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064548465 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06790308 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079087537 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066560087 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080062989 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071899744 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069006078 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064196372 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067352508 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064789724 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063948722 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064003462 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072470303 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066803717 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064756862 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065822678 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072986287 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067033587 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078741436 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065523577 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070727352 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066546665 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064090432 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068974771 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068817345 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073621229 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066891998 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067253486 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063310844 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065959969 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070929146 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073025522 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065708234 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072335933 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079442062 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066183357 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072693966 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066861442 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062719311 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071686764 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064703812 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064408772 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067326753 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072546711 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072328124 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065323587 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078463919 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066911248 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070523233 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064586517 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063074389 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064026303 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064417407 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064644204 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067013681 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065939736 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076930186 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062803591 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070937898 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069539038 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067963818 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074039406 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06507523 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071298625 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069249182 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065902341 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070322111 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076511013 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067302633 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07151218 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06438779 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069372898 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073632862 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066041792 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075849097 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070520682 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065632543 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071432234 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066929719 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065022235 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06479587 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064700532 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074869052 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065637502 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068535809 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068244958 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063871551 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069818523 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067415155 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077920811 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070488666 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071475985 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062106789 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062102527 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063856426 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065691839 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06922895 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07121429 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074825587 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071684159 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068788827 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064495019 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079704453 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075150173 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073103534 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066459573 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073000326 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065539135 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072621305 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069749097 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070433957 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066008773 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073258706 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071779463 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06800586 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075189947 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073489185 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06589931 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07137945 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071175167 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070301172 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064101788 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065609045 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072131554 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074199493 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072406268 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065545505 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080260087 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065506674 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067928667 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064867469 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062258872 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071223475 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06161669 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068562585 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.063186551 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.062916934 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060774067 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065362869 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064342731 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068891997 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065770917 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061009385 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076086529 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076176233 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06828543 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062126814 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.060969816 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060988348 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060515495 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065933571 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.063137761 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068254287 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076440117 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066294113 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065007991 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060936854 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062908568 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069066781 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070083876 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06136544 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060966659 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065848379 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068432421 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073248094 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062191835 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.062521398 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069229376 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06908572 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061251321 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065165031 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.060280999 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070005335 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077474901 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.062360846 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068305337 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072034809 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07561648 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.063242878 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06131738 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063175061 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068343453 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067981023 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.062939657 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063408963 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07963119 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07043873 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065731128 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062025113 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069572524 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065577161 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075108545 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065116347 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.062510107 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070508342 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069881901 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067756295 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073246377 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072167708 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068111952 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068224625 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062057301 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067404835 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.061979752 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065700196 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063120618 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063000029 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065166419 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067811194 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065494983 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076703465 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075597819 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065995554 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060734457 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065377077 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065522887 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061425636 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06338329 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06171723 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062102584 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062133114 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061898082 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068620722 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071157822 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066791119 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.312189076 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067602313 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064886999 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.078765385 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.076556742 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07530305 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06649706 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068227912 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068912305 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07818245 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072030651 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071448982 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.076788411 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.075655799 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075581517 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067728721 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.082154221 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068776968 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.075242654 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071484383 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068084384 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068780867 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076984915 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072081234 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069311817 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.075522316 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076164966 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069237359 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066112878 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065985732 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077722485 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064803435 seconds)
  done (took 43.245619938 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102760247 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065951891 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064613775 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064892764 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073670418 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065836085 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065013899 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065921139 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065744998 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067187185 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06443689 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064847647 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071463789 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078376927 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073552299 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068026349 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063801389 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064881958 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06412522 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064780786 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07131998 seconds)
  done (took 2.870818274 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071195154 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078914897 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075744624 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080371022 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073663387 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070769794 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077981672 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07036021 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078534697 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075649811 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078330589 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070330092 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076461808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076411721 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076004 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07112367 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07864932 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07513436 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070788771 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078755248 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070747303 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077930427 seconds)
  done (took 3.048141049 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065674521 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064736621 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071447297 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062835474 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064333276 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063178031 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067587604 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06337649 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067071298 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067404073 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067899449 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067483062 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072309192 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063352565 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069910774 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065074663 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108900768 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066906323 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065593101 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065826155 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064119616 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073881325 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065437189 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065649346 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06949767 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069259099 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067029684 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065524778 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066847047 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069347971 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067031647 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064936886 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.074144682 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072993221 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069664655 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069295905 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066657386 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066861703 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068367457 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065311826 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073382982 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065933803 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067446573 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074262792 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065443091 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065451439 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074341119 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066955912 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065038265 seconds)
  done (took 4.749444023 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077553371 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113410616 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069519293 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095202991 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077016007 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071119467 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069681867 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096456328 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064915749 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066135621 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.078318023 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078953976 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067228888 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068743498 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071271681 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067028239 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067684326 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067646964 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071923775 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068515354 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.07182596 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072916262 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077793465 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077993878 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068047373 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06637817 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066927796 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068354723 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077384627 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07049154 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068632542 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069264067 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077766947 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071594879 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066302945 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067291668 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080751513 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069040915 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068489782 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064955191 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066296724 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06795309 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070882662 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078210419 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066416702 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071090184 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066630149 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064673497 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077698981 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06787824 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071605143 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078222382 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067803969 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067228316 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070335787 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080428702 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069242795 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067679784 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068885374 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079552687 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066744431 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069893229 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080866907 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068367413 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073119304 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080857143 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074011161 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070347044 seconds)
  done (took 6.483399463 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075854922 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096143041 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081333053 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080130696 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074898545 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076784159 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077083257 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076987498 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077224606 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080832637 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076848523 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118016515 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072557518 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079306975 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077796007 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076758406 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078451205 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07683335 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076040659 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075301908 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075647388 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081071462 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07521722 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08100643 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078398343 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071638077 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074936803 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075049994 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081083928 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075026669 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078310441 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075282685 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075379508 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081330294 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079969718 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076938245 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065552321 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075771369 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077158674 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077322829 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073272348 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083221178 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077048215 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072801037 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077510676 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076880369 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083379933 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079152449 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076383042 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078467824 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074757158 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08102308 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074617333 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074659278 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080771876 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083578187 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080713388 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080480946 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074624373 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080883859 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081195386 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083659907 seconds)
  done (took 6.298683523 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084453629 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07178162 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083438697 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064434747 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06670218 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07447103 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064912579 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064583283 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07219001 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071257803 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073085865 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073373876 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07558562 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073034575 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07321082 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076170042 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073386099 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073392744 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071958665 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073266108 seconds)
  done (took 2.885336891 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07747667 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082438527 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069411665 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073337828 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068848932 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073264085 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069860752 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070361453 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069752054 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069253799 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074737152 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075761926 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069325404 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074357633 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075172621 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074330179 seconds)
  done (took 2.586266308 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084046455 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071531466 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077939239 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065093778 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068937474 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064756953 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066182986 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064940633 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066033069 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079499026 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064740328 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076266204 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064483742 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063707941 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063872472 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070296843 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064118116 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06504714 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064667193 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077314543 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071722629 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065661089 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06973526 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066388594 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071713307 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072033969 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066398368 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069449892 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06467666 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065639004 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070365892 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071653717 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064665017 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065197087 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064065642 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06461602 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064856708 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064915481 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071902283 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066486847 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064828498 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071297469 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066304043 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067705911 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0653524 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066660534 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065672781 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072082141 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066453067 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072096225 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066400744 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068989557 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066574319 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074093386 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068496657 seconds)
  done (took 5.177810332 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079702489 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068943335 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063393454 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063298387 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086047971 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068764899 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068819286 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069074268 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070883326 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064860082 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07152261 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07050424 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071284026 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070702927 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069310842 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069270686 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0630569 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068647364 seconds)
  done (took 2.689867355 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074083201 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068481885 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073372212 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068561047 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068337297 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068326807 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063733429 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063529765 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063598825 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068341276 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068181253 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06798659 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063469689 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068183193 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068430386 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068389457 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068403137 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063896431 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068316027 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063973453 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067907718 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064004034 seconds)
  done (took 2.907111008 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096195664 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085506628 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14566932 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081215578 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091635179 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073435692 seconds)
  done (took 2.001718826 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093769695 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099201327 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068920385 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068606272 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074103333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07288787 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073395818 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073845433 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077933923 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078596697 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073917941 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080784709 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077941262 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08013589 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076072472 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076489732 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074150559 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0736995 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070280611 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083380464 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07399435 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078255495 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073837844 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073591235 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073425935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080122877 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078175855 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078482509 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074065124 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077746219 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075872649 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074046329 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077903639 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076646802 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068522409 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076160577 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071976548 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080729255 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073918286 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077883131 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068931957 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074695118 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077776514 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077636951 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077724054 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074693755 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077537472 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074080633 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073630025 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086909517 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074242348 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078144582 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074221658 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076517011 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076181286 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083164046 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077210259 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07827424 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075760586 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078946124 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08104883 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076715995 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080361327 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077941767 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07424352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078476964 seconds)
  done (took 6.502135892 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104421358 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070403417 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073778568 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078710098 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079726895 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074434503 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074104154 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074117527 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073821608 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071012189 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107882114 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072477775 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080375188 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080145326 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074280868 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074775841 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0739376 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080348403 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070633343 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082608764 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072099951 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077590465 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077566033 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07791219 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076282839 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07398366 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071646462 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0715528 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071705561 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071687779 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075840825 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072222929 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077687757 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068610562 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077679544 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071903973 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071667616 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075391091 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072186886 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074351619 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078061828 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080615251 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071670515 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071645688 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076583844 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071552919 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07181739 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068826099 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071504047 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06917319 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076856361 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076363844 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076537319 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077839444 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072525977 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072193246 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071736782 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073538467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07408108 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076341792 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07998236 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073910563 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086030926 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074251381 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073317522 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078221757 seconds)
  done (took 6.450532684 seconds)
done (took 131.917712601 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.232401744 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.209127579 seconds)
  done (took 1.860479079 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075228906 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107085686 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084174648 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134482228 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071782475 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106095489 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105063002 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083231872 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071996424 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072081053 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071860257 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074500365 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137607215 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073941045 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072283783 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074836346 seconds)
  done (took 2.862101687 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106195197 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.212891165 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109424127 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070529192 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104800753 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077815618 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073697128 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082936842 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076464331 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072669362 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077998649 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075948439 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072388312 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.076135899 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076171248 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077642097 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071981093 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077758983 seconds)
  done (took 3.031138529 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102471597 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093404217 seconds)
  done (took 1.63830149 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.178628295 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137068969 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205102498 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343965706 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.150536895 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.415645077 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138993157 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141160464 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116464417 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134221851 seconds)
  done (took 3.398468619 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104952891 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199081009 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295211863 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.126663596 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076900452 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.107781964 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125421244 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082593462 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081822027 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081197897 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081563813 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078411582 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101537003 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077953091 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076928977 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078550992 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104441386 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076087138 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07738054 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077691045 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105976685 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071486827 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078094446 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076073563 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080044014 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080008763 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07272313 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071079513 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077327728 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077569242 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080392068 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.105797854 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07950885 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104590966 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075516426 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105885713 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079021161 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076542479 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077397396 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076266338 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078625343 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0784416 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081484422 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079243365 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073317636 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079186253 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072887241 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071875563 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080827324 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07234587 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080601005 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080067644 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104637201 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072711196 seconds)
  done (took 6.333191206 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109287967 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107111144 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072099707 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113120463 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104737418 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072057476 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106206506 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100443109 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108168628 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072173099 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070410317 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072009759 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079561217 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08180451 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11729963 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108908681 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074128298 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072164165 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108993346 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109034073 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071055374 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102173916 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09914436 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108313527 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070384757 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071815669 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072390058 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074313491 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07987329 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081052336 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070788786 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07969915 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083823872 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078965774 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069587347 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070085479 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070364213 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078743818 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079223417 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078872397 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077440069 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069935464 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070361546 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071634888 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071129085 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069642837 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077806405 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078950766 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077717608 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070311257 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071959651 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069682133 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070959298 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078849885 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076704041 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079471113 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078965072 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070439068 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070300125 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072584164 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079670435 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079319606 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07879111 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070876266 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079173512 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072948765 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0801306 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083122308 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070796454 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071668321 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070442149 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070674591 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071427587 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077332377 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077094064 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071637479 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070677532 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070389836 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080079915 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078111361 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070929655 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077167699 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069693906 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070503264 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07168138 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071532461 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076687722 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07890827 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071734022 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070456283 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070886145 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070514662 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069932762 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076956687 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07856415 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078648751 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077487489 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071050023 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078550275 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077997998 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07131585 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078164848 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070367155 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071809224 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071612626 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078972571 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077393296 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079705244 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071439916 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07045102 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078093736 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080386482 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070688222 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077139576 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078838442 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076724271 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06879972 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079082931 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069655297 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078302699 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070052347 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079100165 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069837481 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077025146 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069826422 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069337769 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069887903 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077652796 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071230882 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069835858 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070910905 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06991029 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077058789 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079472174 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071113615 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076694557 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076203617 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070009939 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.076185897 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069143141 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077060727 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069431717 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069936473 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069085615 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079134574 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069398124 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069207853 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069718385 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077568615 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069510608 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077670205 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074942102 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068519926 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079122444 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07789249 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075605992 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078051657 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070531416 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068830569 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069081536 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069175031 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075335345 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076685448 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070144752 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069344663 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075374975 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077722469 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068301667 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075888964 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075951833 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075904646 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068915765 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069108007 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078373611 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077753845 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.0754315 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075683354 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075784501 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069170427 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075518812 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07550456 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068916201 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081345127 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069050975 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079844966 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076038932 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075083677 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076568921 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077636606 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077767962 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078238399 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080725795 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068816265 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06910791 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07636255 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06922112 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069745156 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075963579 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070197446 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070396576 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080668696 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069918218 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077933383 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068361862 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076241612 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068027359 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070109716 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080594527 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068961774 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069827371 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076299759 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071887177 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075391426 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077971908 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076248121 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068656841 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070407264 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077131613 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077529433 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069368191 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0692023 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070970327 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076340303 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075366928 seconds)
  done (took 18.526261623 seconds)
done (took 39.109642265 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.238664423 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179116098 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.210591703 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.135056793 seconds)
  done (took 2.356704259 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117284933 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.111959105 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093123344 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068511714 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099264936 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068511044 seconds)
  done (took 2.07064226 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.34958428 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.238224266 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212514303 seconds)
  done (took 2.311479527 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.226138234 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214465485 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47537368 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295141691 seconds)
  done (took 2.830454958 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148409641 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088175955 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066501482 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084061492 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127223859 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153977678 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09755346 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.122298548 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077506717 seconds)
  done (took 2.53963628 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.160255644 seconds)
done (took 13.890980411 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.237947068 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111266109 seconds)
    (3/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.421938659 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.101623312 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071767394 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069459451 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.100947862 seconds)
    (8/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.211284671 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.165152126 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077758999 seconds)
    (11/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.210713896 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.233570305 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.258767525 seconds)
    (14/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.20918922 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108121999 seconds)
    (16/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.183863361 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.070489833 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079456479 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.240820026 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076564772 seconds)
    (21/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.171144716 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.192517022 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.129328398 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.108818005 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071818219 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068298341 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.231849647 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07453175 seconds)
    (29/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076545451 seconds)
    (30/309) benchmarking ("sort", Float64, false)...
    done (took 0.132964387 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093847669 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075507737 seconds)
    (33/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.163199374 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168542983 seconds)
    (35/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.184652211 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13891645 seconds)
    (37/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.111485425 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075679321 seconds)
    (39/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067169613 seconds)
    (40/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.200491259 seconds)
    (41/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081903963 seconds)
    (42/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.140244686 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075849837 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077798535 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 0.161380021 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086278512 seconds)
    (47/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.140354819 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076545035 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085974228 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105800387 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.069102357 seconds)
    (52/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080194556 seconds)
    (53/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.1818782 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138172327 seconds)
    (55/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.097576641 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.094886362 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076204445 seconds)
    (58/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.167317759 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067688523 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076657036 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.113775051 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06795347 seconds)
    (63/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072842016 seconds)
    (64/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.202212135 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095535594 seconds)
    (66/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.144157366 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068905211 seconds)
    (68/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078873932 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.171771505 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14633524 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.106828706 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06931488 seconds)
    (73/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074947778 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.071886346 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069460925 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.179913131 seconds)
    (77/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.215633489 seconds)
    (78/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076685106 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078349855 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.185472898 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090421778 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091227705 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077283053 seconds)
    (84/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161771351 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107243234 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068247837 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080158896 seconds)
    (88/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075640057 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.185577321 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075150124 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06597944 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071180092 seconds)
    (93/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095832561 seconds)
    (94/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.285442289 seconds)
    (95/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.098145853 seconds)
    (96/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079222453 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.100392289 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067291417 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076349016 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.1482898 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.219991106 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148509643 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.111960226 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066994557 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067976251 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094370583 seconds)
    (107/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.203691786 seconds)
    (108/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.170853209 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07447861 seconds)
    (110/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074216406 seconds)
    (111/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074901531 seconds)
    (112/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068075645 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066697822 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.097084082 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.23557538 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080223005 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126081171 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066946482 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066881588 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078170882 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080387221 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119458562 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075920602 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076480465 seconds)
    (125/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.16628234 seconds)
    (126/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074194579 seconds)
    (127/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082337009 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068266116 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066485629 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146422508 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077831652 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068266768 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074585162 seconds)
    (134/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066401912 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067351188 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067267667 seconds)
    (137/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067587244 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077442798 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076437187 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068223026 seconds)
    (141/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.067130521 seconds)
    (142/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.175612482 seconds)
    (143/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067221349 seconds)
    (144/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.068335368 seconds)
    (145/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067958301 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075758449 seconds)
    (147/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.233560855 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.132674182 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075929921 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074263031 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067237201 seconds)
    (152/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.142080278 seconds)
    (153/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071211869 seconds)
    (154/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.143023397 seconds)
    (155/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06740674 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066703059 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075929087 seconds)
    (158/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066390435 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067465875 seconds)
    (160/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075467053 seconds)
    (161/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06652643 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074580533 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069184313 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.200944329 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142602273 seconds)
    (166/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067517826 seconds)
    (167/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.140241024 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068426133 seconds)
    (169/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.168065586 seconds)
    (170/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066548563 seconds)
    (171/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066856088 seconds)
    (172/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069536623 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067598038 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122594559 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114786585 seconds)
    (176/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075855887 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.214347889 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.140413703 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145113573 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126354689 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184392405 seconds)
    (182/309) benchmarking ("sort", BigInt, false)...
    done (took 0.252666651 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.182324865 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068428278 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.171391849 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068492443 seconds)
    (187/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066656549 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067583258 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18950345 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092307709 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07552893 seconds)
    (192/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08937717 seconds)
    (193/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080570216 seconds)
    (194/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.139233024 seconds)
    (195/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066329707 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077897617 seconds)
    (197/309) benchmarking ("sort", Int8, false)...
    done (took 0.171798294 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067379118 seconds)
    (199/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076113446 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068286572 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092647036 seconds)
    (202/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067806179 seconds)
    (203/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066226315 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067053561 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074417417 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.180761472 seconds)
    (207/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071326275 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075530722 seconds)
    (209/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067370087 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073601476 seconds)
    (211/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067170713 seconds)
    (212/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066967006 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091897393 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073393324 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.231308129 seconds)
    (216/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.069842255 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.215436794 seconds)
    (218/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071015254 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067920114 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078100873 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07631428 seconds)
    (222/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07626982 seconds)
    (223/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068224078 seconds)
    (224/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068702553 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140672022 seconds)
    (226/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068818394 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067402165 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068795563 seconds)
    (229/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096970989 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142693499 seconds)
    (231/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068023088 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07591644 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067529992 seconds)
    (234/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068200096 seconds)
    (235/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067782339 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067539324 seconds)
    (237/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121738385 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144326077 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090267221 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073022521 seconds)
    (241/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066951688 seconds)
    (242/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081756336 seconds)
    (243/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071702988 seconds)
    (244/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.165365729 seconds)
    (245/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.068558801 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069105282 seconds)
    (247/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07611543 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.128823896 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069658427 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119412352 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067687014 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090333356 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091559243 seconds)
    (254/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.068158183 seconds)
    (255/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067137812 seconds)
    (256/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.207053702 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068693527 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066900311 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067345599 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137856371 seconds)
    (261/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.141504459 seconds)
    (262/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.0725956 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069304477 seconds)
    (264/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06876221 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067493425 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179985697 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067112162 seconds)
    (268/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066887945 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068465678 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068525766 seconds)
    (271/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06769295 seconds)
    (272/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.140600479 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077896639 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090253079 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067294327 seconds)
    (276/309) benchmarking ("sort", Float32, false)...
    done (took 0.134729442 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067895185 seconds)
    (278/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074802736 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074864542 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068851262 seconds)
    (281/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06768493 seconds)
    (282/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.068051327 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071312863 seconds)
    (284/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066761781 seconds)
    (285/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068157027 seconds)
    (286/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.068075691 seconds)
    (287/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066864995 seconds)
    (288/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067920088 seconds)
    (289/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.067861687 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067271651 seconds)
    (291/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069092063 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067652191 seconds)
    (293/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075400579 seconds)
    (294/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07388084 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06697234 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076634297 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114323314 seconds)
    (298/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066672694 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069268329 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074283993 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092934045 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091287221 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088545205 seconds)
    (304/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074996665 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113281562 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066867724 seconds)
    (307/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069703191 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066619523 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082015399 seconds)
  done (took 33.855661511 seconds)
done (took 35.386182627 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09247782 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100903173 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075471718 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098132023 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082355779 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095596221 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075819698 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080614527 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083048787 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08143453 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080242949 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073923929 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076622008 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076635227 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074955153 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097557863 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081615554 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077822778 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07802417 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068867329 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076727908 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068435627 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06769528 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074062178 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078820009 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074736951 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076677645 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076578222 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067526765 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068162692 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072517668 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076577993 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067426572 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079798488 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076543175 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076061725 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077788905 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080583799 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067138332 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067974682 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077314858 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067595955 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075946626 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073977194 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072145952 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073931999 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076137225 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079381617 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097811462 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071931533 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07751109 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078608134 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078631084 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073121415 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073534878 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075109219 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073916119 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097551904 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07554768 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072270037 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076985851 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076578356 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07388779 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075643253 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075528039 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077969465 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079930339 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07390886 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07801433 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074373471 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067776817 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075973566 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07190767 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069674383 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077951099 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079992683 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066879493 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071972628 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075055324 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075431622 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067331997 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071256609 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066999145 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071985419 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071307653 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073114047 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073028359 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074711382 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067119824 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075818372 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07464564 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075294495 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066966664 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080798119 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067378914 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073316212 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067599599 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070160893 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068875344 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074545664 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069317292 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073799212 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078331136 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068658322 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074404221 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082487791 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068161707 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074480571 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067089287 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067324809 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078727609 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078083336 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067619358 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071998108 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.0673602 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072991807 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067002668 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067324358 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067405506 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067179759 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071998233 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067498925 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070679869 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072250663 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079235168 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066916848 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071437666 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071095446 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067196599 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073765149 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067587142 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066998069 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066836648 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080274516 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071065682 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067230627 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072271052 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071124768 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074725355 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066575289 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076038045 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073150193 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071290158 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073860373 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066355764 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078679404 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072408139 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071737065 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067329853 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067311194 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066348853 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066909967 seconds)
done (took 12.958324731 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07294143 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.121338079 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.090920738 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092935402 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08324389 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069110641 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074696499 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.089447258 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069969975 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.09501954 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089672368 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088206809 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.10831122 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066920053 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068206297 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069190313 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069342931 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077992563 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093068531 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090239128 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105322547 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068150845 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08568786 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08734815 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083393788 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.08844267 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069133507 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069639337 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070763939 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089661283 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091880559 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071224897 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069823321 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.08887808 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084727328 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079355284 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068507068 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075549609 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069086018 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068731674 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070053613 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.086450621 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.0750471 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075298199 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069386829 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076131163 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069317593 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08147845 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087023418 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07567409 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081736534 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.089478134 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071029916 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082735046 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06713827 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081751766 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075377794 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068475324 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068602248 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073190351 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068266318 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070763185 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077128984 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075334953 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072065719 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082205021 seconds)
  done (took 6.816104021 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090417712 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097232946 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08566782 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084643569 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067413893 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068563584 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068163847 seconds)
  done (took 2.190227218 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0709222 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.096937949 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095316071 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095647543 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088099935 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095771082 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079956274 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06993593 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.104272545 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06759612 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.093158489 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113471472 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072070444 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079535725 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096828626 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068325968 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092597228 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068892734 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071409136 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095582231 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072524477 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095206166 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079859675 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068774859 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084626857 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068724764 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123982942 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079151165 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069830207 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069637888 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069831633 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.113840486 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083901471 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079756358 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06955513 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082487064 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085647451 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071766555 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08240001 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08065409 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084623422 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070357975 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067817466 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069987309 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072101997 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079830321 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067822589 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069750627 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069500428 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092207093 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067640693 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083935301 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072437471 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074113478 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074527824 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072988521 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077458772 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070062649 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092402323 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070321954 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087749935 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087632985 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085126007 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087426483 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069273074 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084237972 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085219451 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069948492 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070530736 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069968179 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087246623 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072150265 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070411164 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079714809 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068373234 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09730737 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097857658 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068037138 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081769657 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068956018 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069860701 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079873442 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.097037505 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073870352 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069898535 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073856195 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070897269 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072433148 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067492183 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072615209 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069623523 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075043099 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071127946 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072924518 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071070545 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087598932 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067968418 seconds)
  done (took 9.313426296 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073102349 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070923252 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071472917 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069372629 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069602328 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069348384 seconds)
  done (took 2.086274835 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092893805 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069200864 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081459963 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069204399 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.116599987 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.0838753 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08359266 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077337488 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081513812 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081166806 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08406242 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08625772 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086917628 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071430497 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083744502 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07049832 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084170565 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073429596 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080822288 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071551192 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081360237 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071332558 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072138551 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087832383 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072884175 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070664239 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078211442 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080420089 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080314774 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077898807 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070884853 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072349188 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076824853 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077535093 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084266214 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079054199 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069244509 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074837476 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07203563 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072602495 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086635117 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071281695 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072041552 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07600029 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07750867 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077164164 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075122072 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076978934 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083260438 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075217373 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075286571 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070491702 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072528509 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074829771 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076934259 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077415464 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07534876 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083151293 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071284625 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077226984 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069262826 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072561581 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077666999 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072131031 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075380721 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074974006 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076815209 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071131844 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071391664 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06977708 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075039252 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069563318 seconds)
  done (took 7.183216052 seconds)
done (took 29.239032877 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.523676398 seconds)
  done (took 2.129368052 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.63849836 seconds)
  done (took 2.283792209 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.902551747 seconds)
  done (took 8.552410131 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.431301925 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.492151242 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.773762645 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134219686 seconds)
  done (took 3.497469511 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.701290094 seconds)
  done (took 2.364205071 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.254700459 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235329931 seconds)
  done (took 2.156176366 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349653268 seconds)
  done (took 1.99609817 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.095243673 seconds)
  done (took 2.741883742 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.288909136 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165682102 seconds)
  done (took 2.110439698 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460149754 seconds)
  done (took 2.108839716 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.394894195 seconds)
  done (took 6.051331179 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.24301712 seconds)
  done (took 1.9316666 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238197326 seconds)
  done (took 1.89088762 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.753797804 seconds)
  done (took 3.404346245 seconds)
done (took 44.880283236 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086489322 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086385188 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085602026 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081723495 seconds)
  done (took 1.965082011 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07846838 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072667422 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076211325 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071859647 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075513917 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071989822 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073939652 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074617988 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072237331 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072898029 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072089521 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071856487 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074933234 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073564278 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070892408 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074981071 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07623181 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072054933 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074762155 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072451573 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070517489 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074908614 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074792256 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071424819 seconds)
  done (took 3.419555673 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086017808 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074734046 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076771138 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072857072 seconds)
  done (took 1.973156669 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081615728 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09644558 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088010043 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078543485 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092837586 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088827643 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068412487 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068541492 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074954091 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077843909 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067548587 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095987829 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090200441 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078090143 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080645695 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064745768 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066299608 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088718243 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07874584 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078976277 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069782545 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078281714 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067665707 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087441638 seconds)
  done (took 3.568983593 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090112664 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.067461239 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08739026 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094173297 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093913917 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067396362 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.090190372 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093979141 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139027197 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068175449 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073693282 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067437062 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10483903 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067538778 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084275325 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110194353 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113136875 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071021838 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098858725 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067662354 seconds)
  done (took 3.419714794 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.087183018 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073029405 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073451097 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067457598 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077376964 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073995571 seconds)
  done (took 2.124260531 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071838714 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069415703 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069619466 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068275879 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074104879 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071707047 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068039067 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070080328 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069614188 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069279728 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069156567 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068099459 seconds)
  done (took 2.505791827 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.166735797 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070915802 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072238387 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068233589 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07338927 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06882923 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083370099 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07014556 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086224298 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068241401 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068400249 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.0705299 seconds)
  done (took 2.634168405 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189398369 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07535475 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220254448 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15298093 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100919175 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114914384 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114218734 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112351861 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137865216 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09609944 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150676036 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159403305 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106237599 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126770681 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088858008 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.124244431 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138518259 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152952749 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099695766 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151498206 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138312002 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119829085 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138258692 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097476351 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099385657 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114194459 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072799544 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077835805 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155569646 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122708235 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132571246 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104529684 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088129613 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164710709 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153903608 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130128903 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144028118 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082365713 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117658948 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127174427 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189399703 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088270297 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14940705 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104780752 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07901411 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122482586 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111178377 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114227725 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098999595 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087453696 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27559097 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168575112 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129472136 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083826127 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119713785 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103285204 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108761025 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11567506 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170352739 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146328003 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118470446 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.0705985 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109066539 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138823218 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123752409 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103197325 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.115500965 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088749501 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128238137 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144744681 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125815039 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135688479 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115804017 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084285655 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113253916 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132309848 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117622143 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157888544 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115559011 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072133322 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111837839 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093543758 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078850817 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144075306 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074638893 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161443431 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095993419 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119134815 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12718384 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106531185 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105111489 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144198464 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137115392 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101040279 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085007016 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099774391 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113651091 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132719769 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084714331 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105572444 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108219096 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078587884 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123324527 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074328137 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113576264 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093674809 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11521932 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117870238 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077922267 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264910945 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100408283 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098394693 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125297629 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144468943 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084838858 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078459964 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151402835 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112166243 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.097966953 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13330766 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14523147 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118577791 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095087444 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13425827 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163964709 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088407467 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147440362 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09730018 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081442048 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102788768 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113148919 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10478859 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117188659 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078760673 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.110708458 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154314042 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072660574 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092451503 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123880393 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080076319 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078854265 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099308599 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099318629 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093144351 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097365888 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.098708587 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124918978 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11453655 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100384148 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11672597 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093175636 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152895112 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085648142 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098950444 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101093558 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072040689 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128468142 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142995864 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076840495 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153976524 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117092997 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11448008 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112602821 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081602217 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133700416 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077936034 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072110273 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130517165 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1071632 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10382841 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.137833529 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111205939 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.115019589 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.110387188 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1169293 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118283101 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.118553242 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101865419 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086837722 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107439321 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118040072 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071641475 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.086897832 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079227579 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098049616 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088562901 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080327328 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125436868 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111710638 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107491862 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10628583 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09069454 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133528655 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075249738 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113220777 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.112377384 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090292366 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.136953157 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134386625 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117808601 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094907307 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123099155 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070938604 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072121714 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082277288 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113570136 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080416562 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080119122 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102580059 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133537867 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116011799 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119072934 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117160226 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112777051 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141432185 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071216495 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115640993 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128935902 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109217402 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.099637742 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085733702 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093296076 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127543493 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095799087 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167594798 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105295023 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113436897 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139227805 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.094395823 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074255658 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096491045 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121538841 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.359570491 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135335651 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098601041 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086795012 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105773628 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079457037 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095597213 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120283715 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110233764 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12943529 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108855312 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121670512 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078754328 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106338375 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116399868 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113299614 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083960799 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113847501 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154043767 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09472536 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112167692 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139553139 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077643723 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137110348 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158966647 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134373885 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082477725 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098506916 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112839642 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117475725 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112020341 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133932807 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098414449 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12865515 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106467551 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086113317 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084412086 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093511921 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101115856 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.110528192 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.09971903 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10789708 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093893675 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123024697 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097977358 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105997323 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111426094 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09931682 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095406652 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094161615 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160493508 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110551523 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157357179 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097309459 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133147278 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155078086 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074464354 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077065894 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078744736 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133025374 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082434073 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278145822 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111244381 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114339136 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113800311 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133762435 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092386977 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07075307 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103915744 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120974712 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11947691 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092798651 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.096126682 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146810121 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113145545 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076621546 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111376706 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114150748 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099394094 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158984833 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080251435 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108287289 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075314361 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077851916 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117320947 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139774267 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084710173 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101350061 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113406406 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104604114 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118385505 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093239119 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110218232 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128112514 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135792455 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119680549 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088433418 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106077901 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12119193 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141874648 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09945214 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096985309 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15886662 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139206039 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.148006942 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083475432 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108674797 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108204204 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104308083 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125807111 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082303802 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154702578 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080509638 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12570906 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096306733 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08621406 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119350641 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111364899 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085834161 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134772912 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10888765 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080111282 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078736144 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104243417 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110082376 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096329509 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073061055 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127340059 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072903768 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123143746 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15457716 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077688015 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098489394 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092035884 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08009077 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096112354 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095908727 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082438715 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095354464 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153090985 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.083676843 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133352369 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12205082 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104070963 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123745051 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097880457 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637442779 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076921846 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134653797 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105455614 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161303051 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094096651 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107810199 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102860604 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108360338 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128003142 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094913524 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176429411 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118626012 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.10710303 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075666712 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095149974 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095826337 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08296106 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100760727 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104998807 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102978486 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.089023377 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106466466 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109869467 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080260262 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090814386 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13778857 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106323617 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128778355 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130771926 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080683033 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108117463 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120877271 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076884407 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.110490709 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.409682008 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102933319 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100108822 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084482991 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096376691 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161118586 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07505558 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144328107 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113480965 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106731333 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109583603 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104478088 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121553424 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098518416 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114665846 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089384597 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105733134 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1076751 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083610569 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078395923 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101168325 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104978295 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095524895 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092993946 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.0971536 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139506222 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072277935 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094537455 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11434977 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132251341 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163702654 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.105045063 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082722967 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111777104 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112000702 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107022558 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113590102 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115617112 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080018845 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080337353 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099776182 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120290692 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107026208 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116385345 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105649358 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154683289 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083245364 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226054286 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092456943 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101121057 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086959648 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07906716 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093563656 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091970465 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099138242 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109889692 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158743634 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091699728 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087338359 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088808893 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074285532 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081704697 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118727392 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106003739 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110473785 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254766197 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080995511 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098334552 seconds)
  done (took 56.29627379 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.105978071 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078155261 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098886948 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150847255 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123380614 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204011583 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154238191 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190235963 seconds)
  done (took 2.934806518 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072844903 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096646626 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103209534 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083343017 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068338977 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069601958 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.241233866 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082185002 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068105606 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095960778 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080707745 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07023145 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.434355957 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067685524 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069564612 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07876665 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069062114 seconds)
  done (took 3.668052494 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.394244492 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599224742 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.385611553 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076446649 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.914545519 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094558882 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.16546535 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141578917 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082329273 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.521952158 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369491408 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135221069 seconds)
  done (took 18.712143725 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085648648 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.081338176 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092959676 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091032155 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078904952 seconds)
  done (took 2.255551698 seconds)
done (took 107.16840894 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085245412 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.200606857 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069579589 seconds)
  done (took 2.12177865 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.094658484 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.093000828 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092682635 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088342802 seconds)
  done (took 2.199632302 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078273822 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080162133 seconds)
  done (took 1.984544039 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.248110275 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173814306 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100603094 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088368086 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083142806 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081572859 seconds)
  done (took 2.088043498 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076397169 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075958003 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076378158 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078384132 seconds)
  done (took 2.131530489 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07462481 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070551677 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.072361367 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075642141 seconds)
  done (took 2.119570707 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088645558 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087844961 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080539004 seconds)
  done (took 2.084805144 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110066871 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09547573 seconds)
  done (took 2.03280798 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085267266 seconds)
  done (took 1.914517184 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10177098 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10584563 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131430491 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113796672 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141215386 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118975109 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08403042 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088146472 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078794092 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085278975 seconds)
  done (took 2.877354114 seconds)
done (took 23.991404204 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083757741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374733165 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36448815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091825951 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671669108 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359312077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98703035 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093288257 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11222931 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070452211 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08766156 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649480144 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978523056 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326811378 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967084956 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330669184 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651889521 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070108501 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069494912 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070481119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971674791 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069335532 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070125494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070707732 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651246122 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374110953 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071066734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331070344 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070208218 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074097427 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359739169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071737329 seconds)
  done (took 16.396345661 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07557615 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123563209 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077444565 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086186101 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072778252 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071294984 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072981792 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070530507 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122236747 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071073667 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087900318 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069776162 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073816354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071634893 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090549618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070652032 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073665907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071230197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07089371 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071724036 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08981003 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070343287 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071788244 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071385361 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071747973 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083376348 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072382083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071124608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071288899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074926103 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075898037 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072761266 seconds)
  done (took 4.337985597 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121057458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126853448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078179294 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107631474 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117381179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072088023 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146512964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095102068 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125182882 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070795162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087954369 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070369213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104388037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071933224 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092245222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072122997 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073965188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071437301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070612058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071823186 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090123031 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070734697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071782515 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071463183 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071847955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085508431 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072623869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072031716 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071405677 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075208396 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076763725 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072643488 seconds)
  done (took 4.594525227 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074472219 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074581853 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081656314 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082754874 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069032759 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071532769 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072984081 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069284228 seconds)
  done (took 2.446067863 seconds)
done (took 29.619776954 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081922224 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.0694182 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073533384 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089272254 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075298555 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080225916 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066766188 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076792518 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073675946 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073481391 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077268179 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068664931 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072109812 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067171349 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073599659 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067828711 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081941872 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071809161 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080723887 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081313167 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071121526 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074346444 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077207059 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081607186 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080928509 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081421895 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077656124 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074334725 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06961051 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072137885 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07125105 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07842557 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082086161 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08223 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068939253 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068999716 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073428527 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070557624 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082394324 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07792557 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070704842 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078149955 seconds)
  done (took 4.979338144 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087998257 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089754 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082696502 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081488164 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09822813 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083047533 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087006752 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079053699 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078453067 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086565409 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075780506 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081824451 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080110198 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074407162 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07794172 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075694173 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080500798 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074890211 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078343255 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078635124 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088235408 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073849031 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088108761 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080789509 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076951488 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082331073 seconds)
  done (took 3.987120277 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077896072 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088531916 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093587218 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144124764 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111074093 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087373475 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082394901 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093686312 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097522693 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07003902 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07403052 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094203723 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097055359 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078331849 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.114848132 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087942006 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08762576 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074265398 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.080057116 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101419145 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092647849 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089112085 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097301426 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087899687 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070371411 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072046382 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074165022 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084182105 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071719243 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080368958 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072185964 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072691319 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07058506 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079524251 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072291934 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069327377 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092456765 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080719384 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08212351 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106913692 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079154943 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071313842 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094435555 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129426437 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068617109 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072991056 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073100461 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080925465 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069793309 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09645136 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081430837 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06963372 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070361942 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06902555 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069182003 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072447159 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071293989 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071487296 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079513595 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075884754 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.0910013 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074335808 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.0889882 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.0694515 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08020908 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068482606 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.0709267 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068442266 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097740215 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071142049 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112856879 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071387038 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06827571 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080740559 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080166664 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075319061 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06941843 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088265066 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080273128 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073476392 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078009323 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072922407 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072717841 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098931247 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07053279 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068960557 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068128798 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074953799 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072955153 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070549304 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081096121 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068701971 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072467916 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088400339 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069490614 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070248008 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072870672 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071665325 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068928834 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080549812 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073789634 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070678766 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080035324 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070012736 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072780101 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08252562 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076340202 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068445135 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071563791 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072452822 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070849912 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070813056 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072997526 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071261482 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076288597 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07611609 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075080648 seconds)
  done (took 11.213835292 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168587073 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160336932 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071372183 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150335802 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077839173 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08098507 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155120648 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097884907 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070274421 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071817234 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069846925 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113621078 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108912429 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119242367 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081426264 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070752033 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09520155 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118146549 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156720924 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150642949 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092714982 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077668188 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072576587 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071641975 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07154655 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079719389 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086868183 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078565856 seconds)
  done (took 4.714645718 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081715672 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107118107 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076382536 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093259975 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089129796 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070471181 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072003641 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07187098 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086618566 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078832919 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07013655 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075840893 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07379753 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073455846 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071133002 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076235806 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077036303 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069651954 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074277923 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075365167 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079878311 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094214207 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076177295 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070207212 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072928658 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069588716 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077565024 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081898923 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070316565 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105657673 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067754613 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074819824 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083668033 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071062397 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069558158 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07051283 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070178466 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070196559 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070672664 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068690133 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06922047 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073674534 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06911479 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077803723 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082798897 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076906714 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072547711 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073271111 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072904562 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068218722 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073114679 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073183223 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072605421 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07803795 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074208505 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072956867 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071132011 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096349659 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076226606 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069954412 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06966491 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068843002 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072594483 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079428632 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085361202 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072372757 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06888825 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070480274 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082196085 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082912234 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069599022 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074446329 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067863413 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071000387 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072649858 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072916049 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070824096 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069291936 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06958032 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070133967 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070866553 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070022293 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069348434 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072622671 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068155261 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068851326 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070236901 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074117185 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07851565 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069481067 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074000375 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070931491 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069521007 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072445149 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.076190495 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072795006 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080646333 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080234555 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070814547 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068795718 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085524803 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072934721 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072904318 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075160171 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074298073 seconds)
  done (took 9.763168449 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094219291 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069931748 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085838735 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092263958 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079725482 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074691691 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080136137 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070284029 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086024216 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07470345 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077248629 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068666116 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080614791 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080185315 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070353684 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08013549 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07240543 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089834868 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084740442 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068359475 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078241321 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081457362 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082096048 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084483594 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083272794 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085049256 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081870965 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079351001 seconds)
  done (took 4.145220864 seconds)
done (took 40.64955002 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.95295427 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.181051834 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.935799171 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.151364032 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.996544813 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.144348514 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.014326781 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.929520942 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.238527637 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.968956353 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.211452188 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.410722857 seconds)
done (took 68.125656157 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.971236903 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.078671147 seconds)
    (2/2) benchmarking "String"...
    done (took 2.173046803 seconds)
  done (took 6.114456493 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.161221648 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.587175004 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.190595252 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.928745073 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.933173036 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.35404951 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.69025819 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.376051725 seconds)
  done (took 31.921071955 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.118863274 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.142894043 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.658594169 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.677387277 seconds)
  done (took 16.499969647 seconds)
done (took 66.617810448 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.937514944 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.93997489 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.980447074 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.950855758 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.941259674 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.927203306 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.929247457 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.930774726 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.946051326 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.157689706 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.926124252 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.944491593 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.929107159 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.979701544 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.395513761 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.978435203 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.943965396 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.935158406 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.940475979 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.988907942 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.932205923 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.929754571 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.355220333 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.085236947 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.546772678 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.02774884 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.213584017 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.339373367 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.938309676 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.928052169 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.117074364 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.130357133 seconds)
  done (took 210.006837902 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.930755235 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.945268635 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.04129439 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.957873557 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.303925647 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.107620216 seconds)
    (7/36) benchmarking "scal!"...
    done (took 3.035073988 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.41276254 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.937439398 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.96226131 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.201754464 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.927802968 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.210109731 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.872438181 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.969937678 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.939636125 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.148918502 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.204345429 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.969635969 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.096785901 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.9436975 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.061359098 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.022342377 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.157486573 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.945710621 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.936172678 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.958561864 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.941313425 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.122432263 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.143232427 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.950256407 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.977571645 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.137572592 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.80101635 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.948877262 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.947695342 seconds)
  done (took 176.036511035 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.12084704 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.941160085 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.936810722 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.988082119 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.057267763 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.941709423 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.610019946 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.940802133 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.315148062 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.935091188 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.940413183 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.935772444 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.933377492 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.932939917 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.947451282 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 4.04235139 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.93484283 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.950468859 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.937639212 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.960270445 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.936712254 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.935864026 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.935702606 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.937119696 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.938564042 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.935019681 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.937929844 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.405547484 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.182872855 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.937327405 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.936776299 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.533923728 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.943604742 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.951161838 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.937617288 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.02838274 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.932540616 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.992883908 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.063096855 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.93583569 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.156277832 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 4.012337159 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.939760666 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.937039703 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.004067623 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.934089836 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.951361105 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.9354043 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.937460145 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.942425385 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.003064275 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.189762622 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.934916209 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.058849014 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.424032661 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.935250508 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.938462231 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.939938179 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.558041614 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.93361353 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.939028478 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.944409033 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.943295468 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.937323063 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.938796356 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.329438627 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.005609913 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.016199669 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.677852287 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.93758594 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.988272581 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.057476098 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.939557088 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.940203232 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.937937936 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.940651236 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.938953365 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.941702576 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.06045099 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.947579804 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.064880397 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 2.020511143 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.056280972 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.939853286 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.950439928 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.774022164 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 2.00685642 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.971229465 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.776003833 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.93526998 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.313851094 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.711669759 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.937489706 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.939447621 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.953184851 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.93815976 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.938820013 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.941329642 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 2.019910014 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.936989445 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.061517985 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.66479443 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.553832424 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.941448127 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.940050953 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.93905586 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.952033965 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.023515926 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.058439939 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.941529737 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 2.008604734 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.942239014 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.942817962 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 4.029349811 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.935538 seconds)
  done (took 420.494855911 seconds)
done (took 810.572275732 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.613047255 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.58356637 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.682291389 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.604949351 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.579280067 seconds)
  done (took 14.933325097 seconds)
done (took 16.800685903 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.019709516 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.020036203 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.956452059 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.022140384 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.954867417 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.020800184 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.005884534 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.96330439 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.98989225 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.966283319 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.993114831 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.965916283 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.947908606 seconds)
  done (took 27.694916595 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.158641195 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.156701961 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 2.004589579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.16533651 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.977910436 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.171294866 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.088423558 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.076873639 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.078100088 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.949448285 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.946767348 seconds)
  done (took 24.644919896 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.186492779 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.167132617 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 2.010100086 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.173713202 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.982996005 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.171054562 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.093005659 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.088720501 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.082522969 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.950425433 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.950240319 seconds)
  done (took 24.728306307 seconds)
done (took 78.938205207 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.944890528 seconds)
  done (took 3.818126233 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.966492471 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.120751943 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.945841705 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.945193345 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.943403286 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.944251154 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.944990944 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.946037394 seconds)
  done (took 17.633048726 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.94524525 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.943480452 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.945603693 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.945967104 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.945580973 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.947803643 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.946411761 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.946257725 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.945022528 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.94326822 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.946710022 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.944426357 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.946155 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.946837572 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.946697902 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.94551735 seconds)
  done (took 33.003767409 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.948367518 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.945365669 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.945855191 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.947190618 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.946807241 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.944473381 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.947010014 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.945912631 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.945250912 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.945880232 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.946379199 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.947204551 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.945418644 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.946953818 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.945730917 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.947801099 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.945641507 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.946275885 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.95020097 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.947569087 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.945962296 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.947152961 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.945731866 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.946902656 seconds)
  done (took 48.601065094 seconds)
done (took 104.924469695 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.694493552 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.538593296 seconds)
  done (took 10.1069512 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.952161349 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.947471196 seconds)
  done (took 5.842595312 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.948474988 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.947852518 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.946419122 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.946779439 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.946510412 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.945962564 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.947926724 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.948142593 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.94692974 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.947674228 seconds)
  done (took 21.34719749 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.948446284 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.949422802 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.946964314 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.948455783 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.946258729 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.949529133 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.9458406 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.948356251 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.950347149 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.947550047 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.947044745 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.946495342 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.948307449 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.949889888 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.948585507 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.948481536 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.947565268 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.947511405 seconds)
  done (took 36.941616673 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.94800921 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.949897829 seconds)
  done (took 5.772394234 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.945840855 seconds)
    (2/7) benchmarking "second"...
    done (took 1.947935826 seconds)
    (3/7) benchmarking "month"...
    done (took 1.945807582 seconds)
    (4/7) benchmarking "year"...
    done (took 1.944796689 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.946261747 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.947344728 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.946183362 seconds)
  done (took 15.500605114 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.948638072 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.122736193 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.189559399 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.634837838 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.950719015 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.953207272 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.915925099 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.951027273 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.951638877 seconds)
  done (took 21.495030566 seconds)
done (took 118.87874585 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.776092408 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.9473077 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.244721471 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 7.000763404 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.970762035 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.28639779 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.979171243 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.217162193 seconds)
done (took 44.297277357 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.994702104 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 6.511816259 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 6.530730664 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.96812898 seconds)
  done (took 21.889586934 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.957798203 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.286681356 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.971200246 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.741421224 seconds)
  done (took 22.879236303 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.310244181 seconds)
    (2/2) benchmarking "read"...
    done (took 2.29327811 seconds)
  done (took 6.486677097 seconds)
done (took 60.130133569 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.952108861 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.949411978 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.950403481 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.951599823 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.950096837 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.94931979 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.95060402 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.951972198 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.950574742 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.950280523 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.951717826 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.952178061 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.95213938 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.951939427 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.95116118 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.952439537 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.951710686 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.95328756 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.951357663 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.951034282 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.950847678 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.952248561 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.951998803 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.951361586 seconds)
  done (took 48.711763194 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.952130592 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.952808992 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.954143699 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.952661529 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.952365004 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.952550919 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.952090908 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.951502443 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.955697964 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.951603592 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.953078573 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.951383038 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.950666237 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.950779365 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.951109121 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.951464817 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.952790023 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.951903225 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.953876911 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.952935452 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.952438634 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.952458359 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.953422573 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.956889882 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.952893984 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.952509621 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.952788608 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.951544134 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.952725946 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.953187848 seconds)
  done (took 60.460838373 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.952003518 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.952720624 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.954610019 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.952935277 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.955442779 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.954179352 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.951554395 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.953253151 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.954070986 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.954238985 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.950956923 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.952636973 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.954560992 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.95375467 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.955501796 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.953752544 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.954130102 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.95345074 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.953780771 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.953789581 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.953080737 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.954288538 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.954509588 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.956815201 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.953770321 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.954382423 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.953018675 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.955775504 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.956495272 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.953108317 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.954500098 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.95495016 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.953053001 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.955860888 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.955403685 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.954567491 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.953037109 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.95378479 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.959308062 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.955224019 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.953748959 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.953970525 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.954943966 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.95286753 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.954012906 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.955017149 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.95376444 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.956462284 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.955561912 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.955743068 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.95688253 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.95493054 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.955395073 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.953942802 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.959538931 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.954580457 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.95602572 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.955431229 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.956877512 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.959568705 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.956000019 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.957731653 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.958225952 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.954479508 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.958538891 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.956290261 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.956703323 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.957756644 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.956447011 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.959675671 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.956811108 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.957246293 seconds)
  done (took 142.64384233 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.957477721 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.958631567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.955986733 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.957461 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.957833522 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.958473289 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.957763942 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.95660689 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.957685977 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.957306161 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.959086884 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.960277871 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.959246711 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.957482708 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.957180781 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.958692593 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.956456282 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.957836954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.959098956 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.957541924 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.959237983 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.958526873 seconds)
  done (took 44.961098835 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.958083539 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.957250362 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.958097723 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.95912605 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.964044723 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.957749691 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.957812355 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.958856495 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.959906033 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.95898483 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.956595526 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.958718005 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.958526555 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.959314543 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.959737074 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.958647451 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.958766823 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.958999655 seconds)
  done (took 37.146149104 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.966498337 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.961437372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.959476789 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.960303325 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.958173107 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.957777835 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.958971277 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.957417099 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.955577987 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.956831952 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.958536261 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.958944757 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.959060273 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.958193303 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.959638154 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.960954977 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.963063484 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.960626539 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.959273865 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.957268065 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.960785938 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.960313274 seconds)
  done (took 44.997494988 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.958083249 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.961138322 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.959661103 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.962253589 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.957342411 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.958978821 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.959049214 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.959549832 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.963353548 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.960797389 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.958493107 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.958163123 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.959726681 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.960495126 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.958393741 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.958159766 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.959441185 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.960173176 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.961402092 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.960409999 seconds)
  done (took 41.081041773 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.95955192 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.960016589 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.964061853 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.961580264 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.964567148 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.962772186 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.961548694 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.960909374 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.960269444 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.962493614 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.961734473 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.961496187 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.962577087 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.961662485 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.961115062 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.961424659 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.960760483 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.963059866 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.962462042 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.962925408 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.961122174 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.959788754 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.961360767 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.961499127 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.960622747 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.962488354 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.960458132 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.962670979 seconds)
  done (took 56.816400987 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.961676405 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.96189189 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.960582332 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.962104555 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.962251933 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.960424311 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.961662514 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.962307572 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.962437154 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.961268071 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.960848099 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.961124798 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.961603331 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.962701602 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.962001379 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.961698174 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.96221704 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.962422189 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.962053743 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.966266733 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.963538941 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.961412234 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.962857482 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.962398863 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.963986412 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.963160689 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.96332566 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.964581552 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.962646405 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.962253183 seconds)
  done (took 60.759565336 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.985844224 seconds)
    (2/2) benchmarking "in"...
    done (took 1.983140775 seconds)
  done (took 5.858432251 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.962614939 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.966635194 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.963695508 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.96406642 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.965683214 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.963565127 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.963659572 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.963886135 seconds)
  done (took 17.604696682 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.966310506 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.964604517 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.965088289 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.962801943 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.964228728 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.965209382 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.972002906 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.969077912 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.968844696 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.966800683 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.97341871 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.975058651 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.969623581 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.968148081 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.967326303 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.96781159 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.966350075 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.96681835 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.9652575 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.966404137 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.964308882 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.969601747 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.970376878 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.964516049 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.967751333 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.977433258 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.971661454 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.966582738 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.969027579 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.969984153 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.967018123 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.965703981 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.965716528 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.966362914 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.965043781 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.966561368 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.975173913 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.967799318 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.97684861 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.965568104 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.965652081 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.965058274 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.969826352 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.969071393 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.96927609 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.965762057 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.968010096 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.968392823 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.968424761 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.971634667 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.976868238 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.967373158 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.965930692 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.973116598 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.971081775 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.976648965 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.968210477 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.972460675 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.979669391 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.979013562 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.979675675 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.977777821 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.971427735 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.968019459 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.979763239 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.997664755 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.975090573 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.967691238 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.971042533 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.968272855 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.976506692 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.981925079 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.982112156 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.968685619 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.969346468 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.967630917 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.970004161 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.967375045 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.975139021 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.972435428 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.966985071 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.968299079 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.979791485 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.997111737 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.971151671 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.97057114 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.969795651 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.969423868 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.973619175 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.982782654 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.972173225 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.971637504 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.971223259 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.971898417 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.971542032 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.968144158 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.97008298 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.972576732 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.972865033 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.971749032 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.971218131 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.97388319 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.980064929 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.971275888 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.969952357 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.978357201 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.971534071 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.970991957 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.977508706 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.969947114 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.971521762 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.972221184 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.978766434 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.969879331 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.975522011 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.981102607 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.972265928 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.97349877 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.970251134 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.973049314 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.983103544 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 2.002786769 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.971786053 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.970434473 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.979068063 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.984650881 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.973039582 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.976255293 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.970668541 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.972642818 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.973097502 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.973966007 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.972594554 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.972214223 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.972963114 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.974592978 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.972024699 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.971630956 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.972208515 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.974435905 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.975421983 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.974865361 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.976498324 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.974474306 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.973284279 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.97615326 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.978941446 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.972899762 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.976000915 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.97581574 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.97146447 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.970989463 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.975100629 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.972629487 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.973864072 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.972687469 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.973247496 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.971746968 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.974752055 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.974601922 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.97467219 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.976411095 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.979556502 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.973314431 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.980309711 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.974436191 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.973188874 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.972940029 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.973906297 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.975924847 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.973299485 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.973759812 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.978253314 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.98296943 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.974147585 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.973709896 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.977105106 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.972249463 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.971972027 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.975224248 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.979122615 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.983517633 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.973994573 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.979787492 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.974254687 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.972457617 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.973126367 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.976169595 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.976252002 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.975535722 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.980099041 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.983376893 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.987771134 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.987634015 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.976470919 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.977787053 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.976161012 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.98039778 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.979962157 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.975940267 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.97455952 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.973270221 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.976323955 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.975237089 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.978121034 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.976236587 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.97448995 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.974157859 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.973379803 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.976725305 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.976059977 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.977087148 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.977389257 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.976000352 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.975605986 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.975212664 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.977191332 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.974916392 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.975776594 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.977138982 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.978826161 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.975377814 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.982789041 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.976554287 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.978282982 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.979601172 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.978162127 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.977043907 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.978140855 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.979429293 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.978735571 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.984946425 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.978242555 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.980734902 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.984714836 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.982616216 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.978762664 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.98206392 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.977202226 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.976838093 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.981572274 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.987231463 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.97764573 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.977690048 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.97791079 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.979293359 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.98044578 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.986234549 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.979059171 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.980469389 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.980251201 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.984530664 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.977092594 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.979868607 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.97980979 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.98063587 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.982936576 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.978796355 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.978993065 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.980000499 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.979294174 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.976815031 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.976815351 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.982477 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.987468862 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.985443258 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.984356583 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.981931665 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.981093643 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.983759738 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.980862638 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.97948301 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.981692233 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.99405166 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.990136128 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.987958746 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.983300108 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.97926488 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.985935338 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.98111921 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.9857329 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.985728876 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.981784482 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.982405452 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.983343976 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.981366803 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.982897624 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.979699191 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.983519102 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.98276628 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.983713687 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.979944284 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.982196207 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.981690161 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.981218811 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.979395382 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.984432607 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.980345512 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.982950678 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.984745953 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.982600137 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.983791974 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.989954895 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.983156704 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.983311879 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.981710627 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.982557498 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.981546654 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.983212852 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.981102223 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.98511768 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.994729155 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.984377244 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.992698783 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.983818131 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.990978296 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.980552003 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.984663008 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.99157985 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.982109237 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.981139742 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.983337464 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.982671071 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.99048722 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.981639788 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.985677806 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.988695189 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.982693857 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.983020022 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.981091958 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.981461726 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.981441627 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.982127346 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.991411812 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.985311734 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.988662528 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.98531555 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.981303727 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.983580775 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.982756743 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.983981675 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.990970291 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.984439243 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.984301432 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.983882579 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.984513306 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.983593298 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.984209737 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.982319661 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.982417879 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.983503319 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.991816408 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.984957094 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.988263483 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.983575883 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.992776961 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.984472029 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.996231061 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.984752668 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.984628424 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.984914282 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.982683965 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.985953203 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.984713469 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.986538651 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.984468547 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.986050782 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.988643056 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.983317171 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.986825546 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.985088216 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.983441726 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.989860542 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.99375279 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.011796281 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.988037182 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.988844539 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.984545298 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.985327286 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.989778832 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.983721458 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.986475363 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.987318433 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.999224813 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.99367548 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.988596139 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.986151252 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.992976523 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.986668507 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.982543242 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.98556847 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.985831631 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.987210204 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.9899601 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.985131016 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.991417011 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.986102922 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.986727351 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.989510335 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.986985698 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.99788557 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.984219624 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.990517173 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.984768224 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.98425467 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.98783003 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.987489368 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.985648906 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.987019708 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.987132943 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.987662402 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.994507824 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.996055117 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.990484267 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.986830901 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.98628641 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.987872734 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.992213831 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.988516044 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.985454261 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.987022327 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.988674914 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.98654399 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.987587732 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.986728942 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.985094732 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.987482876 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.984734453 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.989605145 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.998018459 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.989598388 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.986711111 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.990973025 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.988255854 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.986604383 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.989506481 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.994116458 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.991970273 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 2.000233845 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.998739397 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.992487744 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.989739511 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.992738697 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.998012061 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.988689062 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.989495432 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.988021947 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.994485079 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.99225058 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.994320651 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.988134187 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.995955923 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.989025631 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.989627457 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.99833095 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.992848456 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.988075931 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.99077526 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.995672686 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.990755215 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.987219506 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.988286577 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.991155075 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.996975306 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.992204501 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.990281394 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.991307853 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.987438385 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.989657771 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.994559404 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.988772008 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.991649161 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.990396288 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.99110194 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.990467981 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.989488117 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.988848164 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.993340176 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.993864704 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.992773916 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.998331073 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.987999579 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.9943839 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.992105081 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.990471253 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.988969026 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.989127696 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.991039962 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.989522972 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.991448747 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.988946975 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.992597475 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.994195438 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.993241029 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.992741113 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.99564085 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.99094262 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.993854392 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 2.002817562 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.999500043 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.990095286 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.991664976 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.993433239 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.994426572 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.990496494 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.990410529 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.992253075 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.993185369 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.994658366 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.991182838 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.990488598 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.992906267 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 2.010168754 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.991560731 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.992125199 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.993515855 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.996021747 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.992361445 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.990768614 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.991269843 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.993590165 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.995154297 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 2.001595294 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.99294281 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.997981206 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.993503282 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.995073512 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.994614618 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.996673365 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 2.002229988 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.997696013 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.991901319 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.992727544 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.996915396 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 2.011196421 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.992100563 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.001935779 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 2.028016494 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.994783764 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.995275649 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.992796731 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.993011259 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.993663848 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.995402046 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.993808275 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.993553439 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.994326217 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.991728715 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.994284377 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 2.001510597 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.995597566 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.993731483 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.993437287 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.99514133 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.994868337 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.9923744 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.992825412 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.992874733 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.993547126 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.993375559 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.993282309 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.99653549 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 2.005638234 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 2.006805726 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.992919407 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.99319693 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.99288603 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.999014153 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.998753439 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 2.007757676 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 2.003348613 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.994266283 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.992979777 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.994849624 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.993452642 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.994332215 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.995673048 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.99666738 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.995047836 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.993892343 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 2.005856167 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 2.004205095 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 2.000475241 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.996496414 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.994818955 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.995976978 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.997437314 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.995720037 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.994076211 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.998517462 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.997518732 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 2.000065814 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.99577674 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.995353449 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.99905664 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 2.004511741 seconds)
  done (took 1183.91435501 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.99560854 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.999594321 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.995220278 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.995063855 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.995163284 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.995225421 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.995864358 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.996350406 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.995659501 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.994869212 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.995618236 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.995706372 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.996401649 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.995904135 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.99588992 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.994422062 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.997990587 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.994725762 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.996081455 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.996022168 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.996968232 seconds)
  done (took 43.836368945 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.996610182 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.996135378 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.996956991 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.996817602 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.995932622 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.99762214 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.995949488 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.996990437 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.996302056 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.998009833 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.995915304 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.996146472 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.997015573 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.996886156 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.996224123 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.998484061 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.999346773 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.996940001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.999061958 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.999137507 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.998125911 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.996207535 seconds)
  done (took 45.860490916 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.997347523 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 2.000761115 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.999412037 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.99847462 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.999617189 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.997983988 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.998679923 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.999441166 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 2.000419764 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 2.001082308 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 2.000425598 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 2.00077724 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 2.00742563 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 2.008019472 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 2.002139996 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.998211903 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.144939016 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.9997889 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.998929372 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.999988946 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.998831768 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 2.005677337 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.997897435 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.998900221 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 2.000661962 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 2.000514456 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.999401694 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.997657226 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 2.000401725 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 2.002687034 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 2.005663563 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 2.000480447 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 2.00182925 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 2.002984213 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.999574474 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 2.003078778 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 2.004187211 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 2.000713848 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 2.00099926 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.999029312 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 2.009277423 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 2.026143095 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.998719871 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 2.008649089 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 2.000683728 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 2.000370926 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 2.004184906 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 2.010067242 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 2.001270249 seconds)
  done (took 100.160395066 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.001209738 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.000915971 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.000297735 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.000278125 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.001068149 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.000639356 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.000742425 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.001186063 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.002458804 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.000730329 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.002844516 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.004369552 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.004700623 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.002819601 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.002001809 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.002435515 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.001353575 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.002473393 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.002503384 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.001687845 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.002101843 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.001340214 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.002656553 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.001506154 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.002524058 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.001894203 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.003851671 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.003252067 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.001406468 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.002140746 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.003115844 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.00199011 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.002511801 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.002882535 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.002523445 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.002903533 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.001529448 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.003191694 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.002809291 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.002295151 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.00206653 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.004644942 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.004083043 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.002929126 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.003555167 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.00366475 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.003306388 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.002962211 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.002411443 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.0034634 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.003031985 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.003285257 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.003576204 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.003173397 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.003783928 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.003729612 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.005070695 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.004450405 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.003517245 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.004415802 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.004676832 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.003169688 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.003165133 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.003033441 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.002681569 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.004392479 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.003725283 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.003272125 seconds)
  done (took 138.114144235 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 2.003090857 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 2.004109404 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.003988363 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.004033872 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.005113341 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 2.004080134 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 2.004766428 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 2.004825772 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.004805452 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 2.004974261 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.005493143 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.005377241 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 2.004525899 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.004824483 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.00612005 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 2.005459859 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 2.007276638 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.007689924 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 2.007821308 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 2.005727507 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 2.006096629 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.007199993 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 2.006802714 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.005763908 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 2.006818397 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 2.005349286 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 2.005603113 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.006146588 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.005423071 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 2.00660081 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 2.005752832 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 2.006437818 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.007463241 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 2.008812219 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 2.006672584 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 2.007069176 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 2.006863965 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.007813606 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 2.007719435 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 2.006299675 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 2.006451578 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 2.007580319 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 2.007330435 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 2.007489461 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.007748317 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 2.007143293 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 2.007211231 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 2.00868714 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 2.009732541 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 2.007567262 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 2.007105459 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 2.006841767 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 2.007215717 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 2.007991706 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 2.007908405 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 2.006606262 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 2.008028916 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 2.007518763 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 2.008280366 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 2.008060439 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 2.008499296 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 2.007528422 seconds)
  done (took 126.337072352 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 2.007716007 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 2.00807729 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 2.007095721 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 2.008186274 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 2.007566683 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 2.008115726 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 2.009420135 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 2.007419537 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 2.007478702 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 2.008949013 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.009229325 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 2.009206933 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.009816708 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.008147685 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 2.012779432 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.011145371 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 2.007855257 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 2.008995832 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 2.010385031 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 2.007209138 seconds)
  done (took 42.109232959 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 2.00802125 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 2.008146956 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 2.008032042 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 2.007291503 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 2.008274115 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 2.009165709 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 2.006382048 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 2.010083204 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 2.00975156 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 2.009649025 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 2.005646852 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 2.006924085 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 2.012672056 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 2.006927555 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.006889935 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 2.006168288 seconds)
  done (took 34.063662135 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 2.007627015 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 2.007929199 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 2.007314171 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 2.007962083 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 2.008205415 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 2.010086274 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 2.009553446 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 2.009188264 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 2.007872683 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 2.007743079 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 2.006830208 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 2.006336371 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 2.00629175 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 2.005146875 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 2.005987067 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 2.007057485 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 2.005223127 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 2.004913845 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 2.00603152 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 2.006256877 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 2.008756569 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 2.01008938 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 2.00731366 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 2.005903348 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 2.005965459 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 2.005469002 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 2.003449229 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 2.003201696 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 2.004887455 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 2.004029551 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 2.004379508 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 2.003506496 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 2.003609832 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 2.004515209 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 2.003487364 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.99855043 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 2.000727493 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.997872797 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.99633482 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.996327278 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.998909421 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.99642494 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.998010613 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.997936186 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.997287363 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.998950642 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 2.000433703 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.997998247 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.996385236 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.996883904 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.996993837 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 2.000057062 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.996605452 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.996863171 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.995800824 seconds)
  done (took 112.111905661 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.996257786 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.997437259 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.995737752 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.997917589 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.998954177 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.996998112 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.995572317 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.99757785 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.99762401 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 2.001900584 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.999954355 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 2.000913774 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.997963573 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.999800684 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.999600415 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.996207846 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.996359651 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.996235362 seconds)
  done (took 37.886058701 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.993736446 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.989907529 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.992431369 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.98937426 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.989908246 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.991680767 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.989395923 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.991277277 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.991008605 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.988854902 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.989036604 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.990295285 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.988077872 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.990550108 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.988632893 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.99015632 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.989535255 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.989301474 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.989890695 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.989641094 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.989779521 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.989422452 seconds)
  done (took 45.703676104 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.989460231 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.989109317 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 2.005503619 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 2.014369656 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 2.012555617 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 2.031021307 seconds)
  done (took 13.95833728 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.989270691 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.990542599 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.9898534 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.989946388 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.989730661 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.989211832 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.989935205 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.993280677 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.990527241 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.989481582 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.993503418 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.989707981 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.990811509 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.989834987 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.989862098 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.992950332 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.988725504 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.989282117 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.988696292 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.989147557 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.994231638 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.991079354 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.991591083 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.990349335 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.9886019 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.996066314 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.990707373 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.992265425 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.990033245 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.989946808 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.992764253 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.989455288 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.991353404 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.991281376 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.990850211 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.992233132 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.991348383 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.994243844 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.990795049 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.989820264 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.991338319 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.990618918 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.99160179 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.989708975 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.989954544 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.992485351 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.990301407 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.991346976 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.99087943 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.990877866 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.992997121 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.988525643 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.992116133 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.991884639 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.990296372 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.992293989 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.989161731 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.987658505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.988498731 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.989232729 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.992776374 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.987139467 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.988300604 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.989309821 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.988081182 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.991235977 seconds)
  done (took 133.298233283 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.989464196 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.987852552 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.985909672 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.991869711 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.987235229 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.986829488 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.986654614 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.986548897 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.988352961 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.986499418 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.984945321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.984850363 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.984835389 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.985996331 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.985004629 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.985830599 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.984501018 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.985130129 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.98685471 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.984919104 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.983092329 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.985168402 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.983153206 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.985812771 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981241429 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.983007927 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.98360648 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.98407259 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.987311281 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.982343081 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.984453842 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.985178478 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.982888613 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.986137012 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.984447677 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.981905835 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.981337014 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.982371091 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.981928471 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.979340424 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.980082315 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.979655988 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.978062091 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.98024851 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.981048233 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.979717791 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.981775529 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.978973922 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.978947487 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.978731954 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.97670683 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.978870458 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.979428149 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.978590179 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.980187939 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.979467182 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.978422848 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.980978043 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.980333673 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.981285906 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.97835446 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.978202488 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.977524985 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.977556596 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.978485786 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.976551446 seconds)
  done (took 132.770104195 seconds)
done (took 2753.046321742 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.054222374 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.180690588 seconds)
  done (took 16.136578201 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.146146187 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.098966045 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.986182246 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 7.028073071 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.980959756 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 7.005671413 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.978792366 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.981250699 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.981963858 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.983017853 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.986830651 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.167550821 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.040209385 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.980734621 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.981921511 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.076732558 seconds)
  done (took 54.324145341 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.986101037 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.988642638 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.993640174 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.98745017 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.984232937 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 2.001315434 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 2.018415285 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.988867635 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.046303113 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.997643003 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.106543373 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.995020879 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.984692876 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.044275454 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.997660023 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.99810172 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.076175063 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.057227338 seconds)
  done (took 38.157936391 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.06132494 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 7.004363688 seconds)
  done (took 10.980658934 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 7.005170854 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.993966655 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 7.004744501 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.982122923 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.988692466 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.986912828 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 7.022395268 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 7.015787042 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.987733006 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.016489463 seconds)
  done (took 71.910794785 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.986567944 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.982909741 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.982236569 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.979525838 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.975839561 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.978869955 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.977059444 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.979400144 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.646721559 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 2.011310365 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.990052127 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.984093641 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.979505619 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.9776214 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.975415249 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 2.001119913 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.085492808 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.978621206 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.973906524 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.984023143 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.978287882 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.043798022 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.993077448 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.977133369 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 2.011093422 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.648037546 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.984732674 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.986918251 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.089536384 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.975303625 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.976744598 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.161634952 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.980434593 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.429536 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.239629643 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.980355519 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.988547286 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.988535856 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.975672001 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.115098186 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.980167356 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.983104747 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.887886694 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.228538903 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.065452552 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 2.023936497 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.284449722 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.996064427 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.981047753 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 2.010919817 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.982362753 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.982073326 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.99600577 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.487434047 seconds)
  done (took 138.749638745 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.978171461 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.319333433 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.143355957 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.980122065 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.257226917 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.18510005 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.977166317 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.024293756 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.977833956 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.204421533 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.230582837 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.080814016 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.982430591 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.978470094 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.975648405 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.975621821 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.133851522 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.054472702 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.981639658 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.97562241 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.005433552 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.220328391 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.102412174 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.984047325 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 2.00507807 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.193314434 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.099528059 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.084970146 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.762880714 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.978244268 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.039666242 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.982578004 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.97516785 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.97711997 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.134157033 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.072935067 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.061502533 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.980849082 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.982085575 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.978158145 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.638173819 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.177793575 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.076926872 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.110652131 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.228969024 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.182843451 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.754532823 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.979253952 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.71412 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.143164524 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.208270419 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.214480486 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.096609676 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.979080471 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.3144904 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.976890929 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.982411853 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.224687406 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.196947006 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.077717619 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.984336545 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.982527144 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.978279359 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.217334485 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.980916099 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.071305118 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.983095508 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.977634263 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.07853399 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.078183047 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.211360358 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.190439896 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.009787374 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.321712006 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.479395925 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.226681693 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.049451497 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.230469189 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.984905046 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.977000288 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.057194335 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.821159741 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.233353907 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.226137182 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.224629914 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.012773767 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.698502125 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.982228024 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.207536248 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.199899272 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.23898371 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.228290128 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.214806678 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.718395345 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.981737147 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.98313346 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.283901005 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.101989598 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.984241111 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.321019157 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.210757817 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.510856105 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.010693261 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.284272447 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.11249794 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.983894402 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.623365575 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.98392877 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.210304816 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.019818625 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.985346284 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.986053143 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.199087373 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.974876902 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.982492124 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.644601998 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.04638998 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.987276011 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.21534925 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.986291848 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.25083855 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.987861724 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.216797284 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.409960073 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.011619592 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.156333065 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.229396214 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.985058244 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.221559036 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.228671882 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.097297192 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.207278495 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.691041947 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.989540398 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.265598634 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.983922742 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.983572876 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.151965385 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.987102557 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.124134905 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.987495592 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.280143724 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.003829668 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.216480552 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.98958423 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.236403715 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.015934978 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.034969832 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.985825278 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.106863913 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.986320204 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.814418432 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.141109046 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.988469598 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.983392163 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.546470404 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.987140251 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.131189961 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.214031455 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.003738767 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.057085151 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.650010035 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.984881461 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.066488932 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.005362148 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.377204502 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.987929519 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.236108748 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.988620548 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.988803474 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.985994934 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.221107784 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.167417214 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.987120581 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.984104158 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.890341273 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.986159231 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.984772528 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.164451652 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.330412513 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.984461163 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.187263193 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.990532449 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111344506 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.988954635 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.061653318 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.316783826 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.985855262 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.984261471 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.98769639 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.988420354 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.9895555 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.193999109 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.008557535 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.479505363 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.123129738 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.258710906 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.299595315 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.227128416 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.032499424 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.989233945 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.241063394 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.988616243 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.04762392 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.993034063 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.005579365 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.216606334 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.992464523 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.246405971 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.254890942 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.841853445 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.033420331 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.991692149 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.989678867 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.98636703 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.132515078 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.069730561 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.989231243 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.991353024 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.098790444 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.111878258 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.19720261 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.988725848 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.044576891 seconds)
  done (took 928.443208732 seconds)
done (took 1260.602057144 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.987652943 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.987065503 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.993295168 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.992220728 seconds)
  done (took 29.877322385 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.993370995 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.993329323 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.992796663 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.991650826 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.991427662 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.992520563 seconds)
  done (took 13.870793214 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.991576376 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.988481817 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.989889784 seconds)
  done (took 21.890365563 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.064362553 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.371301049 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.122960248 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.407020394 seconds)
  done (took 10.8848069 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.993513685 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.99343194 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.991806802 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.990054284 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.993509065 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.992750616 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.990486493 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.993961605 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.992261754 seconds)
  done (took 19.852471653 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.071154348 seconds)
done (took 102.360363204 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.362431577 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.307246177 seconds)
    (3/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.231558814 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.060416588 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.088351853 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.301812737 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.998003451 seconds)
    (8/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.344021413 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.125790199 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.007295955 seconds)
    (11/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.154883959 seconds)
    (12/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.993477354 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.987354646 seconds)
    (14/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.236452901 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.293100323 seconds)
    (16/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.069402765 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.229967355 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.157839052 seconds)
    (19/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.366363851 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.016461828 seconds)
    (21/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.132090583 seconds)
    (22/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.294173694 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.081059766 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.626798741 seconds)
    (25/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.057718323 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.369384564 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.994750455 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.202514087 seconds)
    (29/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.996692782 seconds)
    (30/309) benchmarking ("sort", Float64, false)...
    done (took 5.754289801 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.383135628 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.125603385 seconds)
    (33/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.219242548 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.091796626 seconds)
    (35/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.289909845 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.120404836 seconds)
    (37/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.535516341 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.177915614 seconds)
    (39/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.093739688 seconds)
    (40/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.730305152 seconds)
    (41/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.648196979 seconds)
    (42/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.877070815 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.085335702 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.012018721 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 2.206026908 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.235041863 seconds)
    (47/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.242263526 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.071858593 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.171848382 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.38516704 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.712202797 seconds)
    (52/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.125157915 seconds)
    (53/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.145960564 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.130480092 seconds)
    (55/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.99489077 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.541710153 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.247204721 seconds)
    (58/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.223641195 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.153318326 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.013620856 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.991482469 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.375349014 seconds)
    (63/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.074034209 seconds)
    (64/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.253704255 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.658871744 seconds)
    (66/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.285374954 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.081552463 seconds)
    (68/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.145289615 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.993787614 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.031425028 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.00896928 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.385604494 seconds)
    (73/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.072006063 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.233094088 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.790580216 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.17143054 seconds)
    (77/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.433272949 seconds)
    (78/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.010275806 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.009066429 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.991962953 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.971499774 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.939441202 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.023597932 seconds)
    (84/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.095265769 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.615617994 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.778873261 seconds)
    (87/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.99671504 seconds)
    (88/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.081580018 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.998245154 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.020082196 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.307128888 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.000374701 seconds)
    (93/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.648454613 seconds)
    (94/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.072363697 seconds)
    (95/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.023163266 seconds)
    (96/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.996230329 seconds)
    (97/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.931223174 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.075039462 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.992130999 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.115496927 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.295309863 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.001475799 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.956621843 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.323481985 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.99997826 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.979401647 seconds)
    (107/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.307858144 seconds)
    (108/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.891070988 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.012846375 seconds)
    (110/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.083176587 seconds)
    (111/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.079789457 seconds)
    (112/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.384989258 seconds)
    (113/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.181574025 seconds)
    (114/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.003306824 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.4677911 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.001557171 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.411086232 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.320813633 seconds)
    (119/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.299189205 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.009670124 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.762473953 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.006355323 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.407959897 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.021833357 seconds)
    (125/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.162876849 seconds)
    (126/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.018707182 seconds)
    (127/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.485675815 seconds)
    (128/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.007635882 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.16077772 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.001540593 seconds)
    (131/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.134945203 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.381878056 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.234023569 seconds)
    (134/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.731458186 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.330263978 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.208520456 seconds)
    (137/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.079499461 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.033302355 seconds)
    (139/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.07913649 seconds)
    (140/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.999171571 seconds)
    (141/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.514947672 seconds)
    (142/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.149717225 seconds)
    (143/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.09890627 seconds)
    (144/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.453945405 seconds)
    (145/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.136234886 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.253502119 seconds)
    (147/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.002898406 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.223172091 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.249958248 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.006555917 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.24168171 seconds)
    (152/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.211229102 seconds)
    (153/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.073100518 seconds)
    (154/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.002691987 seconds)
    (155/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.156980609 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.254069086 seconds)
    (157/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.029416465 seconds)
    (158/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.115436645 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.679424878 seconds)
    (160/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.026261924 seconds)
    (161/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.113705815 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.38406755 seconds)
    (163/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.003981141 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.427689236 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.007178377 seconds)
    (166/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.008512942 seconds)
    (167/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.355795826 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.006354027 seconds)
    (169/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.598716056 seconds)
    (170/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.01873808 seconds)
    (171/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.336708531 seconds)
    (172/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.106131892 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.338691245 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.127590592 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.128854483 seconds)
    (176/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.006605953 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.005831016 seconds)
    (178/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.099415729 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.006938761 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.005938643 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.105500227 seconds)
    (182/309) benchmarking ("sort", BigInt, false)...
    done (took 7.003752283 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.009115626 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.136941449 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.146016751 seconds)
    (186/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.934645302 seconds)
    (187/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.105292623 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.369648496 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.006838718 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.30966885 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.007186675 seconds)
    (192/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.389940275 seconds)
    (193/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.514558444 seconds)
    (194/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.111994901 seconds)
    (195/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.215760801 seconds)
    (196/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.008357122 seconds)
    (197/309) benchmarking ("sort", Int8, false)...
    done (took 5.003613262 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.677103595 seconds)
    (199/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.006383894 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 3.674671526 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.808401686 seconds)
    (202/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.16468803 seconds)
    (203/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.197215017 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.007287056 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.689271782 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.00460342 seconds)
    (207/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.135240895 seconds)
    (208/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.030362706 seconds)
    (209/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.248472098 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.339802821 seconds)
    (211/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.180454178 seconds)
    (212/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.009385941 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 4.119144368 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.238430582 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.397988984 seconds)
    (216/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.185382851 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.352365785 seconds)
    (218/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.005455219 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.62228848 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.675063435 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.32837885 seconds)
    (222/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.085968602 seconds)
    (223/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.009712149 seconds)
    (224/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.187264146 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.007737637 seconds)
    (226/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.364860143 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.361390578 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.250358958 seconds)
    (229/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.006385443 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.64882487 seconds)
    (231/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.13270916 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.038284844 seconds)
    (233/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.38169774 seconds)
    (234/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.016272633 seconds)
    (235/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.197111062 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.169198836 seconds)
    (237/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.012408822 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.033809865 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.991176295 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.11699114 seconds)
    (241/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.259951944 seconds)
    (242/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.89032065 seconds)
    (243/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.074739961 seconds)
    (244/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.197553821 seconds)
    (245/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.465779147 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.01499369 seconds)
    (247/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.127485042 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.009762523 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.387860769 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.096761961 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.196217345 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.035398864 seconds)
    (253/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.032317225 seconds)
    (254/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.167400955 seconds)
    (255/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.127082719 seconds)
    (256/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.022634098 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.113542255 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.416895249 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.343048653 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.011966982 seconds)
    (261/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.116639606 seconds)
    (262/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.031215108 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.011611683 seconds)
    (264/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.388504152 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.366236641 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.010931805 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.197101394 seconds)
    (268/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.193486973 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.34565176 seconds)
    (270/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.322446824 seconds)
    (271/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.015534049 seconds)
    (272/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.10914326 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.719099984 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.131774254 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.225758648 seconds)
    (276/309) benchmarking ("sort", Float32, false)...
    done (took 5.750112173 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.012889411 seconds)
    (278/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.170974775 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.026668157 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.015196067 seconds)
    (281/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.587336402 seconds)
    (282/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.242970762 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.076724527 seconds)
    (284/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.089654303 seconds)
    (285/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.011552119 seconds)
    (286/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.42894086 seconds)
    (287/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.144521448 seconds)
    (288/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.009894681 seconds)
    (289/309) benchmarking ("map", identity, Bool, true)...
    done (took 3.656028598 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.282487257 seconds)
    (291/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.01251304 seconds)
    (292/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.314435998 seconds)
    (293/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.041815765 seconds)
    (294/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.013904769 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.19032491 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.850327387 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.141941118 seconds)
    (298/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.460736164 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.016076578 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.143251989 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.786168067 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.918757849 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.924084273 seconds)
    (304/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.037375007 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.143564051 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.220375323 seconds)
    (307/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.15025926 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.015594566 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.849334385 seconds)
  done (took 1047.113127939 seconds)
done (took 1049.091718172 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.045524567 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.035265145 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 2.01807749 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.039344842 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.130710291 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.062980337 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.035849222 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 2.020866417 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.067761408 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.06621466 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 2.016734442 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.060905674 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 2.018711506 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 2.017603316 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 2.017527253 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.033543862 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.313956727 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.040015306 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.037080458 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.029512968 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.037309627 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 2.016712141 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.067369461 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.060374365 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 2.022882525 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 2.028498227 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 2.021299512 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.038028867 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.131723402 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 2.021971404 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 2.02560583 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.031258215 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.310988861 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.038182027 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 2.015805485 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.041135703 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.031381394 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.030421248 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 2.023274294 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.052307774 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.403065299 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.047775155 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 2.019742937 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 2.019444329 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 2.017674878 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 2.026653242 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 2.019984812 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 2.028992443 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.035196478 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.039227962 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.395458282 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.066077117 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 2.02578673 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 2.019690046 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.036158409 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 2.020658603 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 2.023528348 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.036750261 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.039245636 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.038350071 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.300333655 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.048143489 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 2.022534855 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.039041617 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.036927109 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.433060882 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.047380928 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 2.027232659 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.402020919 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.056344791 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.430671603 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.058874981 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 2.022380824 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.039319275 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.052418147 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.314571369 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.039777822 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 2.019396661 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.036301993 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 2.019836558 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.032274647 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.036519228 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.026674738 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 2.022719138 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.03748803 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.065642421 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.035122134 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 2.020872766 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.032928683 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.041178675 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.029931796 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.032027026 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 2.025820551 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 2.021760571 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.033572561 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.026693922 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 2.027546422 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 2.027213682 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.029923624 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.036115261 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.399906796 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.067039696 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 2.019629688 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 2.020555386 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 2.021404638 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.036617341 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.40118948 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.054278641 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.046576542 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.073875119 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 2.024621664 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.305189446 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.049526502 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.039676772 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.034576782 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 2.025356719 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 2.020683343 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.307780768 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.421077552 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.068698228 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 2.024536371 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 2.025494757 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.040595406 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 2.024904095 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 2.020833286 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.316824976 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.048110434 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.038988415 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.146743095 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.036792169 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.056926557 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 2.024857657 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.027173402 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.070167659 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.041052315 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.055241342 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.028435231 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.040470984 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.041189344 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 2.020183845 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.035947513 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.038003228 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.022987461 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.032966012 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 2.022096714 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.070767826 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.044832214 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.040524098 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.045782293 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.149033776 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 2.023093385 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.308661248 seconds)
done (took 316.95268579 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.104364814 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 7.023769442 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.112631539 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 2.022013814 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.119203746 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.095728956 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 2.021877721 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 2.021785994 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 2.020035253 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.511427781 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 2.021821882 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 2.029813146 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 7.022892412 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 2.0227001 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.099382281 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 2.021734399 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 2.022927731 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.451594742 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 2.021657544 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.103390635 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 7.024876171 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 2.021570054 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 2.022750599 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.511759338 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 7.021095278 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 7.028578815 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.103296987 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 2.022561764 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.461237555 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 7.02218972 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 7.020708534 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.458265124 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.103634232 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.049976684 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.029085437 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.028871028 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.112273401 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.03360423 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.091502202 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.099689723 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.118181138 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.05489675 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 7.024445806 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 7.022912086 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.02285764 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 2.024397495 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 2.024594369 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.05918349 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 7.021259174 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 2.032095159 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.457565938 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.028310959 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.030857101 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 2.024669956 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 2.024926889 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.052434474 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 2.02462339 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.024554854 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.106222877 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 2.027394557 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.094750587 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.51147428 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.510109077 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 2.031826378 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 7.024945455 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 2.024781669 seconds)
  done (took 195.492106157 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.089882494 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.101678093 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.09198572 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.026803682 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.073626264 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.092214786 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.029595021 seconds)
  done (took 16.455447079 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.035832015 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.025019545 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.079174549 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.078653437 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 2.024560172 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.19939755 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.025957302 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.03899387 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.029322466 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.054058933 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.028827558 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 2.027039533 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.031845204 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 7.02640393 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.079528693 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.037348054 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.14187984 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.02969577 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.026357561 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.174712345 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 2.03083532 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.033581276 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.053618147 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.039995667 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.027892221 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.035473036 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.596700515 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 2.026054888 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.026936731 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.027475107 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.027209722 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.070430312 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.028245543 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 7.027126454 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.027660663 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.155418221 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.027898192 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 2.026427533 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.025756307 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 7.029307256 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.026567423 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.026310425 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.031727253 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 2.026514454 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.026168531 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.050414544 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.02682878 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.03102152 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.026372909 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.027975554 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.05310219 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.02626091 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.027272291 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.035847911 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.070130612 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.035371776 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.030861985 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 2.026835934 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.027560353 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.027091062 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.177129411 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.084043668 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.030177403 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.082609113 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 2.027519597 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.027667743 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.028576674 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.028036704 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.116825011 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.029234906 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.080995997 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.028726461 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.209434525 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.051873845 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 2.028902521 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.034868273 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.037700173 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 2.028349956 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 7.028664407 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.038500808 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.029030556 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.032487843 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.037944955 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.03630745 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.03058524 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.145363333 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.171465826 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.029917172 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.036085686 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.03958362 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.030186024 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.074946731 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.029043401 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.031219653 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.093702042 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.148014073 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.058486635 seconds)
  done (took 221.40509993 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.038969032 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.037430982 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.033626055 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.047510152 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.033622358 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.036644631 seconds)
  done (took 14.182824154 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.033382971 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.034190317 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.031800242 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.032746834 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.031172226 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.031042938 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.03135667 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.031358014 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.035569675 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.031384592 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.031293692 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.032051918 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.035294601 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.037200463 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.032075824 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.030945322 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.032305075 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.033477195 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.031819668 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.033682749 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.285582988 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.03380171 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.033665924 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.037490933 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.035758475 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.032257034 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.04754416 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.034257638 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.032086926 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.041738594 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.036057715 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.032647578 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.036363277 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.038569189 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.035941408 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.03603911 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.039003333 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.03408931 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.032577714 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.034414782 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.03423826 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.031895055 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.034784909 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.03393094 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.036245478 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.039205205 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.037909602 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.045301327 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.031886182 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.03462257 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.03564164 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.036472592 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.034087888 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.034416633 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.037204292 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.039579006 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.039824632 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.037088244 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.033586267 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.037961715 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.037179803 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.03480699 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.036184021 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.03699277 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.043433058 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.034884346 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.039238052 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.038795646 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.034796575 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.034693018 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.035415043 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.036599817 seconds)
  done (took 149.750209034 seconds)
done (took 599.243781241 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.367736133 seconds)
  done (took 9.325184707 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.184432689 seconds)
  done (took 9.203385915 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.170741725 seconds)
  done (took 10.137883956 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.049506132 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.040267761 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.044180786 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.04002407 seconds)
  done (took 30.148608387 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.241879555 seconds)
  done (took 9.202016457 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.053786358 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.031135385 seconds)
  done (took 16.108213055 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.05531287 seconds)
  done (took 9.024024783 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.320336397 seconds)
  done (took 9.286992943 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.048905531 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.06063656 seconds)
  done (took 16.091724964 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 7.038997812 seconds)
  done (took 8.999440101 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.208419666 seconds)
  done (took 10.283241887 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.047485242 seconds)
  done (took 9.072751385 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.062682606 seconds)
  done (took 9.026990743 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.929918032 seconds)
  done (took 9.892348573 seconds)
done (took 167.75989088 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.053427602 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.035447792 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.033615543 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 7.034702204 seconds)
  done (took 30.118224301 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.069057922 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.06779391 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.071200109 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.082339923 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.073633451 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.068292259 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.061269801 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.062179327 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.07975426 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.070407441 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.071188218 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.07067777 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.069350074 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.061398397 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.071145663 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.070987976 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.079019563 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.071880791 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.06328514 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.069916263 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 2.037216911 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.080461055 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.07197742 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 2.036685763 seconds)
  done (took 51.592502247 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.22772375 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.109493543 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.191784002 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.089479454 seconds)
  done (took 10.580547054 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.087264381 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.089722896 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.102842039 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.142723795 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.165103743 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.098546352 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.063275051 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.056664984 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 2.043434 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.089316331 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.166023752 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.086627159 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.182052197 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 2.038336631 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.228943367 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 2.03766998 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 2.037954454 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.090472248 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.139568736 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.154205244 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 2.037833662 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.090267752 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.09302562 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.085820638 seconds)
  done (took 52.370301689 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.038360119 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.046345819 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.046663943 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 2.039189589 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.039853021 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.040675355 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.047681774 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.041711216 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.061344147 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.041039297 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 2.038089649 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.040028592 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.046464565 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.039372004 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.039146719 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.0535043 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.053657811 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.03885204 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.044066241 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.046633161 seconds)
  done (took 42.845877755 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 7.038999931 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.884513657 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.382730931 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.290123905 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 7.036930236 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.035978944 seconds)
  done (took 32.632499245 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.051301042 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.044986289 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.040665334 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.09524261 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.176585016 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.044719106 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.042347641 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.051519436 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.081753132 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.100774143 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.054876669 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.063127855 seconds)
  done (took 26.812879012 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.042045573 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.039222078 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.040386891 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.052146271 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.049550597 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.044792299 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.047593795 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.040105149 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.05087288 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.057111096 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.046364299 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.050984688 seconds)
  done (took 46.528289087 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116940076 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.914675886 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472204323 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492344274 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.562095079 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240898831 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.038779947 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.1227797 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.039580347 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309816029 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.36780176 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.55396978 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.295269201 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.051501917 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.1487145 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.538234457 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33885987 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250372744 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.07204364 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734281004 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161270293 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.64405759 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.674229799 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159545199 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253278469 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.174354901 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.315162825 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.001524544 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100712987 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054700258 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058497308 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.05497224 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.324149807 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174498987 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123017604 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056638734 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.465239891 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.759612589 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 7.059900294 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.677520837 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.551029386 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.167821075 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056546304 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.055183496 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.983037674 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.649563462 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134475645 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.055895285 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.754597071 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.054074146 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05870579 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132852442 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.054545416 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.860606632 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737854132 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.31875307 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.054479844 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057774167 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.61699013 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.056453724 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.740858263 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.978466522 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.140432039 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.689022569 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502520623 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.206231616 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.054527909 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059892549 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.982017334 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.676852063 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166357603 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.18990684 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.069455316 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.661063203 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346409625 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.473301581 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.107102864 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31168243 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.778632907 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.110412473 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272764313 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.004930817 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.982877746 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.885200818 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.985257213 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256453684 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080690944 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.641700391 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082014341 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139482329 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062389828 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070017339 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058358348 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.271337223 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.951050149 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.059196265 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.357944031 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30995806 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069936699 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143486096 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.983754087 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.055766087 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303671788 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.259777006 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.245777656 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.647206265 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146110829 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939851866 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.184373627 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.916777341 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175913106 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.319963012 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121132782 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.058153472 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171701622 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.01175864 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296051916 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962495952 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.270509537 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.414360733 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.297821773 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.376966842 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.295213803 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11888424 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.058816027 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.058191756 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.749243736 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.670320204 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.273695806 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.071550081 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.495145498 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178289735 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.058950075 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.99484058 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.888362321 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.405611007 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.132454468 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.272689354 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.960015276 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.44649856 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.986089177 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195190182 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.049726139 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.269158024 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.694959735 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.133863922 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307259981 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262449455 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358203754 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179310193 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071902666 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150469291 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07560347 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.429595563 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417269561 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.059670688 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.060643039 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.733420481 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.109055244 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.063200426 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.06242807 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.587368593 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324883903 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076883344 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.063650305 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.937906116 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.07090783 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120607161 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06512733 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063236904 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.613672214 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.56825539 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.068201749 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.785673859 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278009692 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065197773 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.717871151 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.237367119 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.070663897 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32419726 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12181753 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.98290164 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.760020912 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.759687988 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.06014387 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.985144689 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.057027295 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055296014 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06369205 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.253874355 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.320322801 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.10230612 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.672627055 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.153903715 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058996095 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.060434082 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.058726775 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.575755545 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.052673094 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.612067846 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.177843485 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183248659 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.066537845 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.987542625 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.055123208 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057470883 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.057634877 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.003571351 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104962762 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.673487256 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256211112 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302595908 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.465586631 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066584895 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.673002348 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.16987251 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.068571487 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.345414514 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.642007639 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.163754332 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121729907 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.059898609 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.681023045 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783534141 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.620946632 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356376243 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.363691443 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398876446 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.49627195 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.387511752 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14343833 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288076275 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.57484513 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113004586 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150319444 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.995896815 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068411323 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.694703888 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.452482875 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063656138 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273083986 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338187214 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.401575533 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182613168 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261995408 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085819813 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.925982188 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.090052681 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.589038255 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07765921 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.425133532 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252243785 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139271659 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.334405079 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.130247867 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 7.057302377 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.385841251 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091350341 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.761573058 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.411722231 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.517137958 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.519440486 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.280168364 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.061711697 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.499568305 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400011531 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.308031095 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.184583949 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985557262 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.062915377 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063597265 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.072931818 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.034990179 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.902044673 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.297076389 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065016038 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285034482 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.252819622 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422827165 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.962124004 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.06046038 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.06074593 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29363545 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.783412126 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230733194 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.437787306 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.646984824 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.070289425 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.989408217 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.983911712 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.763965871 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.075487433 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028001572 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255213908 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.158169105 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.745953931 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.494159683 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377820875 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.302149319 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.074538607 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325239771 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337755605 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.556179138 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087118966 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.161652326 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.357245696 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.755531707 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.281054381 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291617111 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.605802525 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.281593196 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.497335406 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 5.027926959 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.069618 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272433598 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.281574346 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.410051027 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232503338 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.776666262 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.075967103 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430222447 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124831352 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.419560246 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.244101385 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.158743824 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077446687 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145144641 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073240341 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.072231539 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075422938 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080909015 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.418877617 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.176440051 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.080911762 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151833058 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.072084056 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.63846142 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.074142625 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332845511 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414985989 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391840067 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12681893 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.065155542 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.071861347 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.996181717 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193967633 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.509025805 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.344651439 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.188584956 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.20496642 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091365403 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.360050788 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390673853 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387143304 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.342412575 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.954191116 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842412856 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.200330625 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.287811208 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077151095 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.27166384 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.272097587 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349770352 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.632057912 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.286521597 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.269983215 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.338842758 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.444880115 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.076351262 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.652845789 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.082205459 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.464129072 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.095277655 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.427547763 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317291702 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078065852 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191694398 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071750035 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.272029893 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.518568975 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.741724162 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408653079 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.923425572 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072019128 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334161068 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385736448 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366659786 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140369021 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073213096 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.777110416 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200585401 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.945627093 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.278693706 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.068266576 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276240288 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.775936956 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071381943 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334361668 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372033773 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.068337416 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.98901192 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067566466 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.07532722 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.282820894 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.271152574 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301979122 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070319246 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.076081712 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.875316633 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340438482 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124105342 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.994177022 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.067326005 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116240604 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296912622 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085760386 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.583971149 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.768331668 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333452555 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.964339556 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085496051 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.536610269 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.444240966 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389016194 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.591612075 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.268713325 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.609893735 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.96778898 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.455751808 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.07202693 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.527286624 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.457232577 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.071521894 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.624252788 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188591419 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.33033924 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.389785379 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.085424569 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80140423 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.094349512 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284618957 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425497819 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001996883 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.068587572 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.120412284 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.071484904 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.055291851 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075156352 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.00117454 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.56049453 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.91530423 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.630408098 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.071583278 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.087328685 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.396093881 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.664432369 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186917244 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089747145 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.071427762 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.771332544 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.357687186 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317968586 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.642313939 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.167689175 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.074804215 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.071751885 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.992618029 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.253404436 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.258391806 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338454925 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.474426763 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.186901336 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074107042 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.28029077 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274659307 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.426983062 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19657204 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255214781 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189379239 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 5.011778017 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.778033164 seconds)
  done (took 1755.159563639 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.087418154 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.099360424 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.097330801 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.111104477 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.100783391 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.091278439 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.132645136 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.172473764 seconds)
  done (took 58.889745766 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.081765236 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.36717019 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.084421463 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.080487141 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.083293062 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.081241288 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.260250702 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.092567213 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.081965327 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.085992288 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.082359583 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.083425056 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.377452672 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.099274901 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.078436235 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.077924122 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.080904227 seconds)
  done (took 78.190848485 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.083904031 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.256516318 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.106632287 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.080534366 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.771043724 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.08570205 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.983923163 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.109677394 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.084023932 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.127984518 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.376501843 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.129436169 seconds)
  done (took 92.198870207 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.094942062 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.084076691 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.083195407 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.085214804 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.082631148 seconds)
  done (took 12.443344125 seconds)
done (took 2292.406335458 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.308775448 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.139728463 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.182658327 seconds)
  done (took 6.325818546 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.229626571 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.272112228 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.38723373 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.408890464 seconds)
  done (took 11.309376414 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.390998103 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.464378861 seconds)
  done (took 6.858151203 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.401572241 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.11074577 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.490720208 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.082035829 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.081024859 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.080251488 seconds)
  done (took 23.251380542 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.081110395 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.082141047 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.082468186 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.081282323 seconds)
  done (took 10.328533382 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.081385069 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.788950185 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.082650646 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.09684743 seconds)
  done (took 22.052907149 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.227762566 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.197361651 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.224217077 seconds)
  done (took 8.653571119 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.223016635 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.942808614 seconds)
  done (took 7.168858372 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.220608918 seconds)
  done (took 4.22295538 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.108946055 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.350097518 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.57050494 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.595114896 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.660171805 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.912789802 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.385674732 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.301385704 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.51428572 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.524685935 seconds)
  done (took 26.926420649 seconds)
done (took 143.409895847 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.418681174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.10824558 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.281517282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.427844257 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.309354121 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.283125697 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.293251461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.41744848 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.103483448 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.093758694 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.42818477 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.31117126 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.23981255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.103957923 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.242362255 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.106230897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.313317632 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.428741488 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.112529743 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.3532685 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.298865928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.080302433 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.272037083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.093032683 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.311585116 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.235146933 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.623249433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.108045742 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.255748238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.638157163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.237593757 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.496856033 seconds)
  done (took 175.032406125 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.08631899 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.083158154 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.081441623 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.083447818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.562339412 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.083769326 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.086140096 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.083041774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.516110201 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.506303405 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.085062669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.552747962 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.084876681 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.083371328 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.085074005 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.082374889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.690821732 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.084581352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.084269125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.083065836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.082854193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.375215161 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.08381759 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.385208989 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.686715327 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.084649993 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.083433034 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.084367163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.082430721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.086623798 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.084948487 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.083340627 seconds)
  done (took 216.30105468 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.024313648 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.08725746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.086404333 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.085541972 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.086196668 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.087366447 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.085753648 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.085626162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.861925875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.853120371 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.084444997 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.086203201 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.082090262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.083524414 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.084943972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.085742544 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.084873742 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.057399487 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.087667687 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.085256938 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.085492577 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.722594564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.083823234 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.733080438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.083874375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.085998378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.084724684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.085877409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.0849396 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.085507017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.08432424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.086775449 seconds)
  done (took 227.483130988 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.330726816 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.089720607 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.090230319 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.013614969 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.089457818 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.089852499 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.073834346 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.33176057 seconds)
  done (took 21.119349001 seconds)
done (took 641.945900683 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.454036921 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.295467881 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.268927541 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.109983668 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.374741646 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.153023653 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.103948369 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.173109813 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.948214326 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.180851705 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.77388092 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.13005851 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.864365407 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.136536901 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.229138489 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.167237663 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.703169075 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.801093676 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.245286498 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.167125304 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.295390142 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.027541566 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.190933019 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.982653913 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.789957907 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.080914489 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.155057112 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.708861561 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.117380227 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.267446718 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.762601968 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.384001431 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.123709741 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.110656589 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.164841842 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.14014944 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.337071229 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.117688585 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.235217039 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.817612452 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.185728503 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.848696805 seconds)
  done (took 112.132694302 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.098046738 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.094197098 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.09384079 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.094738232 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.102507478 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.094548478 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.093656831 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.094083952 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.094658806 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.093622827 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.095025492 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.102598175 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.094975081 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.103913865 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.094280026 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.096128239 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.095195809 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.104721716 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.094671045 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.094855715 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.094209203 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.095176509 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.089898134 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.094435133 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.094160716 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.094522834 seconds)
  done (took 56.516229975 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.091672094 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.246490567 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.337050484 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.109521261 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.088803051 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.092135872 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.105860279 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.093085419 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.091490567 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.089765027 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.191575586 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.093747559 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.108401355 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.334040655 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.104553524 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.087229655 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.08790052 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.089844866 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.252144949 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.105479453 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.11033977 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.09279146 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.108924525 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.100960221 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.092237125 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.089785972 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.091981206 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.525358457 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.097812296 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.192924114 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.133325311 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.111471289 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.474895291 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.344500817 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.143119909 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.095729784 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.089510216 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.198643649 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.095157447 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.09187665 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.108958534 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.098205945 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.337691385 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.609462953 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.104245645 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.09304614 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.539050855 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.203697186 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.130567733 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.099699312 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.342180131 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.107534432 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.091133096 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.092206929 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.127074304 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.095138519 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.09224173 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.406213129 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.103928709 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.112960303 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.094624073 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.092598008 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.259116705 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.10134129 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.247131152 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.100187569 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.097954962 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.092381057 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.342019763 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.106489865 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.625758417 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.104317801 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.090340146 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.198370974 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.249450541 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.566066227 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.103408133 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.261365241 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.48976039 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.116629577 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.099698418 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.514574313 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.120332743 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.101034464 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.093331073 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.093008376 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.093431719 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.134508003 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.109112969 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.539701467 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.623850925 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.425152982 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.11972227 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.10963592 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.093716426 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.407633669 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.100115732 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.093161083 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.334455499 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.631833588 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.105311916 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.10118107 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.604512012 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.110219106 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.11108059 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.103827601 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.349511902 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.10920265 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.136423036 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.094495889 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.100380312 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.097720658 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.112596852 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.104250294 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.09491104 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.594513078 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.216427058 seconds)
  done (took 258.315299044 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.094154753 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.093350147 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.093823731 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.094043375 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.093511171 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.094853639 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.093916501 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.094199288 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.094699677 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.092547311 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.093915702 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.092750246 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.093749127 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.09992776 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.101601129 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.102169971 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.706063695 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.099407793 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.100324287 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.097550343 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.736754282 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.100464348 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.099308139 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.094753205 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.100267001 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.098938071 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.108216519 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.099358087 seconds)
  done (took 173.983358899 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.099380144 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.21293635 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.116304191 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.12895631 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.10588262 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.100917783 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.199396134 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.118463902 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.107822898 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.100155622 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.099771379 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.160686057 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.109569082 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.198987215 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.132475154 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.205580576 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.206315845 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.106654262 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.101835352 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.101309922 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.131431752 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.109620578 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.163638326 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.22280034 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.11943166 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.215494662 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.126774659 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.103027704 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.101702385 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.214915648 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.118300689 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.162418439 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.131032314 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.121243862 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.221353452 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.219860247 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.206996392 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.207080969 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.108393619 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.103427192 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.103064549 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.104748607 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.216523785 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.119708608 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.104808451 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.217724005 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.121313086 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.103787953 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.103380729 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.102789306 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.118042757 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.121503515 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.168360676 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.230279152 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.140939477 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.124447445 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.201679368 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.228264865 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.100291879 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.200744547 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.111569467 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.216735179 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.122980439 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.105337629 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.1045337 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.105983802 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.132843223 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.206809063 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.211342281 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.110893111 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.199730248 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.139153841 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.111708235 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.106320395 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.105122998 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.218208743 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.22019455 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.140152702 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.142094253 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.135959405 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.113933243 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.105224153 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.108961484 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.123049012 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.108044215 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.218470882 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.220033148 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.111141646 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.10545014 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.106105603 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.104757653 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.130184866 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.227180019 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.140423468 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.210510799 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.171748831 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.180820279 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.118606491 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.11869721 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.108892398 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.168143192 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.118518252 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.116928011 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.400314696 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.165161009 seconds)
  done (took 227.527718457 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.480540205 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.152620628 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.162072283 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.415226205 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.469445882 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.001935978 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.149758764 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.154172081 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.177797212 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.336180196 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.239652515 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.175060356 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.141849165 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.128772386 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.154889639 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.175758773 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.160285178 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.498085619 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.351073973 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.341293147 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.143225453 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.416253824 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.473822342 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.750324549 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.20148252 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.54271735 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.734603617 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.283563909 seconds)
  done (took 68.446333922 seconds)
done (took 898.928858289 seconds)
SAVING RESULT...
DONE!
