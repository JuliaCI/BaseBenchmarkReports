cset: moving following pidspec: 14062
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.30213347 seconds)
loading group "string"... done (took 0.553421638 seconds)
loading group "linalg"... done (took 7.625270302 seconds)
loading group "parallel"... done (took 0.17239704 seconds)
loading group "find"... done (took 1.176250331 seconds)
loading group "tuple"... done (took 1.873662177 seconds)
loading group "dates"... done (took 1.26549497 seconds)
loading group "micro"... done (took 0.235831398 seconds)
loading group "io"... done (took 0.771224081 seconds)
loading group "scalar"... done (took 42.549820003 seconds)
loading group "sparse"... done (took 13.026923576 seconds)
loading group "broadcast"... done (took 1.153579863 seconds)
loading group "union"... done (took 13.9835401 seconds)
loading group "simd"... done (took 4.949831999 seconds)
loading group "random"... done (took 10.08472058 seconds)
loading group "problem"... done (took 2.236399195 seconds)
loading group "array"... done (took 22.896208867 seconds)
loading group "misc"... done (took 2.110075097 seconds)
loading group "sort"... done (took 3.475715037 seconds)
loading group "collection"... done (took 19.613457421 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.579517373 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142289705 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149349867 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147129355 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.189462996 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155384974 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157755527 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097179142 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.004798427 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.18142948 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15261437 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519061572 seconds)
done (took 5.274267711 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217048616 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094440186 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103801751 seconds)
  done (took 0.935655887 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076916278 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144826007 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094881086 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078112405 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09609238 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077312279 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095990531 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.080172946 seconds)
  done (took 1.413410091 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08626124 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098686662 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081680732 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.09738888 seconds)
  done (took 1.107239037 seconds)
done (took 4.502334663 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736403902 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274366192 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202728732 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462503057 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195253075 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214954111 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6856511 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.362756922 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25107649 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099330857 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143083162 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384735349 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136828831 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.690217286 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088991743 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123313177 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178478688 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.464001053 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081654924 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110187831 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116683782 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141531999 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129890873 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092559952 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185993777 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081456413 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19382069 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107865402 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08000049 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286301424 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200843955 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69234536 seconds)
  done (took 10.972080024 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111886545 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132615112 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098097946 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137494921 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134349366 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100244449 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082945261 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097054393 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121527585 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175705572 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112141251 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135950628 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094930972 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081753709 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115743995 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244143402 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118722053 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102833876 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101151268 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103585733 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121211739 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112245454 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109297826 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091681259 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166796758 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222956538 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110021782 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126387166 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096941656 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112020567 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143240399 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141598546 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094246449 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079484398 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172239827 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124217164 seconds)
  done (took 5.185592857 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.078267235 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188352655 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120462534 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169699595 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079377452 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142310544 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094414527 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113672807 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257565399 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.170804727 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177164572 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141154913 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098880688 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097363039 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081579511 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097597668 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.626778614 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157183405 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133585648 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096021545 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103994587 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099147774 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154251877 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084849054 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09837687 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102936188 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.107563844 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.321376542 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164416882 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080476256 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.162102689 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100594706 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101660744 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132944144 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192282319 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127541734 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133474175 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078213711 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095642913 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176079779 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085889891 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095279962 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095819747 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102869688 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134894227 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134584075 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096461998 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080170349 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203727409 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096805864 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112669854 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.919211732 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182571835 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090923135 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097635626 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324990564 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097667369 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102331375 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076515867 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.269580205 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193157597 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.0995272 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078227111 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096577 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079434401 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406891337 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082235168 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.649865511 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084718186 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10910247 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083679136 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099403468 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106131949 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088492576 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095497451 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099802954 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099770865 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081666007 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099434969 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079429732 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.10239879 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110234373 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08994993 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09961301 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149182598 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096980012 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100054043 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130350679 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102821642 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079148277 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133748357 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102210196 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081196126 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097125919 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134761854 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081881816 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111626778 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099189638 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126846996 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.099846443 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.13737275 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09618157 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125409453 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101898859 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117340356 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114442305 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097861775 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082910023 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096215502 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075825493 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167220455 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081502355 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099338343 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082108387 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113270613 seconds)
  done (took 22.491317193 seconds)
done (took 40.47468949 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.315516579 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103818867 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103416261 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102989262 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101058657 seconds)
  done (took 1.549926891 seconds)
done (took 2.348294968 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289175368 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172022784 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096245 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167463072 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094111568 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173194978 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159571947 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112460368 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218774615 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077616911 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164006933 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094656661 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076461073 seconds)
  done (took 2.720640766 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095269066 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11492704 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082150059 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111314924 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075898116 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112038898 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091804353 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117200011 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110321873 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086143576 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09418528 seconds)
  done (took 1.882914951 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094101986 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114136854 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082702014 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110823863 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075881205 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110971836 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091936742 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116468706 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110503624 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085391187 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094209431 seconds)
  done (took 1.877275186 seconds)
done (took 7.263068907 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092205822 seconds)
  done (took 0.880120571 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.936374309 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.083928105 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113304229 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150245153 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.300186781 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192475123 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.480268816 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124302514 seconds)
  done (took 11.374242116 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.144953142 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083515762 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101749291 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084701233 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101500926 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084439778 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102977034 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099078311 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084436771 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104293679 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08410889 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102321013 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09927938 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083699221 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103442829 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084635822 seconds)
  done (took 2.3992714 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118258706 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116532037 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108930383 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109406609 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086639915 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106754735 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106198411 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088293847 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104026702 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104267062 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089819278 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106243319 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104415284 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079768839 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107872643 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107455659 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084964742 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107860238 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107927048 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088926821 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108022537 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096745283 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086727832 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106527977 seconds)
  done (took 3.331858793 seconds)
done (took 18.774875242 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162725845 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108312701 seconds)
  done (took 1.060358694 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097833232 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113727413 seconds)
  done (took 1.009079279 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098380099 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096883278 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122967547 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110436826 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079879376 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097028965 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120840544 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079593418 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097126778 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07866283 seconds)
  done (took 1.785106017 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083051777 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109870592 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101611088 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09482549 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105716691 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095195829 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087950874 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100437865 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109443684 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076900938 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103475978 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114456991 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084839972 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117397498 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105428166 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081835031 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104036128 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099479472 seconds)
  done (took 2.576007969 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081122196 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097325232 seconds)
  done (took 0.977318491 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082438487 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094165391 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080936215 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098910553 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09407069 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076796088 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094940061 seconds)
  done (took 1.423186155 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.493890369 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135106164 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262868675 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103018565 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120510835 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300311954 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099548409 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08316921 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105050904 seconds)
  done (took 2.544529213 seconds)
done (took 12.169661371 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094485201 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119151342 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110913199 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467730894 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106725831 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099410309 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146836139 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252789277 seconds)
done (took 2.203581588 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142475629 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326838989 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11692939 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067706347 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098365154 seconds)
  done (took 1.417676017 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079778974 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099770428 seconds)
  done (took 0.987648937 seconds)
done (took 3.35882125 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08104988 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.130071396 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079388551 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098089167 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078506178 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097503592 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076494307 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099157528 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07814679 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095446399 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095716464 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080258205 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096121391 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078561025 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094101136 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080799455 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098118153 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077568546 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094683069 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077556951 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097389238 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079431673 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09515527 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077522933 seconds)
  done (took 2.976084806 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099427113 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099315421 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103307535 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085646393 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102055316 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085533815 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105540455 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0981126 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084906571 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09988634 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099977026 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084348486 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099409181 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084448893 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100395598 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100451595 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086362552 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098578022 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081538306 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103015783 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101770442 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080157904 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10179406 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101514164 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083837941 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101641823 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081397153 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098913206 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10246811 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084214684 seconds)
  done (took 3.649327435 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085178244 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094173012 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078379765 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101940111 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077612332 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097884068 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077393871 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095944271 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078242025 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096551231 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078279849 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096027549 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076974414 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097803973 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.076891773 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100480381 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10711279 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078115961 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09521059 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079061068 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.099093975 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078134981 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096007887 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077756682 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095811294 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076991817 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09676501 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077949666 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096407381 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077349707 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10021924 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080393127 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096927034 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083907505 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100260423 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07673788 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100190317 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.075968394 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097385085 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094991776 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078865238 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094326792 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079073337 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101602996 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079128042 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096919268 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077296403 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097716065 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078063314 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100020813 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077066083 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096513832 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078938742 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096953997 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080816488 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096059216 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095474831 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078529441 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096765338 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078361535 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095198932 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077806575 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097141146 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078680812 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110628022 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083883636 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09555009 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078427336 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097909689 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080096252 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097685194 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108764614 seconds)
  done (took 7.22142804 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083198994 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107087966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079645434 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098949204 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074620311 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097227361 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098891114 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078211712 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097879193 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084310563 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096905521 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078186182 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098848994 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107367059 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079581226 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09714534 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083956493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095275778 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077362717 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100696555 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077236357 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099946984 seconds)
  done (took 2.808178271 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210096287 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105459638 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142193499 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10744589 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082147572 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106840911 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102152828 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087090257 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103209902 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082760733 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101300103 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10245095 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083520607 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102699433 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100193405 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085040088 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102657753 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08351118 seconds)
  done (took 2.709623434 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093594838 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099585336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100753581 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099705857 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099245766 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083603427 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1049565 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109005551 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083628969 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098816586 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088941898 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101868612 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100615664 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081599582 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10200409 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080748525 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101338499 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080112082 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108999741 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104828042 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102764493 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090711859 seconds)
  done (took 2.93986933 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097186883 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101413511 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117928572 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084366316 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095303113 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079890664 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106636537 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079834998 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107783813 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099879628 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081396614 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097635666 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086898353 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099771052 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103666145 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081850642 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101139213 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080224612 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101758626 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07560328 seconds)
  done (took 2.704822258 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10326085 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.212283189 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100058842 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092596763 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102381532 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08099918 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109692485 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10090118 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081564125 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126243479 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101216435 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080954758 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111022794 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107353162 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09949794 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092291197 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109868312 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109141449 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081550665 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101485602 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12541099 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082077505 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110144504 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100768146 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082144361 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100811914 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100119101 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08837082 seconds)
  done (took 3.719972544 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081069088 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098591042 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079169516 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096274028 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078547771 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096130957 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078705144 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095988176 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081173909 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096526435 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080374648 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098435066 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082230013 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099101199 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079884046 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098730812 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080419859 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096894542 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077135987 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097194805 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079945439 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100052456 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079881164 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097749293 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077721039 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099797014 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077080116 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097392633 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080350445 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097349868 seconds)
  done (took 3.487567641 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092675715 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106911966 seconds)
  done (took 1.026169511 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080286604 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114722824 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07834124 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103823175 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084486972 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100523817 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107824736 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085570845 seconds)
  done (took 1.582705178 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096369677 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110148841 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081521013 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112238736 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109295635 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097607394 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169218855 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101978817 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085597079 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099745487 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112358299 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080618208 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105917068 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080694579 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105826634 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086950216 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098411431 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104263093 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08432546 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098867704 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082329176 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109527772 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082938448 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097588159 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100670634 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090216309 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113342335 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081467113 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1041444 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107273164 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08665626 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093569935 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080955163 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101267328 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078198187 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110611126 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116072105 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084758064 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109713609 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081556285 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112345881 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095212384 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086065178 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106425592 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109828098 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082899451 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10073399 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076972296 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097813501 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08379505 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096205891 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080870897 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096112761 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087277921 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104888042 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110628755 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079720587 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102975597 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084150624 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104277744 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087020149 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103392126 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102560491 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081288354 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107723265 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08504662 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110527213 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093779655 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076724273 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097771294 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095251185 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123669843 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087826217 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101712971 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101945253 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080519719 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104088355 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082721746 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106571783 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105810156 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08238745 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107705735 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087980207 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101749245 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083312265 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109214882 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098906388 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083583777 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098439781 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116955178 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080834598 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098096154 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079751525 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112301303 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083894185 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101090146 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078038329 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107862032 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094138731 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08294876 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101601702 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082628198 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111441264 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105791762 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088462392 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109455616 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087504106 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101588151 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102525246 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079044802 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100873994 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083709521 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107882216 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075132775 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103797114 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081614251 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101446576 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108861446 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080692945 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101169053 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089060604 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106814467 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079027788 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098651287 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103377561 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082474759 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104277821 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089315726 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10063891 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075563656 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097398145 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103248507 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082224377 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104601194 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086736674 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104749329 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075534218 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099323432 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105055905 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091343243 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101582511 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081577082 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107874368 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101110029 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082137221 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107533259 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084807121 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100336784 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086812273 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102516904 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076304706 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105454421 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103168312 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080603336 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104924238 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084905856 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103838701 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082036901 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10089495 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105804164 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083245699 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100310028 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081666029 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.10023768 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110300544 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084132727 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096277562 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079346419 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108538372 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079029566 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101419117 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080755626 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103927321 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099942078 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081403087 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099609334 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084433901 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11230098 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104609683 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083645564 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.1065054 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093425962 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101664059 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.082920347 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101080949 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101808124 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084222703 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109747551 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086589308 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107375174 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102623988 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079739445 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107983261 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089239608 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100161718 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079025981 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100387239 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084105599 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107527835 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104164338 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082505884 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099990658 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081946576 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106736092 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103546402 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081984846 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09905289 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.086139419 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100677934 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088214836 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103547177 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110796799 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085808878 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097049711 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084283034 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099329436 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106036724 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078377367 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098636432 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081782672 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10242143 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080735508 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104383557 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075364278 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109128927 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108084813 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.083634097 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099684019 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082015928 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108075777 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083121233 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105891791 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085047407 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108026682 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112759913 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081271887 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104945366 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091677518 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10265511 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075258366 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10818481 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099437476 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082305388 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100429987 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079593659 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104450362 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109087186 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089091179 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095235741 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084469088 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100733934 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080458665 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097422535 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085955549 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10507461 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101508413 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089764898 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102532694 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083298584 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106023856 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.080979657 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104258015 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101871659 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085988273 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101817494 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084763286 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.1013797 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085749519 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101287334 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081519112 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103688621 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100841278 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083396162 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107578768 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082120862 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102008511 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08443667 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103535558 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082684236 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102391925 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10032741 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085832687 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101742905 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082977864 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104400136 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077045063 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109716689 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.080672745 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110695407 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100687143 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.07916835 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.105966697 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084413347 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107754338 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101691191 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083946569 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102088498 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082958857 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104440978 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088339528 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100991387 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111784665 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091087682 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102371156 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084344009 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102289664 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083237314 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102148185 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082416771 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102954839 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101356329 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081946348 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107634918 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084637508 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103108046 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084184667 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104338669 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081430512 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104503986 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096080029 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083024456 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101451055 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083527661 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112586369 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082024184 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106270638 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099932145 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085390387 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100858724 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079263153 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110429949 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110856709 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08371672 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109517039 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081173251 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.1048801 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111703082 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077162716 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099622168 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080343991 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099553646 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08989348 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103516464 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090724618 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10165873 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080742751 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099508823 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102303084 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081465946 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095388099 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08044261 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106660975 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083948707 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101220047 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082607683 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10534425 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101995582 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101654413 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101830193 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082513003 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103977546 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079534251 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10115948 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081473573 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106080171 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102437769 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080730073 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098882056 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082699225 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10289193 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083112564 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101918659 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082628559 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109645856 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100831551 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085944272 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105738249 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077178899 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105541603 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081025453 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102036199 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080718513 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106732025 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104855178 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084015006 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111695177 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081370643 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103051807 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100856214 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081580887 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10188698 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082645197 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101689637 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08056503 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103910701 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090409165 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10034926 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10474098 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082693702 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101981745 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090027083 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104079163 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08476881 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11049886 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104148591 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084680621 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109781808 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.084894345 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106423822 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102779965 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084709811 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108027048 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081544998 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110073651 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.081905082 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104688918 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082663016 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10150493 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100607679 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083230574 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100792337 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.08933786 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10330997 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081064368 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102311603 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.07960228 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103923938 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104941805 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090552905 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105133734 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085120982 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098317337 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.078752203 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10445606 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079252303 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105228148 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105609199 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089157119 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10505848 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08322827 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10252753 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111316619 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089723542 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106195877 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0806124 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10706462 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083124636 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106081837 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083391541 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103452507 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103570668 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087299051 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103572109 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081969235 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110110244 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.0850784 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104621897 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102930533 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084004363 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102586438 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078087939 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103247488 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085236298 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1088713 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084288565 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103728022 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112526033 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08263572 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102146571 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086307169 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102857945 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.085946303 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098962323 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103071345 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084640686 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103693916 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077844775 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102148761 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080008983 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106030799 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081261218 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099001449 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112256475 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092148988 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106159795 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080739127 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102626613 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077235158 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09871423 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080463818 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105190714 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103676259 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093062536 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102760742 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081899269 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09907292 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082692351 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106705512 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105026403 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081105376 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097328236 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082119278 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106001294 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089118135 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102034171 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082216749 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106695482 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103486573 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082004928 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10580801 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079958198 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108000433 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095292949 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105086018 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102362992 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090328396 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111160073 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.082276741 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099431057 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.082660655 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107012338 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102254081 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084450421 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103513647 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097548344 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107047665 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101324083 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081814737 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105807119 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082766915 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112123157 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083679672 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.1042701 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107004224 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085089698 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113320793 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085231094 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11147632 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105752217 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085879791 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10155639 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082760224 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101333433 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081405806 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104661814 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.082680412 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108573093 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110568738 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0817407 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114091577 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111877302 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087988247 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099271796 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082382568 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103384458 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077875949 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105294668 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08101697 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102973957 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08094861 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102632439 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103308443 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090230179 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104241021 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083920515 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103880399 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077219969 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108621364 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084624887 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105181346 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079210067 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104614459 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104691453 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088004847 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107897263 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083411725 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106316008 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084195104 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104922973 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077266827 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111276701 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101816007 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086248199 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103569368 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08340586 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104889585 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08663982 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110268729 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104415153 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086501384 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116219765 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086000663 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10216524 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079515124 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110548742 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10180012 seconds)
  done (took 57.771465493 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14926433 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080453437 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099472782 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078376669 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113649644 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098863982 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079711595 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100204185 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080371141 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102861984 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078969486 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09976214 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108633659 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124341317 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092703824 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105603839 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07751601 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101691385 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099340985 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081086311 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110605243 seconds)
  done (took 2.938864756 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10513981 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117423396 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114853987 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118419699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090018467 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115549608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114377506 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115197162 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099294273 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112013967 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118752831 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115103866 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090589996 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111704741 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110633163 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091411166 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119047924 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109952252 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116565225 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094076175 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114060985 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114955115 seconds)
  done (took 3.285977063 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0854752 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102883055 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084826479 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098221294 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082650068 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098890625 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086919497 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101843282 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085733448 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102641132 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080452992 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.10320739 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104488273 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079123133 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102282319 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080875021 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151472594 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108124301 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08227562 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10524147 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077693493 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10817705 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09851164 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079361364 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10218973 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087745 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104960875 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080883443 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104210916 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082272237 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103972773 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079728563 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105356465 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102880833 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082877168 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101891801 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083555758 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103026318 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078428224 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101240536 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083723527 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100754217 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083954809 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105807911 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080003995 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102944943 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083382255 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104096567 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097890464 seconds)
  done (took 5.517605052 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104792537 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16167091 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085583876 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144072924 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121340066 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.11278076 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086837281 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14352552 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103651742 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081068572 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123861116 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120798112 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103971595 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088399764 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109026441 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103567686 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086504411 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103112697 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087232606 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10482654 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108504594 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089318341 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120867292 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118549819 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108302162 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083230534 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104782501 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108857442 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097462444 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110828422 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109621214 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089637086 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121604743 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110376824 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082200182 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108011401 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121937031 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104088898 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088205584 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102182828 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085639654 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109230704 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109575472 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101835299 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104734119 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108863955 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083712122 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102951685 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11746939 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086027285 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114586193 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119781565 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087122415 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105932994 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109468704 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120711988 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084228879 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103417485 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.086600953 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117417812 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102486315 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087505563 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119564025 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107136462 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112201715 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099102751 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110098773 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108292512 seconds)
  done (took 8.191171956 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092991176 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111691994 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120733746 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119840458 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08973101 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111397071 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111355811 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090374593 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112151295 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117079975 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110869427 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134791057 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086388973 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115229146 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110925884 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090271089 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112401682 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11205346 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09034708 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112149639 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112832349 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119856657 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090335822 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121748713 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142120826 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10588625 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090266526 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111785076 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121590575 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11072577 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123388634 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090814668 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112210875 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120790116 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123367256 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090318427 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104619165 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110770188 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090396186 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112750102 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105740006 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100199711 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112157685 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106400109 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09051639 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113121909 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121455097 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124506415 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11363087 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095779958 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112202668 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121668064 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111204861 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090070752 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121148069 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147178005 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120798411 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121473557 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110343129 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099937061 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122014228 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128970507 seconds)
  done (took 7.739117762 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107424934 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11564189 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118058906 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100042997 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083828561 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10886903 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081680343 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103720865 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113987069 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094017849 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116886408 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108892424 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091522566 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117931034 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110073105 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112202098 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088153585 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109902865 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114449055 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10829514 seconds)
  done (took 2.997493886 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093413759 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124574665 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084766172 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11327185 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109403309 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090846254 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108033103 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107971439 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08601683 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10854295 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095700206 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118102473 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106022516 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089783566 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116584073 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112949565 seconds)
  done (took 2.559309025 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096635474 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118165703 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120459024 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083805724 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105035231 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079696413 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106486503 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101470948 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08092084 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121464561 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.082912081 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111972515 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105190495 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082531482 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10169903 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086660793 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102296855 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081210609 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106001861 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119360146 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095453195 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10489562 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105282618 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.08754788 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105962167 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088603764 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10706708 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103252343 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08322474 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106040767 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.083971418 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113555632 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101847786 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083293651 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102976513 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082310473 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10683269 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084167045 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.1095722 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104862781 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083762107 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105104404 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084224248 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107735988 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079404055 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10703556 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100964102 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09156971 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103373366 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084742859 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106003108 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085600158 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106996417 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11601755 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087481712 seconds)
  done (took 6.301522549 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099827613 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109322541 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079443975 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104673714 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087047453 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10890684 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108309053 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087402721 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107742829 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082455892 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107759263 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088226612 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108052294 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108743006 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087291404 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109959185 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07967516 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107548004 seconds)
  done (took 2.67606688 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090941323 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105351572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092223337 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107084739 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083299667 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109168126 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079335423 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10502082 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103396727 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085750258 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104766846 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08727595 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104377469 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085721153 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107119045 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084083249 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10971787 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102816727 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085892116 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101301411 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087379284 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104102018 seconds)
  done (took 3.028393473 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119563798 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126056097 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09125784 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230566976 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103411678 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132984636 seconds)
  done (took 1.704123283 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111585492 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121201987 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10573038 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106796417 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11559512 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085086958 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108940103 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107890551 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117420946 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100724765 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108700771 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117969915 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117407721 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095883509 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114686237 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114883921 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107128208 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087461527 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10682172 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128520051 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087197978 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119343083 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108667792 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085602979 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108921928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117507501 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118241266 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120977193 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08770445 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118955625 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114564986 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08721861 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11903463 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122814996 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10947683 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09680502 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109315934 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128864004 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11388571 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096262736 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110580401 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114939081 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096542128 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1144769 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11814955 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108261985 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09351589 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108452796 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10905825 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135689597 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092973983 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11801473 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115259122 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117818842 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096842468 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156512842 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101325712 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118251058 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115578315 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122977414 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117379897 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093419852 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11786745 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122827885 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115878634 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117827329 seconds)
  done (took 8.210256592 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104490783 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127062411 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108859199 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122097364 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097016415 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109084511 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108272078 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086786586 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109743162 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107088877 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152113509 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089135196 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119118642 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118655177 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086500228 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109988964 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108720921 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117232405 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087079057 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136391822 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109116665 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117964529 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116565186 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096435661 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123329483 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115663945 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107961392 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087973896 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109331008 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106974284 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093433166 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109334619 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118210035 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086005774 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118246895 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109984433 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085932564 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115213976 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108581753 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114527288 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096978318 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129176196 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10883117 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10777554 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101132315 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109995089 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108449611 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085944773 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109385036 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10768951 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101841307 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123429434 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124497301 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118705121 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108569412 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087483786 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109731085 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108454246 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088187634 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115252821 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117615036 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086593293 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157826305 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088104341 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10961777 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117981529 seconds)
  done (took 8.096974283 seconds)
done (took 156.650148729 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.223435548 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.228512215 seconds)
  done (took 1.360115262 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.101212035 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136815933 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095068729 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170358294 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106310021 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118845168 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137784843 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097009649 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108007717 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084604743 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107790209 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086471191 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172206851 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084807786 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107758933 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10791741 seconds)
  done (took 2.737655659 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203038014 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255666213 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101049167 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107185463 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087469853 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111839225 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104663405 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091509644 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110112398 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.084530368 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109627086 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085075845 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106874619 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085500621 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111311683 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086860074 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107329743 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086605198 seconds)
  done (took 2.947239401 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115899769 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150234451 seconds)
  done (took 1.185649556 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121063169 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181129507 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317005462 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155601335 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105085887 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127837613 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156559696 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131124757 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196813827 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123192184 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120879148 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096895271 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140012191 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115835519 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.092421349 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119193676 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142417626 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091818304 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116587758 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116235726 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.114950456 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106903363 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114418874 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092922813 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180651107 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119868172 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08481552 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107691848 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115781315 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093967036 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114379633 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125269068 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096514525 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177580154 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101625406 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177294717 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097679947 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111982712 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113652695 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091356782 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118800644 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118015532 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103362572 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119343187 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084256767 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120465734 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106365455 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08457611 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11521878 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096212012 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115580676 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113487304 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155504873 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118213766 seconds)
  done (took 7.593895286 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795426027 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155941649 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090029546 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883487316 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137173407 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102389932 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.776908734 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134749292 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234357145 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.756970027 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13701033 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12135006 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224682465 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.236668244 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927093626 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308439294 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669610267 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100759835 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152103664 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152254987 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118531205 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136340479 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.106970458 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.451325258 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094258818 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112696669 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09474467 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121873754 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159008262 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12496445 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114200372 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178564832 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.243999452 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205581125 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115184875 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088497588 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112230179 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167879252 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263019108 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214837452 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179833821 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086280354 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111429313 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098464552 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13214315 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109201646 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164483237 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17119113 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193344638 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092248905 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120911441 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119085379 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098867919 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.18658926 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098122081 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310306289 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321374463 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111639608 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096781519 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127255592 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259783651 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121469601 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222386571 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117485425 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212337191 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110868198 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755057562 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18980751 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090216334 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118022576 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097295661 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116076553 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120622357 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168667177 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40867728 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123034513 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092513782 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11221072 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206373676 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125224508 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110528616 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161931386 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093694772 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120639025 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124400192 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122476857 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169999579 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227840083 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123968965 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117949783 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092773503 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125632622 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115247159 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209944128 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218477928 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161899775 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207449057 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122850826 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162267124 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189809083 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097737556 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193211008 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097682097 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126074207 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121995943 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214785885 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144534869 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101576917 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116283587 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117597591 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147474887 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104590747 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118531116 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168453195 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481467139 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167155284 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109092174 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105869365 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120272363 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161541817 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117315791 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257401472 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098922289 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189618812 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096246242 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109156374 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120441623 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164805781 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121905956 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099842065 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123376571 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118651393 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23195834 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216921425 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099771088 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244323415 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183508655 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118467682 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172504556 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121478967 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167097589 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118997662 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098376936 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117246706 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771627726 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099802894 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12059164 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115892386 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18806191 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088914202 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124039716 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124613738 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085874006 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814084986 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127527417 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098042281 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124757199 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119228279 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119198105 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095792279 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116062724 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162424162 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231026339 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120577491 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096824091 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125292322 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159104307 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117267843 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125035581 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123606628 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102853737 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121958663 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114587125 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101556457 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190194368 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162229675 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219964184 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572432172 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113373809 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124124846 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226345407 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089925568 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287073159 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118531948 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201250215 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185936729 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09837529 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31831461 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186663912 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187276386 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105356545 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195218515 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087094029 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118888503 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164415881 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111871181 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093794308 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183268285 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103140769 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123745739 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.952584585 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088644177 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247788974 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08702874 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169061114 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117177639 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121613132 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287812648 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089120867 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129829687 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163378362 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116549734 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125449014 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.851664571 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125101601 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12177943 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095781066 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222944164 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162042056 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120501236 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120183067 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097347922 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.186436435 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206908292 seconds)
  done (took 44.066061066 seconds)
done (took 60.80244003 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276089618 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215516135 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265334001 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170270847 seconds)
  done (took 1.951973547 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17976958 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150191359 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.142927748 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.0853985 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151298167 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083415129 seconds)
  done (took 1.738699602 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.36088126 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274222423 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24120272 seconds)
  done (took 1.826959137 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.316932451 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246748038 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.474983159 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.325554032 seconds)
  done (took 2.412114858 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208782956 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132378291 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111316642 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10344105 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197952015 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247606476 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141532309 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201758881 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098907078 seconds)
  done (took 2.440325945 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196264181 seconds)
done (took 11.512672063 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.134533523 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.247482302 seconds)
    (3/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096280458 seconds)
    (4/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.25262569 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.150237947 seconds)
    (6/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095030843 seconds)
    (7/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114973893 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.09094489 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.11092622 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.159173112 seconds)
    (11/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.247682007 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097275782 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118906903 seconds)
    (14/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.229905286 seconds)
    (15/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.190249887 seconds)
    (16/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085093192 seconds)
    (17/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.136735051 seconds)
    (18/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.217114617 seconds)
    (19/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.210095773 seconds)
    (20/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.202463757 seconds)
    (21/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.157956128 seconds)
    (22/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119856879 seconds)
    (23/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.193805681 seconds)
    (24/286) benchmarking ("sort", Int8, true)...
    done (took 0.217750307 seconds)
    (25/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102778855 seconds)
    (26/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.148495162 seconds)
    (27/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.246095535 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.223263686 seconds)
    (29/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135369629 seconds)
    (30/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.137147271 seconds)
    (31/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116443443 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092008986 seconds)
    (33/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.234948132 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.135891072 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138850738 seconds)
    (36/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17181477 seconds)
    (37/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.200714624 seconds)
    (38/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.087896239 seconds)
    (39/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090471358 seconds)
    (40/286) benchmarking ("sort", Float32, false)...
    done (took 0.148151708 seconds)
    (41/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.247412779 seconds)
    (42/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.112349785 seconds)
    (43/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.08795832 seconds)
    (44/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.092410167 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09383009 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133889258 seconds)
    (47/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.171264633 seconds)
    (48/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095797674 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.14443535 seconds)
    (50/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.130495627 seconds)
    (51/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10374381 seconds)
    (52/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.089874489 seconds)
    (53/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.08263894 seconds)
    (54/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.088749538 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112099566 seconds)
    (56/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.092919575 seconds)
    (57/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135602012 seconds)
    (58/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.183736674 seconds)
    (59/286) benchmarking ("sort", Float64, false)...
    done (took 0.17079813 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.112128641 seconds)
    (61/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.100919303 seconds)
    (62/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100696615 seconds)
    (63/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117263964 seconds)
    (64/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120556402 seconds)
    (65/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.157279086 seconds)
    (66/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.142224294 seconds)
    (67/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065094081 seconds)
    (68/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184409498 seconds)
    (69/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.153937369 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113032926 seconds)
    (71/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.126079563 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.110290924 seconds)
    (73/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089836502 seconds)
    (74/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171906352 seconds)
    (75/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184017498 seconds)
    (76/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093669399 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.210430495 seconds)
    (78/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.110967094 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096427181 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109025235 seconds)
    (81/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.097934249 seconds)
    (82/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187930581 seconds)
    (83/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.184777172 seconds)
    (84/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.136659663 seconds)
    (85/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.094941156 seconds)
    (86/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198507171 seconds)
    (87/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112091817 seconds)
    (88/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111276041 seconds)
    (89/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135009593 seconds)
    (90/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219081542 seconds)
    (91/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.06649127 seconds)
    (92/286) benchmarking ("sort", Int8, false)...
    done (took 0.187390573 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116662113 seconds)
    (94/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087724534 seconds)
    (95/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168884001 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092867474 seconds)
    (97/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.122413476 seconds)
    (98/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.087731229 seconds)
    (99/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.194015974 seconds)
    (100/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121518795 seconds)
    (101/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.194959801 seconds)
    (102/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.149006669 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137525961 seconds)
    (104/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117656786 seconds)
    (105/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.147481198 seconds)
    (106/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.1967058 seconds)
    (107/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120010652 seconds)
    (108/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.096557098 seconds)
    (109/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.185640752 seconds)
    (110/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116463492 seconds)
    (111/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066513475 seconds)
    (112/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.14469699 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 0.181418472 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094756392 seconds)
    (115/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119983793 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093225875 seconds)
    (117/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118252323 seconds)
    (118/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.128800988 seconds)
    (119/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119965876 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.113622601 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095003697 seconds)
    (122/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.151196944 seconds)
    (123/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067207374 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167414061 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08545853 seconds)
    (126/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122183625 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.115999851 seconds)
    (128/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.117968126 seconds)
    (129/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.206544967 seconds)
    (130/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08632718 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110486366 seconds)
    (132/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093145811 seconds)
    (133/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117658855 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108100194 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094644288 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165003804 seconds)
    (137/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.090974112 seconds)
    (138/286) benchmarking ("sort", BigInt, true)...
    done (took 0.229953826 seconds)
    (139/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124556546 seconds)
    (140/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.188605931 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083823536 seconds)
    (142/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.124302846 seconds)
    (143/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.187278702 seconds)
    (144/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.097440015 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118888506 seconds)
    (146/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.06632107 seconds)
    (147/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114464708 seconds)
    (148/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.071850544 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108734079 seconds)
    (150/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097527348 seconds)
    (151/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111213536 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086737504 seconds)
    (153/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117509864 seconds)
    (154/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159363777 seconds)
    (155/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118588965 seconds)
    (156/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.187049537 seconds)
    (157/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.119044355 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.126716995 seconds)
    (159/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.229326049 seconds)
    (160/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.070048579 seconds)
    (161/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091532 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086642801 seconds)
    (163/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.06604421 seconds)
    (164/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.112379289 seconds)
    (165/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109647543 seconds)
    (166/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090087776 seconds)
    (167/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067320439 seconds)
    (168/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137393791 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066657828 seconds)
    (170/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109593878 seconds)
    (171/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.119845344 seconds)
    (172/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068135553 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092295538 seconds)
    (174/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.100963559 seconds)
    (175/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068393122 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067315352 seconds)
    (177/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137625898 seconds)
    (178/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.09025149 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096239624 seconds)
    (180/286) benchmarking ("sort", Float32, true)...
    done (took 0.451431821 seconds)
    (181/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174221287 seconds)
    (182/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.086500193 seconds)
    (183/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.176070156 seconds)
    (184/286) benchmarking ("sort", Float64, true)...
    done (took 0.229598929 seconds)
    (185/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.181510056 seconds)
    (186/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066687619 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.220107189 seconds)
    (188/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111697757 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085480369 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110159047 seconds)
    (191/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067639368 seconds)
    (192/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159258265 seconds)
    (193/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.086914728 seconds)
    (194/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090044034 seconds)
    (195/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067388395 seconds)
    (196/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067043008 seconds)
    (197/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.145616116 seconds)
    (198/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.115461054 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120559829 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.092712516 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111027458 seconds)
    (202/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109355696 seconds)
    (203/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109068466 seconds)
    (204/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.09153012 seconds)
    (205/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066175272 seconds)
    (206/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065936886 seconds)
    (207/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.090814653 seconds)
    (208/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093196209 seconds)
    (209/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110764121 seconds)
    (210/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.158314305 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116947924 seconds)
    (212/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067504258 seconds)
    (213/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118311966 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084203044 seconds)
    (215/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091809438 seconds)
    (216/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085327358 seconds)
    (217/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163538541 seconds)
    (218/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093658131 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110254379 seconds)
    (220/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09054317 seconds)
    (221/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125061051 seconds)
    (222/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.110965928 seconds)
    (223/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08688541 seconds)
    (224/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.075235702 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111670979 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109018645 seconds)
    (227/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068063435 seconds)
    (228/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066569646 seconds)
    (229/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090199631 seconds)
    (230/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.112568307 seconds)
    (231/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115793786 seconds)
    (232/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087631129 seconds)
    (233/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131284535 seconds)
    (234/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.075820795 seconds)
    (235/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118706115 seconds)
    (236/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.202258397 seconds)
    (237/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066761336 seconds)
    (238/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065671562 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110355819 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.084865897 seconds)
    (241/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.091905277 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092105154 seconds)
    (243/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.09048518 seconds)
    (244/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094257616 seconds)
    (245/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065352078 seconds)
    (246/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110060327 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117149572 seconds)
    (248/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069013161 seconds)
    (249/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067179177 seconds)
    (250/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.171411508 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085159067 seconds)
    (252/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137185126 seconds)
    (253/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066116457 seconds)
    (254/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.094397434 seconds)
    (255/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067155674 seconds)
    (256/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110657849 seconds)
    (257/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066980955 seconds)
    (258/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066857091 seconds)
    (259/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.091488847 seconds)
    (260/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099317538 seconds)
    (261/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.142943472 seconds)
    (262/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067117792 seconds)
    (263/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.090701618 seconds)
    (264/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076306011 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.092594033 seconds)
    (266/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114906996 seconds)
    (267/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067522865 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.113733317 seconds)
    (269/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091468429 seconds)
    (270/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120382849 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108662636 seconds)
    (272/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.077008327 seconds)
    (273/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.133900704 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095316851 seconds)
    (275/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065648239 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110745025 seconds)
    (277/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.083860862 seconds)
    (278/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.092272194 seconds)
    (279/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075562183 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115372077 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086998466 seconds)
    (282/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13313264 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.090299548 seconds)
    (284/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128274215 seconds)
    (285/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11034421 seconds)
    (286/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067921676 seconds)
  done (took 36.106636014 seconds)
done (took 37.060681049 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104713075 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148084275 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094200734 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135730192 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123197853 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090665668 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11855983 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096066841 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124385356 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125741884 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097087307 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093192139 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096045741 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120982906 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097211394 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139775689 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123592607 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093121921 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119465634 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.0849172 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11943916 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085050259 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113024687 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069515633 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122435042 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093014307 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117545132 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118644135 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.0880504 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110151555 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090776957 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118048562 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086984016 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124242877 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092769761 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119607129 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095157015 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121403323 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087433279 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111731374 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117028066 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087421325 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116945883 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.0945254 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115841155 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092721389 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118756671 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098596821 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13999039 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114839148 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094456769 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120347448 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095335357 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119007785 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089593217 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120058636 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.089436701 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139671644 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118205595 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091962273 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118420668 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093770639 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116854689 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09381055 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11986826 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120225648 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097673447 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115212124 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096037136 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116304838 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085760988 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119710244 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.0885238 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111751142 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09494848 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122506165 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084013288 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117598162 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092413126 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.116802703 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109676027 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089746707 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111342131 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093248925 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112735448 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070090017 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.08870613 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117525155 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.084436481 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119568944 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11629597 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094139124 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112185079 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098559529 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11076719 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091436748 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111843116 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.085900264 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113183229 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090698961 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110724391 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088106644 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121487975 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087197521 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117974221 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098001327 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111684592 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116575042 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086478505 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109438039 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102097416 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121288609 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086346452 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116279006 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084877966 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118825358 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084717546 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110922943 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08492612 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111285981 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091061664 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112252486 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088119571 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118907156 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123975921 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087195588 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11415485 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090070026 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110152378 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093100277 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110843687 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086820895 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112315804 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077725477 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112559972 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087435233 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118029175 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089582114 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119617778 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088594831 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121137048 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090855799 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117856144 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091326923 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110634157 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073327289 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117120519 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08904578 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112933327 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086325296 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112965085 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086215422 seconds)
done (took 16.946430567 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092054631 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183603542 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150200275 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14191616 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105439926 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113113004 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120643695 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117932361 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114696397 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142098084 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109809482 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133161046 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146380229 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086343902 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112122275 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.08986019 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113037107 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101076138 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146028652 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13314933 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163232944 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085497392 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145459765 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136162705 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119790946 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114228241 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112206689 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090698463 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115939381 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101760662 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132570803 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089412164 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113086491 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132454583 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104173186 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119683496 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086209903 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119444935 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085585523 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112293003 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139757074 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107113139 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117671069 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117017402 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09112028 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114093418 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088515288 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121272394 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097452814 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117041351 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125140969 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155601434 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089991672 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12106908 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085386578 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123263287 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120445783 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089950588 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111311019 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090487534 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111150665 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091037093 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126407166 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141078508 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090487005 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121845231 seconds)
  done (took 8.638148606 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108564725 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139865395 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103587204 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131306792 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111295188 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08718437 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115608351 seconds)
  done (took 1.812287824 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093208892 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133453461 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111100479 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13619366 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131710614 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108521346 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123676866 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088695462 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131560257 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088155149 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134801036 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150994456 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088770088 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121687899 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137909503 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088788904 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136960129 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088030982 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116831163 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109883263 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116652893 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134816907 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090377942 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113326967 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102438566 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114206447 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161336861 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093305809 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114914929 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091248883 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111570385 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165845953 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100888392 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125729109 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086989304 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129881185 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.145300533 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085768637 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129652001 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092154676 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128733248 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.08773068 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115779856 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085072706 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11866502 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123129216 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089413643 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11368349 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091606345 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133523514 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088835525 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127596739 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087265298 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118534912 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088554594 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120551737 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122645536 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090120639 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133232771 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0897057 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131550309 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103871008 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128540485 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129767254 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090737721 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127855605 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102131204 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117722248 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0891306 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117980712 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129739732 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086821142 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11475152 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099643584 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11559743 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111126079 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138570691 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088294105 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.1251628 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113923738 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089127942 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113559919 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11141529 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118039347 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088652062 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121544114 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090251139 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113699703 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086332456 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117993278 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.085688054 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115658882 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090695603 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115266228 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115564462 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108121022 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115244043 seconds)
  done (took 11.861550334 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093136521 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113685867 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092403222 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114319184 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089544794 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114973268 seconds)
  done (took 1.643023737 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.118366611 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118165055 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102143864 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121958866 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15604424 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101827455 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130722837 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122942924 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106931883 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127574047 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127800044 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104036413 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136381488 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120116933 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103007426 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12122897 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.101971733 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126182101 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126567964 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096194213 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13747118 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120324521 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096543384 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131796455 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116602477 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096217764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125170876 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101490468 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128646237 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122033712 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095801235 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118366318 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09464684 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123888804 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.12943291 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094431856 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121823969 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117354602 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100704331 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118089348 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103679186 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122517971 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126613066 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093883816 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124957607 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.11978125 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093825263 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125370182 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10164014 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119943548 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119009241 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094449265 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118464874 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.091939221 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122134866 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12264803 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093027026 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130138441 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094425784 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121301957 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117904834 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092581915 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123988959 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117072953 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10427241 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119508697 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09475079 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121867354 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120130077 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09551144 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119525455 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092096993 seconds)
  done (took 9.249783085 seconds)
done (took 34.216037292 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.703032211 seconds)
  done (took 1.727240008 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.825787794 seconds)
  done (took 1.852326812 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.888442997 seconds)
  done (took 18.9439264 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.508007636 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.592254883 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999882596 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178567093 seconds)
  done (took 3.30543407 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.978660103 seconds)
  done (took 2.02065567 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286748244 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232030407 seconds)
  done (took 1.551163775 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.793831332 seconds)
  done (took 1.834042412 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.376897225 seconds)
  done (took 2.40771915 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331122338 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18422235 seconds)
  done (took 1.55601835 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550035054 seconds)
  done (took 1.588036035 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.397568514 seconds)
  done (took 8.440796663 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269982841 seconds)
  done (took 1.321655617 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303717822 seconds)
  done (took 1.344798717 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.676519869 seconds)
  done (took 4.721457817 seconds)
done (took 53.6525022 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098889673 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126869812 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102100314 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124501669 seconds)
  done (took 1.491197667 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101377469 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121306328 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099036892 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121650775 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125471422 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096353844 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123619725 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100780032 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120939056 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094934835 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121955771 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118798093 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098839851 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122559007 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092425661 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124830597 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098023868 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121645762 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123781084 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097043309 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11885285 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096328348 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125626713 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092758534 seconds)
  done (took 3.702744761 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102465087 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118848548 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09576876 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11825003 seconds)
  done (took 1.487861457 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102332184 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14176153 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138384523 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099375934 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141935604 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134849307 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092131329 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117359018 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093190581 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125377381 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090155212 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148895361 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137576999 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098109739 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128038125 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.08750115 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11784809 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137160337 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098664024 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127215151 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092134243 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125704629 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089684518 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139697247 seconds)
  done (took 3.85395722 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170330248 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128380135 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138592667 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094429326 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16034418 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140855662 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088012071 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14154619 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086613596 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131613425 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117615526 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133056023 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130307393 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08663925 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114701384 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086991646 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12905542 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128569233 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090539571 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12820773 seconds)
  done (took 3.481505632 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099936786 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117971224 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088423471 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116792899 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099014651 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12075909 seconds)
  done (took 1.698985896 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092148908 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113665214 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090149036 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113801876 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094725136 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114886362 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088251355 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114553823 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088895503 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114893494 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088868862 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114958284 seconds)
  done (took 2.286691833 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.501550284 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121564284 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118876613 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088813517 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121036434 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089227905 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128787933 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092008136 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14142536 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087871147 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116574613 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089038823 seconds)
  done (took 2.753385404 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235349731 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126545551 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284965088 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371832898 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157128958 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176138064 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283053241 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163972402 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224231766 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165833817 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201572101 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223036224 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151195632 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189472967 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137944897 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.14390528 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203507333 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246359587 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153468207 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206893973 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226844934 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16674586 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180673545 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150676162 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13751767 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170829729 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09211992 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130046529 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233984098 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175114004 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213529063 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160810395 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144567273 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207741957 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251558002 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220623267 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282995832 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137796638 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148204003 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169093184 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264902203 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138796303 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201337986 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154821317 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131637787 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217313647 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166800247 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17630561 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152652554 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138819264 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194598065 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239513715 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191402532 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138483199 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301490413 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150673777 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.200876755 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193218808 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251552268 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198538735 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211778883 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095333775 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188441917 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220989278 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185788343 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175163283 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.20707578 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146444224 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199905287 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188666708 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163581624 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221235964 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185028079 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140373619 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169298015 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172170096 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17148155 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257051475 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211044515 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094518458 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167077056 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149395262 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133062304 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194618989 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098995227 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239313108 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143697145 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162429752 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215055295 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159910953 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160349356 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201512279 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229928767 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148252056 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082845871 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154860365 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155117405 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189814401 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139933455 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158828925 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16149337 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130211505 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181492656 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124929225 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182803792 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118346423 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174235299 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182420462 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126966151 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160617173 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151142864 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125045491 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201337536 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197955679 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142195018 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131976841 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208985567 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178266366 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150618249 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176677493 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227858864 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116100637 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148442108 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22756776 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24044362 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113770558 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228035172 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155170703 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107596802 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132429037 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180642175 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154103017 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161692997 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133918527 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182249714 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233683548 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097309911 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138709993 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191852758 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133971771 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132618227 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163315099 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147251784 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137757707 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.124902598 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152703881 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208850308 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178083602 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154586949 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165875032 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152624942 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252429903 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140838648 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123259318 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148433393 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120546213 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193023836 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224131415 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103973178 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231084669 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172367163 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201539687 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197988109 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108613539 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176356316 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130381613 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091822741 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221409716 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16729929 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160733751 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194964748 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224405009 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182014713 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182550542 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19936669 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173562117 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164262827 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156789033 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110288828 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160378508 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196966363 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096786631 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144563446 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133728736 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146466264 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114405511 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134948475 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2222102 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170254699 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190310283 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161669942 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148919116 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180850202 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129122238 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174361017 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177324179 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147599275 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196561246 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221857249 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184215245 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144319012 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226494866 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095865457 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124490589 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.113614222 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197328214 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106682864 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136169962 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162897155 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180290325 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178800424 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203516998 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211087869 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200567902 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19066602 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094813508 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169085006 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184367915 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202108196 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.166763618 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143451648 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150066994 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179880463 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158454629 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256142463 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168738876 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176140224 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236289848 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148985855 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10543619 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152266257 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190807452 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152616203 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20464241 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11962707 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142277918 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162639222 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133198549 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160096835 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181844512 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162444811 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217475436 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149724242 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184991477 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127325026 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164787977 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159790544 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165086912 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.0812163 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174605196 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231807274 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148867703 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168333042 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188557046 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132738067 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308346378 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243874128 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195859414 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138174583 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155314974 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16068519 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164096296 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171457793 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17930148 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159078796 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18718357 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159531351 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136870638 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140255435 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12050909 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150604505 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131702247 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148988879 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176984073 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140036559 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185837247 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162757179 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158965773 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17362521 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150483309 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144284443 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149433493 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215782623 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182880457 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238188474 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15128877 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179758275 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233861851 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097780529 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132924803 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132338581 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17865962 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107661513 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221625132 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187676261 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233673509 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184943297 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192653889 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140184476 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120270347 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156531982 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1735939 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208741198 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154101879 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160170887 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230423005 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.117757945 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133602714 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177303555 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315625606 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119069205 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22475334 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079664969 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284411473 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129206268 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131767717 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135557341 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23659737 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136763806 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190912405 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173903592 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171244029 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164937078 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149742248 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191549947 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245397297 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201084536 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179993297 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134302597 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156262544 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175719697 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220345415 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156675849 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112065701 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231967698 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195871264 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195640619 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142456112 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169328641 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167494055 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157774927 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216690435 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105523834 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235060219 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134455846 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193836292 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153510567 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144411881 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175267058 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.216665701 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113834556 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216813856 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184699246 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135488709 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104523464 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19690089 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182785328 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157369132 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098584373 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208884336 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097717377 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222986397 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231114674 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136365561 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155916756 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147855768 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134289961 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153977793 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158063692 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112872809 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167584386 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203039293 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136204058 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190451403 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231790067 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169005106 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173652815 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145846538 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692557317 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132299316 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194556083 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159858487 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235849416 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15101223 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173265339 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159239843 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167852559 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194848456 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161837601 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230887638 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220968009 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179027842 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131073396 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158949174 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162973992 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.1147552 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151863439 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167501628 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158802351 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154593012 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.205618764 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173075442 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105271037 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140551863 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197766868 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159396458 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212648655 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179689407 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108660449 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20158272 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188061725 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134496499 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178212374 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239023507 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140572802 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123824911 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135500504 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156827773 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262112459 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.095010773 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234165624 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184788253 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159337552 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169030671 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146263967 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22303488 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158036033 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186135836 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148681492 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159499213 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156794088 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137860269 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101462879 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155946919 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167484188 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150683403 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159022765 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167388904 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198055641 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122551963 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117151683 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314932561 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194206244 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24459372 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106552234 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13676767 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163053121 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152744252 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175769067 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178567612 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136667096 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13616537 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13586402 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132549047 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112124542 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157152926 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224676309 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165760844 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208442727 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137232225 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278751134 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111589614 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156217302 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117098883 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.102915308 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151162999 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146400476 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158967935 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220444055 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23767767 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149968662 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134825792 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149748263 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097635541 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136747506 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165785534 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165061499 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177944301 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146242343 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081050626 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156102219 seconds)
  done (took 83.327686169 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16515429 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134170309 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148867624 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203542104 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178381397 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268162529 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211352278 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256235777 seconds)
  done (took 2.707903026 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096194422 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147614004 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15800305 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133597451 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09198302 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118512067 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.346698801 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13199982 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118765718 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121129526 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176448717 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094524537 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.554835104 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090822184 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118928553 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109381873 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091776886 seconds)
  done (took 3.838818462 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.476998972 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.752438223 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.516788335 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097012418 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.214097086 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112076582 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.863961335 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201646483 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11699119 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.493853991 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775715544 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.165491091 seconds)
  done (took 18.935425 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115176029 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13612415 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122938489 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152057358 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140668112 seconds)
  done (took 1.814118827 seconds)
done (took 132.420239758 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104516403 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405674213 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07066442 seconds)
  done (took 1.657747164 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.109671316 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137060519 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108808463 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137419463 seconds)
  done (took 1.647270904 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098576917 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126250393 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109224884 seconds)
  done (took 1.482542157 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.322832262 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190722764 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.170934921 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108117891 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129421472 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102669213 seconds)
  done (took 1.497806558 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100079127 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127349146 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096256531 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130314988 seconds)
  done (took 1.608931193 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096339611 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070127807 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101296913 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07442496 seconds)
  done (took 1.495215313 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113737901 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132164605 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102807503 seconds)
  done (took 1.506239302 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130099125 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.13957467 seconds)
  done (took 1.426524121 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.10735909 seconds)
  done (took 1.258488943 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.1194438 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169061135 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189419295 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164838478 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.237165131 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.164874856 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14160984 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.112403483 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131462389 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143445893 seconds)
  done (took 2.730031124 seconds)
done (took 18.244337427 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102950138 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422377238 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411240472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116605197 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72272056 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378720099 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035580736 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145757824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166105395 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092708911 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138602926 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671588126 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028409311 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.37839991 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.985147833 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.37708216 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676024612 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121383242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118882242 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093462794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.022510591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091787471 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122435283 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09217309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705326948 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424546977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095384443 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37458197 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091277166 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125747859 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382264219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123490489 seconds)
  done (took 16.98010441 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.097254347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172892748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09704984 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138890267 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122995667 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093757039 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124410879 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093101918 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178467344 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123359127 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109204523 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121154488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124825529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09474482 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142130678 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091932315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124903403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091840242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121516665 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121111161 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111833735 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120554956 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094233374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121122036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092773841 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134848913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093482983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121082879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119618477 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098628894 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126909716 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093803548 seconds)
  done (took 4.875971129 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142739059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182411267 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12841801 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125896472 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16877488 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123979239 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198838261 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117153022 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182118549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123450951 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139580245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092660168 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156988086 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09314343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143284769 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121318212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096501045 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122877916 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091743589 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123788633 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138925971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093482631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123000786 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093535162 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122899462 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106531901 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124650008 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120458766 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093754775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126581222 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098722307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124126492 seconds)
  done (took 5.21044995 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099983565 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125463757 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10919401 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138879279 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.093813802 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126038621 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096899818 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125097149 seconds)
  done (took 2.082604574 seconds)
done (took 30.301866558 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1134928 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126869354 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106662255 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134599072 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102016242 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132649001 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090298192 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134538656 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132644287 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102531626 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137901286 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091532209 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123125324 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091116043 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135560102 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097406424 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133583494 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101486104 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134230822 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13240706 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094361224 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133076076 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102520415 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134195499 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103409022 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134918371 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136971574 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100187654 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122264079 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094531404 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125183891 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103727744 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123389011 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104676629 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126884046 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096462925 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124194536 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093531719 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134312865 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.131794755 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100794946 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132760543 seconds)
  done (took 6.068197383 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109983831 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139300689 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104802404 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079991589 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117978723 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080392866 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138566112 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078257621 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109386421 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108343229 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073412163 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106635869 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078355463 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101016123 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077614064 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075314999 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108450667 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075829857 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076178669 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105798524 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079863236 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071657958 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108571614 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078655769 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074305433 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110171339 seconds)
  done (took 3.637524804 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101847364 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133767352 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112262538 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183540146 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160576175 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098673677 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13235537 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.108885574 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138573908 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119476179 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09608515 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15011955 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108437032 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129369593 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090355397 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137160425 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134636201 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093688176 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127554967 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110882865 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137881571 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101639487 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141231062 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132147072 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092280852 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121790625 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096965076 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135247809 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096801093 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131035441 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095733001 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125415531 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121699438 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105094555 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125535867 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093641757 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141841348 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101838291 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132012412 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093060495 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129786184 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121047962 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113984675 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161913438 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090338614 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129282147 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094398914 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133496124 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120804729 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110250916 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131175421 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091829618 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12522088 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090627898 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12132419 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106085857 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124179786 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093479101 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132297906 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125584751 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10619161 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125029969 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10868481 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121225145 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099158661 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120910496 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091954292 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121948828 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.112843332 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124143801 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160658369 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092726261 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123855788 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100896429 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13065568 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126904829 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093792694 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136890185 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10271945 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125484497 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101821688 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126755301 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094474882 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140290429 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094320197 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125572913 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092434677 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128944903 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123632562 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09397472 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135657861 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091094444 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125182447 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110140006 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122887239 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092164485 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128336827 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125168986 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092914671 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136352717 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.096869933 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12307177 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101390662 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122469999 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094327017 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132962991 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125726838 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092791538 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125733933 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099180506 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122827161 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092969776 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125190228 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093088889 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132786895 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098176559 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127964928 seconds)
  done (took 14.832137547 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230424011 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.21400518 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204305572 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.292606504 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135683667 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113331496 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209357819 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155822796 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12305585 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159362524 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172912366 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18008466 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167764127 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183369873 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169887225 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093102623 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142094284 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.131742523 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245071382 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256089153 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144134437 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099495465 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161018214 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160295895 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136909182 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.141591304 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109706113 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136269684 seconds)
  done (took 5.857045215 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111408355 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155281685 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097386769 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14541295 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148870812 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091835702 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128377743 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093436814 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135784821 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135159258 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092107762 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129784799 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098925286 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132835736 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122118458 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103149221 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132146051 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095095891 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126053556 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096389752 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132979918 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100633927 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127988484 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090830373 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132562458 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120728588 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085780068 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142530133 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091415146 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145400315 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120321192 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101661905 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136151224 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092478054 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123768874 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.093766545 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125250127 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093873387 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125217546 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090527025 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122719803 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077561047 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122012632 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10614462 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129432691 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079838337 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129453327 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097535293 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.124668713 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119418922 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09704874 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125716302 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096925206 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130752277 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095971715 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123564344 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096769287 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11574113 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101219901 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124949743 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085167925 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090032171 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128617314 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116954874 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101353133 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128063391 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09219891 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125425797 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098113762 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12981045 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094579962 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130029128 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090420158 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12603138 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094967115 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130638277 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095261919 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122466094 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092528654 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124879631 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074856534 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123460891 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074082386 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126589863 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091223909 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122389926 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094815998 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130545289 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137036844 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095600097 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131162919 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094326438 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12268382 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095958454 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113046419 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095938107 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139661746 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140156757 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094140843 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121160454 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10775729 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126007459 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092976368 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10613935 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102925634 seconds)
  done (took 13.009209135 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127679012 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153906351 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094460899 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141955389 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156938539 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157375527 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100966169 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130694442 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095095803 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141462227 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093394134 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132720305 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093314115 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137268352 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157382408 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103998963 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125839872 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108379107 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128899054 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168551161 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111731334 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143489787 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109348642 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12501572 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09788142 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141391633 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161022645 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106736172 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137358132 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140895516 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107795136 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161040221 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111732596 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129731337 seconds)
  done (took 5.540602506 seconds)
done (took 50.111363345 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.269304095 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.504208724 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.263594615 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.300041309 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.290247093 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.283590998 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.277918942 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.281618187 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.539004414 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.267832712 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.50861974 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.971408096 seconds)
done (took 59.956123818 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.271678713 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.398660975 seconds)
    (2/2) benchmarking "String"...
    done (took 1.529833761 seconds)
  done (took 4.120151446 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.623766652 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.242563505 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.533087277 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.26363685 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.283223933 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.555612048 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.085492911 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.654827532 seconds)
  done (took 28.806761338 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.274099504 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.355574053 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.29236638 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.272713611 seconds)
  done (took 6.385906544 seconds)
done (took 49.397752553 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.290347033 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.351349507 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.273486639 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.255026466 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.38030951 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.28933827 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.602337926 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.290451674 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.288479552 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.243837804 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.300928917 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.267377718 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.281361893 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.628702612 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.270709854 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.282323655 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.331097147 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.813860403 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.68381753 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.267243355 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.292702698 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.273304074 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.283153146 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.271224649 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.272164874 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.26710906 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.264968554 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.289520816 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.053062291 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.269241662 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.293093207 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.83057501 seconds)
  done (took 193.243981591 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.265334455 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.401028464 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.462840531 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.314559438 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.765453546 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.467495994 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.401411886 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.869040414 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.2911664 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.272728802 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.47986029 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.269997089 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.565576045 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.247919139 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.297286807 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.270224317 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.439734128 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.619167777 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.320431512 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.446129651 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.271550149 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.408254713 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.334158178 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.507729481 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.28069321 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.349041765 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.281479797 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.272240548 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.477149931 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.366935979 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.302201864 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.336776924 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.918646616 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.128135624 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.272673126 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.289237255 seconds)
  done (took 152.458385754 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.333411818 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.267929906 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.267285822 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.268264023 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.303734385 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.270335642 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.882381207 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.887637577 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.773422316 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.620406661 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.76064574 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.569563863 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.269247781 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.365877252 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.282341815 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.268752595 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.283810918 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.315694185 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.272556394 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.270649669 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.884475832 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.285927536 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.269792115 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.450601644 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.289554187 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304126056 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.661796695 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.301637282 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.294037862 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30541368 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.607679079 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.325639567 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.269833126 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.711649133 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.786176297 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.386640853 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.272311325 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304334554 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.270463096 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.554286567 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.271674827 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.270159662 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.271660617 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.272846997 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.999735938 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.27403937 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.886132829 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.27486968 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.253040823 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.271901982 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.270938201 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.780974364 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.070212278 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.294236778 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.271054248 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.273322132 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.271255197 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.271322732 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.30716103 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.807534612 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.369695564 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.293308133 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.275257377 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305766018 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.271961708 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.274138797 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.294487656 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.827545232 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.330969311 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.486069275 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.88913048 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.276747632 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.371243094 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.394652725 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.272700851 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.273471845 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.272655465 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.272482689 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.272255187 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.385619223 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.272479218 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.717888712 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.4538119 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.293821658 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.769092455 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.376289175 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.271980874 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.704631301 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.2768167 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.272537018 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.050404512 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37287015 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.273844494 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.272895833 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.273255638 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.272150922 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.719746163 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.891434915 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.582951612 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.27735409 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.86264761 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.278335084 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.739809202 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.859498494 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.020136876 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.278964341 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.386819608 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.457158776 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.295303441 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.274953058 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.768747052 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.278175628 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.332727174 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.275429268 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.675251202 seconds)
  done (took 376.190788377 seconds)
done (took 724.41783174 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.898429009 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.888690209 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.002943639 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.880902686 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.844528573 seconds)
  done (took 10.716793779 seconds)
done (took 11.91778963 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.477805035 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.475711464 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.340073197 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.478441756 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.305443596 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.49763801 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.45716284 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.294555853 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.383065526 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.365301967 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.383538402 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.332251519 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.304442026 seconds)
  done (took 19.296994541 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.616142795 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.612726143 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339858517 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.611627752 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.314756101 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.603236593 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.479488449 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.505307384 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.524495964 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312859382 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.291327335 seconds)
  done (took 17.415150183 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.60754031 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.609885997 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.343507371 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.606177595 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.318043305 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.596799248 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.484474117 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.502217461 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.502090899 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.31358807 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.291374609 seconds)
  done (took 17.378250607 seconds)
done (took 55.292233855 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.286162919 seconds)
  done (took 2.490053353 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.324170415 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.489317733 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.305950321 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.290622733 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.286900334 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.287676454 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.29132184 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.286964109 seconds)
  done (took 11.768164376 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.286826068 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.285371899 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.28426728 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.285814197 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.283539441 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.285365982 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.282855551 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.284535814 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.285485929 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.287825978 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.28684177 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.287351637 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.284115168 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.284428249 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.286821126 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.287813616 seconds)
  done (took 21.773551819 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.287804603 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.284510816 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.283672062 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.286146358 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.28464373 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.284063725 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.28560841 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.284607851 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.284383332 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.285145386 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.286302324 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.28475194 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.285642097 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.285360518 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.285161282 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.286504573 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.285588883 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.285455352 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.29077252 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.284430264 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.286669019 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.285655138 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.286165264 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.286045659 seconds)
  done (took 32.061742772 seconds)
done (took 69.29737592 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.57055869 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.038001276 seconds)
  done (took 9.814246651 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.288317726 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.289345111 seconds)
  done (took 3.783926444 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.288263727 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.287838665 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.287828051 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.288304206 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.28839254 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.289460453 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.289010299 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.289872245 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.289104557 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.288453724 seconds)
  done (took 14.092887629 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.288661998 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.290017567 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.28664584 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.288287138 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.289490648 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.28660808 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.289440784 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.289267434 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.289514399 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.286905221 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.29000792 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.286958742 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.290496437 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.287495881 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.290113832 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.28785225 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.287433271 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.288244729 seconds)
  done (took 24.400681568 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.290605317 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.290128032 seconds)
  done (took 3.788799804 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.289429863 seconds)
    (2/7) benchmarking "second"...
    done (took 1.288630183 seconds)
    (3/7) benchmarking "month"...
    done (took 1.287722518 seconds)
    (4/7) benchmarking "year"...
    done (took 1.28897006 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.287977193 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.288064394 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.288286553 seconds)
  done (took 10.227380193 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.291071747 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.46778945 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.540238247 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.902805704 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.292229496 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.293186888 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.133030073 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.294840007 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.295120943 seconds)
  done (took 14.718366736 seconds)
done (took 82.032232755 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.323055885 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.302705291 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.513041206 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.292667632 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.29817143 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.626595536 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.310264021 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.42055105 seconds)
done (took 38.296206808 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.291355789 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.270297612 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.151341848 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.276300831 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.379559234 seconds)
  done (took 19.288599995 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.372227792 seconds)
    (2/2) benchmarking "read"...
    done (took 1.627991567 seconds)
  done (took 5.209435409 seconds)
done (took 31.999414263 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293774733 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.289504528 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.293096397 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.290363083 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.293477635 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.290240221 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.290270243 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.292645806 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.292846801 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.290639767 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.293195846 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.292813896 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292700029 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290293436 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290226665 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292729353 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.29404023 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.290462621 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291013721 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290526823 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.293289268 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293548361 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.29029684 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.290807878 seconds)
  done (took 32.213377994 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.294970344 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.292244642 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.293673661 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.294293238 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.290999251 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.294618169 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.294700366 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.292228817 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.295499536 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.29430375 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292044773 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.29152975 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.294219878 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.292577765 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292442124 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.291787666 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.295084083 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293041263 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294439906 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.292210737 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.294222236 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292616342 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.292512095 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29512073 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.292811003 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292289463 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.294733643 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.293633775 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295138087 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.292345276 seconds)
  done (took 40.015009439 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.301087242 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.303880455 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.295744356 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.296159641 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.294811699 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.295799836 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.295989836 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.294772639 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.294888704 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.296200038 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.294736876 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.295173919 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.296350764 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.296252061 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.295328527 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.296320769 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.296274934 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.29739213 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.298018393 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.296596287 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.297122822 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.297517971 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.297499689 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.297145814 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.297535773 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.296848 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.298091611 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.297718422 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.298000294 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.297929133 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.296538871 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.298465715 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.298067773 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.298274678 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.29808214 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.298609511 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.302088644 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.304804314 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.297972193 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.2977536 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.298141201 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.297781238 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.298352998 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.297944601 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.298579139 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.297608855 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.29775617 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.298177069 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.297461073 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.298529903 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.298203795 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.299322142 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.29943472 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.299008665 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.298770612 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.298670774 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.298646038 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.298796055 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.29894114 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.299849007 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.298881892 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.298593183 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.299858437 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.29881455 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.300291634 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.3005054 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.299882282 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.300356704 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.299970336 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.300979146 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.299746556 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.299054197 seconds)
  done (took 94.679588344 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.30117028 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298091928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.298667106 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.297906586 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298102268 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.299666559 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.299028991 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301566196 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297969293 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.300626864 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300495233 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299772286 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29976703 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300795331 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303233336 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.297887689 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.302166425 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298255763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.302150634 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.302982485 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302332123 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.299779437 seconds)
  done (took 29.820214219 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302491847 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.30575255 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.300445533 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.301216521 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.299023628 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.302446283 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.302071115 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305438335 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30356013 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29950727 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30224686 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303036679 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.301756105 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29851956 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299755055 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303357765 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302039281 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.301000519 seconds)
  done (took 24.652066973 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.305569017 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.300288901 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.303097788 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.30124577 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.300913957 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.302260348 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301614769 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.304708662 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.301299054 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.301320399 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.303351141 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303788328 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.304043693 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300318092 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303389564 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.299902005 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.304273729 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300480416 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303393063 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300722776 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.300766569 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303740579 seconds)
  done (took 29.872015985 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304586389 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305481587 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.30163909 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.302139617 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.301849401 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.303644199 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.304490673 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.301599584 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.305811928 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.301987861 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302691344 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.302344031 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.303972945 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303972248 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.301839461 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30219777 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.303947301 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303626476 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305645573 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.30220075 seconds)
  done (took 27.287268202 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306093857 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30565919 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.306244745 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305820352 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308164993 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.308339102 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305689461 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.308158591 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305701581 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.305671532 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.307211488 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.306657559 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3063212 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.307567322 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306265281 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306042748 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307010021 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30804411 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.307202455 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306922608 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.308173595 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307264971 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.307124227 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.307754548 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.307652678 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.308227003 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.308745191 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.307576085 seconds)
  done (took 37.821426661 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307502995 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.307606945 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.303582789 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.305690933 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.305107232 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.303705913 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.305099855 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.305317367 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308097782 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305375255 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.308708757 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.306811069 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.30763948 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.308384968 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.308837541 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.308163311 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309611698 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.309320059 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30781963 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305147456 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.309384785 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308983222 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.309663741 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305415692 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306103769 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.308743866 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306401764 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.307046974 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308863656 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.306731776 seconds)
  done (took 40.43927857 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.32834947 seconds)
    (2/2) benchmarking "in"...
    done (took 1.32871748 seconds)
  done (took 3.881473517 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.307613001 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308587616 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.309232004 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.306804044 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.307642763 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.30962946 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.308699164 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.308002662 seconds)
  done (took 11.69204704 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.308787476 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.310414659 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.309019331 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.30874326 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.310316734 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.310599156 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.316197671 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.333215526 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.310098341 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.311816491 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.317239248 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.316811422 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.311772139 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.309031793 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.309979914 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.311339066 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.312005793 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.3103855 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.310584982 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.311092006 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.310930149 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.312888862 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.311364423 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.309370621 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.312048629 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.320268777 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.336321895 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.31180218 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31007835 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.313547048 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.31052381 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.309062953 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.309917857 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.312248488 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.318407871 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.312895587 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.318717832 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.33269107 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.317061822 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.331575363 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.311637678 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.310322442 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.312609574 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.312476408 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.313161595 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.313030899 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.313837393 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.311719315 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.312884526 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.314561375 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.31894101 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.311930837 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.310630571 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.314659497 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.31301436 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.318636658 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.335223453 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.316409962 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.321842405 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.321380942 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.346823004 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.34105935 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.31556631 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.314342205 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.32266243 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.338138042 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.319132315 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.334336692 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.311017345 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.314939615 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.318929258 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.348395316 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.341924193 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.314461992 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.314994689 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.314169407 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.314123489 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.315171754 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.320336184 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.338062961 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.315620905 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.316325984 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.323527364 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.336737284 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.313724793 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.314555561 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.315659861 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.316025006 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.316475871 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.325189746 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.337546199 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.316624191 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.314392442 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.31524557 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.315930876 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.317456102 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.314867089 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.315729278 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.3142255 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.316925898 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.316256265 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32012018 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.323695042 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.316596781 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.316328787 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.322208151 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.338556234 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.316234147 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.321180493 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.316335426 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.316955875 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.31746546 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.321632226 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.314459254 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.320127141 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.325340447 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.316503261 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.317362559 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.316635793 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.31754561 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326925263 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.342268417 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.318294323 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.316588289 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.321812219 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.329766316 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.318204597 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.319291166 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.318692093 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.316546173 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.315271009 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.31763374 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.319559601 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.317599823 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.31808176 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.318183619 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.316617361 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.318047913 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.317673415 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.3187266 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.319358327 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.317161044 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.319124553 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.319870679 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.318673184 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.320342176 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.325078398 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.340177012 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.318537948 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.318318521 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.317330996 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.320420038 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.319565035 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.320308443 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.319447441 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.319609761 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.320183812 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.320284484 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.32118011 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.319842647 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.3205185 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.321337848 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.323750098 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.320753681 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.324721782 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.319394805 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.317549821 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.31998314 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.321296235 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.320708902 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.320684376 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.317912237 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.323188973 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.328348703 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.321263553 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.321212826 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.321730518 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.319911945 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322453319 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.320659595 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.323578308 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.329496015 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.321625923 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.326754241 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.343825325 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.323057064 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.321413824 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.321849472 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.320942648 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.322294442 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.325603465 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.329484174 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.332007255 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.347451061 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.32343456 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.326422962 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.322151512 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.325519086 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.325096045 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.322553066 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.323119493 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.322525023 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.323815577 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.323407918 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.324500478 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.323533551 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.322932332 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.323527049 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.323182663 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.323768915 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.324399618 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.324526136 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322252761 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.322155744 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.322043895 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.323986154 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.322870983 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.321220055 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.321881275 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.32342784 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.324059932 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.324501618 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.328614168 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.322110768 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.325121032 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.324554896 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.322936047 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.322762662 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.325066626 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.324388949 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.323606401 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.330405789 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.346707928 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.325221447 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.330829565 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.347470485 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.324418708 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.32592129 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.326518509 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.323471073 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.328133563 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.334155024 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.32642594 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.32628177 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.326682759 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.324675467 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.326538247 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.328804148 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.345929012 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.324720014 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.327766297 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.327048037 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.323833405 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.326473818 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.326663521 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.325996783 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326808818 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.328954726 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.326219654 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.326375972 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.327632412 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.327164126 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.326629266 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.329633529 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.335337471 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.330213192 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.326184706 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.327045499 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.327042152 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.331193628 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.325955371 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.327543897 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.325857138 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.338878915 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.355821637 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.331974508 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.349092155 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.329068083 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.332186646 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.351425712 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.331593648 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.327633861 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.327343893 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.326399134 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.326124633 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.325700611 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.327242523 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.327640454 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.329260476 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.329071255 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.333047349 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.328268391 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.327435631 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.328605687 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.328951909 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.327841009 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.328139412 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.329134081 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.329590433 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.329579927 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.32623138 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.327861024 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.33426911 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.349778373 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.328981411 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.328232776 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.328140604 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.327290489 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.329618779 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.330260033 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.3324319 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.337831573 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.332247411 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.336329378 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.330991863 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.337255888 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.329744312 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.334747048 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.339124153 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.328469845 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.328551789 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.329509877 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.331161392 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.336650078 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.352270298 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.332782814 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.335544524 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.329780786 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.332351026 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.331466675 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.331240815 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.33078562 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.332662363 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.337751118 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.353679578 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.336658999 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.330988729 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.329529388 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.333192754 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.333079637 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.330534259 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.334774115 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.332284901 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.330668568 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.333422255 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.331452157 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.329599395 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.332552506 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.333485465 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.328707503 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.330792031 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.337228245 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.354459823 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.337118953 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.33232829 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.338799792 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.354198249 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.338278496 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.354918394 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.332964696 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.334011169 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.333301303 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.333686348 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.333206076 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.334143461 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.333595987 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.334499809 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.33799471 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.333669339 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.335894824 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.333526022 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.334968594 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.333438037 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.342061875 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.358220924 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.337339801 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.338671653 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.329297518 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.336050376 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.339879101 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.334226307 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.334774248 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.338394209 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.344861272 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.343624307 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.336301669 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.334212644 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.336678458 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.334193608 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.337032671 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.336147346 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.33421583 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.337587264 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.337008785 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.334533741 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.337485884 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.335308581 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.335740943 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.336143311 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.337980112 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.345806717 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.356266001 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.337421157 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.337090224 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.33824251 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.334406305 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.336108464 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.33520304 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.336267723 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.338284235 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.336393057 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.344677021 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.34255747 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.337607482 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.335658354 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.335909264 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.336417849 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.337556013 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.336989023 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.337750291 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.334525328 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.337358652 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.335875226 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.339192725 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.335536948 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.337363225 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.337064975 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339612536 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.337778489 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.346686085 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.336017158 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.335075781 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.339029137 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.335597238 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.33729971 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.338442382 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.343863447 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.360607403 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.350428202 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.348062676 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.343080361 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.33857437 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.341431452 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.346850277 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.336101619 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.338939495 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.337990871 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.33928929 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.341783311 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.34116252 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.337930274 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.342695115 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.359384151 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.339406019 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.34562854 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.361922037 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.336827188 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.340859202 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.343176557 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.337729251 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.3381151 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.342463226 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.339883032 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.346108544 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.36290432 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.341393617 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.339172618 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.338890847 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.340994322 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.344340781 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.339359776 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.340563403 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.338266615 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.341131868 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.341987218 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.3424491 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.338148758 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.337606284 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.340000619 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.344698709 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.347596503 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.339711543 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.342808019 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.341020203 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.340339845 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.341594704 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.342076126 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.340216632 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.338760699 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.33917396 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.341484933 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.339298277 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.344664006 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.340633501 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.342048332 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.343289192 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.343951107 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.344604109 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.349862563 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.349427965 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.339412728 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.342203971 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.341701806 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.343824689 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.344410856 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.343259159 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.339944396 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.342046985 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.343401764 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.343198302 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.342129871 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.345956927 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.35734764 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.364246828 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342287255 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.341589056 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.345303067 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.341381593 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.341373321 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.341001984 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.344340789 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.345944277 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.351748254 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.3451587 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.347104183 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.36441637 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.345249737 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.349328984 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.34584744 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.349708215 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.346018648 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.346519967 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.343109824 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.349211213 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.359100762 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343063359 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.355608427 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.372057803 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.366608551 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.345249916 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.344928927 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.343947335 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.344812143 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.346578908 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.345750091 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.345617214 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.344969974 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.344645873 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.345393164 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.349318466 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.344470581 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.347214961 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.344702682 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.345995889 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.345251158 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.341832729 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.34645424 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.348078553 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.348973993 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.345836394 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.347471764 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.345545969 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.35573972 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.374168944 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.34653716 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.345136897 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.344971997 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.348209786 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.348785691 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.356868583 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.354904301 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.34550184 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.348201575 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.347309729 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.346699041 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.345881895 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.347124268 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.344946705 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.344060755 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.345065224 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.356847115 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.371204625 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.349445597 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.346761399 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.346702231 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.348016563 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.348251212 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.347273101 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.348588569 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.349583609 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.349992727 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.352851123 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.349844972 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.349491105 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.353473218 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.356670031 seconds)
  done (took 795.04836789 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.349648844 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.345479843 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.346725378 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.347314262 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.34548099 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.347434684 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.346358281 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.346608548 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.346552963 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.348289178 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.346988746 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.347115159 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.346552851 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.348920849 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347923934 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.349290757 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.347691687 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.346926315 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.348882829 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348999883 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.34891829 seconds)
  done (took 29.562255596 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.352771295 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.348213513 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.348373858 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.352454637 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348401761 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.354390831 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.349168267 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350740046 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.351411913 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351466535 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.351939416 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353927968 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.352498336 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.349462658 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354195891 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354958977 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.356274298 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.352417517 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.35239153 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.350358934 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35149303 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.350785243 seconds)
  done (took 31.003034501 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.354962231 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.353717565 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.353597652 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.349453318 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.352369326 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.351366319 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.352786126 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.352415153 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.353553786 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.350958054 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.349593472 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.357004662 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.356522849 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.358630456 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.354060831 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.35298278 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.501911838 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.355150757 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.352989495 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.351631691 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.351077088 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.353806104 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.371594012 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.352788513 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.352450906 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.354799642 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.353435308 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.354237995 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.353479484 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.357422077 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.361438458 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.355780537 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.355036391 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.354302823 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.352550259 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.357803177 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.357487662 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.356560642 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.352562505 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.355189524 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.366630321 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.380163534 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.357246891 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.362596102 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.37691349 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.357502203 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.358738444 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.36638096 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.354432254 seconds)
  done (took 67.87847189 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.357420088 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.359055482 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.353485044 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.357389785 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.360847242 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.360756166 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.359194832 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.35516916 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.35744827 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.357762489 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.354640436 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.358177936 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.357262795 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.360757699 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.357836897 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.357826132 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.353400351 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.353849149 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.356865135 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.354666619 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.357908899 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.361044716 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.357755122 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.355998392 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.356547048 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.357885358 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.355963744 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.358751773 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.360536151 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.359274085 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.360406903 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.358012664 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.358272713 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.356387298 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.354556687 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.360710081 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.362919881 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.358627767 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.362766364 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.357570821 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.358319112 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.362373775 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.363076201 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.361977863 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.36002607 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.358110823 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.35852809 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.361465615 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.359336701 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.363590401 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.362319387 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.36210165 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.360734977 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.357056028 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.364088875 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.362568383 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.362751127 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.361997293 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.361818321 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.358428594 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.359796175 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.361636218 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.362681375 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.364435698 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.363306477 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.358498089 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.359328416 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.362009335 seconds)
  done (took 93.700374825 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.365018947 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.361522429 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358812853 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362847181 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.362463412 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.360818012 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.363263288 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.362565496 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.357789367 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.361759848 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.361817006 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.362213768 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.359416485 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.360733461 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.362126982 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.359903415 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.361667476 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.358242329 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.358422596 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357903174 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.360742416 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.361278474 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.361180094 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.361880849 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.361493402 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.359470301 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.357987677 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.360436387 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364060541 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.362000185 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.360589431 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.361676648 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.361733159 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.360219191 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.362102209 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.362437637 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.363950677 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.361541492 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.360870559 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.359085748 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.361236093 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.360388259 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.361198552 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.363681297 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.362711822 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.361705827 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.361344051 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.361951056 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.36219103 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.362479324 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.362228917 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.362304068 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.360329614 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.364235194 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.364348802 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.361018097 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.363356256 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.361087263 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.362378013 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.365989495 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.360948862 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.361628707 seconds)
  done (took 85.687171044 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.36555124 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.363090368 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.361978551 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.358543209 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.363219885 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.361952757 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.366306606 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.36715317 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.367734842 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.367658847 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364824783 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.362273757 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363869886 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36565039 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.365832074 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363671009 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.363579648 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.364350946 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.368001794 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.364766024 seconds)
  done (took 28.564474437 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.365859073 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.368053392 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.364843658 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.363515409 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.367500938 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.361572426 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.3629016 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36721506 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36756635 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.369450822 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.366746322 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.368424197 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363582609 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.36289105 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.370108191 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.364698244 seconds)
  done (took 23.132591146 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.366411189 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.370198538 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.367660583 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.368168795 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.365584805 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.366245823 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.368076377 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.363312943 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.365325881 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.367611287 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.368318488 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.36585609 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.365219921 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.364781766 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.363678033 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.367910488 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.362009605 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.365704483 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.365447203 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.36732137 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.364795537 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.367230487 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.370756848 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.36486588 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.367782274 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.36234041 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.366329781 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.367515889 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.366450519 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.371280087 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.360186914 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.36597584 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.37060468 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.364881243 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.369722668 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.365961856 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.371451455 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.371588493 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.370896608 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.369984348 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.370829679 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.368137232 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.371758829 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.370631507 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.370850757 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.371069153 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.369639951 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.370195065 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.370719015 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.366802009 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.370417693 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.370386137 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.370491954 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.370758788 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.369287145 seconds)
  done (took 76.50770367 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.372855415 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.370156249 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.369273812 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.368602773 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.37208743 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.371491718 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.371805965 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.368968118 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.36929701 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.371883654 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.372101392 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.374609821 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.366961255 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.371508875 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.372115621 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.372183693 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.367502998 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.369506421 seconds)
  done (took 25.953720131 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.368882277 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.369974119 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.37213327 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.37268814 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.369900894 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.371745629 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.369108501 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.371264345 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371881688 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.370254535 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372958303 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.37196888 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.373236855 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.374715848 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.371996144 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366970644 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.369895865 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.371592949 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.367900455 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.369664474 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.372170046 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.37180077 seconds)
  done (took 31.443274324 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.37329664 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.371556814 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.371757921 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.388140689 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.390874246 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.396481357 seconds)
  done (took 9.574915418 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384057148 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374389167 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.373093612 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375699127 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374480171 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370236952 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373537082 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371407636 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376727477 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371082811 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369907052 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376235186 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373290052 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370423251 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375196839 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374914838 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370622187 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371898207 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374482846 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375242939 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372442359 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375575422 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372901923 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372360307 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369340141 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372512366 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372917955 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374127693 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372993018 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374867921 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375445324 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372259629 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374840761 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372153276 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377049636 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374197327 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372577304 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376205284 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377664699 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.373766579 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.377450508 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378268828 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37746003 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373645871 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376229252 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370702008 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374499607 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376288024 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375036961 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377974771 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378750421 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374127917 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376267421 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377389692 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377650256 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377293984 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377230002 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375107113 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37758484 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374443054 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375826099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380358925 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378370652 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376666811 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377886334 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374916246 seconds)
  done (took 92.049526529 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375804052 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.376151216 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374210333 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377775843 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375881496 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375905875 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375886983 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374443943 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377943823 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376901762 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380588244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376154865 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376024505 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375579963 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376565984 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377581274 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376628904 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377438218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376355733 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381666342 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378198926 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378176121 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379142356 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37752014 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378221645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379123131 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37777531 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380286734 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376157197 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377316107 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380450871 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378852216 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378339401 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.378832539 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380178897 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378977505 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377286246 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38029266 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377691037 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382549122 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376249717 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381000239 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375316844 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376193377 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37891034 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376849917 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378989595 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379606376 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379534982 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377542068 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381210441 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378588759 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38010556 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379193023 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377579527 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379827304 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380222783 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376446117 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378611441 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382369235 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379654282 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379142105 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382337786 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379063295 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380386777 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380191932 seconds)
  done (took 92.256019541 seconds)
done (took 1855.946624624 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.414203457 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.486410903 seconds)
  done (took 14.190231988 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.54479443 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.496414495 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.377798506 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.374151351 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.377792367 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.398856696 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.373648748 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.375798274 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.376649844 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.378510231 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.38048219 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.59766999 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.428662978 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.378931299 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.381992487 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.46980256 seconds)
  done (took 44.005039454 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.408571687 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.384688122 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.516545579 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.407933717 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.408067578 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.588238899 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.444169934 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.386025159 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.584241016 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.428512785 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.21026227 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.411886409 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.382255959 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.683369674 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.409451227 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.590016513 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.65839526 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.114520777 seconds)
  done (took 32.308842754 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.903433996 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.395230354 seconds)
  done (took 9.591090012 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.408127892 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.389143238 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.384274684 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.384828934 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.378647356 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.380764449 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.384683462 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.377047463 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.553367897 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.53357464 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.387867355 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.392532205 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.402634326 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.390078302 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.383768426 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.42494447 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.565739201 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.382917486 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.381210329 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.391218425 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.385479578 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.477460617 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.429029202 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.386780865 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.530543037 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.561034783 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.391878718 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.3941651 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.544153994 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.3836732 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.386411109 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.389182346 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.390076753 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.006199691 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.842883958 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.394539825 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.424100982 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.395037239 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.386025453 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.534338976 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.384521235 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.393248124 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.382494576 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.837285409 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.536238739 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.511631844 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.772767854 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.405245926 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.387717285 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.454153081 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.385340532 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.386953407 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.42289675 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.207609587 seconds)
  done (took 115.68075267 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.405327108 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.769104768 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553460363 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.404064121 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.087383251 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.02075647 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.39647652 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.716465633 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.451292815 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.374856183 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.677684589 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.926706915 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.401693065 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.411580107 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.055941761 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.439867752 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.380478156 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.140494202 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.406363431 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.382692811 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.91543404 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.393511436 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.377417637 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.547397415 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.420072153 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.886091532 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.94319809 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.884617839 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.407553025 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.380200838 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.896521771 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.402831309 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.398580972 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.380767606 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.670407041 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.793863082 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.785943195 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.401453851 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.408463293 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.38143965 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.407592002 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.883679671 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.788287891 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.401439696 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.406730202 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.898721612 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.400811516 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.391680813 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.387807981 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.587791843 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.052819149 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.384912823 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.941889211 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.381967067 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.764985358 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.455399756 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.430939312 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.92167348 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.406589376 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.501355969 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.426823046 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.382877925 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.386032313 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.385581822 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.388603987 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.791352661 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.523410198 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.382922644 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.788682604 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.9103422 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.405922207 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.950590303 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.316777041 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.407321941 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.507667524 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.384925843 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.987584431 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.941759921 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.40954188 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.382260086 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.776224947 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.408574714 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.692458353 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.421354264 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.388508706 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.93227481 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.396448321 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.394821915 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.380880448 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.384433452 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.018713037 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.388554739 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.694642034 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.441519048 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.385460302 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.385821851 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.407011546 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.383757978 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.389684457 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.387782145 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.957651262 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.413361415 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.532490314 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.410345388 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.388503436 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.386105665 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.384249504 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.387550852 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.610884414 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.922289091 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.412466688 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.388704529 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.384679903 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.386712022 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.546171638 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.388349681 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.746909753 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.4117049 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.384199499 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.39857141 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.093476197 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.42490111 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.38473235 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.394578903 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.312640702 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.599772826 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.414409829 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.382957997 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.388725715 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.411216625 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.875292057 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.410960805 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.445562293 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.394287249 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.143161776 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.445210907 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.407042733 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.715933825 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.398135626 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.387520815 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.391240526 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.39173354 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.691668324 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.683998742 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.443250015 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.386660461 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.413052087 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.11737561 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.420222112 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.529825063 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.415121134 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.480541553 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.589932505 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.794928671 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.39097576 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.060482658 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.389101878 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.609808558 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.391867039 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.700302817 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.930122286 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.410944386 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.401650959 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.144942726 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.148409667 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.195320889 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.389631366 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.695480127 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.394886947 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.877576268 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.391629364 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.39287233 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.830973241 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.396406711 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.392856989 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.391002553 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.395566734 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.536034887 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.569219416 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.950234155 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.395220912 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.901290615 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.425337377 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.390120615 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.395826023 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.390838073 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.741112486 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.472112448 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.397209556 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.398850264 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.389533834 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.400217361 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.913982673 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.350629982 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.396006254 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.548013852 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073528554 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.414080368 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.402644904 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.025046719 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.676098301 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.959157457 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.48066511 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.753436248 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.41730329 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.434085696 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.027860782 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.428352094 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.962321319 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.416866543 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.391951607 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.02988168 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.41644462 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.752407305 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.391102325 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.391048353 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991973236 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.416151312 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.392386158 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.854107868 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.414410489 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.663287163 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.396129327 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.404363013 seconds)
  done (took 1126.981350005 seconds)
done (took 1344.049014191 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.395172873 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.39067161 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.37561472 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.397280375 seconds)
  done (took 26.867727343 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.409153922 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.401738932 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.403090795 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.399641264 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.402231755 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.39934156 seconds)
  done (took 9.726109923 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.681156614 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.390238944 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.398954745 seconds)
  done (took 19.781962544 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.633018382 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.833026087 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.805592883 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.90299766 seconds)
  done (took 11.488219465 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.402181816 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.40076966 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.401669694 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.401642758 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.404295986 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.404890316 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.403821557 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.403463927 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.403448144 seconds)
  done (took 13.936480262 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.402615987 seconds)
done (took 84.512662369 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.674122433 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.847796734 seconds)
    (3/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.504857142 seconds)
    (4/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.164989467 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.451958092 seconds)
    (6/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.478161908 seconds)
    (7/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.460398388 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.681484456 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.452996306 seconds)
    (10/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.152682046 seconds)
    (11/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.951503046 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.440313136 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.422750244 seconds)
    (14/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.376130455 seconds)
    (15/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.339880844 seconds)
    (16/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.524096288 seconds)
    (17/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.283743424 seconds)
    (18/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.410439913 seconds)
    (19/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.657517199 seconds)
    (20/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.378921147 seconds)
    (21/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.433600146 seconds)
    (22/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.425114161 seconds)
    (23/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.854102874 seconds)
    (24/286) benchmarking ("sort", Int8, true)...
    done (took 6.400714105 seconds)
    (25/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.984269968 seconds)
    (26/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.413160282 seconds)
    (27/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.048820437 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.399328781 seconds)
    (29/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.435720828 seconds)
    (30/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.918804034 seconds)
    (31/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.428003068 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.532268633 seconds)
    (33/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.38085701 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.124539429 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.228925176 seconds)
    (36/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.493446465 seconds)
    (37/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.395634433 seconds)
    (38/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.46705899 seconds)
    (39/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.381776148 seconds)
    (40/286) benchmarking ("sort", Float32, false)...
    done (took 5.465854228 seconds)
    (41/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.576251135 seconds)
    (42/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.67746654 seconds)
    (43/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.750982546 seconds)
    (44/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.378345386 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.53318424 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.671085505 seconds)
    (47/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.38568606 seconds)
    (48/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.481092208 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.415076972 seconds)
    (50/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.456936076 seconds)
    (51/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.158531583 seconds)
    (52/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.589099577 seconds)
    (53/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.396396466 seconds)
    (54/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.518390606 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.456489593 seconds)
    (56/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.496649598 seconds)
    (57/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.28624225 seconds)
    (58/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.436846074 seconds)
    (59/286) benchmarking ("sort", Float64, false)...
    done (took 5.852914535 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.419451063 seconds)
    (61/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.705965129 seconds)
    (62/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.950627856 seconds)
    (63/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.419568165 seconds)
    (64/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.415982571 seconds)
    (65/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.379274492 seconds)
    (66/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.047198735 seconds)
    (67/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.954217657 seconds)
    (68/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.250663172 seconds)
    (69/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.876868273 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.412054354 seconds)
    (71/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.486555078 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 5.708828885 seconds)
    (73/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.470440254 seconds)
    (74/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.404380639 seconds)
    (75/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.506473099 seconds)
    (76/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.35221201 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.742853064 seconds)
    (78/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.537503151 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.782681569 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.441186803 seconds)
    (81/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.397523247 seconds)
    (82/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.533355234 seconds)
    (83/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.751724463 seconds)
    (84/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.424296523 seconds)
    (85/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.381233079 seconds)
    (86/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.404427608 seconds)
    (87/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.434681426 seconds)
    (88/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.400653957 seconds)
    (89/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.109740304 seconds)
    (90/286) benchmarking ("sort", BigInt, false)...
    done (took 6.40251984 seconds)
    (91/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.627641043 seconds)
    (92/286) benchmarking ("sort", Int8, false)...
    done (took 4.521062406 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.374510865 seconds)
    (94/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.502638232 seconds)
    (95/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.188554593 seconds)
    (96/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.640363393 seconds)
    (97/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.456348079 seconds)
    (98/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.076255638 seconds)
    (99/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.405664527 seconds)
    (100/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.430451863 seconds)
    (101/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.385596106 seconds)
    (102/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.934990963 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.255884523 seconds)
    (104/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.399953988 seconds)
    (105/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.755800081 seconds)
    (106/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.049599401 seconds)
    (107/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.407223044 seconds)
    (108/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.491797117 seconds)
    (109/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.993817736 seconds)
    (110/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.51765454 seconds)
    (111/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.383345189 seconds)
    (112/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.840601539 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 1.958325637 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.44876593 seconds)
    (115/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.505077435 seconds)
    (116/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.679294345 seconds)
    (117/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.430859728 seconds)
    (118/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.384293601 seconds)
    (119/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.479976361 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.259688899 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.68243014 seconds)
    (122/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.802432667 seconds)
    (123/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.386411806 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.410346626 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.363458347 seconds)
    (126/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.526086812 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.504746488 seconds)
    (128/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.362648529 seconds)
    (129/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.226262162 seconds)
    (130/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.435793633 seconds)
    (131/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.832471545 seconds)
    (132/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.454864188 seconds)
    (133/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.982731652 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.260661593 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.428700681 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.384843882 seconds)
    (137/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.505866414 seconds)
    (138/286) benchmarking ("sort", BigInt, true)...
    done (took 6.402286896 seconds)
    (139/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.951258828 seconds)
    (140/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.375651111 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.175862669 seconds)
    (142/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.517502453 seconds)
    (143/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.880652694 seconds)
    (144/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.427924454 seconds)
    (145/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.42848103 seconds)
    (146/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.707800345 seconds)
    (147/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.493530785 seconds)
    (148/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.381552719 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.432827215 seconds)
    (150/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.412819572 seconds)
    (151/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.509103968 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.843275713 seconds)
    (153/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.454406755 seconds)
    (154/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.497485795 seconds)
    (155/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.451124709 seconds)
    (156/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.388179035 seconds)
    (157/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.834652497 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.55588463 seconds)
    (159/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.407613022 seconds)
    (160/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.382279999 seconds)
    (161/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.382208497 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.851122784 seconds)
    (163/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.134542265 seconds)
    (164/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.411936702 seconds)
    (165/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.953436936 seconds)
    (166/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.472047158 seconds)
    (167/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.382645822 seconds)
    (168/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.189726583 seconds)
    (169/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.072643082 seconds)
    (170/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.510763943 seconds)
    (171/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.414844867 seconds)
    (172/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.767413754 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.456076734 seconds)
    (174/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.273491873 seconds)
    (175/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.385856947 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.426611329 seconds)
    (177/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.498595458 seconds)
    (178/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.112631086 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.454051941 seconds)
    (180/286) benchmarking ("sort", Float32, true)...
    done (took 6.416535512 seconds)
    (181/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.400359216 seconds)
    (182/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.402969685 seconds)
    (183/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.437436706 seconds)
    (184/286) benchmarking ("sort", Float64, true)...
    done (took 6.407758847 seconds)
    (185/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.405025139 seconds)
    (186/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.411638628 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 5.546946203 seconds)
    (188/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.516899268 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.465130062 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.199635277 seconds)
    (191/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.394296809 seconds)
    (192/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.385142459 seconds)
    (193/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.55956243 seconds)
    (194/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.388421067 seconds)
    (195/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.401028831 seconds)
    (196/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.393074547 seconds)
    (197/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.135790764 seconds)
    (198/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.612039936 seconds)
    (199/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.074068422 seconds)
    (200/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.630177767 seconds)
    (201/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.416818501 seconds)
    (202/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.424117214 seconds)
    (203/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.429424622 seconds)
    (204/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.388549605 seconds)
    (205/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.348768587 seconds)
    (206/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.393587675 seconds)
    (207/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.233037782 seconds)
    (208/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.459731943 seconds)
    (209/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.412872665 seconds)
    (210/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.425329673 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.434682761 seconds)
    (212/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.401936947 seconds)
    (213/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.436623921 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.454845524 seconds)
    (215/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.749448294 seconds)
    (216/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.25086232 seconds)
    (217/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.408550888 seconds)
    (218/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.422187034 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.79602155 seconds)
    (220/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.518438647 seconds)
    (221/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.171567335 seconds)
    (222/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.546879511 seconds)
    (223/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.417437607 seconds)
    (224/286) benchmarking ("map", abs, Int64, true)...
    done (took 3.007694457 seconds)
    (225/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.414892695 seconds)
    (226/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.28324096 seconds)
    (227/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.389390296 seconds)
    (228/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.411808558 seconds)
    (229/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.007816473 seconds)
    (230/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.153299116 seconds)
    (231/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.275797437 seconds)
    (232/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.586860655 seconds)
    (233/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.090171169 seconds)
    (234/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.305556078 seconds)
    (235/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.420719408 seconds)
    (236/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.26853276 seconds)
    (237/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.390520581 seconds)
    (238/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.431146042 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.654800174 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.397425107 seconds)
    (241/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.115247412 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.443115522 seconds)
    (243/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.044247044 seconds)
    (244/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.440855613 seconds)
    (245/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.484936485 seconds)
    (246/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.082283001 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.788025079 seconds)
    (248/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.215954801 seconds)
    (249/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.381008928 seconds)
    (250/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.440358138 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.08641294 seconds)
    (252/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.4774789 seconds)
    (253/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.399107818 seconds)
    (254/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.413409744 seconds)
    (255/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.789965075 seconds)
    (256/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.306594284 seconds)
    (257/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.389990863 seconds)
    (258/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.2105259 seconds)
    (259/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.610160876 seconds)
    (260/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.058459422 seconds)
    (261/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.613675314 seconds)
    (262/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.75065285 seconds)
    (263/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.398660402 seconds)
    (264/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.850568641 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.503163752 seconds)
    (266/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.507700343 seconds)
    (267/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.418764859 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.496485853 seconds)
    (269/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.442111028 seconds)
    (270/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.418866863 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.545281212 seconds)
    (272/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.82493133 seconds)
    (273/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.419797452 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.235896793 seconds)
    (275/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.446663441 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.394443123 seconds)
    (277/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.649550676 seconds)
    (278/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.411662857 seconds)
    (279/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.135355853 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.479045327 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.147408858 seconds)
    (282/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.28775893 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.4414629 seconds)
    (284/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.995144657 seconds)
    (285/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.477742715 seconds)
    (286/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.087474171 seconds)
  done (took 977.197143474 seconds)
done (took 978.509914967 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.449650523 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.442674236 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.431267974 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.444301646 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.541117225 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.456904573 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.436340187 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.430327555 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.473352091 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.473491976 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.424382021 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.452551628 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.427160448 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.429927077 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.42229119 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.443107265 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.652471215 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.432188064 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.440416934 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.437102855 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.442204057 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.4235322 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.47333205 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.455308361 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.428405684 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.428854401 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.427564129 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.442379008 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.53708587 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.427905724 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.430775046 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.438383216 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.650107042 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.431389971 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.422299482 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.44790079 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.437612502 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.435657883 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.432748834 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.458518399 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.137429189 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.448973786 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.431502487 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.427240181 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.429632744 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.430349576 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.429522213 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.43316738 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.443175716 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.442757549 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.139634188 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.463772214 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.432235635 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.428679478 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.439008114 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.428739037 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.433521777 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.443878149 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.447620273 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.447916484 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.641865299 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.436280776 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.429687606 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.444653246 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.438466635 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.186569538 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.445945188 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.4343125 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.13576349 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.456250485 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.184067083 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.458405926 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.429685805 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.444220912 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.461596526 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.653333566 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.430467778 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.430030633 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.436935142 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.427531685 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.439724147 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.441800296 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.432875758 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.432581559 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.446957094 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.458001557 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.438752911 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.429236792 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.439486277 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.449233749 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.436611663 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.443292507 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.435605649 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.422351663 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.440187575 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.432835108 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.432762654 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.432351394 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.435968766 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.441062539 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.137314859 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.465181036 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.426356635 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.425345232 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.429677082 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.444756055 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.134754286 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.453872406 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.451352969 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.478467178 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.429107268 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.641621566 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.438957966 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.448219055 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.44019351 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.43667286 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.426045029 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.642329057 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.150524119 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.464963914 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.434267173 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.429161325 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.452063305 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.434652889 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.426912532 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.660933896 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.441385747 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.444160994 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.550492902 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.442115638 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.46467122 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.432751586 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.438025243 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.457186057 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.449730742 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.46330683 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.433858436 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.447828327 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.44763644 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.428019071 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.444088862 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.441272814 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.434851847 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.440535975 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.426315489 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.457205796 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.448776211 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.447075527 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.456063105 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.555705331 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.43368058 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.648848564 seconds)
done (took 244.057789118 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.493809176 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.43022487 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.514180587 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.431819936 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.538108901 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.535597449 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.430304952 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.430831394 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.430438456 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.806345416 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.430596165 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.432000376 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.426047464 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.433991645 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.516257159 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.431647433 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.432078161 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.770068961 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.432116882 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.503788929 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.432661015 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.432951429 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.432519428 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.820565263 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.425594514 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.425201143 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.505192059 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.435242399 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.786320678 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.42401676 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.426539971 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.784186135 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.520235824 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.451835328 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.444374541 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.443324635 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.540616612 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.461083996 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.515861938 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.514858609 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.519118484 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.472084022 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.427256116 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.427381886 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.436524314 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.434427578 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.430281221 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.465759917 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.426012612 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.435268982 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.7764315 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.444343252 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.433625429 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.433348737 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.435506742 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.465097853 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.432816778 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.434800586 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.524617101 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.437353936 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.498597976 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.822532592 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.811987689 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.433071015 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.433524513 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.434326231 seconds)
  done (took 155.133904974 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.501523976 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.508284983 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.558528526 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.459666399 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.486477228 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.562620921 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.459492494 seconds)
  done (took 11.876906006 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.440729328 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.435581086 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.489536763 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.48580187 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.439157672 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.585007988 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.438545255 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.448288114 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.435229094 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.493126056 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.444205544 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.438670741 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.447042539 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.431989879 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.486939769 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.449713779 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.559478234 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.441541162 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.444314856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.593248914 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.44627413 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.439309228 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.49243472 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.454495004 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.440353597 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.442831821 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.008523212 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.439296335 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.43620195 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.443001421 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.437226265 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.480164849 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.441051771 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.438509387 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.437240354 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.553967657 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.437368925 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.436631185 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.437775774 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.433703349 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.439866404 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.438209293 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.440773067 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.438267061 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.441753508 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.464745818 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.439369193 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.438720052 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.44130378 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.44039892 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.491633819 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.439744641 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.442962299 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.43847977 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.496211692 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.44623939 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.439119872 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.436698016 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.439245755 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.436200647 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.590788663 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.48788158 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.439679474 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.489293204 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.441849114 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.439639463 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.441027399 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.442219489 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.494532084 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.438857049 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.49155564 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.439492334 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.595522323 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.465774615 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.444569044 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.44631405 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.445935575 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443489308 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.439847181 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.446018559 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.439415626 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.44394819 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.448737983 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.438244555 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.443038813 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.548066275 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.549264436 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.438276209 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.454758365 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.452051532 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.44010402 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.49445047 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.44265834 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.441348349 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.494419236 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.556603666 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.495181763 seconds)
  done (took 163.66596048 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.447973222 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.449321797 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.443663925 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.457418974 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.442035364 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.441313951 seconds)
  done (took 10.028645525 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.449098854 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.448913609 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.442437245 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.447030458 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.441306642 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.44612897 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.442025933 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.448149778 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.44944877 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.448117285 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.445186196 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.443253164 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.449628626 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.444345835 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.443323945 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.448065746 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.448062749 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.441902887 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.447854772 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.44805402 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.547893002 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.445843988 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.447105623 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.444920066 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.451864879 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.444326343 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.456403241 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.44510274 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.445623757 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.452920637 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.470052971 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.443824882 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.444832697 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.455002653 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.45013646 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.445907745 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.453313657 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.451124364 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.444781735 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.448923365 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.447133817 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.447438084 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.448769133 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.447954587 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.449443869 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.453544516 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.454651476 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.453928487 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.447313662 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.448918281 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.446709229 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.448389904 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.448258271 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.448128369 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.449455874 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.472209354 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.454638984 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.448821748 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.447522842 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.452105246 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.453412675 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.452412577 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.448667266 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.454755985 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.447818562 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.450154447 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.447132363 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.45620772 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.448060644 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.450028764 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.450384106 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.445731918 seconds)
  done (took 106.782376176 seconds)
done (took 448.824703003 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.650319499 seconds)
  done (took 8.0005665 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.718164052 seconds)
  done (took 8.069701623 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.691079826 seconds)
  done (took 26.048613517 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.465990884 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.48660624 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.465981781 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.4397915 seconds)
  done (took 27.213452273 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.827788248 seconds)
  done (took 8.18361955 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.444643565 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.440137997 seconds)
  done (took 14.242323279 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.812114001 seconds)
  done (took 8.164175497 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.451037175 seconds)
  done (took 7.810739341 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.442459292 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.462325156 seconds)
  done (took 14.269130967 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.424476559 seconds)
  done (took 7.780330754 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.212293176 seconds)
  done (took 9.565733341 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.452340165 seconds)
  done (took 7.810251024 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.481581128 seconds)
  done (took 7.836437047 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.706189377 seconds)
  done (took 11.062935102 seconds)
done (took 167.410968343 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.441447355 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.441403982 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.445339418 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.439497838 seconds)
  done (took 27.122936746 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.487749294 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.484295612 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.485132823 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.496940904 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.488890656 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.486896213 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.47788554 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.481716988 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.494897361 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.48778501 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.486575504 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.48587842 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.486588273 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.474403567 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.487773913 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.488017371 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.498756185 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.488670498 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.479262778 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.486388843 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.454213739 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.498607337 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.48825877 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.454256458 seconds)
  done (took 36.984549001 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.974716128 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.522134795 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.605710904 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.506796652 seconds)
  done (took 7.964975277 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.50488603 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.505429065 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.51764242 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.556816222 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.585071677 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.513715723 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.48136954 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.472111496 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.459279229 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.508205416 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.580634068 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.526663395 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.59320112 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.456100834 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.642388091 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.451667621 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.45748798 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.506821489 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.562880359 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.577399222 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.452847046 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.508366505 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.514097994 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.523499064 seconds)
  done (took 37.8166484 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.457556398 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.473564126 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.454900422 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.454523822 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.460989828 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.455037609 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.452993512 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.456755172 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.457561376 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.460338228 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.45412264 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.463978163 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.452299063 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.458235709 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.461467413 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.456636167 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.462111774 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.45763241 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.457716283 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.463895592 seconds)
  done (took 30.531368749 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.45003067 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.304656554 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.804275879 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.709303454 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.446598121 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.450127754 seconds)
  done (took 28.524759676 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.535149473 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.716353431 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.458838426 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.886945152 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.994253183 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.474940991 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.456846662 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.738823262 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.130044458 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.114518731 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.526928961 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.537676325 seconds)
  done (took 21.932790106 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.465052992 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.449702849 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.456131447 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.469336031 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.518691609 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.483989296 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.461731013 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.452868703 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.526804379 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.546442552 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.480666761 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.523248765 seconds)
  done (took 39.19585541 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540209875 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498827094 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.494384513 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.499749682 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174203222 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.662814115 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.526075101 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.949658096 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.454680156 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724172157 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465799055 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545633102 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.708266984 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45133725 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.454668175 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.584223586 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702206528 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020258624 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452557403 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.077045695 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481509461 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.466410906 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.114673699 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.489398935 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.665202512 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.601016973 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.711574167 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.229860114 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797587997 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.468584922 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462716997 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451212988 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724631472 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167348412 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569822546 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.464033988 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478394348 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.005082599 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.456170445 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.996853499 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.464631955 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.456999599 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46280797 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455284076 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.386432131 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.466989762 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962002436 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.464649315 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.165295467 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.45507681 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468052956 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549335652 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.457302807 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.027587684 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.51303966 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.458612133 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.452295345 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550893578 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04745387 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.598762022 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467188781 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.39386478 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467954531 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.075103391 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197106905 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.582195157 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.461069719 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.461337444 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389649781 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.052799437 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478208503 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597928958 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.47608791 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.118251287 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254322933 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.481001634 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.390965021 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078542918 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46864976 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.395470149 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686140145 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.231750027 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398316169 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.405437661 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.391122693 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284436658 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46549733 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.003655084 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477085848 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.98254621 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.467399397 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474603952 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483011764 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.687487194 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.335704031 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455206684 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.456866879 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.574908465 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477530025 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.958274023 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394633719 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.457610788 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.716605681 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.66912652 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456897789 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.590775123 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.737694136 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474395275 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.477347563 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.463874022 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.474739741 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.143517213 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494341852 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.597746369 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475802799 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.237901536 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322539036 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468000834 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.565065578 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.474885975 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745683652 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.344744979 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352223366 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526554258 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46565687 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.460099134 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091181729 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.532091033 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.362654248 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.456313019 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463373165 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.473202084 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.462591664 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421953008 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.458239309 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482429122 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.240789678 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.683432739 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46010831 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737722885 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394009005 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596951326 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.472430502 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.681346953 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.853087324 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.48099601 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721866518 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457439798 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.471605295 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474138913 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477369913 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559175345 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48278247 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.476369671 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.722487512 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.464589429 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.463472717 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.109408227 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.239052973 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465456483 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.462162731 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471033126 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143625119 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460856482 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.46353535 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352143088 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.475080333 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531537355 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46734451 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.475286984 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.583828829 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.502737278 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.469157666 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.462080147 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686163239 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.470483669 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.994243395 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544316129 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.703007521 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146263235 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495122468 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.395439272 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.172696961 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.155113332 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461975693 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.651647353 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.462368682 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475184095 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473674167 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.474188746 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.141640929 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489303644 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.9957093 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.469596774 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473868278 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.469489484 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46320942 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.572292004 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.612289855 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.485728913 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.481134616 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60796296 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.477946089 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.397675032 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.981186217 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.470128051 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.465248999 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.241258022 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499444989 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.009846827 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991251245 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723632888 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.466525097 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.472716776 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139653443 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.503713066 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.468807735 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469582661 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470904756 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.483053959 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492935522 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.476252043 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.097972913 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.830109376 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02687137 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285004953 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12833413 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532909629 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.463439594 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.351823299 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.963416289 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399956255 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.118387208 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688382394 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988554344 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421695717 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710856632 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.862402755 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.379517714 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481388305 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692732552 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505467798 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.474484495 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478061717 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.678438815 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499087612 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.469185301 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.401522524 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.745385321 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762948051 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469911914 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.54648435 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966569413 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479907616 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.244117149 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.5287749 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.984107501 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.69192481 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.018572186 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.861978494 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.464993637 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.509827843 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98516772 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.467731904 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.995888923 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175667838 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.50053039 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.716079157 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407790899 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.478820141 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.477046153 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.464990821 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.095570311 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.467826657 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.720911122 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478736312 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.402438171 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.480581632 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098154259 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.346913299 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.472418986 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465812374 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332638662 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.483387344 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813177373 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.47647648 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.522968973 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488764646 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.403696789 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401725547 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.162568307 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.474282843 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44690748 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058907804 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.491978796 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483483682 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.483958409 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316990535 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.726140896 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.482535521 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.161481176 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721900432 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.492545254 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496712895 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.570188637 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484904165 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.455675446 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.364327431 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.704193521 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.554128395 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.710407478 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.532193362 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.366078538 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.494766909 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.678516231 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.366368106 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.482209706 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.774668197 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.201698444 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.493881684 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291371694 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51566522 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.480428814 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.48736331 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.475725494 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493596115 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564961552 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479018253 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.481576375 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.47974589 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676412525 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488434223 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478390251 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.484407262 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564890479 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.643931164 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.579069091 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.245927078 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164400238 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306992895 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.176713008 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506593812 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.47408819 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473424917 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407623014 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6216689 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.998824599 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746981727 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600913457 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.472911971 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501006318 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.486944488 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480098055 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710862141 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744095301 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.447508004 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478285428 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.260928919 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.356912024 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.483326551 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.684217516 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053582324 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106941077 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595813801 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.479314063 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.000332169 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.747995754 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.566018801 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.472681612 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066777661 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.479009321 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.005660769 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.502972362 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480052275 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626352426 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.484839516 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189101842 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.503919745 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.63546294 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.248724107 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136085536 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.729922744 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.097724637 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.487775754 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172350961 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332926526 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745067567 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544982418 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485030474 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.581572885 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627568754 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.478573734 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.358989097 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.474368987 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317236873 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.185263719 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.484872179 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169331494 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767306424 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.469683819 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.481475382 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496909014 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.484484654 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.699717164 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.295837721 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.697352245 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486447557 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.479128855 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.466233771 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169417794 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512619996 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410634269 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.479456838 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.773124865 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.737705014 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502855741 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.931683851 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.189434222 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106909212 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.44850576 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497242525 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476733122 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309845772 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172109283 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.569583954 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06194719 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.134326129 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479484107 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756369833 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.482519345 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.483150477 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757963036 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.481012487 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.496164445 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493152302 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.176111154 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.403271702 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.485529377 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.192099187 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.418710778 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.703470996 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.505771894 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436989503 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.477410842 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.690598403 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.482374612 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609440128 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488191475 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.478418845 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483448692 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.234961545 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.761935565 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.48187064 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.471881837 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.475543422 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.480743252 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.582192465 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782430049 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479483848 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.152427205 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.831174613 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.73881971 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.493214068 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.464340707 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.484395212 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482504375 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.204706565 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.499641743 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.490575907 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118111205 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.493953382 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.494655207 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484864219 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.699921874 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692037207 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.497265494 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.496400076 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481302059 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499937508 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.388861579 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.249383569 seconds)
  done (took 1725.21607931 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.493298152 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.528842913 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.5247351 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.539556459 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.513939647 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.621275057 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.536740402 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.61458171 seconds)
  done (took 53.764922648 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.484299293 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.642581221 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.513500191 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.483667035 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.50860216 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.482172027 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.044896292 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.519807442 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.489797593 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.491410555 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.482260113 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.494943345 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.234323943 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.488420617 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.483411276 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.470438649 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.493618551 seconds)
  done (took 68.205420435 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.496903593 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.486502447 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.551254125 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.486043365 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.170492456 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.516451315 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.025316218 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.575752759 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.498114743 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.636555839 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.144937072 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.51472392 seconds)
  done (took 82.497296386 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.502498296 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.500882463 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.500637724 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.499653659 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.502523866 seconds)
  done (took 8.89863688 seconds)
done (took 2170.01256571 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.488175034 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.327115699 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.206319404 seconds)
  done (took 5.925877673 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.630504996 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.681738053 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.79737949 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.805334187 seconds)
  done (took 8.308242981 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.764762435 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.872940443 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.672225317 seconds)
  done (took 6.702891 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.806289806 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.48907178 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.487624665 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.48518633 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.490202786 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.485161401 seconds)
  done (took 20.852927066 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.489738838 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.490390838 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.487938004 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.490397637 seconds)
  done (took 7.352085886 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.463897338 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.209493571 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.465531613 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.480870129 seconds)
  done (took 19.01199567 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.233953817 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.246568654 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.232769358 seconds)
  done (took 8.107511396 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.520816135 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.509643459 seconds)
  done (took 4.423094512 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.798854663 seconds)
  done (took 3.190948818 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.499992829 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.539121895 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.715148045 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.596685886 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.258213698 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.490321943 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.407892779 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.911557531 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.604103498 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.16617621 seconds)
  done (took 34.579587739 seconds)
done (took 136.120390866 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.806208791 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.510974674 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.685100627 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.78020201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.714688371 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.689095513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.815050796 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.744710425 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.290832718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.270090249 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.774535967 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.713432195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.758513956 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.506950674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.759129188 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.505397094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.714371818 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.848873961 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.469318001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.483237783 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.80727991 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.411276119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.606742391 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.433744416 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.714973364 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.638309068 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.008401552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.502720948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.488291738 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.027618344 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.636248297 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.498329438 seconds)
  done (took 202.009702668 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.486515745 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.48119475 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.484877123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.51301739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.493902564 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.482543439 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.507940863 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.503693963 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.489202001 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.48538548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.522647424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.489406067 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.487594798 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.503839092 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.504611756 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.517451806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.48650666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.509480105 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.484162282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.488314888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.489415599 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.484984099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.505851934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.485699351 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.485327636 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.507793236 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.492455477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.48439335 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.486150667 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.486599832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.507353856 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.487394338 seconds)
  done (took 209.221804643 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.499803424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.486650348 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.509052716 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.484984338 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.485355367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.508907502 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.489199531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.505061824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.5073388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.514260318 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.486833571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.499260784 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.486243497 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.488141625 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.4892084 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.502263022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.485452609 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.509174635 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.488978258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.507148619 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.487872963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.499634583 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.49308921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.4880309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.489758727 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.508539723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.498037059 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.489218437 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.517174772 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.488974314 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.511066292 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.486684149 seconds)
  done (took 209.287514672 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.688346515 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.497522073 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.499766799 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.429999146 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.502601184 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.496336072 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.494088296 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.694459956 seconds)
  done (took 15.698682778 seconds)
done (took 637.614431549 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.990863115 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.67830504 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.70634239 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.516075994 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.408013702 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.538613867 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.519024737 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.717406356 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.491663139 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.729291031 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.851367867 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.536076643 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.001114041 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.515638196 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.797644321 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.626678607 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.482918688 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.61965368 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.869800007 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.164858551 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.803761217 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.176679011 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.738171976 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.487145261 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.019326088 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.104636632 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.406592592 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.47596966 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.537779305 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.879597808 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.375348188 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.6700412 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.595017446 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.59357442 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.653534838 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.634675006 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.593225433 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.591206184 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.74009321 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.873002184 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.148034071 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.289720412 seconds)
  done (took 101.544543497 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.485342627 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.483608874 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.483002186 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.480291506 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.484369752 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.482452582 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.48318876 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.482982362 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.482620032 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.484256432 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.482226625 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.486487822 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.484273673 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.483719194 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.482378177 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.483700152 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.486346802 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.485585677 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.484807809 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.483735531 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.48261132 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.484688997 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.483263603 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.484676424 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.483741668 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.486349226 seconds)
  done (took 39.981859559 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.502326771 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.773569149 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.952749698 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.507695123 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.502938885 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.507911496 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.597125897 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.503151754 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.506639806 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.506679968 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.667791669 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.502346278 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.538281502 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.983153696 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.506551402 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.505051231 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.507317047 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.50195731 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.781579836 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.511124752 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.614669172 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.504109199 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.596905315 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.512634916 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.526044007 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.504798457 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.505955599 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.089944488 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.524821684 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.673308705 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.450345607 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.596205263 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.063662948 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.001642869 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.453181043 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.510713933 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.503578507 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.670987582 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.505842121 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.503236967 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.600322969 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.502987655 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.975108195 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.19986044 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.527755675 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.50262943 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.111117475 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.695694332 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.804885183 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.514134367 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.006832065 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.510035852 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.504519675 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.504457381 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.803572881 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.513760701 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.505212147 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.15947524 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.533471698 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.595245848 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.511054695 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.50252909 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.79222541 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.50566699 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.785067493 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.504658789 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.514516027 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.527435272 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.970749637 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.511769316 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.226170716 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.528407138 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.506360475 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.675860609 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.7788391 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.147496253 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.532566548 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.795046227 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.082428152 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.625974776 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.515079375 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.085449566 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.626720241 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.515743754 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.508013622 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.510058089 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.508926414 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.562449886 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.596229045 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.167957989 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.25231023 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.191947634 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.626587009 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.526062817 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.507949475 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.157835501 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.538799675 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.511419868 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.976584188 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.242641016 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.533886996 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.510961441 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.241675543 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.534708484 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.602410951 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.519256244 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.986671797 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.516173192 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.555595539 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.511518816 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.515048895 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.535760105 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.597401354 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.511900829 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.508957848 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.211222874 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.707769209 seconds)
  done (took 198.913838103 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.502714974 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.50084061 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.50186339 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.503877268 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.500906057 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.510817577 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.501307312 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.501734965 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.505981904 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.50014327 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.505011521 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.500935775 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.507711518 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.520682031 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.51395656 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.510210307 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.11728634 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.505021795 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.520013395 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.501115152 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.332696732 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.508359729 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.520906996 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.501647073 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.506593321 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.51558294 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.513517415 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.505433915 seconds)
  done (took 157.047994611 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.513604389 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.162417583 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.533614403 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.667077991 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.538899159 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.509469892 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.666096627 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.583662883 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.537663308 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.507926772 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.510641219 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.880863009 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.515514841 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.145363769 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.74610863 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.692812919 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.14437017 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.537779801 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.509907462 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.508656302 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.666560577 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.518318951 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.860564096 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.16320794 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.533900687 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.204024767 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.499645163 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.512086047 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.510255941 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.206617454 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.537977748 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.884853931 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.60647734 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.583045569 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.230712368 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.13285763 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.168121792 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.693780646 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.516018732 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.510766529 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.510584425 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.495828551 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.169016519 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.536514507 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.51558062 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.156535906 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.537160413 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.513808389 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.518496464 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.511069711 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.582464078 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.607454556 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.889932671 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.172913106 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.622606439 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.524956109 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.664241001 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.924925306 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.515448073 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.112365255 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.496218327 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.21501444 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.543378695 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.497290651 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.512048808 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.517692889 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.690549439 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.667458811 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.15004807 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.538113284 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.109176107 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.708931683 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.513803642 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.513534984 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.516040858 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.215374364 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.175797161 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.717624628 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.66875609 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.747216936 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.501903548 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.513806226 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.497856581 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.603714941 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.513635498 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.212450396 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.174213377 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.542722035 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.515585357 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.518548056 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.518238049 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.724085652 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.243583309 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.629099763 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.142672015 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.915289049 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.897202959 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.521893263 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.590441409 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.539017188 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.894811638 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.522461163 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.583649302 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.996398048 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.894165512 seconds)
  done (took 182.375971321 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.789534321 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.912177964 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.621501161 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.676659972 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.194762747 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.130108618 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.92054933 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.681412644 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.646921279 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.807851155 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.866850908 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.610380294 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.757409282 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.617489785 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.319001248 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.61752612 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.647574835 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.678870277 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.694396891 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.608248175 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.272648316 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.836409484 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.73310666 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.537262938 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.620227176 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.406655379 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.138556047 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.067300645 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.715332437 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.062779465 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.105703724 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.762059307 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.62159659 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.343484848 seconds)
  done (took 73.446010091 seconds)
done (took 754.712586661 seconds)
SAVING RESULT...
DONE!
