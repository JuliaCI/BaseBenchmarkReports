cset: moving following pidspec: 22207
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.17254882 seconds)
loading group "string"... done (took 0.457922863 seconds)
loading group "linalg"... done (took 10.313223039 seconds)
loading group "parallel"... done (took 0.224501254 seconds)
loading group "find"... done (took 1.890975586 seconds)
loading group "tuple"... done (took 1.998143677 seconds)
loading group "dates"... done (took 1.340367949 seconds)
loading group "micro"... done (took 0.456251607 seconds)
loading group "io"... done (took 0.436680197 seconds)
loading group "scalar"... done (took 45.922259162 seconds)
loading group "sparse"... done (took 13.178764505 seconds)
loading group "broadcast"... done (took 1.101033931 seconds)
loading group "union"... done (took 10.674917891 seconds)
loading group "simd"... done (took 4.530080268 seconds)
loading group "random"... done (took 8.970096433 seconds)
loading group "problem"... done (took 2.181985389 seconds)
loading group "array"... done (took 25.762804975 seconds)
loading group "misc"... done (took 0.956074248 seconds)
loading group "sort"... done (took 3.353993375 seconds)
loading group "collection"... done (took 14.943693302 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.603443436 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.111102206 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.175585886 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119780412 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.242778858 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137416182 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.139511197 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099672274 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.76666087 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181748078 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123180794 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.360351904 seconds)
done (took 5.948707652 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.230988407 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.082555589 seconds)
    (2/2) benchmarking "String"...
    done (took 0.146818112 seconds)
  done (took 1.088340414 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.089629892 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081366388 seconds)
  done (took 1.033201601 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.084557458 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.340695984 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082656574 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.475607858 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.141480667 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.086818353 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.083225711 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082477006 seconds)
  done (took 2.1539696 seconds)
done (took 5.452284737 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.375088396 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.833715975 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.502674512 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141886093 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.28342518 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.233448202 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.203433246 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.217752396 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.08911963 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085966945 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173515025 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.424478586 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.297337487 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.768918452 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.099826606 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.101549977 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.138674904 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.774447739 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08392863 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.134013675 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.370461109 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119964688 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.106866061 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.149208972 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190506133 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110036629 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159240065 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.084381819 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.680132399 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.121963118 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.208990742 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087117768 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159889737 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.128483256 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.177886094 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.120915197 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680023164 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.192761468 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.145702286 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.086234701 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694748581 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.10402455 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.173947227 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.098745955 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088128126 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.169808692 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.1185319 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.083967575 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109568411 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084256434 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166692688 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.4822833 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.112139659 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.187353399 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.099117946 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.703128956 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.106875183 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.256902774 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.132746617 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.1105002 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.083485874 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086310807 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.148565835 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.088884581 seconds)
  done (took 19.426918376 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144271606 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13657148 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.085359447 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134860489 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099544174 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084047038 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083955985 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.088772306 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093024009 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144507872 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090911076 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153839293 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083704586 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086419391 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.149585455 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204685465 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.090376326 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.095689491 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.106066363 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09089245 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112467543 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.090201023 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084938274 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084007557 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.144722977 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216518407 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.117311207 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.117866051 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.083833792 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102353067 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.134166226 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133216775 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.084867632 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083220703 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122707881 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.131025232 seconds)
  done (took 4.973641668 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187254492 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102393056 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167177736 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.13817201 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112947313 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.151815658 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137912665 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248095904 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.679901214 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.16463381 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168924082 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133390664 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101317073 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102371949 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085384574 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084406883 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.56059938 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.140599299 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11504316 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.169027525 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084598652 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087313472 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.389175733 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088609319 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083895317 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084358076 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086345015 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165798822 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086731894 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.582273689 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084192542 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084569141 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148190086 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200130679 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089905412 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121588956 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101326625 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084263007 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.086329358 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085102455 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.179953382 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085970614 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.09367696 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135813827 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126546018 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083917107 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084992586 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.196415107 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083039856 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091445571 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.823842809 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.173731067 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.151370401 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083176603 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.162505956 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108204745 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084672554 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083608313 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.165617845 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.094275538 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085921473 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08326531 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085001055 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083653626 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08468106 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.0866088 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.273861175 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085005235 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.101759693 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084913537 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083569023 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.356136938 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087528678 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088551093 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10346939 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083074739 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086597047 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08270744 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.085763533 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083701031 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103644733 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105302267 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08497148 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146128748 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.085553614 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085535347 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103278515 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115000386 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085631084 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083283083 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129952058 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085808384 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086805921 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.158757081 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083100291 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103705327 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102984303 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.135660261 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086363015 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.173315989 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084597559 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105395757 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.090228384 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128625227 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085773921 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085901882 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089433937 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.085693985 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085432437 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084404129 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08342506 seconds)
    (112/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14728788 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086828226 seconds)
    (114/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.089315441 seconds)
  done (took 21.353575873 seconds)
done (took 46.619332389 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.338588163 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083317722 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082648488 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083000789 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.087717052 seconds)
  done (took 1.598672095 seconds)
done (took 2.497051938 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.177872057 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102667856 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097953956 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.099562413 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.107185036 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.104402591 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08293831 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099859749 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.121451406 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097852092 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103823093 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.084738212 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098667429 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.10201413 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099398063 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085824181 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099720261 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099749236 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116396711 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.084426749 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084312273 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.103791824 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084002043 seconds)
  done (took 3.263819085 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094707051 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102304763 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094432827 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097522647 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083463449 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095683692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095121048 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101963794 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097939288 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090067164 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083517938 seconds)
  done (took 1.942546045 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096238356 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099979172 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085232791 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098634378 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084201779 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095409101 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095083945 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099339677 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09727691 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089045483 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083595504 seconds)
  done (took 1.930121167 seconds)
done (took 8.040823485 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.447391355 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.682149881 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.152715765 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.205829667 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.242243388 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.180334503 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281727653 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.163541806 seconds)
  done (took 4.37193027 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.181342841 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091465477 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086447755 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088494528 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084442005 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085922206 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084276124 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086869657 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087084259 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087440587 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087717218 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103476326 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086687551 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086904752 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084902365 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09042995 seconds)
  done (took 2.470140131 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.128868627 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109747464 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.088074134 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.089192524 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090241875 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090875021 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092455536 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088748836 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087300093 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088442012 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092280616 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106831788 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090477023 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08750965 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089945663 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10946406 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088120979 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089738826 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107019834 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091174664 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089229097 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.086681511 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088148234 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.088651707 seconds)
  done (took 3.2673839 seconds)
done (took 11.017052982 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.101532786 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085578439 seconds)
  done (took 1.106138758 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.161640187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156039507 seconds)
  done (took 1.245670726 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.090248409 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083671823 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088449466 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.087130961 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085099759 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083844945 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087502924 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.084315385 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084618738 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084342816 seconds)
  done (took 1.79179943 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086545042 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084877894 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086729863 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.150804751 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086454156 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083905297 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084866204 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084008764 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084824237 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082968945 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084820693 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111640489 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085842338 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092005016 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085707161 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086010756 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086300044 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085976817 seconds)
  done (took 2.565851273 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084706722 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084346266 seconds)
  done (took 1.102750778 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082882028 seconds)
    (2/7) benchmarking "second"...
    done (took 0.082906954 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08653199 seconds)
    (4/7) benchmarking "year"...
    done (took 0.083937574 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084066038 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083668099 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083920519 seconds)
  done (took 1.519573358 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.445559886 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.205453337 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.313019779 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085010479 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085653169 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.295950241 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084721937 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084020938 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089813055 seconds)
  done (took 2.65746241 seconds)
done (took 12.921384953 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095607105 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.164479386 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.496586759 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.104791859 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085881691 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.151834152 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.205540685 seconds)
done (took 2.247410612 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.249048461 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.142615629 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.111463559 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.087416333 seconds)
  done (took 1.522772181 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.087224692 seconds)
    (2/2) benchmarking "read"...
    done (took 0.093497622 seconds)
  done (took 1.12323699 seconds)
done (took 3.58619494 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084540179 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.109683165 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.083833939 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.086545076 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084509833 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.084791456 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084468536 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084414717 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083861039 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084646173 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086163509 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.08469585 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.083773541 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103556896 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084306004 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085544047 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084383537 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084352507 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084672908 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084099347 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084503839 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086469291 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084639939 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.084645039 seconds)
  done (took 3.053842698 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085034855 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084047696 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084097675 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084119174 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084309641 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083626305 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.084606011 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.084031453 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086249849 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083914874 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08462456 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084083971 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083581741 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084281109 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100862881 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08553291 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085117012 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08488871 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084851747 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086368614 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084241003 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08532774 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084335306 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083702268 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084339629 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084820131 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084636686 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083608878 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084719216 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101349117 seconds)
  done (took 3.518882895 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.091828601 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.082822732 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084640365 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087336252 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084425128 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084445233 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.082058604 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085243326 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.085372431 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.084384262 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085246035 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086456941 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085557193 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085116947 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.101979596 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086676276 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087153527 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.085729921 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084895393 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.086238006 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086851769 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.084760884 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08727242 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.084687516 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084672322 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.081382482 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084503959 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.084001113 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.10301232 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.084938337 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.08604355 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085860523 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.084678823 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089802122 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085846168 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.085539166 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085276394 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082273745 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.086608362 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082260628 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083280466 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.08489465 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085329525 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105345706 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.087986666 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085330364 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085478934 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086367807 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.086347603 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.086158087 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084782531 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.084320236 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085355569 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085131281 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085782495 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084374133 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.085482976 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.10066904 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08534972 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08557723 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086067579 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083419201 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085616292 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.085835178 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.0894241 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086128781 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088701263 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085492505 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08512921 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086203483 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.086272016 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.089502411 seconds)
  done (took 7.179524679 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08518597 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084337872 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084318756 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.083228363 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084431734 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0869238 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084723762 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084530396 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084576596 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084980101 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08501162 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084832666 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085578657 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085862963 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101919992 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084599406 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086998049 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083959693 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.083894002 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085143934 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084891403 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085264661 seconds)
  done (took 2.843254382 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086033563 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088329428 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.085910349 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087586705 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08946051 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090071995 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086607053 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08765404 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085733342 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085844349 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086132565 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0852819 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087460681 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088230124 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102732057 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088094627 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088240907 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087413882 seconds)
  done (took 2.545775819 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08552902 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.084871106 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085181573 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085402959 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085053484 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085137196 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085445542 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.084955706 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084960956 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087011608 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085184047 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084582574 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085271467 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08513431 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101890978 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085223744 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.085803048 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085847653 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085520168 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085048879 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086036869 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088186114 seconds)
  done (took 2.857000812 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085772914 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.085335938 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086749434 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086441408 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086115408 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085373633 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086059843 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086040826 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090093919 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085559679 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088287179 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085450448 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08931689 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085899941 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103806072 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085669089 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086002791 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086150403 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085660424 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085975612 seconds)
  done (took 2.707587798 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.143796315 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089314292 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087882642 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087500019 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087456435 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087510611 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087135427 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087252132 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087676566 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08758348 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.088128723 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08829917 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108728422 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088561749 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088852209 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08844602 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088574265 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08812408 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088856737 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089695558 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088130751 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088305314 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088054354 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090257964 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08806246 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088223346 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107551137 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087683975 seconds)
  done (took 3.529364078 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085761791 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085948588 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086333158 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.086364889 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.086580563 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086040405 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088658507 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.086524967 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08571252 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086618702 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085517735 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085531182 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085844332 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085474529 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103452282 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.087983336 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08621062 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.088497244 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086031956 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086136337 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085636506 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086063846 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.086437887 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085675298 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085966577 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.088536357 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085479641 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08585743 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088214512 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104207855 seconds)
  done (took 3.594847332 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089646876 seconds)
    (2/2) benchmarking "in"...
    done (took 0.08893585 seconds)
  done (took 1.145250971 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.086369408 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086908747 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086619019 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08667489 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086855808 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086492384 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08574024 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089224651 seconds)
  done (took 1.661936068 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.14558356 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.161597356 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087639641 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.093800802 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.164250984 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.159860647 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128681292 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087379973 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091250505 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087906574 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.148827084 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.088305152 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092385371 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090547233 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091403605 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113259341 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086317893 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093272652 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089516495 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087207432 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089487415 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095007842 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092734947 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09044444 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089665644 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.104888877 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093314962 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.090877932 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090401354 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111250821 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089202814 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088158027 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.088864691 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087304429 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.086676488 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.16432804 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095620827 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090761478 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101415037 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08742671 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111393642 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.085620652 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092308339 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094390346 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092808574 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088185898 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088944837 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.086655691 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08976082 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090611677 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.086389893 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089502588 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.086874997 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093171083 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.115545033 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093312191 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088145926 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091182936 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.09043381 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.093463149 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091649695 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091652414 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093268758 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.088424522 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093293992 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095351573 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091370639 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.087090692 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.108633222 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087236251 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096649138 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11724167 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094688962 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088104039 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088228658 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086877622 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094231057 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088847139 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08985684 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089661921 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088285144 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089971035 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112554695 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089461875 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.091875808 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090267494 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.08843988 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091145753 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.089005963 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096979992 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087832339 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.086258678 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.090224247 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093273894 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089405971 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.08933086 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.107956627 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091879352 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090423776 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08909269 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088795492 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091614236 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094282437 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089078144 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089937373 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092304524 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157570709 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091685893 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.115344676 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091914068 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088524582 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.092327514 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093384589 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.0873569 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091156101 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088867542 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089581585 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090888933 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087411304 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.088288327 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094110542 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094942298 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.108507023 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.086612148 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092649937 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088806691 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089024438 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090746457 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.087827083 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.087471583 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087159901 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094567531 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.091601654 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092302532 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089274378 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091930197 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.107252978 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085978776 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089716836 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093252419 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091439512 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092265338 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093897101 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093690541 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089415274 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092110343 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091389842 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.089012772 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09203578 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08896517 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.105755067 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088734039 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.09158202 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.088417801 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092197311 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089302729 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091318453 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.089849581 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088537116 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089895056 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088675843 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089486208 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08854519 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088752392 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092579617 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109773864 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.087071651 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.088435961 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090460602 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089365616 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089083077 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.089164079 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091733306 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089335093 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.087266699 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.089042013 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.095144043 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096768982 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094036858 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108733692 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092055997 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093059001 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.089167947 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094098509 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.089337534 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089440824 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.090203446 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095908735 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09135017 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090426517 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.092000453 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090074894 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093868485 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113514663 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089148171 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.088715375 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.089872811 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090658328 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096638727 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091205137 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08929441 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08968498 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09421551 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089820832 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.09174724 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088894094 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.089704205 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109568426 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.09007921 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092945653 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089045549 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093889747 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093038265 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.088898956 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090471681 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08899456 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092968821 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.088256686 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.090130371 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.09089087 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.092351633 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.109239374 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.095748772 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.088007919 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094901637 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094309593 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091975534 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090511739 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.089170532 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090758431 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091333458 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096367192 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090107004 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092155039 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09324769 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.089908536 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108739112 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092168615 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089816663 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.087738541 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091841442 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.090172449 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094883571 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08926272 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089174354 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092036338 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09050195 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093749076 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.087478746 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091577817 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.107857263 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087992732 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08669835 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093755969 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093006583 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089826593 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09105393 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090766656 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089841377 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093243463 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090026163 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.089545806 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090487077 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093023756 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110705843 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.093877722 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.090644282 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089515212 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.091266106 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.088486073 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.093063026 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.089714632 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092606054 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09193707 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.090282807 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091827867 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093060706 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089370805 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089131766 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.108794495 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.091200775 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093864942 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092939572 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092379367 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.093543736 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.089162938 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096112629 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.090941885 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095418334 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091495551 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.088795429 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091122417 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092360374 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111339901 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089335586 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.091748331 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.092168414 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.092800413 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09449346 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091325377 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08982759 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093438545 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092499381 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093382827 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092270735 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093368861 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092648991 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.109424851 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09105689 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.091224418 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093192894 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.090458748 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093061831 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093316004 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091821432 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094766565 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090738241 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092235405 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.091821269 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091052992 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090241022 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090764839 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10930059 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090741147 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.087209565 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091954071 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087958053 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088123042 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.090487769 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.088865926 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089644346 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090820301 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087092364 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089230389 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.090960963 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092932697 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112264804 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.086868565 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.090596485 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.090996842 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090867733 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095924279 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.092462658 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094705887 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.0901837 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.091109044 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.089536335 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090561122 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.089959221 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091712933 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.108526065 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091203423 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092702371 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09326986 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.09138978 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094789083 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09081085 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092725318 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.090572447 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090073192 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090984507 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.088450496 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090135298 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.090675229 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.1164132 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09024559 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091211545 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092958564 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090827659 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090087488 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092963176 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.091420387 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092546331 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095140364 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090947699 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094366692 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091143446 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.089679081 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111998581 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.089062034 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088082216 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090210109 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090836629 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0935423 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090632162 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094067372 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.093842027 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093944389 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093546939 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.089541322 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.090560305 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091181813 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.090187442 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110766263 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.090238671 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096574128 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.090771568 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093709461 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091411961 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090623874 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09461369 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.090813746 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090091892 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091556967 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.093335237 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093527108 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094122358 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.111600715 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094529417 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091700239 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091909561 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091892334 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090676628 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091553883 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093288386 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.094738453 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092985498 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09137925 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092267767 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.093872178 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090840822 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.116692315 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089426717 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.091739069 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091557841 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.089042755 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090649625 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092690276 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092369344 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093252982 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096664304 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.089600801 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.090715725 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090685738 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09179379 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092926101 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114384882 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09005502 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094538515 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09114021 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.090607213 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096877387 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09372215 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094173929 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091737474 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095142213 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.092806537 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094601099 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090799462 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092739726 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112156326 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095682567 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.096320923 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091905028 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09322437 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094616624 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091758118 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093135468 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09454017 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093083046 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09047461 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.091741978 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091606107 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096449144 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.111503131 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090978585 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094029979 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.095523593 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093646864 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092355134 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092391413 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093066374 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.090604999 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096523173 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094007802 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09098683 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089487537 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091366221 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091615313 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112962188 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090011886 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.089212325 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091902034 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094043246 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090461454 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094606125 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09128106 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.090445646 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.089680689 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.09187687 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091698935 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094422611 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093136442 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.111732641 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090883165 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.091068105 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095907209 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09492626 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093639676 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.090599942 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.090076649 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091060479 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090530227 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092911987 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091093821 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091071921 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094389173 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092679919 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.109781815 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091703081 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.089885886 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094239377 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093320324 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.0915395 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094042535 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094453414 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096983806 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.091777738 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.092975825 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091647474 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090870185 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09514554 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112480639 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091124796 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095803112 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095475116 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091853184 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.091534393 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093499883 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.094000713 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09232506 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091630388 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.091101656 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094554705 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09646012 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092246388 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116164652 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092376714 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091792031 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091800094 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.091296522 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096281802 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.091860529 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091352137 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.092266633 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091863525 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091066498 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09330993 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091971506 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09464909 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096882119 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.115394736 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.092823535 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092790746 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092662917 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.090157181 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091813389 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.093905672 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.092832945 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.091216994 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09167614 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095018264 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094046731 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094207389 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.09218523 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.113079308 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.088567102 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093615115 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094942051 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096052067 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.090361515 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091447072 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.09215707 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09517657 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096328385 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.092118067 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094844764 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093588339 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094760306 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.111253471 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093298294 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092079982 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.096921915 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092646756 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093140956 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.095785308 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095220981 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092816724 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092260891 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095155833 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096630321 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092014971 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.093874563 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.090645085 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113605179 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.088003539 seconds)
  done (took 56.926161054 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104690483 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089666512 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089276035 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09122902 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090856223 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090973347 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090316401 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090281884 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089276643 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090074858 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09058908 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094417981 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09049955 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091233292 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110801352 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088671488 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090775727 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091425289 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090742905 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0910091 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091414185 seconds)
  done (took 2.972940139 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088154775 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.092191036 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091214458 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091503489 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090737063 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09067083 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090994371 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091100492 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0921165 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090864978 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09036871 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090353926 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093212783 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.09076193 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110322499 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088394303 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09098209 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091516347 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091894817 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091080771 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092967386 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091769091 seconds)
  done (took 3.058843958 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090595739 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.093047372 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092765363 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.092025174 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.093491412 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.090996116 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.093276092 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.092021331 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.093841946 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094297672 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.094411693 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09331918 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095188486 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.091998791 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.112300731 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.089031137 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.094919808 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.092797706 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.09333343 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091430457 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092673129 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09144788 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09193274 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.096650979 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092475662 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.094012473 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.092200116 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.093115723 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.113678026 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090315609 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.090884089 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092859511 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09295454 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.094084501 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.097164731 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092990721 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.093239263 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.091465754 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.090968236 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092529054 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.091715221 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.092818537 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093229361 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.111868651 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.088496995 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093168283 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089870561 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.089122273 seconds)
  done (took 5.541574101 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088811761 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113001343 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089923859 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.117719393 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.090241754 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091188028 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.093006802 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116844542 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093275903 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.092002587 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.092465595 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.091541978 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.112783494 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089254049 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088634451 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089427293 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08853862 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089174493 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088382873 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090761581 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090561041 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.08814011 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.088649997 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.087945494 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088003376 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08842117 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088964846 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110524189 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.089431413 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089250753 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090598679 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089074838 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.090190893 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092964158 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091714597 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090709237 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.091425668 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.092066145 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091762168 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.091897003 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091172008 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094012256 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112734073 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.11750549 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08918401 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.088745817 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089612572 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.089039962 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.09133837 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.093423169 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091331588 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.092037757 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094138538 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.093006497 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09170418 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.112928937 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.08989605 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.089121097 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089160197 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.089051375 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.089653476 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089081158 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.089678391 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088733013 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093138803 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.091456503 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092383651 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092178771 seconds)
  done (took 7.491942301 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090265559 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08879928 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089407918 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.092621391 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091957609 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092126885 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092267765 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.094304835 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091809843 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.091818032 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0924923 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092287032 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091928223 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092616459 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1125738 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089059978 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092292829 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092688619 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094628133 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092402367 seconds)
  done (took 2.907873911 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090751235 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089855519 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08961515 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089363183 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089694286 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089501835 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089167901 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089322748 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088785746 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092436585 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091372849 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091697661 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091367552 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092527821 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113145779 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090044745 seconds)
  done (took 2.518524624 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.091903271 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.090417606 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.170248447 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090406744 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.092185454 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093392801 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090821546 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.09229495 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.092769899 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.100220828 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.092693726 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114659214 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101656182 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089619847 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.089129109 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091803196 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.091036753 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.092089203 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.092471706 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.175577876 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.089689523 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.091885869 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.092711743 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.11723684 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.090596234 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090380002 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.092633097 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.090883242 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.092664482 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088903171 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089717789 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.089510422 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.089078309 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.091864574 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.092365477 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.092535348 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.09218535 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.094463071 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114007591 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089215478 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089923023 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089584859 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089438466 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.08910822 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.089579398 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088875734 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.088685711 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089393915 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.091880377 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088981662 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.08890532 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090148226 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.110878923 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.089399615 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090271779 seconds)
  done (took 6.324985905 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090812558 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089375742 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09114434 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090223795 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.095049585 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.092705374 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092434688 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096964556 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092497324 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090833246 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08997045 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093167394 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089242152 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089792905 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111107822 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09254481 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.090966273 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089653478 seconds)
  done (took 2.725518629 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090001346 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089864908 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.089177838 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090330818 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089342089 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089797719 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089305425 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08952522 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091911865 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089530763 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089514534 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090588413 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089327492 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089537887 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11159062 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090090427 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089498286 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089486981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089654305 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092026309 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089725229 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089890849 seconds)
  done (took 3.058845275 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.101329241 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.159247375 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.101252557 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.165342842 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.092362566 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091743894 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.09915212 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.092259577 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.129551909 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.093145776 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.092685655 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.092357103 seconds)
  done (took 2.371621324 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091287048 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090588469 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091174746 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090682639 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090126296 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090061613 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090755596 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092021811 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090846326 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092532993 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093515254 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09335926 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091210693 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092656955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113395944 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090371345 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09043413 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090455592 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092798177 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092358767 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090925135 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091856937 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090338698 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089989031 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089953224 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091414951 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093342242 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095465949 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093088907 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11555272 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089837421 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089998718 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091414091 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090234861 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089658415 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090530234 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090296078 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09043751 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090462984 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090199439 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092955233 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089303936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089698179 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112442395 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090459178 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092099425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090251792 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090845475 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09040781 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090473939 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091123193 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095800856 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093279728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094216016 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094376198 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093729244 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094328794 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093652086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114996723 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091769331 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091403504 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091115356 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092297969 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093028225 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09057566 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090543588 seconds)
  done (took 7.197191681 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091180329 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091051614 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090565377 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0905236 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091043969 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090707106 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090976424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089842542 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093015696 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090579575 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091012901 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093452491 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092316898 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091519037 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113221104 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090711632 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091574697 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090310948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090438182 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093205973 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090748019 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09110346 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091032893 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090367362 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091328076 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090396443 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090262122 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090661486 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089941411 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11225469 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093512563 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091021148 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090214775 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091319589 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091480909 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090967719 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090986109 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091108846 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09117027 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090667968 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091491024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092447562 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091159809 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112331423 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091386922 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090667973 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09063369 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090541654 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091128581 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090452786 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091467846 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0909272 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092626514 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090138058 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090623531 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090179019 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090059286 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091070257 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112246354 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091908236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091431775 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091456805 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091657561 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094857428 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090934585 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092059339 seconds)
  done (took 7.175909594 seconds)
done (took 145.851495682 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.161788077 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.186847484 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.243242937 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152426879 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.139651914 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.123096374 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091924807 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.091476498 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.095235586 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.110366905 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091936557 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.09176977 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.146338654 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.19134474 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092911041 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.128168142 seconds)
  done (took 3.200557788 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181806221 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.265893788 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.128784823 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.097898232 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099836112 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.095202904 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.094944539 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.146063166 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094256012 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.094539013 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09256188 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091283012 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.093366989 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.091236913 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094892566 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091740397 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.091775786 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092539826 seconds)
  done (took 3.115312696 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10955906 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.134781676 seconds)
  done (took 1.325773501 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115364387 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.125405269 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265771407 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12021628 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107135421 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099052416 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120586865 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.122325076 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.165674297 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.091983579 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.091784731 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.092967488 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108126788 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091088295 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099250612 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092667625 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.11291148 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090457951 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.090836364 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.090865936 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.13520151 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.09278487 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091885255 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093183313 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.15938789 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.092608518 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095501823 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.097981605 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.095289008 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094967551 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095934827 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094909558 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09530468 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.117417326 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094153598 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.096231 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096194436 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092358112 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096328478 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093541062 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09276027 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.091260031 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.09469554 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.092524946 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.091449663 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.092815527 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.092771466 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11431296 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.091778706 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096958784 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.091592155 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091478347 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.091862561 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.093542413 seconds)
  done (took 6.710943708 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.496756381 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127667072 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094107897 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.55230439 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094549911 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094353408 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.481632033 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11561221 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199058318 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.517002269 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108269836 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095369158 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10908078 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.202810566 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.149445551 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.225023368 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.414893342 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097654261 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.117448024 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105234589 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091745362 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096257263 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097004131 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.694709325 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.092875655 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092989089 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092161028 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.092235066 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.126793761 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.095835445 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091890535 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.108258751 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.216124091 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.102279215 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091747191 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09340068 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093286306 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.103275121 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176295316 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.103982563 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169444979 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092379938 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115718018 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092569409 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095293841 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091782153 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.09390479 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.107854022 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.105942214 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092240693 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094480667 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092684163 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.091971932 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093994278 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.093965572 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.227444659 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.24972476 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09326848 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093949217 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094946441 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.175771537 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100826012 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106457626 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108144007 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.10229845 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093473502 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.04372057 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105013992 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093283836 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092471748 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115072807 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093008788 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095271987 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152820265 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.670947568 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092816735 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093581864 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093726529 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.166553245 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.093551196 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092802772 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.101432098 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.092053787 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094919938 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114658959 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093504287 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.106020314 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.188984194 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.093066867 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092992313 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092817721 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102388076 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092037238 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.196489212 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096047187 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.093828415 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.179104829 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091843628 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.117167592 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104971805 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092387274 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.105453237 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093936938 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096064482 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092703895 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096321719 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.101132341 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098929813 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091451198 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092330418 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.104821513 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098212265 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113653823 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.106580246 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.69285953 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.103509467 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094783471 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098298554 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092786738 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.104315155 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092323232 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177598776 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095295581 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101937291 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092401338 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092965241 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119146611 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.09490264 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09857191 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093503276 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092781326 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096109815 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.199549513 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.101947201 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093063683 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.174796443 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.174669374 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092633973 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.108145211 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095565336 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.129146249 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096885962 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093295981 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092930403 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.046246603 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.097659614 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09399904 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093155937 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179104252 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094673464 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101208096 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.094015344 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093456996 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.045680181 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09739151 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.116786165 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100048224 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093526306 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093574131 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092717414 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093143751 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.098033203 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.107134881 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093539074 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092698132 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094334533 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.102078105 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092632292 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.094993846 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115526393 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.095576677 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095687472 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096860856 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100529326 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.106934882 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.095176625 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.095028525 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.874668297 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093606561 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.095148811 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.105972748 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094532252 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195024607 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117559563 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105702909 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.102181774 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.094572353 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227288655 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.103069706 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176664839 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.098777175 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107694379 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096741361 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097028235 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.102109356 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09891044 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09706222 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.099231398 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119444575 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094110297 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.154172268 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094782581 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20122475 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096250773 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.110588415 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097485732 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093500537 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.196536562 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09506438 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.097777552 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.095149437 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09314946 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.117532907 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.863125872 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.095763016 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101005981 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099217996 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.098647315 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.106882172 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09700779 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095092338 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093723656 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.097145028 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.180260678 seconds)
  done (took 40.799416531 seconds)
done (took 56.227399426 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.162802069 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.138131034 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185479725 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115848836 seconds)
  done (took 1.78704938 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.181304605 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.112144711 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.174234363 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.093053226 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.180147624 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.115816406 seconds)
  done (took 1.972992574 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.125015816 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.114335344 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110628264 seconds)
  done (took 1.458973657 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.153574313 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.147784143 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.419094193 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.341190458 seconds)
  done (took 2.273682271 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208087377 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095513428 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.095099782 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.174767304 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.179503918 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.133325147 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098035676 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.103909347 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.100420538 seconds)
  done (took 2.347229112 seconds)
done (took 10.953477503 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/240) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.468183744 seconds)
    (2/240) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.206679972 seconds)
    (3/240) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.301543294 seconds)
    (4/240) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.210277746 seconds)
    (5/240) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108738751 seconds)
    (6/240) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.323433419 seconds)
    (7/240) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.220478637 seconds)
    (8/240) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.228478233 seconds)
    (9/240) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.123149876 seconds)
    (10/240) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.19614746 seconds)
    (11/240) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.114796126 seconds)
    (12/240) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.175584625 seconds)
    (13/240) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.106573224 seconds)
    (14/240) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.107446987 seconds)
    (15/240) benchmarking ("perf_sum", Int8, false)...
    done (took 0.10621177 seconds)
    (16/240) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.106458702 seconds)
    (17/240) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097576324 seconds)
    (18/240) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.195532984 seconds)
    (19/240) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.183479482 seconds)
    (20/240) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111495916 seconds)
    (21/240) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103934999 seconds)
    (22/240) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.102676123 seconds)
    (23/240) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.20171486 seconds)
    (24/240) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.296378985 seconds)
    (25/240) benchmarking ("map", abs, Float64, true)...
    done (took 0.169897661 seconds)
    (26/240) benchmarking ("perf_sum", Bool, true)...
    done (took 0.104291956 seconds)
    (27/240) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.134490435 seconds)
    (28/240) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093046249 seconds)
    (29/240) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.140058062 seconds)
    (30/240) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093007631 seconds)
    (31/240) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.199231107 seconds)
    (32/240) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.156568341 seconds)
    (33/240) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.093888648 seconds)
    (34/240) benchmarking ("map", abs, Float64, false)...
    done (took 0.093135135 seconds)
    (35/240) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.102956024 seconds)
    (36/240) benchmarking ("perf_countequals", "Int8")...
    done (took 0.104177335 seconds)
    (37/240) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.177442213 seconds)
    (38/240) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093238421 seconds)
    (39/240) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.162499108 seconds)
    (40/240) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.133227195 seconds)
    (41/240) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.153551038 seconds)
    (42/240) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092545742 seconds)
    (43/240) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.221094031 seconds)
    (44/240) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093523895 seconds)
    (45/240) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093241489 seconds)
    (46/240) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100013955 seconds)
    (47/240) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.149175533 seconds)
    (48/240) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.105085315 seconds)
    (49/240) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.118342397 seconds)
    (50/240) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.098449495 seconds)
    (51/240) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.220183078 seconds)
    (52/240) benchmarking ("map", identity, Int8, false)...
    done (took 0.148830194 seconds)
    (53/240) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.20165601 seconds)
    (54/240) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108198284 seconds)
    (55/240) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.166648963 seconds)
    (56/240) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.235413563 seconds)
    (57/240) benchmarking ("map", identity, Int64, false)...
    done (took 0.148058977 seconds)
    (58/240) benchmarking ("perf_sum", Float32, false)...
    done (took 0.103259571 seconds)
    (59/240) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.096233887 seconds)
    (60/240) benchmarking ("map", abs, Int8, true)...
    done (took 0.165993727 seconds)
    (61/240) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.092121729 seconds)
    (62/240) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.096048179 seconds)
    (63/240) benchmarking ("map", abs, Int8, false)...
    done (took 0.092342906 seconds)
    (64/240) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.106614732 seconds)
    (65/240) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.147553286 seconds)
    (66/240) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.219265227 seconds)
    (67/240) benchmarking ("map", identity, Bool, false)...
    done (took 0.214969551 seconds)
    (68/240) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.142876776 seconds)
    (69/240) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.112513266 seconds)
    (70/240) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.0935979 seconds)
    (71/240) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097404553 seconds)
    (72/240) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.222876167 seconds)
    (73/240) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.097099372 seconds)
    (74/240) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10768822 seconds)
    (75/240) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.156440566 seconds)
    (76/240) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093517428 seconds)
    (77/240) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098006957 seconds)
    (78/240) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.171575874 seconds)
    (79/240) benchmarking ("map", identity, BigInt, false)...
    done (took 0.138247391 seconds)
    (80/240) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.126469021 seconds)
    (81/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.180732096 seconds)
    (82/240) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.196430985 seconds)
    (83/240) benchmarking ("perf_countequals", "Float32")...
    done (took 0.105194946 seconds)
    (84/240) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097800796 seconds)
    (85/240) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.094590733 seconds)
    (86/240) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092192486 seconds)
    (87/240) benchmarking ("map", identity, Float64, true)...
    done (took 0.151873722 seconds)
    (88/240) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.135489355 seconds)
    (89/240) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098848848 seconds)
    (90/240) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.208103489 seconds)
    (91/240) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114682716 seconds)
    (92/240) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.09958502 seconds)
    (93/240) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.113925143 seconds)
    (94/240) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097429408 seconds)
    (95/240) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.109632465 seconds)
    (96/240) benchmarking ("perf_countequals", "Int64")...
    done (took 0.103507786 seconds)
    (97/240) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.149487004 seconds)
    (98/240) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.129380754 seconds)
    (99/240) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108194278 seconds)
    (100/240) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.148692748 seconds)
    (101/240) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.168344768 seconds)
    (102/240) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102403652 seconds)
    (103/240) benchmarking ("perf_countequals", "Bool")...
    done (took 0.102983511 seconds)
    (104/240) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.112193719 seconds)
    (105/240) benchmarking ("map", abs, Bool, true)...
    done (took 0.166194147 seconds)
    (106/240) benchmarking ("map", abs, BigInt, true)...
    done (took 0.18409529 seconds)
    (107/240) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.109415535 seconds)
    (108/240) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.109950908 seconds)
    (109/240) benchmarking ("map", abs, Bool, false)...
    done (took 0.093274237 seconds)
    (110/240) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093604943 seconds)
    (111/240) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098073084 seconds)
    (112/240) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.095882271 seconds)
    (113/240) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097282694 seconds)
    (114/240) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.094357237 seconds)
    (115/240) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.096392206 seconds)
    (116/240) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.160650369 seconds)
    (117/240) benchmarking ("perf_sum", Int64, true)...
    done (took 0.102631373 seconds)
    (118/240) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120005201 seconds)
    (119/240) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110224759 seconds)
    (120/240) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.094681219 seconds)
    (121/240) benchmarking ("map", identity, Int64, true)...
    done (took 0.107226905 seconds)
    (122/240) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093971627 seconds)
    (123/240) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.09631661 seconds)
    (124/240) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.098005817 seconds)
    (125/240) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.096936432 seconds)
    (126/240) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.203193529 seconds)
    (127/240) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.093573876 seconds)
    (128/240) benchmarking ("map", identity, Int8, true)...
    done (took 0.106515912 seconds)
    (129/240) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.124806583 seconds)
    (130/240) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.097694849 seconds)
    (131/240) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09403484 seconds)
    (132/240) benchmarking ("map", abs, Int64, false)...
    done (took 0.139375122 seconds)
    (133/240) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.095245634 seconds)
    (134/240) benchmarking ("map", identity, Float64, false)...
    done (took 0.093319236 seconds)
    (135/240) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.12077817 seconds)
    (136/240) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100723308 seconds)
    (137/240) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106996293 seconds)
    (138/240) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.1466483 seconds)
    (139/240) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092287273 seconds)
    (140/240) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.10858022 seconds)
    (141/240) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.121730968 seconds)
    (142/240) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.096735868 seconds)
    (143/240) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094121371 seconds)
    (144/240) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.113427978 seconds)
    (145/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093753228 seconds)
    (146/240) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093492708 seconds)
    (147/240) benchmarking ("perf_sum", Float64, false)...
    done (took 0.10394099 seconds)
    (148/240) benchmarking ("map", abs, Int64, true)...
    done (took 0.106062206 seconds)
    (149/240) benchmarking ("map", abs, Float32, true)...
    done (took 0.170415904 seconds)
    (150/240) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.093872913 seconds)
    (151/240) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.119665427 seconds)
    (152/240) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.099543238 seconds)
    (153/240) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.12116816 seconds)
    (154/240) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.097529007 seconds)
    (155/240) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.162227777 seconds)
    (156/240) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10778666 seconds)
    (157/240) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092795892 seconds)
    (158/240) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095534847 seconds)
    (159/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093687317 seconds)
    (160/240) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.096655976 seconds)
    (161/240) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.103877456 seconds)
    (162/240) benchmarking ("perf_countequals", "Float64")...
    done (took 0.104279631 seconds)
    (163/240) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.095367705 seconds)
    (164/240) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.096313379 seconds)
    (165/240) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09329282 seconds)
    (166/240) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117326106 seconds)
    (167/240) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.119073078 seconds)
    (168/240) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093590717 seconds)
    (169/240) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.095972447 seconds)
    (170/240) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096783917 seconds)
    (171/240) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.094291597 seconds)
    (172/240) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095241042 seconds)
    (173/240) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.094038631 seconds)
    (174/240) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095092918 seconds)
    (175/240) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.093178219 seconds)
    (176/240) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.096177187 seconds)
    (177/240) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.101875067 seconds)
    (178/240) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.093491001 seconds)
    (179/240) benchmarking ("map", abs, BigInt, false)...
    done (took 0.096006912 seconds)
    (180/240) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.127957958 seconds)
    (181/240) benchmarking ("map", identity, Bool, true)...
    done (took 0.107719539 seconds)
    (182/240) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097030217 seconds)
    (183/240) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.098464979 seconds)
    (184/240) benchmarking ("map", identity, Float32, true)...
    done (took 0.15521863 seconds)
    (185/240) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.096556784 seconds)
    (186/240) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.096000447 seconds)
    (187/240) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.114006619 seconds)
    (188/240) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.09793516 seconds)
    (189/240) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.152490528 seconds)
    (190/240) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097450569 seconds)
    (191/240) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.102053367 seconds)
    (192/240) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.142740759 seconds)
    (193/240) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.096223185 seconds)
    (194/240) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.094061152 seconds)
    (195/240) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.098179818 seconds)
    (196/240) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096200913 seconds)
    (197/240) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094388584 seconds)
    (198/240) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.119709141 seconds)
    (199/240) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.158330827 seconds)
    (200/240) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09706061 seconds)
    (201/240) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.115884186 seconds)
    (202/240) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.115138281 seconds)
    (203/240) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.161407293 seconds)
    (204/240) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.094280107 seconds)
    (205/240) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.104916467 seconds)
    (206/240) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093005158 seconds)
    (207/240) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107174185 seconds)
    (208/240) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098718409 seconds)
    (209/240) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.10175149 seconds)
    (210/240) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.099083078 seconds)
    (211/240) benchmarking ("map", abs, Float32, false)...
    done (took 0.099744257 seconds)
    (212/240) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112904746 seconds)
    (213/240) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.097298939 seconds)
    (214/240) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.099336902 seconds)
    (215/240) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.101051905 seconds)
    (216/240) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.098324455 seconds)
    (217/240) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.134664764 seconds)
    (218/240) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093960368 seconds)
    (219/240) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094939035 seconds)
    (220/240) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.112741129 seconds)
    (221/240) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.109380148 seconds)
    (222/240) benchmarking ("map", identity, Float32, false)...
    done (took 0.099024751 seconds)
    (223/240) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.160805498 seconds)
    (224/240) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.098279515 seconds)
    (225/240) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.095965352 seconds)
    (226/240) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.111342743 seconds)
    (227/240) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096512997 seconds)
    (228/240) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.102981485 seconds)
    (229/240) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093847732 seconds)
    (230/240) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.118919627 seconds)
    (231/240) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09393774 seconds)
    (232/240) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097119578 seconds)
    (233/240) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.095712966 seconds)
    (234/240) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.09604624 seconds)
    (235/240) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094327647 seconds)
    (236/240) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09553127 seconds)
    (237/240) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.096270319 seconds)
    (238/240) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094331578 seconds)
    (239/240) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093097214 seconds)
    (240/240) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.09646787 seconds)
  done (took 30.809483901 seconds)
done (took 31.932113621 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.110370219 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17176111 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.105765503 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.174337897 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.104635202 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1210305 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.104212153 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.108098913 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.13354534 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108628472 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104076635 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.099824665 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.104487479 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.105548007 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.104467116 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.168821392 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121880271 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.101475529 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119395829 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.094517224 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.094556958 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.095482844 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.094164032 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.099260081 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105933938 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.104386874 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099250487 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.102576243 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.094526598 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.094710086 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095843116 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.102037612 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.119472436 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.107767424 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.101887774 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097037893 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106266414 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.104122816 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.094226301 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.095281523 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.106345628 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094752971 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.102180915 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.101299816 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094472783 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094131866 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122237068 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.109338266 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.170640647 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099659173 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.105024716 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.104545467 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101318253 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.093359167 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093571273 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.094620827 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.096516967 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.199245522 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095491915 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099754935 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.106649016 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.102899683 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096254127 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096234703 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.097794432 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113591504 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.107619203 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09471358 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.141049715 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.094415413 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.09439374 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09473677 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095612831 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.096456568 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.103103629 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.10493839 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.094058157 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093744717 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.102534257 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.101419342 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.094419003 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121628426 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.095166677 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095736829 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098368823 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.100019427 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.096739896 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095621294 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094600457 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094986791 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097312867 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094780546 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.094097942 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.108009568 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094749416 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119597993 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095777529 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095423336 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.094635241 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094826977 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.097725781 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100885409 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101499641 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094089113 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095520226 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105912741 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094678002 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.095570479 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.094048245 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.119898689 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.108100668 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112399926 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.098927272 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103593977 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.096848086 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.097004189 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.094774938 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094734561 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094538144 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.097623654 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093861165 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.094732797 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096904453 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120375031 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.108017988 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.095979944 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.09511319 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097232638 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.09632257 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.104148913 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095398822 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.095773685 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094866643 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.11189192 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099456514 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.09487148 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.094058358 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121784088 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095576182 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.094737787 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095697648 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097576349 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094978711 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096381225 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094156457 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099443637 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102238412 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096600128 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.094275072 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.094889115 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.096476923 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.119385822 seconds)
done (took 16.908774049 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.095797273 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112768045 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095890513 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.175049589 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.155129245 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.098917105 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.095191573 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.095021024 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10119763 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119391752 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.096142995 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097808508 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094675836 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.095263634 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.095239784 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10017661 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.09659339 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09610463 seconds)
  done (took 3.073334457 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106374168 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.116375956 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106833883 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10622592 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.095308286 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.094698273 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095337523 seconds)
  done (took 1.895520148 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095899908 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184346979 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.168981911 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.191637697 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.173708336 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.171074558 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.095081464 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105909218 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095094656 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.204689191 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.185339258 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09463083 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099048698 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.171166477 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094898426 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.188273713 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09549688 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095459155 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.164910727 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096067546 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107847532 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103727606 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095147058 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.203212749 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.098827448 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097811804 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.097286683 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09700803 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121358342 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.176390709 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.098774082 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095724599 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.199684437 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097131282 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.174731936 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099986633 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.173707989 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.099384806 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099902471 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.094964867 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097419193 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.185239804 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094940808 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.099159626 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097029241 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.183503726 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09673496 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.202206646 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.096030101 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095569332 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.099355345 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095912887 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.096409825 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.095361961 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184474939 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097559183 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188887945 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.165309274 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.176024742 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.162544664 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096015174 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.203875434 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.169258463 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.09703192 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096133015 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094295328 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189790812 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.094271156 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.103518118 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.159515958 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095614362 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.167381494 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.195323992 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100067792 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.099763856 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.099203125 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09831514 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.168947818 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095800757 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099607817 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189786776 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.095014563 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.096368021 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.096191738 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.095313309 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.099476752 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095625614 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094224225 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.164660665 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.190376335 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.098238803 seconds)
  done (took 12.831311366 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096213052 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095570894 seconds)
  done (took 1.392082401 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103481671 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094918162 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104103527 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.096577419 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10346821 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.178201505 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.17959502 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095073619 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.127029853 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102035126 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.180466858 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.182427489 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.1798413 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121749856 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.183212883 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095251331 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.181778694 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095934357 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.104075676 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099274482 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100443744 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095476149 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121713894 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.161776941 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095616708 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096128764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.097953512 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102375303 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104457288 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.09805968 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097981621 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096199508 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097900629 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121840627 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.182814337 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097209386 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09524154 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.097578326 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095204825 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.098003911 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.18455345 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098496416 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121726271 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098248933 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.098476872 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096862735 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096612791 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096234669 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.183447877 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096079351 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095904894 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095398807 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.098115552 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096721108 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122715201 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096729642 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.099506376 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.182112409 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09589671 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09598776 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.09617448 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095503026 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095667063 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.098381329 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.096044412 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122300962 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096898584 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096294644 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096405171 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096020637 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096164832 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095589834 seconds)
  done (took 9.395044403 seconds)
done (took 29.756755972 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.17248472 seconds)
  done (took 2.367444645 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.63441423 seconds)
  done (took 1.830573426 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.748860529 seconds)
  done (took 8.975184698 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.364818253 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.283616668 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.870183446 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133561029 seconds)
  done (took 2.850364909 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.116521316 seconds)
  done (took 2.32251917 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234530007 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193643993 seconds)
  done (took 1.618266541 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.743316891 seconds)
  done (took 1.949996172 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.315344374 seconds)
  done (took 2.505349057 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.192489866 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160500745 seconds)
  done (took 1.574297314 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.53817406 seconds)
  done (took 1.759625744 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.683502234 seconds)
  done (took 8.910611496 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230143026 seconds)
  done (took 1.446453327 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.26140565 seconds)
  done (took 1.48595987 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.082129969 seconds)
  done (took 3.307238582 seconds)
done (took 44.117475304 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10328726 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.106891667 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10752558 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.105090821 seconds)
  done (took 1.632748633 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102317614 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.103343366 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102477607 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.100280211 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10316651 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.10117026 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.09898217 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099884268 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.105832941 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09988395 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.100109161 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099336336 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.102415501 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123912272 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096612796 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.101246483 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101904479 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.101065756 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099339999 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09959336 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.095498126 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.102332802 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100413046 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.104723252 seconds)
  done (took 3.673235396 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10428503 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.102788106 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101272492 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.101387232 seconds)
  done (took 1.641143104 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103998046 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.1076844 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107295805 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104984695 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107405817 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105952202 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.101149371 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095700088 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098420852 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.104448024 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.107443549 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101900369 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13201986 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.104449403 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106046576 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.096565502 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.103824765 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.108963696 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.104440935 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104567986 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.101607408 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.10384504 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095827227 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09933802 seconds)
  done (took 3.737684596 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.166814916 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.107614728 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.120570991 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.122352467 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.097799432 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.121279256 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.119097127 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.095970532 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.102419323 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.095103955 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.096036733 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.121279586 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.123839075 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.105446997 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.096437653 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.098593442 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.096612768 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102812871 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.104620147 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.09594802 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 0.15033434 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.107941177 seconds)
  done (took 3.684882692 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105804799 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.100980686 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096559563 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.097136658 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.109370395 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102480821 seconds)
  done (took 1.850950942 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.102363555 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.098024829 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.099880925 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.096905527 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10061678 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096694074 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.096961695 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.098623805 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.098580875 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.099399559 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096947358 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096465155 seconds)
  done (took 2.417833505 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209554425 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116072504 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122837673 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.097160922 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.10003122 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096725066 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.108951446 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099943298 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.099579661 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096694686 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096503514 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097356148 seconds)
  done (took 2.579896828 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147572059 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101850723 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159660366 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.455749212 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113039969 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157217889 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.390868021 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124167627 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.155426419 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111088609 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130957458 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113060503 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14701865 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138711571 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109240079 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.379137211 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156638118 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147489444 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115896801 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14297404 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126004978 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164968445 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134193025 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116288718 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139353779 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114512615 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.102449114 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103875215 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120138119 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121969961 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119161954 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142085571 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107654313 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133777817 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113739404 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120478056 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209241918 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107020238 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.23311754 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132563069 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14499085 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110559006 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15464818 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116819986 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106085513 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14074912 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109370089 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.129424828 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108197201 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113456948 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154796752 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12530743 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.118914336 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109780612 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.432324418 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105837845 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114920209 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147799567 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140333288 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13844922 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129783332 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101432924 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169641285 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130897475 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126945069 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111339934 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117953032 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096719092 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16065336 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164789798 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126090853 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156806019 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.139120227 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108501139 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125579095 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121243049 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15001236 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1270447 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12474379 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099931465 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144596507 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10600604 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104730941 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168968087 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10216223 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168269376 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109216397 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.31023132 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143926701 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122664588 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11647431 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121465027 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153822073 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119851902 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.141317207 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115376945 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119969599 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147079966 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102610675 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119509664 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141029489 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.100460308 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120582968 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127552142 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124619774 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132861091 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122100733 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130636253 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.111402389 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134420013 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114139103 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151613369 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123980417 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133316956 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105808658 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11067174 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134248188 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129368599 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108877515 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151386937 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133278514 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.140052451 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105415002 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106603172 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183879512 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111490564 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159578447 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108359123 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106638841 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.128207323 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12986279 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1166103 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125447225 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104716894 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123144101 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155752156 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104207747 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111530412 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133258285 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128508663 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103093696 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138028966 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106505015 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.1151298 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12495868 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109469475 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144897499 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128308019 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127209047 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111794292 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132047033 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113609243 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106050979 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130154953 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147216004 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100537306 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126334122 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13350115 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104053138 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175007883 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118861415 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177616697 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128450051 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105439726 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178253474 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105228342 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.127334005 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105882112 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122130428 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119672747 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.127150711 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147975452 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.142480417 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.124756968 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116489344 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118918723 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.154848025 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116816351 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107766159 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128486239 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12479457 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101772152 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097447871 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.104694334 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113603143 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103221447 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109106893 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148792996 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120910467 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146190715 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126064649 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10814065 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159171516 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103267818 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118511491 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.125708605 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110549069 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.125832346 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13350498 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132045651 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106458782 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138015081 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.104831772 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102170892 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103988266 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121022606 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110267245 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105785914 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106479968 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133170879 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122294586 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140238492 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152226513 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146923839 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141555811 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102499081 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142256166 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11591259 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128184692 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.175738005 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106181422 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.117211353 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133790545 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109181294 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140552969 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125207716 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153708447 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130815709 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129098607 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103231722 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108696555 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158848234 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103766987 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112240414 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10721483 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105392988 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108936243 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108634592 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122888265 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124370668 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113680536 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11473028 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.139767191 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113445314 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104571504 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106418231 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131335279 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13826549 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.121553753 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120250768 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116337817 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111298909 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135243973 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120726446 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102697566 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.429723528 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127156039 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124371184 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105859656 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106497006 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156872925 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112863332 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113388716 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176949892 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107989825 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127631541 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155203754 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.107447382 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105849858 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113768017 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115002593 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127867995 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.097373021 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122918283 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141216573 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125524542 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138790581 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131359377 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125467039 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.120603273 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.120965757 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108291138 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16746834 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125084149 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12162664 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128278927 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.113016122 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175039463 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12710781 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106330508 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.101698199 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176121258 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108635017 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12526696 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.174485093 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152421527 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130349091 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157317033 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137177971 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102477502 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128951859 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141417939 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151018448 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106430098 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108103295 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155828125 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.164217799 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105464157 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157068134 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.41352413 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143985979 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118861657 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.120587583 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.429945904 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104023682 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108788486 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116906979 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122298923 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.102159528 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179378173 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128850744 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11020582 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113945776 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108214032 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175870481 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14135459 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111375623 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121573788 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106669169 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117895933 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111013658 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118279185 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141001904 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.116285417 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116647688 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133096869 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.121845112 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102593639 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125383901 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125936393 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125260852 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113606975 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13593373 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179847368 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104811193 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113499108 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103660272 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097651415 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149299203 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.14945828 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127547776 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118935741 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124482846 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1073969 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103249386 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108984377 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125215438 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107924286 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104552267 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150797001 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.107081828 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127720886 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128845972 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108737133 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12741364 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107055743 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098022559 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105798246 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109159317 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105766147 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169404814 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121944828 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099026292 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119412955 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111053381 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118747641 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136369852 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10783209 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.518662489 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104359479 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13166245 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146557217 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141330453 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114868657 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128649137 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126673839 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142193475 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106991907 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108461827 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207247098 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109585464 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.121175696 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104615416 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1081361 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142582787 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.098591952 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115548271 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150822389 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112169387 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105996 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122034287 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138239591 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107806503 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114092988 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134653074 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146478011 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126090507 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175846149 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13085539 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126956363 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114397353 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103477384 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117580837 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119317442 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144406423 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108991348 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106577745 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.108372129 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128231805 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.105065049 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14708972 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128548575 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127185483 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128102658 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.098804913 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125718392 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105966665 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128347398 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098067865 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106872252 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155440264 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107459617 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104861101 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130002609 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110390303 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12568401 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099141456 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168944376 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133269666 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.10390399 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104789515 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39629681 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149627937 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201247714 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.131214481 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107490725 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13872106 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115326937 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.122222292 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130152401 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098914505 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107825807 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099025753 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.242079635 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.125356411 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130056307 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148569737 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115856796 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175929661 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111442199 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274626546 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114459258 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15551531 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.1253139 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.101828877 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11067885 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104998019 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112669895 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176776353 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129647499 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.129243719 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.109233669 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098350669 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107753484 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110366118 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120211844 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116442076 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159614937 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108059074 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.11779793 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10739707 seconds)
  done (took 79.735714582 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150237595 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.137237693 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149642853 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218665297 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166254787 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281327893 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236657949 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248457612 seconds)
  done (took 2.919373227 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.102400687 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.12269179 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.119271381 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.122856448 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.104514741 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.303014926 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142702401 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.099924416 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.143579015 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.126214356 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.10294058 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.459017391 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.099524701 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.103727824 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.126165235 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.100686792 seconds)
  done (took 3.69567637 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.451103167 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.341700199 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.556132639 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.203714625 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.421098065 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.122696716 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.529579708 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.1011936 seconds)
  done (took 10.058502598 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.135604088 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.129476389 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.214365268 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.230462308 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.13646578 seconds)
  done (took 2.178235674 seconds)
done (took 121.017199626 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104983717 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.108074439 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108558215 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.106415461 seconds)
  done (took 1.746454476 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.156503373 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.109032937 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101399095 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.102189902 seconds)
  done (took 1.804505908 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.421055766 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.101043079 seconds)
  done (took 1.896003647 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.132230307 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.125527961 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.123483398 seconds)
  done (took 1.72729539 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11333484 seconds)
  done (took 1.455058876 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.106921638 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105527909 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.176271447 seconds)
  done (took 1.729436741 seconds)
done (took 11.696798449 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.207110533 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.944310561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411042375 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153463294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.700559807 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.391364895 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.405324901 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101321695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110979326 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101576841 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101789934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680975205 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.350484853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.875486229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.388215163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.873819122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.682127933 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127833372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101727909 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100848945 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.352519564 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.1007312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101482297 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100297777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.680876619 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.400162227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100796812 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.882238493 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100187625 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129130707 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387500572 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101251553 seconds)
  done (took 20.573338213 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133278436 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123025602 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106099661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101172414 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100911767 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102156952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106212201 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100575252 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116990225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100727756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10127485 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126219545 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10459537 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102242922 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116820734 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101483579 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101578871 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103899414 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101445433 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102043724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104225295 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101042278 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127680336 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101105296 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102042802 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109988328 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101167354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101870802 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.104238166 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100958505 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102759481 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101337447 seconds)
  done (took 4.75932686 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143880589 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.138831737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106288523 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132598153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128502799 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103184889 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.156168808 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103610004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145004355 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101578878 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.102156452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101497998 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117098515 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102572811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116859691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102048819 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100910894 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100910411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104289735 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12797693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105388303 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.102020785 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101273223 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101492031 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101333347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11134596 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101684021 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101891657 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101813879 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128794348 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104433633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102222602 seconds)
  done (took 4.951682763 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100092384 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.110273274 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134436442 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134370748 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101422411 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100386713 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.100648802 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100408769 seconds)
  done (took 2.234776903 seconds)
done (took 33.864395529 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.115572857 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109004034 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.111328164 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.111317289 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.168014743 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.10010408 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.113122962 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.102046305 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.107858018 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.11442815 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.12840164 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.104009605 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.112276144 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104029583 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.169488461 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109970435 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.169281683 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.199032209 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.102323599 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.110345353 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.100292855 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.170325913 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106440694 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101886689 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.194987985 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.105524756 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104604053 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.105221714 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103758728 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.102916007 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.170275399 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105133879 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.102187072 seconds)
  done (took 5.371702576 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.174383447 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.100084092 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.100855599 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.10016723 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.100350453 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.099481349 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.174927533 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.100220677 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128392476 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.101004828 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.100603712 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.191815147 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.100619741 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.101033828 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.103474992 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.097354894 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.099801152 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.102319941 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.205598249 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.100389313 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.102783214 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.10243674 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.098937228 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.100336253 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.196116689 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.096362066 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.100181298 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.100082378 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.128671092 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.100227895 seconds)
  done (took 4.874918455 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.105272602 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.121063652 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.12029712 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.124440503 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10441865 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.102231034 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.115720795 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111370191 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.105215491 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138813199 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101359137 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.105886316 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131082378 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103039408 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.114835496 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.114324229 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.118065982 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100589409 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.112088742 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.151897222 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108489832 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109415705 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.107237023 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.105880296 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.10705944 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.144245553 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125433739 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.102461077 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.102090444 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.110795129 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.101622718 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103264298 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.124527031 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.11355306 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101525389 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.106725727 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113301597 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.104721476 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.137134271 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.113933363 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.10422629 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.102230762 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.122935362 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.102313916 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101363253 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.100797439 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.112514979 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.116530241 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.113681829 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.101984126 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.123438285 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128738646 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.1022743 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.106297521 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.101783544 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101360777 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.121994117 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.111736564 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105689554 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.10445913 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.101932724 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102223229 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121962291 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.113121872 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.103124007 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146403248 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.101780773 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.1014141 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.106117649 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101940683 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.118298578 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102497789 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109549893 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.104923579 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.12335648 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.101202993 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.102547953 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.103217029 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.130575353 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.107560727 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108933207 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.111505104 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.102461101 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.103834735 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.103345021 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102572536 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.100703244 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102973248 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.100298824 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.101566174 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.102344777 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.102281694 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.130996803 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103361826 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102773239 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102159081 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.106285796 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101713046 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.103001086 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.101997391 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111320186 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.124086284 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.102773141 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.108970392 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.108158383 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102249362 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.150654626 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101170998 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102861391 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.115006578 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.10195953 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.102659403 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110353919 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102288521 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.104186433 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.1023436 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130583684 seconds)
  done (took 14.284104486 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.177103059 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.233423794 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.282665139 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.246788757 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.187664714 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.162835226 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.254584157 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.111658489 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.231796223 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.108900395 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.153794865 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233468634 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.115163765 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.29056392 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.10639749 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.126947254 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124640341 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.102144598 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.11189247 seconds)
  done (took 4.746168579 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104515481 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.121396295 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.10294889 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.102755812 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.102747372 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.103471559 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.113560964 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.107131979 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.101479604 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.104283518 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.114418456 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.116032674 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.10560077 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.150144724 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.108648092 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.101675467 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101199054 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.108919889 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.103877139 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.123104349 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111651072 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.1068408 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.10564781 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101564267 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.100461687 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.101841012 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.101233972 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.130129228 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10241945 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10680119 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.106940998 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.100981969 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.106696317 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.109396908 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.106037734 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106539797 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101582865 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.107950455 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.212160593 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.102448873 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.103156118 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.101631981 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105339801 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.102306598 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.103464431 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.110721004 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.10106704 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.101502798 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.110639849 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101720197 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.101333022 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.102219977 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.133335776 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101874464 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104196062 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.103617261 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.101123586 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.113780359 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.101674827 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101797606 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.103433602 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.1093599 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.102857014 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.101199333 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103438174 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.105812487 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.13498346 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111589562 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.10221535 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102663735 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.100868633 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107446372 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.101731904 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100986008 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101436697 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107157887 seconds)
  done (took 9.625505154 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.102744015 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112892626 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.117113268 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105615557 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.111247132 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102259706 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.113092632 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.116354759 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.114277275 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101870167 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114612146 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.1042099 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.142671376 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.113209586 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.112959957 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.111880687 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.112996052 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.105325075 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.108363941 seconds)
  done (took 3.52187453 seconds)
done (took 43.778765971 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.381342017 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.560415871 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.363215299 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.3624903 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.392427335 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.374949331 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.362914963 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.363826689 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.81798292 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.365706452 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.36281633 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.363195679 seconds)
done (took 30.444618237 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.393002224 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.368514452 seconds)
    (2/2) benchmarking "String"...
    done (took 1.371047079 seconds)
  done (took 4.422529021 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.369245932 seconds)
    (2/2) benchmarking "String"...
    done (took 1.368210768 seconds)
  done (took 4.109955308 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.363202334 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.372974161 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.362489273 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.532702529 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.414214479 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.364026258 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.364082594 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.375382786 seconds)
  done (took 18.158523388 seconds)
done (took 32.82263936 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.372316191 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.536894969 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.64163667 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.363044293 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.365090841 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.36245873 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.364535767 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.379492519 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.372994171 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.365045502 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.708874988 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.623695575 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.365598999 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.750184238 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.364697669 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.372508775 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.362749325 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.581022909 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.363885866 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.409577069 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.362334813 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.366610459 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.374111172 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.382248118 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.463541541 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.368310041 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.421988487 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.365518072 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.549983162 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.397172708 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.407847371 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.365139797 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.418686488 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.36535105 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.370560233 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.375371081 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.591774967 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.464147004 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.376211698 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.36813046 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.602660828 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.383131021 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.367331226 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.364705151 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.373473573 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.418976832 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.604990244 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.461843924 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.365109409 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.362564161 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.441123442 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.75146387 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.374015801 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.373024914 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.367018763 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.589514095 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.370631951 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.422199986 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.383873291 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.376023727 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.366419906 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.366322248 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.432776875 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.365301161 seconds)
  done (took 154.840646897 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.362761518 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.363033894 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.36316844 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.366811878 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.363853683 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.363963984 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.363676593 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.362889184 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.363885274 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.390927674 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.363726153 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.363405424 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.364299666 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.305964356 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.362854446 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.385351808 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.36570073 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.364247995 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.363170623 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.363515399 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.372201621 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.363692056 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.36345588 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.363356814 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.392489639 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.430246135 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.363426159 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.367625429 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.363358442 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.362989681 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.391021681 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.368000668 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.869923999 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.215712466 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.376930606 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.385224633 seconds)
  done (took 85.99061666 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.362832661 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.36319573 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.363004274 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.388978498 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.362929164 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.824919306 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.82506276 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.335810707 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.435863686 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.783145223 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.445678392 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.525138818 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.364686065 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.448821588 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.377592328 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.364861291 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.405995561 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.389253631 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.363496033 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.363144285 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.825661824 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.376194772 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.482405841 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.520794056 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.363053399 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388915994 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.794975961 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.362701526 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.388828841 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.743088744 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.389973781 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.362490106 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.61682928 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.400662786 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.470119066 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.364292168 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.388842063 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.363263015 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.632671878 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.363208287 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.362799077 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.365713716 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.3663462 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.911935665 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.363037212 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.830939188 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.363533776 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.267578719 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.363682713 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.362284239 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.546768523 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.852518732 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.365068512 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.363015873 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.365509977 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.36289301 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.362804865 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.388943717 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.604990784 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.51858787 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.363588084 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.362800628 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.366081829 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.389289499 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.363205883 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.362642866 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.735274945 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.426469432 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.17334985 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.826186319 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.363447331 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.825541014 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.45450683 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.479070625 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.363077797 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.36282898 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.363061939 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.362890636 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.467374059 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.363028578 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.724700356 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.520287084 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.364407671 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.410427441 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.454283416 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.362807098 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.363005948 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.631850682 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.363398789 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.362914182 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995721501 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.451820177 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.362962363 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.363012169 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.362241618 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.726560626 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.825434156 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.539778127 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.363785272 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.548491567 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.376331509 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.722293475 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.824637322 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.920750417 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.36378424 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.468749008 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.520445026 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.364432084 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.362880055 seconds)
    (110/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.362676495 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.363130989 seconds)
    (112/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.40604098 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.362762697 seconds)
    (114/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.423352538 seconds)
  done (took 383.074424987 seconds)
done (took 625.278618222 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.36991659 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.369453415 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.368229741 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.373739754 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.371989972 seconds)
  done (took 13.225844623 seconds)
done (took 14.598586608 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.582454542 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.581791294 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.426139107 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.394868856 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.491266819 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.537307149 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.401727495 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.581700421 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.581293954 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.538352993 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.390684718 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.409961188 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.49244975 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.488768612 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.581726732 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.434814348 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.579867006 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.580642075 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.486458885 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.434184418 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.408007615 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.579916145 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.389785781 seconds)
  done (took 35.75658736 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.712950458 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.735592709 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.417004745 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.717529915 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.400177071 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.7142689 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.582075332 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.591870698 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.575919285 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.427467836 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.382328298 seconds)
  done (took 18.639875715 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.662148159 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.675485398 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.419071742 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.688919404 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.401047669 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.699700105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.556044547 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.562241654 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.554066315 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.392785911 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.384093713 seconds)
  done (took 18.378102418 seconds)
done (took 74.156299286 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.395822666 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.44516982 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.379038159 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.380252643 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.378765205 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.378157406 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.385392252 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.382531855 seconds)
  done (took 12.50670951 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.377701347 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.379138383 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.3788323 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.377871277 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.378049732 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.377925983 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.37747858 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.377582386 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.377925434 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.377791585 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.377704722 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.377468516 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.377602896 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.377480151 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.377432756 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.377899 seconds)
  done (took 23.428048105 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.380182489 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.37749048 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.377298781 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.3777839 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.377374572 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.377823384 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.380620211 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.377275169 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.377562193 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.377614216 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.378842415 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.377506256 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.377251951 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.378250067 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.377421905 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.381858497 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.377857898 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.377845039 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.381740815 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.378228444 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.377985146 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.377264741 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.378092701 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.377583543 seconds)
  done (took 34.461142212 seconds)
done (took 71.777465389 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.377791181 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.373272386 seconds)
  done (took 6.13266613 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.773822007 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.82237543 seconds)
  done (took 4.978651892 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.378784378 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.377718031 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.378811843 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.378826586 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.37736618 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.377798484 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.378252907 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.377558137 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.378436853 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.379269377 seconds)
  done (took 15.164875761 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.37758962 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.37791086 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.37780421 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.377843517 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.37739668 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.377771631 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.37761071 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.377499272 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.377645323 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.377625923 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.37789598 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.377279623 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.378117767 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.378069513 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.376992429 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.377573456 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.377865374 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.37747967 seconds)
  done (took 26.180475485 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.392975141 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.401007574 seconds)
  done (took 4.175461555 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.51209072 seconds)
    (2/7) benchmarking "second"...
    done (took 1.419549206 seconds)
    (3/7) benchmarking "month"...
    done (took 1.485710073 seconds)
    (4/7) benchmarking "year"...
    done (took 1.476220152 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.419113561 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.406176892 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.419057624 seconds)
  done (took 11.519859735 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.380258712 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.637087921 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.782280999 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.139218374 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.378345782 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.381534734 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.170883325 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.382056073 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.383424719 seconds)
  done (took 16.016748848 seconds)
done (took 85.551232888 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.380931478 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.372630405 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.374516487 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.378924127 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.739866126 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.394952224 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.373521293 seconds)
done (took 17.397643514 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.37594381 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.372331083 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.38373941 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.372402366 seconds)
  done (took 10.885927909 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.319271198 seconds)
    (2/2) benchmarking "read"...
    done (took 1.694416497 seconds)
  done (took 5.395514904 seconds)
done (took 17.664566682 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.377507647 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.377784152 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.377474756 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.377740823 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.378032238 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.377532666 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.377740174 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.377491327 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.377586088 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.377625185 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.377268325 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.37945575 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.377725054 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377597714 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.377794187 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.377545331 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.37758934 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378416036 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.378220257 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.377414805 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.377869873 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377344056 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.377954592 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.377760852 seconds)
  done (took 34.449262104 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.37766215 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.378005094 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.378015007 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.377887327 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.377940152 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.37835586 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.37814852 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.377710508 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.378097384 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.377522678 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.377805653 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.378226532 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.378057975 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.378024571 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377668658 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.377862762 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.377967585 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379368662 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.377852735 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.378406968 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.377987541 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378100308 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.378527489 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.377715922 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.378494034 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.378757993 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.37844762 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.378185204 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.377444902 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.378459015 seconds)
  done (took 42.726218313 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.381759968 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.382570017 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.377888019 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.378382713 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.377734324 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.377820723 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.378697526 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.377667691 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.377897349 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.378102166 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.378061597 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.377761951 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.378201704 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.377811919 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.378002649 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.377804215 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.377832583 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.377760792 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.37946661 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.378144447 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.377819104 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.377725257 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.377649415 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.37757589 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.377885353 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.377966379 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.377779896 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.378522308 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.377853141 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.377796939 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.378391073 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.377843857 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.377816726 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.377797807 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.37808249 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.378076796 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.38165698 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.38251821 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.378177975 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.377500927 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.37771202 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.37769971 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.377611588 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.377964041 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.377938206 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.377912806 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.378150823 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.377966256 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.37960656 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.378072764 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.377956112 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.377661321 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.37774333 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.378101481 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.378114564 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.377440266 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.377960436 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.377812707 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.377503977 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.378560845 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.378250314 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.377842445 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.378391245 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.378039384 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.378584574 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.378198008 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.378198602 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.378348458 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.378764833 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.378606963 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.378851364 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.37807641 seconds)
  done (took 100.621023485 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.378398392 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.37876091 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.379228404 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.377856229 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.378441557 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.378224536 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.378728579 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381184695 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378877023 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.378584136 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378560566 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.379235089 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37871166 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.378477744 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.377896999 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.378051436 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.377874343 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.377791858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.378312803 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.378439578 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.377839602 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.378271002 seconds)
  done (took 31.711334625 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.377832147 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.378792606 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.37801137 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.379188185 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.379830065 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.378969122 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.378852857 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.378976427 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37816161 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.377958015 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.377859568 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378412675 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.37964813 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.377708773 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.37777238 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.381151073 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.378278611 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.379393314 seconds)
  done (took 26.199471745 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.378465632 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.378027419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.378012256 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.378048093 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.378038752 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.378888564 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.378074025 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.378194426 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.378043968 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.378153911 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.378598346 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377803386 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.378544294 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378046026 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37820477 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.379443666 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.378627697 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378199621 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378542524 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.378477067 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.378311281 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.378122782 seconds)
  done (took 31.706143621 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.37835908 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.378864744 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.378196371 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.378581421 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.378261973 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.378809302 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.381222413 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.377771446 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.379168128 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.377975216 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.377896264 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.378313581 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.379484786 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.378477633 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.378339853 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.377977016 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.378237909 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.378124826 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.378051703 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.378085813 seconds)
  done (took 28.953249033 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.380172896 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380137635 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.379841011 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379809546 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.380016094 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.379716112 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379980025 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.380156823 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.380272304 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.380843379 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.379945288 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.379980892 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379847098 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.380146928 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.380235055 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379893573 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.382553376 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.380142917 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.380000629 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379980206 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.380970091 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.379892271 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.380019006 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.380163936 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.380236475 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.379714285 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379925816 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.380450067 seconds)
  done (took 40.02838256 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.378365505 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.378596302 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.378214129 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.379178689 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.378249169 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.378409914 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.378266279 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.378901707 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.378660793 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.378047518 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.378417678 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.378528562 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.377953132 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.378308492 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.379095161 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.377944654 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.378220348 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.378331825 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.378171184 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380465298 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.378550303 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378732255 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.378757055 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.378536594 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378659466 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.37820616 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.378613548 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.379376733 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.378684719 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.378346318 seconds)
  done (took 42.740227868 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.441588102 seconds)
    (2/2) benchmarking "in"...
    done (took 1.441363876 seconds)
  done (took 4.266187697 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.378561616 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378513488 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.378475434 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.379878019 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.378715529 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.379229986 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.379593529 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.378150013 seconds)
  done (took 12.413967102 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.38221507 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.379426465 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.378819962 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.378527661 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.378981695 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.380688727 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.388791398 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.383663901 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.381700486 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.383248957 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.383315997 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.383729665 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.383745926 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.383206384 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.381299188 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386441104 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.3816963 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.378989118 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.378792899 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.378964794 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.379288441 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.382629702 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.385583466 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.382301785 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.379750377 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.38951061 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.388766806 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.381805387 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380892719 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.385858568 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.382796093 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.379839297 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.378540164 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.379652946 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.378429703 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.378762021 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.389508445 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.385896856 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.388119074 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.38270607 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.380436446 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.378713538 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.381736609 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.383078126 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.383567472 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.381267109 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.378621393 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.378356636 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.379883087 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.383851973 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.381783697 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.379693545 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.379285275 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.385033158 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.384308385 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.390227357 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.383932222 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.38295031 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.384790868 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.387910108 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.398371234 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.391908212 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.387131917 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.381673761 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.389316356 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.391759994 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389473078 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.384312491 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.380028867 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.378696733 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.390915972 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.402437202 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.397926329 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.381106086 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.378971123 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.379230271 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.381082911 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.380985566 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.389142594 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.388932301 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.381810638 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.379538969 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.389038115 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.389375025 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.381172034 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.380589102 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.3786715 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.378811923 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.38029066 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.38835324 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.384515849 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.378467945 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.380477723 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.381346531 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.382848034 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.379407505 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.380974666 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.382379518 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.379757064 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.378758065 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.379181806 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.385353301 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.385065702 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.381421445 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.379296113 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.389543333 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.383396691 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.380794646 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.389052208 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.383251943 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.379045106 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.38217213 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.385293804 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.379938878 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.383042656 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.384533831 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.380528695 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.382167261 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.380982824 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.378648484 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.389026267 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.39399688 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.381795548 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.379029676 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.38519307 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.384870758 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.379711604 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.384453454 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.381224979 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.379140746 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.3793014 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.383832999 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.380645618 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.381566895 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.380250627 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.382482497 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.379727135 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.378583937 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.379190783 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.381856387 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.383643253 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.38236103 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.383256744 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.386322614 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.381378929 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.382716478 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.392529335 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.385579814 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.382896153 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.383794785 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.380277781 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.37900294 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.382535496 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.381422153 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.381098314 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.380098134 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.380969798 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.380317943 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.378998887 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.379063413 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.378713963 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.380954032 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.385656678 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.3804134 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.385140391 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.383719959 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.380801978 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.378835216 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.378929311 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.380880926 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.379270678 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.379772209 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.384234762 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.382050779 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.378801168 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.379527267 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.383155674 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.381161271 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.379642984 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.379424398 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.383481533 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.384568832 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.38102008 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.388067156 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.384053093 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.379437044 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.378953022 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.381083461 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.381165231 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.379803635 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.383732769 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.384075033 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.398855188 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.400625676 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.381475962 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.38029292 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.380552364 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.380845474 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.385707792 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.382610398 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.379654014 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.379565141 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.381115356 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.380995618 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.381902006 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.380892636 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.38091521 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.379705172 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.380771483 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.379757309 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.37921861 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.382442166 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.384082944 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.380156022 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.379394572 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.379671939 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.380479184 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.380535878 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.379813232 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.381957337 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.380153285 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.379281465 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.388398086 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.384361614 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.383195586 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.385381592 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.384723052 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.381095897 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.380040865 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.384719467 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.383947422 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.389779473 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.387212028 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.382700853 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.389556579 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.386288145 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.381289238 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.385253991 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.381669039 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.379311505 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.382568216 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.383353074 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.379809997 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.379422179 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.379001842 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.380992788 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.380581398 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.388328958 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.383691803 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.380582773 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.380571021 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.38210454 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.380618566 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.382402998 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.386122099 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.383127629 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.385179542 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.382008325 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.378956407 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382917885 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.380797659 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.379326856 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.379372962 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.383017511 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.383711795 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.3864161 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.384529308 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.383340543 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.382668549 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.380588554 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.381781231 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.380711637 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.382692466 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.399751684 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.396649353 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.39598788 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.397094255 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.380894581 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.387473378 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.386090523 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.382090021 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.382269585 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.383458305 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.382756782 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.384243857 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.380727336 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.382674885 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.380667186 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.383057919 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.38414525 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.37971042 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.379623392 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.380966163 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.381371228 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.379535352 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.379192098 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.380772523 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.379872393 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.384120248 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.384629741 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.383742816 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.38186467 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.390398489 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.387388082 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.383924295 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.383727467 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.381813236 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.380737775 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.383191036 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.380955575 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.383583766 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.383299221 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.38310209 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.386198918 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.381989906 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.390147908 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.383794152 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.3840025 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.383067822 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.379505244 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.379888927 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.382759788 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.380586207 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.389510355 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.385298507 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.382203808 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.381964539 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.379689461 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.37983764 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.378562338 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.379885929 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.379357019 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.379416084 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.391045125 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.38708141 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.381846932 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.384967157 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.382988764 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.379528455 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.379141865 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.380858903 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.387082755 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.382767141 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.382611928 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.384637275 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.38418049 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.380343885 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.379767369 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.379264289 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.380129685 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.37974811 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.389008813 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.38810024 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.382481545 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.379536551 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.390599821 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.384017244 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.390330015 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.385455871 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.38265331 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.382303484 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.379554062 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.383316044 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.382502419 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.383908204 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.381190266 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.380897398 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.381258461 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.379577118 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.384136153 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.384272716 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.381595178 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.3811994 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.389991991 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.38916295 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.38105725 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.38345251 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.379570586 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.381405787 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.380727069 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.380211685 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.38050363 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.384355041 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.388412081 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.382504995 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.381493783 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.38154731 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.382338813 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.381241596 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.379961012 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.379056677 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.380224419 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.379365605 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.382489086 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.380636224 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.386257062 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.382283211 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.382255988 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.384704559 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.382440947 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.388625038 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.384029272 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.383016787 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.381835257 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.382037777 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.382296939 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.385351634 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.381774577 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.382666578 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.380845687 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.381020548 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.38504259 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.384326828 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.385314295 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.386049782 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.382000986 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.382046618 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.383077724 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.381368532 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.380049151 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.380309597 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.382426024 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.382241772 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.381926026 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.381933167 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.380900104 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.381944675 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382028791 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.384250604 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.385849311 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.38335671 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.381464804 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.379136172 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.380098657 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.382056219 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.382985361 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.391666867 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.390515352 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.387483525 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.385575662 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.380798884 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.382832654 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.385514126 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.385603848 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.383002956 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.383603406 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.382026109 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.384477556 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.383286749 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.38359258 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.381087454 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.389485273 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.386330672 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.382485067 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.392538038 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.388685786 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.382197023 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.381477014 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.38274372 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.38346518 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.380407506 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.379590448 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.382158281 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.391588265 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.388757201 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.381326057 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.384246254 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.387402495 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.381471347 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.381335976 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.380121019 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.383155312 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.381885395 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.382612833 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.382129823 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.379605234 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.379834051 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.381277669 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.382335962 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.385138717 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.384727134 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.380186132 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.384073463 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.384632136 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.383586956 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.382144759 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.380346445 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.380266075 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.379361955 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.381321311 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.381289536 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.382397331 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.385878067 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.38442339 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.382176269 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.381011951 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.381143849 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.384229223 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.39006349 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.384717878 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.379942239 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.381862653 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.384126443 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.387253261 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.383099157 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.380513846 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.382307955 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.384514617 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.381176447 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.379781078 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.379865999 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.384094915 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.394525271 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.385901648 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.38247305 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.383988581 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.388187202 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.382404969 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.379856548 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.379840108 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.383517548 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.388413364 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.383430074 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.380121763 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.389359906 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.386889382 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.382708094 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.380457447 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.386182958 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.385209778 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.385713746 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.382958624 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.380378527 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.385246711 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.394780055 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.383802894 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.38965314 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.399433157 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.387500515 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.384715125 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.38229281 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.381497006 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.381328843 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.383395794 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.382091634 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.379939743 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.379723444 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.380139223 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.381198337 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.385047095 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.387219162 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.388524952 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.384331736 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.381501525 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.384162521 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.380745539 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.380490002 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.381863618 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.380695304 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.381897305 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.379849981 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.38306847 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.400452436 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.400171715 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.38135728 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.380509731 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.379844073 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.385794906 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.387591654 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.387705982 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.383540097 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.380842165 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.380934171 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.384196421 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.383358868 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.380532031 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.38314464 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.383012445 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.382781817 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.381950061 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.395327385 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.392915408 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.387518983 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.385865902 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.381988416 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.379881181 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.383695884 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.382082952 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.380247945 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.386110228 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.384848181 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.382508741 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.381626885 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.379668688 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.384562616 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.383220997 seconds)
  done (took 825.763937567 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.382388762 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379865949 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.380308264 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.380007991 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.381413628 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380094924 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.380023955 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.37966135 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.380083217 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.381557524 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.379856054 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379857284 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.380885977 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.382422713 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.381194594 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.381629511 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.380166699 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.37989027 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.379846104 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379852856 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.381374306 seconds)
  done (took 30.377141235 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.380195962 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.380174441 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.380043966 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.382331202 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.380400386 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.3799015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.380354927 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.380040282 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.380369287 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380209442 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.380257876 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380420648 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.380517213 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.381088701 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380625947 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.38061531 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.380728896 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.381188408 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.38097408 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.380738165 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.380510113 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.380394835 seconds)
  done (took 31.757053556 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.38099716 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.380765357 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.382657561 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.381586701 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.38035554 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.380262354 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.380941498 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.381605242 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.38056846 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.382782221 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.382649602 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.384744011 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.386154381 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.384034624 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.383780359 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.382608952 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.381263403 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.380807149 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.380658264 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.380226292 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.388647817 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.384703409 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.38016495 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.381467743 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.381301958 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.38027729 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.380378428 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.380325831 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.382269257 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.381326152 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.380159542 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.381992328 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.385710038 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.384360975 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.382780452 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.381438704 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.380915905 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.380080061 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.380203277 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.389890632 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.389399407 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.380527688 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.398870726 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.392606762 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.38031847 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.385229888 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.383937626 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.380568559 seconds)
  done (took 67.765540977 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.380427312 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.380651077 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.380410024 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.379954608 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.38017682 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.37992098 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.380502716 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.38005688 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.380952774 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.380965324 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.380430881 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.380880512 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.380820992 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.37997541 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.380374258 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.380156455 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.380500207 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.380541439 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.380484432 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.380507951 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.380388086 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.380950702 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.380870763 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.380987315 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.381128897 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.382021128 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.381552299 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.379966262 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.380460773 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.380408767 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.379738622 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.379993219 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.380794272 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.380334145 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.380310173 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.380415315 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.380720216 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.380313297 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.380251214 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.380855892 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.380393335 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.38037399 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.380422617 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.38047701 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.38015241 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.380719366 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.380278241 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.37999092 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.380881754 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.379928344 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.3804596 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.380451915 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.380448613 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.380511656 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.380565384 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.382976305 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.381152655 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.380225007 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.38040226 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.380536489 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.380047587 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.380739404 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.38077213 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.380149752 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.380603665 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.380875238 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.380331688 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.380389256 seconds)
  done (took 95.263716643 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.380363381 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.381045259 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.381227941 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.380604057 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.380750677 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.380682532 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.380507288 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.380406952 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.38128304 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.380300373 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382172179 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.380450523 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38190904 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.381466529 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.38071142 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.382509751 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.381173765 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.381079232 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.382731964 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.38031756 seconds)
  done (took 29.006993219 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.380423415 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.380672233 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.380523116 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.381392277 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.38031514 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.381710844 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.381058043 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.380974611 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38034473 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.381273289 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.381351919 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.3809414 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38143129 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.381100008 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.381371156 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.381302743 seconds)
  done (took 23.481169441 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.381412286 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.381987481 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.381486907 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.381352708 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.381359481 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.380696073 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.381249547 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.380242907 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.382108845 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.381697949 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.380364989 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.381293127 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.382720508 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.380999614 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.381294416 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.381164542 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.380445007 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.380013259 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.381075353 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.382391177 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.381796308 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.380182516 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.381770133 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.380175325 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.380626476 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.380858012 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.380901342 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.381008694 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.380532379 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.38053848 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.3808341 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.380836014 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.380921244 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.380004492 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.380935751 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.380961301 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.380414866 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.381158662 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.380904707 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.380729573 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.380650081 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.381430371 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.380502138 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.382220949 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.380529981 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.380557091 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.380750442 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.380864769 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.38111551 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.381610566 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.380490141 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.381213063 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.380707093 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.381303807 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.381556903 seconds)
  done (took 77.343813216 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.381243643 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.381023756 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.380840713 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.380869109 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.380850602 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.381959703 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.380619951 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.382658654 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.381507946 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.380825875 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.381744007 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.381848546 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.380780315 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.382019561 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.381093448 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.380887431 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.381670585 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.381002785 seconds)
  done (took 26.249271282 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.383341461 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.381214704 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.381190321 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.380837416 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.380431551 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.381205577 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.380974435 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.381033994 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.380810777 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.381495242 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380977131 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.38105832 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.381880153 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.380920747 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.384381556 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381036261 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.381303801 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380797285 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.381402261 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.38050928 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.381451471 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.380880558 seconds)
  done (took 31.775100892 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.382179513 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.381424672 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.381554643 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.392233612 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.384222241 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.381810811 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.382037696 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.381959585 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.395565197 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.40241091 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.396472224 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.384887688 seconds)
  done (took 18.031831601 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380819083 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380806198 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.3813806 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380771239 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38103975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380861016 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380740185 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381191744 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380936754 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382014452 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380784049 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380941825 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380743161 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38124567 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381505705 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38163504 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381412277 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381492381 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381726574 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381955693 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381797881 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381924943 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381216041 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381593313 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380884018 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381062011 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380774166 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38446208 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381055001 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381191982 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381218917 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381164114 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380983902 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383104697 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381263287 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380971577 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381077247 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381050549 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382096346 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381114177 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.38194128 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380896806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380958161 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381142426 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380850226 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380990893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381318107 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381449599 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380942382 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381996025 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381164653 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381185497 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381051502 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381007906 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380767121 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382173761 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382475449 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381635022 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383102989 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38217426 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381511304 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381177837 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380893976 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382009455 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380704703 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38135753 seconds)
  done (took 92.558672941 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381250228 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.380900996 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381352244 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381954466 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381455784 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380922961 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38151017 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381274427 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38144684 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381005946 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380728773 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381391213 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381143501 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381254687 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381117691 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381217507 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381427291 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380998249 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381000886 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381908556 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381226673 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381873004 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383781306 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381268035 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38303152 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381357267 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381443804 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382248549 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381100446 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381233909 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381632229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381543312 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38158955 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.381060331 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381384676 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38217316 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381562341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38151136 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381838303 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381348369 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381383288 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381226979 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381577477 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38179778 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382520913 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381309156 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381373831 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380996874 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381140147 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380875364 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382665489 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382230515 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382059171 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383511029 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381034785 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38113976 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381690403 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381287512 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381705757 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381277633 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381402985 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381357586 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381925017 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38143442 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382032888 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381477461 seconds)
  done (took 92.570068986 seconds)
done (took 1839.142446724 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.544688251 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.749762729 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.462762785 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.412456587 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.380304208 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.38858525 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.89803248 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.570205781 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.854599465 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 2.07137845 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.718012292 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.503068413 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.394373441 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.457728329 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.774469373 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.378728351 seconds)
  done (took 34.944857896 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.415877341 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.398691379 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.485452129 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.385747446 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.408759198 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.549312111 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.43512466 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.392170463 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.378188808 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.411480049 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.379268021 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.407128448 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.38625898 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.317823798 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.727166444 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.551378955 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.608724511 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.377752588 seconds)
  done (took 31.402708503 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.749925802 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.64717316 seconds)
  done (took 5.782815737 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.401656147 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.385222967 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.38766565 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.383812954 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.376147339 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.377052797 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.382606361 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.384130801 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.385811207 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.489116528 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.385929319 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.395670185 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.386482685 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.385299979 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.382009045 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.426421045 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.523797616 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.383141395 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.381546655 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.39011599 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.384333975 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.484986621 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.422434022 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.382114603 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.48813941 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.384636415 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.386181392 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.391868442 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.514894007 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.382521305 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.382825043 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.387735929 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.385485589 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.169470937 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.851731006 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.377422011 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.393882569 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.395236646 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.382007771 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.545388029 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.385658942 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.391273829 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.379403076 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.83287963 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.49628131 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.499248945 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.377951612 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.384860189 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.38635119 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.454045093 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.384392431 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.386614645 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.422364263 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.177796556 seconds)
  done (took 87.844340549 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.44921345 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.376906945 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.574992737 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.38513963 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.377052972 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.376327772 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.376319034 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.609724 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.438335645 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.376230728 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.644979963 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.871472293 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.382066858 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.45113167 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.43301699 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.436268097 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.378613667 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.376709802 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.379029996 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.385892076 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.870484113 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.377423279 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.376864621 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.573673089 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.413894369 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.890933908 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.386936775 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.376178734 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.383938517 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.37672706 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852637794 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.385029533 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.436455337 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.380724398 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.630320768 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.719816358 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.69581837 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.381095837 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.459360515 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.379402476 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.382444235 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.881236934 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.718930726 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.377288343 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.377306506 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.880076661 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.377222026 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.385163582 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.385814852 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.6472828 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.376640806 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.377246861 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.386741805 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.376608075 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.376314989 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.452271935 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.45591609 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.891615532 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.377812517 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.376733001 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.455824702 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.380222255 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.378245823 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.384394563 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.381928631 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.719101361 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.277087532 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.377463519 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.717460285 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.840671473 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.382541359 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.92234241 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.376900395 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.394368313 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.531832308 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.376400701 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.37678156 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.890752381 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.423142319 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.377095788 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.694052636 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.38436056 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.6437057 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.379928604 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.384257795 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885720879 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.386549774 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.43879049 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.377543815 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.377233942 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.377237043 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.383762544 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.631058975 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.425290375 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.377711645 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.376526908 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.408787135 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.376996307 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.376716329 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.378628686 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918517354 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.388581444 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.377659803 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.379149541 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.377758017 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.377844021 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.383805391 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.377442005 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.663199307 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.376897403 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.378362656 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.379896109 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.376551164 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.386251008 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.574275066 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.380819027 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.635034527 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.379044839 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.377524394 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.386411245 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.377209754 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.386156067 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.376786701 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.384955495 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.376930825 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.710847003 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.378190875 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.378080366 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.380029419 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.377148092 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.379252481 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.378867998 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.436973669 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.379876492 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07914619 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.42295777 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.4329366 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.377053446 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.381377808 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.37721972 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.385213173 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.380504135 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747224793 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.627476936 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.277746252 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.381162789 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.377484059 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.148447832 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.451205787 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578855305 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.382300468 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.376965777 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.684122288 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.281323916 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.378220298 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.377786727 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.378541048 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.65333412 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.377009331 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747376336 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.869029912 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.377453083 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.381476903 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.136788974 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.377794751 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.377963812 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.377180885 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.638833474 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.377337791 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.377422003 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.377565706 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.377719517 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.379633748 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.380655457 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.383969634 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.377380244 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.378257644 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.93632838 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.586555808 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.37870968 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.380782217 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.891605512 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.390381444 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.37776507 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.377335566 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.378638968 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.377459363 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.433422417 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.377565531 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.442786108 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.380603554 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.389686072 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.91251163 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.377525498 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.378722946 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.583993686 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995596419 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.377059116 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.376866339 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.376873852 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.438340841 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.922654066 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.442607429 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.634967282 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.385662271 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.413267812 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.377077163 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.39666106 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.919400717 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.381623832 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.378318601 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.069828185 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.377333372 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.195260854 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.377599545 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.380121272 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.981883284 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.378479561 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.380835202 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.379252251 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.377823258 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.683268166 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.377900672 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.408401479 seconds)
  done (took 512.836229735 seconds)
done (took 674.196266715 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.377746376 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.377847695 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.377953046 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.37799919 seconds)
  done (took 10.89756399 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.383699891 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.383733588 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.382365111 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.382924153 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.383131079 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.385234003 seconds)
  done (took 9.687515891 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.377757575 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.3777144 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.377448392 seconds)
  done (took 8.519339133 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.551610252 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.378020678 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.689395715 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.377578702 seconds)
  done (took 9.382915382 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.382417772 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.382126318 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.38230132 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.382840833 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.383557686 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.384090446 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.383672412 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.383597766 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.38395582 seconds)
  done (took 13.833566338 seconds)
done (took 53.707473725 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/240) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.779605437 seconds)
    (2/240) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.53164402 seconds)
    (3/240) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.376832547 seconds)
    (4/240) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.393740532 seconds)
    (5/240) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.944704783 seconds)
    (6/240) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.378140247 seconds)
    (7/240) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.335074542 seconds)
    (8/240) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.377777877 seconds)
    (9/240) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.379868313 seconds)
    (10/240) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.618583774 seconds)
    (11/240) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.384478046 seconds)
    (12/240) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.395662675 seconds)
    (13/240) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.000980601 seconds)
    (14/240) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.38166705 seconds)
    (15/240) benchmarking ("perf_sum", Int8, false)...
    done (took 1.684052541 seconds)
    (16/240) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.405095734 seconds)
    (17/240) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.391691969 seconds)
    (18/240) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.62823922 seconds)
    (19/240) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.874013462 seconds)
    (20/240) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.003715988 seconds)
    (21/240) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.612926846 seconds)
    (22/240) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.379206668 seconds)
    (23/240) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.349298481 seconds)
    (24/240) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.828315202 seconds)
    (25/240) benchmarking ("map", abs, Float64, true)...
    done (took 2.085205765 seconds)
    (26/240) benchmarking ("perf_sum", Bool, true)...
    done (took 1.653268282 seconds)
    (27/240) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.274182868 seconds)
    (28/240) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.533334791 seconds)
    (29/240) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.518723927 seconds)
    (30/240) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.377750186 seconds)
    (31/240) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.395923705 seconds)
    (32/240) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.925530436 seconds)
    (33/240) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.377531922 seconds)
    (34/240) benchmarking ("map", abs, Float64, false)...
    done (took 1.649280967 seconds)
    (35/240) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.997645389 seconds)
    (36/240) benchmarking ("perf_countequals", "Int8")...
    done (took 1.468098181 seconds)
    (37/240) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.097459628 seconds)
    (38/240) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.378540508 seconds)
    (39/240) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.38128227 seconds)
    (40/240) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.153370393 seconds)
    (41/240) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.398613798 seconds)
    (42/240) benchmarking ("perf_sum", Bool, false)...
    done (took 1.672962129 seconds)
    (43/240) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.370259346 seconds)
    (44/240) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.601712225 seconds)
    (45/240) benchmarking ("perf_sum", Int8, true)...
    done (took 1.660840172 seconds)
    (46/240) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.736128066 seconds)
    (47/240) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.389045152 seconds)
    (48/240) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.380127219 seconds)
    (49/240) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.384615276 seconds)
    (50/240) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.289942762 seconds)
    (51/240) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.960604185 seconds)
    (52/240) benchmarking ("map", identity, Int8, false)...
    done (took 1.494370703 seconds)
    (53/240) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.381860239 seconds)
    (54/240) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.98519056 seconds)
    (55/240) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.606487672 seconds)
    (56/240) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.377289638 seconds)
    (57/240) benchmarking ("map", identity, Int64, false)...
    done (took 1.658262699 seconds)
    (58/240) benchmarking ("perf_sum", Float32, false)...
    done (took 1.867790539 seconds)
    (59/240) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.377937558 seconds)
    (60/240) benchmarking ("map", abs, Int8, true)...
    done (took 1.791864692 seconds)
    (61/240) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.934799662 seconds)
    (62/240) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.384398232 seconds)
    (63/240) benchmarking ("map", abs, Int8, false)...
    done (took 1.497376165 seconds)
    (64/240) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.529949856 seconds)
    (65/240) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.377770476 seconds)
    (66/240) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.377203059 seconds)
    (67/240) benchmarking ("map", identity, Bool, false)...
    done (took 1.492796861 seconds)
    (68/240) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.720158642 seconds)
    (69/240) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.220326957 seconds)
    (70/240) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.379102903 seconds)
    (71/240) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.389645499 seconds)
    (72/240) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.831724926 seconds)
    (73/240) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.378624074 seconds)
    (74/240) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.382502035 seconds)
    (75/240) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.37919625 seconds)
    (76/240) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.093907221 seconds)
    (77/240) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.39424331 seconds)
    (78/240) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.722151047 seconds)
    (79/240) benchmarking ("map", identity, BigInt, false)...
    done (took 1.52291664 seconds)
    (80/240) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.378260514 seconds)
    (81/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.402373054 seconds)
    (82/240) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.856921656 seconds)
    (83/240) benchmarking ("perf_countequals", "Float32")...
    done (took 1.472085348 seconds)
    (84/240) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.391298686 seconds)
    (85/240) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.387278684 seconds)
    (86/240) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.392831921 seconds)
    (87/240) benchmarking ("map", identity, Float64, true)...
    done (took 2.083686776 seconds)
    (88/240) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.052701682 seconds)
    (89/240) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.392533502 seconds)
    (90/240) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.393311091 seconds)
    (91/240) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.718003778 seconds)
    (92/240) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.388287855 seconds)
    (93/240) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.243842378 seconds)
    (94/240) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.380747908 seconds)
    (95/240) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.39025502 seconds)
    (96/240) benchmarking ("perf_countequals", "Int64")...
    done (took 1.464664063 seconds)
    (97/240) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.390801993 seconds)
    (98/240) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.792494333 seconds)
    (99/240) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.696278697 seconds)
    (100/240) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.382634305 seconds)
    (101/240) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.742707148 seconds)
    (102/240) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.379535908 seconds)
    (103/240) benchmarking ("perf_countequals", "Bool")...
    done (took 1.473354193 seconds)
    (104/240) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.590477378 seconds)
    (105/240) benchmarking ("map", abs, Bool, true)...
    done (took 1.767965612 seconds)
    (106/240) benchmarking ("map", abs, BigInt, true)...
    done (took 2.379317319 seconds)
    (107/240) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.387573949 seconds)
    (108/240) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.535701596 seconds)
    (109/240) benchmarking ("map", abs, Bool, false)...
    done (took 1.490378649 seconds)
    (110/240) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.392619838 seconds)
    (111/240) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.391552193 seconds)
    (112/240) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.737354013 seconds)
    (113/240) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.3917832 seconds)
    (114/240) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.874674667 seconds)
    (115/240) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.326861915 seconds)
    (116/240) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.377959934 seconds)
    (117/240) benchmarking ("perf_sum", Int64, true)...
    done (took 1.89032466 seconds)
    (118/240) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.397063292 seconds)
    (119/240) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.390098386 seconds)
    (120/240) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.726126873 seconds)
    (121/240) benchmarking ("map", identity, Int64, true)...
    done (took 2.110328815 seconds)
    (122/240) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.390775402 seconds)
    (123/240) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.377284362 seconds)
    (124/240) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.392064141 seconds)
    (125/240) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.96475965 seconds)
    (126/240) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.377680559 seconds)
    (127/240) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.378546323 seconds)
    (128/240) benchmarking ("map", identity, Int8, true)...
    done (took 1.799447186 seconds)
    (129/240) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.377720823 seconds)
    (130/240) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.378040986 seconds)
    (131/240) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.743298794 seconds)
    (132/240) benchmarking ("map", abs, Int64, false)...
    done (took 1.660843839 seconds)
    (133/240) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.338479346 seconds)
    (134/240) benchmarking ("map", identity, Float64, false)...
    done (took 1.652736071 seconds)
    (135/240) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.378491046 seconds)
    (136/240) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.921567715 seconds)
    (137/240) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.377493882 seconds)
    (138/240) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.378888843 seconds)
    (139/240) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.397510777 seconds)
    (140/240) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.377049449 seconds)
    (141/240) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.381719569 seconds)
    (142/240) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.859767198 seconds)
    (143/240) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.730656262 seconds)
    (144/240) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.613129795 seconds)
    (145/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.378151302 seconds)
    (146/240) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.576953862 seconds)
    (147/240) benchmarking ("perf_sum", Float64, false)...
    done (took 1.833972063 seconds)
    (148/240) benchmarking ("map", abs, Int64, true)...
    done (took 2.111669686 seconds)
    (149/240) benchmarking ("map", abs, Float32, true)...
    done (took 2.085555923 seconds)
    (150/240) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.390969968 seconds)
    (151/240) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.377587893 seconds)
    (152/240) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.378239716 seconds)
    (153/240) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.534145587 seconds)
    (154/240) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.39392602 seconds)
    (155/240) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.377240979 seconds)
    (156/240) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.109060515 seconds)
    (157/240) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.393046634 seconds)
    (158/240) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.822127604 seconds)
    (159/240) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.391612927 seconds)
    (160/240) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.379209896 seconds)
    (161/240) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.52263336 seconds)
    (162/240) benchmarking ("perf_countequals", "Float64")...
    done (took 1.470640075 seconds)
    (163/240) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.394131633 seconds)
    (164/240) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.394680042 seconds)
    (165/240) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.696729174 seconds)
    (166/240) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.392102747 seconds)
    (167/240) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.847322249 seconds)
    (168/240) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.618024055 seconds)
    (169/240) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.377262333 seconds)
    (170/240) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.153396613 seconds)
    (171/240) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.385297512 seconds)
    (172/240) benchmarking ("perf_sum", Int64, false)...
    done (took 1.927243981 seconds)
    (173/240) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.706918127 seconds)
    (174/240) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.377815228 seconds)
    (175/240) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.060276389 seconds)
    (176/240) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.378123581 seconds)
    (177/240) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.382951637 seconds)
    (178/240) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.390808973 seconds)
    (179/240) benchmarking ("map", abs, BigInt, false)...
    done (took 2.376866875 seconds)
    (180/240) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.991383469 seconds)
    (181/240) benchmarking ("map", identity, Bool, true)...
    done (took 1.773874759 seconds)
    (182/240) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.093982756 seconds)
    (183/240) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.682763235 seconds)
    (184/240) benchmarking ("map", identity, Float32, true)...
    done (took 2.090485482 seconds)
    (185/240) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.382217053 seconds)
    (186/240) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.148155689 seconds)
    (187/240) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.935111158 seconds)
    (188/240) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.377808849 seconds)
    (189/240) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.371675409 seconds)
    (190/240) benchmarking ("perf_sum", Float32, true)...
    done (took 1.83706153 seconds)
    (191/240) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.393022 seconds)
    (192/240) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.383498463 seconds)
    (193/240) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.607486377 seconds)
    (194/240) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.042913377 seconds)
    (195/240) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.378154256 seconds)
    (196/240) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.384934381 seconds)
    (197/240) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.882432747 seconds)
    (198/240) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.887824091 seconds)
    (199/240) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.84348555 seconds)
    (200/240) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.391818475 seconds)
    (201/240) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.348303041 seconds)
    (202/240) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.944831177 seconds)
    (203/240) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.378451831 seconds)
    (204/240) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.387932348 seconds)
    (205/240) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.484504228 seconds)
    (206/240) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.225528071 seconds)
    (207/240) benchmarking ("map", identity, BigInt, true)...
    done (took 1.808894025 seconds)
    (208/240) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.062327558 seconds)
    (209/240) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.882646347 seconds)
    (210/240) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.527387743 seconds)
    (211/240) benchmarking ("map", abs, Float32, false)...
    done (took 1.649619098 seconds)
    (212/240) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.201784264 seconds)
    (213/240) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.390460834 seconds)
    (214/240) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.377689289 seconds)
    (215/240) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.378465801 seconds)
    (216/240) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.37804271 seconds)
    (217/240) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.378136005 seconds)
    (218/240) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.996968793 seconds)
    (219/240) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.382418624 seconds)
    (220/240) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.930644424 seconds)
    (221/240) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.531683385 seconds)
    (222/240) benchmarking ("map", identity, Float32, false)...
    done (took 1.645621561 seconds)
    (223/240) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.391939605 seconds)
    (224/240) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.055389593 seconds)
    (225/240) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.535863857 seconds)
    (226/240) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.376833976 seconds)
    (227/240) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.384286809 seconds)
    (228/240) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.579395307 seconds)
    (229/240) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.155044056 seconds)
    (230/240) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.395653986 seconds)
    (231/240) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.60090293 seconds)
    (232/240) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.106403407 seconds)
    (233/240) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.33069583 seconds)
    (234/240) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.777186034 seconds)
    (235/240) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.055378555 seconds)
    (236/240) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.208725044 seconds)
    (237/240) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.392078821 seconds)
    (238/240) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.618484406 seconds)
    (239/240) benchmarking ("perf_sum", Float64, true)...
    done (took 1.803687332 seconds)
    (240/240) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.388485665 seconds)
  done (took 485.266246202 seconds)
done (took 486.6532371 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.396699283 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405892368 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.385310674 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.386913328 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.401676515 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.389340336 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.404269653 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.390586163 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.392419295 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.387226607 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.38645805 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.032431772 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.389424762 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.387925821 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.385796234 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387306198 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.377987166 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.391477345 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.386451526 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.399546644 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.38640365 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.386377779 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.387894241 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.034998117 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.389987754 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.392845212 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.391654876 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.392066771 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.403521617 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.391686468 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.391238926 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.401332603 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.377884228 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.38519047 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.383561977 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.391923597 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.402536319 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.399652624 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.389998853 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.39306431 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.384172587 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.386752664 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.389798407 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.387412031 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.387045868 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.393196878 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.389040845 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.396788807 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389679598 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387717247 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.377863163 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.38836394 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.391555482 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.387144388 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.403990684 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.388115557 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.396919392 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394323128 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.40178458 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39436148 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.377375065 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.394024164 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.391061386 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.386149352 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.396202288 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.377802648 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.384611249 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.393638678 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.377739228 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.394193883 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.37739566 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.396782332 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.389883414 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.388196007 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.393733097 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.377530976 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.384098993 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.38558026 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.397923664 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.386791673 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.398725023 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388237118 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.391488313 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.387228577 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387985976 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.389980718 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.404887108 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.3898458 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.399402174 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.40147415 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.39634042 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.40304725 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.390467684 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.384700668 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.399122492 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.397280426 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.392101614 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.392424376 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.391028218 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.40395164 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.377652874 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395073395 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.383486326 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.384541072 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.386695503 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.388719975 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.377949078 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.389847574 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.397492007 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.394714395 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.390184499 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.377525518 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.392924134 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40701728 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.400992344 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.390767318 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.384347866 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.377561256 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.378840728 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.389572935 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.388448091 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.38662211 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406593579 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.390006672 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.383512799 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.388483609 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.391043934 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387880784 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.400508951 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.403684885 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394047341 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.386371045 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.390132057 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.382172169 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.407281154 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.394389736 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.389957714 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394719782 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.386699159 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.383525952 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.403807883 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.404352693 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.387337277 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.397195054 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.383522661 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.382017643 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389772762 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.387830769 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.386780716 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.400275058 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.384474198 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.378413622 seconds)
done (took 234.077191482 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.384069805 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.383388811 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.517396595 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.383948851 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.528735752 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.383769218 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.384090995 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.393519185 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.38552491 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.384166702 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.518248165 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.384513895 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.5180854 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.527745468 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.517674118 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.384954968 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.420078595 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.384645705 seconds)
  done (took 30.172466817 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.461940304 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.457920354 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.493273581 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.384912908 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.437268342 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.495229347 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.385260661 seconds)
  done (took 11.503765334 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.39382643 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.384765435 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.447591033 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.447806522 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.383821856 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.573078186 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.397502186 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.383234625 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.445538425 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.384072272 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.383657122 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.392379211 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.381072001 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.447615325 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.397236567 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.502063934 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.387649342 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.383894183 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.559889703 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383705019 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.392885686 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.442962259 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.397171393 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.383842003 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.393777592 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383252723 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.383426564 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383129968 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.461439523 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.383603653 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.381160595 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383842898 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.383598286 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383418097 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.384400516 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.386245921 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.383504297 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.384076856 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.38367914 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.384140017 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.38331823 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.408502027 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.384127007 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.383442219 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.383759428 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.38364501 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.442491592 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.383166031 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.383382662 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.383446379 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.446825396 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.392703184 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.384145927 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.383507094 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.385057824 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383439175 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.560252326 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.447839067 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.383371667 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.448439711 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.383780951 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.383892599 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.384503977 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.383481209 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455581774 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.383770132 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.447493387 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.383154395 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.576026467 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.40877699 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384464448 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.390403593 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.389393192 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.378387524 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.392615452 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.383955836 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.387514926 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.39210268 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383480915 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383639297 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.580514437 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.383990842 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.403289627 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.393235625 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.383428313 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.44576694 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.383784466 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.383627311 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.47072477 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.502218793 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.445825786 seconds)
  done (took 133.662930732 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.40269654 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.389359389 seconds)
  done (took 4.179692099 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.390378516 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.384742443 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.383287813 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.383693099 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.384588383 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.383812358 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.384071421 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387276463 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384735468 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.383768222 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.383462303 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.385002029 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.38399925 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.384260901 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.384091326 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.383629923 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.384271898 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.384483051 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.383756271 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3853689 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.994327696 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.384852426 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386444021 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.385879213 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.384286841 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.384190131 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.410707844 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.384353917 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.383818466 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.395371128 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.386300557 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.384520823 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.385084708 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.390319345 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385024208 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.385743188 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385151273 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.385520787 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.383964023 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.384054741 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.38511727 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.384136685 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.383322736 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.385610364 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.386976776 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.386091735 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.386109693 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.410550153 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.384340141 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.385499671 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.385288981 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.384629067 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.38359638 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.387313791 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.387763077 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389258824 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.386064033 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.383818643 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.384303837 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.385512831 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.38500452 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.383966581 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387960026 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.38500374 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.383983282 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.385295742 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.385515946 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385023683 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384550519 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384107247 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.385900432 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.384810084 seconds)
  done (took 101.789899491 seconds)
done (took 282.69663142 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.238310889 seconds)
  done (took 4.625794966 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.779019163 seconds)
  done (took 4.166792548 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.729999556 seconds)
  done (took 11.128617146 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.46097889 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.401567461 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.399414478 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.386113003 seconds)
  done (took 11.035983643 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.087133386 seconds)
  done (took 4.475515247 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.38328206 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.38819123 seconds)
  done (took 6.160744017 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.643588722 seconds)
  done (took 4.031714969 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.628223468 seconds)
  done (took 4.026035926 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.401257539 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.378138451 seconds)
  done (took 6.175401464 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.387805211 seconds)
  done (took 3.775407794 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.184574489 seconds)
  done (took 9.5724123 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.379298271 seconds)
  done (took 3.768839099 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.443922388 seconds)
  done (took 3.831763546 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.249149254 seconds)
  done (took 4.637200494 seconds)
done (took 82.800398933 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.378531969 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.379886005 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.379695435 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.380187481 seconds)
  done (took 10.906359678 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.450240608 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.443171742 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.459250742 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.436471477 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.442200465 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.441951416 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.424345391 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.40960708 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.444690124 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.43966696 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.445798649 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.435433961 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.452670905 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.409479356 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.439679555 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.454638952 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.440038316 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.446269463 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.409741906 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.437950917 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.385126817 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.44285885 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.437608764 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.384418914 seconds)
  done (took 35.802448186 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.802816451 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.455716268 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.567655233 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.437131613 seconds)
  done (took 7.651144647 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.476861965 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.48753959 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.490808267 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.532176998 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.558357254 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.487330315 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.410767147 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.405783138 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.391847608 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.487980213 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.552091662 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.383982953 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.659844135 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.383733367 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.674939347 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.383985314 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.383935452 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.478915793 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.527561145 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.544300386 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384482514 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.475326565 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.481932362 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.384204733 seconds)
  done (took 36.818483741 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.392826345 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.400698144 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.385605659 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.385399804 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.385815088 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.387055279 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.399850081 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.386477943 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.391940404 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.384396222 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.384671059 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.385788736 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.399076528 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.385175117 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.385203534 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.392840242 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.388975261 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.391751109 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.385332067 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.385446186 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 1.395256339 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.391768206 seconds)
  done (took 31.960176012 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.38002632 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.379063088 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.730232186 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.641306409 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.380044342 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.379272696 seconds)
  done (took 14.277916952 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.444526157 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.466140987 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.38633314 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.667112373 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.728611978 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.386560817 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.387123603 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.498642267 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.734492822 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.814219473 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.421458391 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.429576043 seconds)
  done (took 19.753819793 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.380419868 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.384234251 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.388473852 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.399980443 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.430087821 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.389121335 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.39264657 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.379924226 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.430624506 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.434138965 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.39088024 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.431182192 seconds)
  done (took 22.221077905 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128999618 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271655389 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393035223 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5707417 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378414382 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378662681 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.579039752 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.816210994 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.384323983 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655026515 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37873226 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014379394 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388246367 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385839113 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378609529 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.378803828 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385084636 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124001085 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379330577 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380811787 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.39061756 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390121172 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387201907 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.564949732 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381099926 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379484731 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.650833727 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379160887 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633395576 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605676924 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607359044 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380909563 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655180408 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757187003 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521908941 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564354122 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388812783 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382428196 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.451177117 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.386231392 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380356278 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381146236 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604262883 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380099425 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378807833 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388527506 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818915421 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.386780076 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.379383258 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379944158 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.611505117 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027390039 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.38508291 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378905228 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600759524 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378857697 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.38455359 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584705485 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378940071 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384524948 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391142757 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.378862738 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378996252 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380137875 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001539191 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.386343204 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.384441825 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38631071 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385729881 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378838392 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403664235 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38546408 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.399394383 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378925125 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094766749 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38643399 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382573027 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08476889 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386193785 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.378879462 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392454643 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380169609 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379133046 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.379140072 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378882566 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181753455 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386435563 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.379316158 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397874625 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.816593853 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.565453025 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.244964645 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387503505 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394579818 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.383949973 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380534608 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.384851276 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394281076 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403803322 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.819077512 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387100672 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.384691605 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387287884 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.590217827 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385525115 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.379463858 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821788173 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382595433 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.399612466 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378617478 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.55784392 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.905789934 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610233945 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380980133 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409138934 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379005398 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247780892 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38460567 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.384935436 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384105127 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633418224 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.379768826 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379641526 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500305645 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407060212 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379853669 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379359632 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381440309 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381744058 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.631621899 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38094239 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608131008 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.381392422 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379273937 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.384121895 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379264986 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.381563392 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383206391 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38098688 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655296822 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379253096 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381373936 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378963693 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.384991788 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.386574656 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.385517941 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38653631 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379780583 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389014395 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608550087 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407112745 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52295889 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406421406 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.379963688 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388140765 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.384952828 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.3847581 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379279303 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38150642 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388168581 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.387645519 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402464085 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916962528 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351926408 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409565251 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272922601 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.395331587 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50181844 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387478311 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561790814 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.381252692 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391513048 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.387037422 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.379642475 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391119022 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609076077 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.380619948 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552804791 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.819512242 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918573597 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835405041 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.381277884 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.379905316 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.379250044 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379379566 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379133933 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381093839 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56220275 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61709449 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389414948 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.921734737 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381913078 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386518681 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.386669448 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610438057 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.388623182 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380523472 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.387471539 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379769615 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381362049 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.609538883 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.661908847 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.394657025 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379289082 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.897854003 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387518607 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380874694 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379449712 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409490048 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379573049 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89754048 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393758707 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396773191 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612002216 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380995354 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.397534685 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.380132158 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385069033 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381651976 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.393874233 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388712843 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.564036854 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392394863 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381773029 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.379712638 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120956046 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870696404 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382958228 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.380529322 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380612089 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.820534108 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381950735 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379667089 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594363033 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.821254547 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379870298 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820209941 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.379891242 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026986855 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610758607 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39236643 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380442011 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.386177461 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61400676 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591528523 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411622997 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379393659 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384157822 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.383945175 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900813577 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388674627 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559603754 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81776908 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385363168 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38122121 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.497809379 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.382651095 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725463001 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379700245 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379583113 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384545104 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384867131 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900353311 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382711784 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380230159 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00874257 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388789766 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.819660125 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379988074 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.564801581 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.610301544 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.682160509 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.381403487 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.383151865 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.385420116 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614706663 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384587245 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384929449 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871582517 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.23140339 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.387524916 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382357984 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246836301 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384997335 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63368771 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.386762441 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.383714993 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392635372 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380603327 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378980866 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.379527811 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402777857 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348378325 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988416331 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.381559512 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385631017 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388823551 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382093374 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393888802 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.396215059 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.912445002 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38273829 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389626983 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408630631 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.38469145 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379664403 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.394249941 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379803396 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382293023 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594798255 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383410181 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.380909344 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.386663932 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.57123645 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590051199 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379208239 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385473295 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595048767 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.3804827 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.391828815 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129752225 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.385402748 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383883711 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381501466 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402427993 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398367377 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503159258 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563184008 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.61151739 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.612684113 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725217036 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385796648 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382663165 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.167720192 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140264931 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386636367 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.385117275 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.379326042 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91882859 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118185675 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.92820266 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615410954 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384690992 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399149538 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380360485 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692896201 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379571579 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655641149 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379741632 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.386469722 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402251116 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37952177 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385359405 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590252284 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653661584 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379606901 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383762253 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379934827 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.379259474 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610220271 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.591941447 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120784228 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087902722 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380158119 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387789244 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.819951621 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655646273 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379814148 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380677071 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380191315 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.396045928 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.38155111 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.388505258 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382266024 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667974997 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607319382 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758917173 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604893683 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.258839865 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.259263004 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379636667 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387635765 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381406577 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.561816893 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911426281 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.031006892 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397166774 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504251201 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566784173 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.381317085 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691524612 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.38346102 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379374183 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379586538 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383216765 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.380253014 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604180554 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925570324 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392072547 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.386233597 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.383606618 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388678913 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.560965057 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395574131 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184146108 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380704828 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61097004 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405046447 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38040554 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908682819 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614995441 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382359666 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.386018673 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590771004 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388187974 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414527482 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.255315177 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.380219184 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243588481 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.590737346 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.246106299 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391377002 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.034391175 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919596275 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.392323334 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989312235 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380760143 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391041362 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658189379 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.388033219 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379691219 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667825817 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.385129384 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386319039 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56663227 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.912172602 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032023567 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.398562728 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388886446 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.381913121 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379454404 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551725233 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382305646 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389804357 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.812518327 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379965545 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389158205 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979741544 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.385102606 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378994512 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.380665452 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38018601 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.388480009 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.452656874 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.382016103 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382486315 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592046058 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895892203 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392404147 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.009802728 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.716048349 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388881987 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391285909 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.383890098 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.38938525 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380632382 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379854511 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38039553 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390139859 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249784472 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.392102994 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.607398707 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38713685 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.59060947 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590461297 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386443865 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562004679 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389131637 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399492978 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.38330687 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381185853 seconds)
  done (took 1023.469191334 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.421908211 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.412267319 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.433289027 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.499559585 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.442111179 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.536492798 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.482730124 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.400302168 seconds)
  done (took 21.018849783 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.384302547 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.395362152 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.388200314 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.391891324 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.385500142 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.649460102 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.389916738 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.391419358 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.397330735 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.38324981 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.386594388 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.790883816 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.392481307 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.38546551 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.395307816 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.391821078 seconds)
  done (took 32.30516769 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.277310377 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.52863077 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.770848427 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.393997439 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.39122779 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.384532806 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.664509046 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.391020421 seconds)
  done (took 24.192862808 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.398433007 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.397926256 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.398011342 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.397782899 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.399138165 seconds)
  done (took 8.38088899 seconds)
done (took 1290.147362823 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.387060205 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.386296242 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.386569833 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.388303314 seconds)
  done (took 6.937750237 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.37988032 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.380823443 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.381380731 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.805534571 seconds)
  done (took 10.337329183 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.732228909 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.882910064 seconds)
  done (took 5.004791802 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.380212332 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.379551578 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.380676893 seconds)
  done (took 8.530018794 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.800885475 seconds)
  done (took 3.191452856 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.86549409 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.82973476 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.545823208 seconds)
  done (took 6.631085549 seconds)
done (took 42.022196357 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.387652544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.159942241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.539011853 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.380255183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.541665415 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.538564029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.631206724 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.380778784 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.386173479 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.384191637 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.380543827 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.544088017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.620681836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.160243579 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.621277406 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.160150802 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.543413524 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.380147884 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.380553236 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.390064592 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.635085942 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.380724413 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.38004375 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.391489116 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.541505158 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.52707232 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.380380807 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.159398628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.382461983 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.388124577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.526952307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.390059477 seconds)
  done (took 82.984388851 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.380381522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.38077287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.380511615 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.381058899 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.380655552 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.380975787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.381867165 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.380943111 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.386086774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.380554774 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.380884969 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.380821907 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.380416117 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.381409098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.383162429 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.380642261 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.380636555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.388996122 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.380570247 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.381096823 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.380621725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.38143916 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.380413286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.38731385 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.381238699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.381349627 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.384817587 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.380944245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.381828515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.38810933 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.380894491 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.380684639 seconds)
  done (took 77.612902395 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.380162687 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.381198974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.38083983 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.38583279 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.381542251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.381892086 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.394299358 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.380735071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.386162198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.380779525 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.380694893 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.380446486 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.384426738 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.381205994 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.38192296 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.380237344 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.380678001 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.380999358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.385287995 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.380335668 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.381760861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.380355077 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.381302882 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.389980294 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.381116404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.385435903 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.380710195 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.381855248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.381637207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.380630368 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.38413501 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.383101823 seconds)
  done (took 77.632446232 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.612736479 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.386286509 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.388252843 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.380581585 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.388104841 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.386524288 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.380821376 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.615529627 seconds)
  done (took 14.928902872 seconds)
done (took 254.548471884 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.380761619 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.905418165 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.409932974 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.383167062 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.411296002 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.412146149 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.557785181 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.409236317 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.542885767 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.381599785 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.408837505 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.380801551 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.173749934 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.497172908 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.290762276 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.38338796 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.236787093 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.380654951 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.966466947 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.566379641 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.408388487 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.389251504 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.296403962 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.252995296 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.380535686 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.392103272 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.392166312 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.505421353 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.475164244 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.392544705 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.898927688 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.381220607 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.381330323 seconds)
  done (took 64.017149967 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.386475808 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.386262463 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.386266466 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.385890012 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.386297006 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.386064818 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.386373918 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.386403142 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.386183533 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.386329597 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.386426768 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.386767704 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.385831682 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.388883152 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.387192436 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.385560978 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.386107392 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.391229611 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.386065015 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.3857779 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.386476686 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.392860524 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.386086511 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.385849455 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.385931785 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.385602911 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.386037933 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.385991033 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.385818975 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.385873557 seconds)
  done (took 42.990564704 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.385720582 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.103142867 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.381559129 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.391719602 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.743248777 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.720540536 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.264065266 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.621001121 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.393042607 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.4711502 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.382903743 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.38624309 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.385892074 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.109217934 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.420019094 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 2.014260417 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.461531782 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.772415586 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.531966041 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.391384039 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.528105586 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.511314644 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.391614345 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.396044537 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.421226529 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.392608197 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.8214613 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.393353515 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.393861071 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.395821394 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.391528235 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.710052985 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.38141503 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.381369586 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.820619487 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.386670275 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.993399856 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.38683786 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.583062624 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.393547154 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.386554353 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.394608529 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.382024971 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.395389711 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.81094442 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.38683131 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.420239062 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.717209884 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.391501809 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.381550294 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.381398584 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.808630154 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.392665179 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.38137511 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.392449138 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.808521169 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.392858699 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.272283865 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.717782286 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.39390687 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.393283388 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.382096856 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.381098953 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.458766419 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.380895589 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.381544923 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.381095952 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.391464791 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.399908742 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.808055147 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.381553046 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.381507003 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.585489245 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.387863394 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.382729828 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.386719779 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.393362399 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.397314998 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.387562874 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.38651856 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.482921903 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.508222098 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.716862656 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.726475362 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.393055187 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.517486241 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.390695529 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.70921742 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.386467346 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.391157463 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.390486341 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.386901103 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.242178349 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.382279826 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.386958695 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.386875097 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.535156994 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.821607984 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.395918643 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.395811418 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.53079774 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.382810542 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.393831075 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.716161463 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.387049998 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.388693941 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.381710763 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.516984973 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.386965218 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.398291332 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.391858406 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.391161532 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.61494162 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.715648678 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.393389384 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.381882788 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.752433796 seconds)
  done (took 201.509120324 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.389032664 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.380978159 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.381757515 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.382498184 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.381472245 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.381916203 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.381504268 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.381016114 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.38230627 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.38205628 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.382010049 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.382782977 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.381446191 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.381646926 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.381896136 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.382317244 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.381303345 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.386982293 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.384493912 seconds)
  done (took 44.660435282 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.386060756 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.798389171 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.386488888 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.386268837 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.433393389 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.387100173 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.381684286 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.522825533 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.387331527 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.386410777 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.387447805 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.382031295 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.391314673 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.829771252 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.387947761 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.82993209 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.386878655 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.386432743 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.387423136 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.828641816 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.381667924 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.713213952 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.435190828 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.829612519 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.386933756 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.386749843 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.386314191 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.828232154 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.386857183 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.850220024 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.390271695 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.386034691 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.435150835 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.435816992 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.381999072 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.711977383 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.408916796 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.495938552 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.386825379 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.388440505 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.836836357 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.388919392 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.388675553 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.392047234 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.80629184 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.806130654 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.386677024 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.386873423 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.829544002 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.805884919 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.799566447 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.519370787 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.387266659 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.386732448 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.712062261 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.386281158 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.841939182 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.391193814 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.386870484 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.386937383 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.388502303 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.390080467 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.522737463 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.829807587 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.710401648 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.390869837 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.382001238 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.382213295 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.387346784 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.435344581 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.387194933 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.381615704 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.387073746 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.433314803 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.706195961 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.383170594 seconds)
  done (took 123.777965653 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.48529304 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.85369302 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.381992465 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.381563576 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.498553905 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.485300357 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.594170098 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.456427025 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.445597181 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.48585856 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.503171426 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.832143074 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.382151818 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.463971396 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 1.973483573 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.630394934 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.196537174 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.382091909 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.521283576 seconds)
  done (took 35.344314463 seconds)
done (took 513.691856372 seconds)
SAVING RESULT...
DONE!
