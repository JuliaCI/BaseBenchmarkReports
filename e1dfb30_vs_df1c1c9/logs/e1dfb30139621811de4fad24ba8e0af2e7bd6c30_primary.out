cset: moving following pidspec: 24659
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.002760852 seconds)
loading group "string"... done (took 0.575441236 seconds)
loading group "linalg"... done (took 9.314870276 seconds)
loading group "parallel"... done (took 0.177757768 seconds)
loading group "find"... done (took 1.374789679 seconds)
loading group "tuple"... done (took 2.256340617 seconds)
loading group "dates"... done (took 1.427022943 seconds)
loading group "micro"... done (took 0.237811229 seconds)
loading group "io"... done (took 0.651167951 seconds)
loading group "scalar"... done (took 44.668082253 seconds)
loading group "sparse"... done (took 14.305419371 seconds)
loading group "broadcast"... done (took 1.217069889 seconds)
loading group "union"... done (took 16.278488257 seconds)
loading group "simd"... done (took 5.405980178 seconds)
loading group "random"... done (took 10.953946497 seconds)
loading group "problem"... done (took 2.3456998 seconds)
loading group "array"... done (took 27.932149772 seconds)
loading group "misc"... done (took 1.267980064 seconds)
loading group "sort"... done (took 4.005856759 seconds)
loading group "collection"... done (took 24.372324328 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.749014341 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.155702379 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.173826512 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.224086745 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.239899622 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160959696 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.185810174 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.628511076 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.112600767 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.257788969 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.168453918 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.688210632 seconds)
done (took 6.499114735 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.321351123 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091452577 seconds)
    (2/2) benchmarking "String"...
    done (took 0.15684269 seconds)
  done (took 0.919773143 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.092222693 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.222534977 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.122372591 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.137847605 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.136795302 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.120254943 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.135614882 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.136896082 seconds)
  done (took 1.683573563 seconds)
done (took 3.697146573 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.967175258 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.884031944 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.543112714 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.149834359 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.191575462 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.168998373 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.392527412 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.177429978 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.1266278 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.13629736 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.208833395 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.367807861 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.58191586 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.060508666 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.118539644 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.143335779 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.098872453 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.728473494 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.097239233 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127448751 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.648239579 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.136032818 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.133426566 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141190435 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.223688569 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136782284 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.206188149 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.132987089 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.690109933 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119645681 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.208136775 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.115611615 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.182586627 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.298647637 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.097805651 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.123467322 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.692288018 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.213313702 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.133412162 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.111185398 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.698740413 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.10084447 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.229000957 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.134728403 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.134644869 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.209078722 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.122147701 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.114034385 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.121185531 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10728472 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.182639861 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.465592546 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.120992017 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.16386849 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.111116476 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.726290698 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.115252462 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.173808807 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.14164996 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.123193046 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.116148956 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.116601149 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.190845829 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.11923627 seconds)
  done (took 21.581344617 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147032752 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.169796923 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.108746122 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163662971 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.169947584 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.095547791 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.117937347 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093262852 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.152110967 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.218970907 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.166298942 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.171414191 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090470904 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.111598682 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12201227 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.274769187 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.14156513 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.128328751 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.113814371 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110659376 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.164563527 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.1150278 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.129547281 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.132735893 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.190413127 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.218534064 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.123450107 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.138298969 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.109438387 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.122020225 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.157771675 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.185001806 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09136201 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.108434979 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.216618924 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120526884 seconds)
  done (took 5.877446758 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.243523067 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116821074 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.264606416 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.19182459 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.230867649 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.185358339 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.21472329 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.141926638 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.316181873 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.257533968 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.205150055 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145870609 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115324766 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111341545 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096987222 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097554819 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.110348625 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.136798172 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.20901094 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.191609907 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.153530226 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124636235 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098963563 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.395040191 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11933061 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099903659 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.121106375 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088314254 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.220758441 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122604882 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.57656517 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.139399832 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.112538863 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150851925 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.22315317 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135535952 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.170095681 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105374428 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.118547029 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.26866621 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.133712326 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098179244 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.111584356 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.127801486 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150926783 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.153749914 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.118059065 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.121229659 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.292205762 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.101414572 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146356505 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.345365664 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.22412576 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.115360693 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.114401041 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.419158651 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117878513 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.128654526 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.116617026 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.376248298 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166478359 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.118791279 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095522555 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12569038 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095461283 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.428766031 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134171952 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.340037755 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096151267 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.204214599 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118794916 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.129712908 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101921971 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12038169 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.120948256 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.114647466 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093412178 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.112808228 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095079337 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102783463 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.135635701 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118471457 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093641055 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.179456832 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.126232042 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.137176071 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140558593 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103882509 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095415492 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.146622123 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113124365 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.102002019 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.17464661 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.126501655 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117925431 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11996325 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.15785691 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097934167 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.244613841 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.113994787 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100966129 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.148326612 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.119130533 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129806189 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.147990548 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114006913 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104143861 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.111669314 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.098821822 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163936641 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.11401581 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09490372 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.119635169 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11557958 seconds)
  done (took 27.728652085 seconds)
done (took 55.858000995 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.46863336 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.144361916 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.142215225 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.141026165 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.140542615 seconds)
  done (took 1.792901786 seconds)
done (took 2.514956312 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.434411425 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.255464583 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.122125948 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.245174859 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109325355 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.255267901 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.21701858 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.123286417 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.275089302 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101398565 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.242811816 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102845962 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.124768034 seconds)
  done (took 3.366437516 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.114142918 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.143613375 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097880677 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111202115 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109020244 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109185461 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.126515914 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132051328 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.125678381 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101503376 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108986308 seconds)
  done (took 1.997778571 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11004505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116389466 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.115344226 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106984701 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108009903 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106950259 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124371263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118790428 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.124923215 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103494622 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106221397 seconds)
  done (took 1.958706475 seconds)
done (took 8.033912046 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.25276104 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.119811524 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121649634 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.196065936 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.406800358 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.230377159 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.656424439 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.139664019 seconds)
  done (took 13.087780379 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.13590819 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.116451757 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095441053 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.114420547 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.115075563 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.113475752 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099702912 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.11531925 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099726068 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.116230945 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096856504 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096295652 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.113308222 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.0993319 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.115912182 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097913091 seconds)
  done (took 2.533799999 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140767524 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138778073 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.123342984 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112892382 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.121223928 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101778009 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.12498022 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.104268689 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.117867882 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.118251151 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.114282431 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.128274516 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.111048158 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.118116626 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106343829 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.13085499 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100802189 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.123016632 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106357148 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.123824088 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.128835876 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.104299491 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.127833308 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111750165 seconds)
  done (took 3.684130777 seconds)
done (took 20.025990909 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.209598167 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102570071 seconds)
  done (took 1.035115449 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.123787922 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.141485804 seconds)
  done (took 0.994610306 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.134019734 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.112824347 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.161700376 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118883411 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.114301948 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095778346 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.154269486 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.114267098 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096485329 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.113314647 seconds)
  done (took 1.946624351 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.104617071 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102923861 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125257245 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.138799595 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110398876 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.116360551 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102775373 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117889545 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104581185 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.112026062 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106928064 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.139860689 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.122225838 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12573902 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.120008937 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.121651123 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110910034 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.119588887 seconds)
  done (took 2.829770884 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.098622736 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098163527 seconds)
  done (took 0.925384234 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.102516888 seconds)
    (2/7) benchmarking "second"...
    done (took 0.111172789 seconds)
    (3/7) benchmarking "month"...
    done (took 0.100437782 seconds)
    (4/7) benchmarking "year"...
    done (took 0.116176687 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095103937 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.11089082 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094678767 seconds)
  done (took 1.460892415 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.610498817 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.278101525 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.406092066 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.141346685 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.180185033 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.439727517 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.181953293 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.136190043 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.136614878 seconds)
  done (took 3.288315982 seconds)
done (took 13.210416907 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.110596123 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.159132933 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.619507786 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.132306668 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093028757 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.174694981 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.331000368 seconds)
done (took 2.351855566 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.408735658 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139592456 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.099569846 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093744623 seconds)
  done (took 1.470844374 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.096789195 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106182504 seconds)
  done (took 0.939984353 seconds)
done (took 3.147280232 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095512604 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.146706906 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.092756303 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.227941237 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092999155 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.089612871 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109054531 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092818765 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.10973881 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.093415269 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.091583019 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109517597 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090165953 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106643631 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093252414 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090275845 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.107282834 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089072097 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106258897 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092879629 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089187291 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.107401893 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09219864 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.109461432 seconds)
  done (took 3.302696067 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.123145538 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.112675482 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101207432 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.119018256 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099358734 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.118005885 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100804197 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.112487184 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101796024 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.114100897 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099307901 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.11647873 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096428658 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.116578028 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096697813 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.116740176 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.118379686 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095623824 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096300084 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.118845513 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.117798375 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094722503 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.115898517 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102857025 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.116568757 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099405452 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.114202565 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094905468 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118608848 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100136441 seconds)
  done (took 3.987696524 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.107685162 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090652253 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.108489262 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105661041 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.108156376 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.094872094 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.108864817 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092178553 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092035693 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.108142833 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.093290524 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.108796448 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091051715 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109564274 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092889677 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09868138 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.135734082 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090366713 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.108541113 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091790271 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.115219195 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091116833 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.111033342 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.090686177 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090658493 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.10779412 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091989327 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10805485 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092602156 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090996558 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.116641168 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099666804 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.107560952 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.108433425 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.117227867 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090920174 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.119827091 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09067994 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.109328719 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090143817 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089801938 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.1082169 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090907785 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.122832575 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093903553 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092035479 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.108279667 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093315614 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.109809526 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095756859 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.107527903 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090446826 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093846994 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.110109495 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098556806 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.108130932 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09164592 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.107538993 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093051698 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090179501 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.108395026 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090359026 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.117790191 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093059092 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.143957838 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105662082 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.10798065 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093212767 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.111681136 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.103648452 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110506881 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116284331 seconds)
  done (took 8.120436903 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101154861 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121791982 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.095086253 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093758294 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107895606 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091432023 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118794359 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091556962 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111917103 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112125185 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109404594 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093546189 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111816832 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096511417 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109780535 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094443652 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121951594 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090429284 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09138104 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115053181 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092046743 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117907697 seconds)
  done (took 3.036041011 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.290763592 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.124796977 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.175889572 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.115050982 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.139766036 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.131751852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10104343 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.120186482 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100855704 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.124907769 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106676267 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118895212 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.139773809 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107073061 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124694031 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107872933 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118646032 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.125408739 seconds)
  done (took 3.119346754 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.11516364 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.11241711 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.124643671 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.11284826 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095528135 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11639792 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104763027 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.131661759 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.097893595 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.113673228 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109358893 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115271038 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098320183 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113967811 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099006441 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113086658 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09797513 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113218298 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108999075 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121225732 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104102083 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126691289 seconds)
  done (took 3.194138489 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118665396 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115527675 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122159368 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.120562755 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090360271 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.114912935 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105874288 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.112457646 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107334677 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.114611327 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095685193 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110522238 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.105078194 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112847636 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10379969 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112223274 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096962517 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112806644 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097172405 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.107793209 seconds)
  done (took 2.928200919 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.150808992 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132454328 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114865298 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.147655906 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133271875 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115863093 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.147461087 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115242732 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133222128 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135416129 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.132737147 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.132436901 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130684454 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14165782 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114751061 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.146788372 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.14698472 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128581521 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.134314683 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114971257 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152753213 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133732886 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129617903 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1325249 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115229557 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133162637 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114473602 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142710953 seconds)
  done (took 4.454184413 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097151317 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096354763 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.111851007 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.091817089 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.109611952 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091578971 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090791206 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109858914 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094821822 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108324289 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.094767821 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094210727 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111346964 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09443582 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111666616 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09374059 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094183074 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109820303 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091016873 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108854017 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093972115 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111267116 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094932215 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091641031 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10952126 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093720967 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109619976 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091310607 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093962424 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109435951 seconds)
  done (took 3.760245713 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.110216908 seconds)
    (2/2) benchmarking "in"...
    done (took 0.124787255 seconds)
  done (took 0.987544754 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096629194 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134329293 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091861736 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097975365 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.122421316 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096309687 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.126483997 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120828409 seconds)
  done (took 1.642075491 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.12844255 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.139782097 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.103969927 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.129436385 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.116694084 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.135191311 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.202009366 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102738157 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.122167022 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.097504466 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.136058857 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095746312 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.125221883 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104169447 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.123549812 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116710136 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.110873344 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106875545 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.122092625 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097748136 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101978339 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.137660807 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.129736197 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106322937 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.117145522 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112016575 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.13450234 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.110282652 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121349797 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.115021738 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.122774382 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089302114 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.12001878 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102585831 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.112056554 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116515563 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.139612097 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103594119 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.125350907 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102870261 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126502231 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09080299 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.130230118 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104892512 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.130348824 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102438874 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.119536482 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.090602045 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097329931 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.118926019 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.090840471 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.118332295 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089621858 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.126765888 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110756648 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.142627219 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097748083 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.120767633 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10156366 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.11778066 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.10481571 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.12040308 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111371637 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.11821791 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10935193 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.125958641 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10656215 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109363094 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088651581 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112606245 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110124145 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.145504872 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113882102 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.120432599 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103185585 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.11223706 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104329463 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121402696 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10829433 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.132020982 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101077756 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124259451 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109601796 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11989715 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102170977 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.122883059 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098353233 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.117809179 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097889008 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147294697 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098319829 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.113513465 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097393596 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.131132541 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102025299 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.118680197 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.09821753 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.126252114 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.08964806 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102001831 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121446445 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104825166 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.135308371 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120504568 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103630818 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.128053312 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.110248141 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.122075502 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102390805 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091851504 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121974766 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099050126 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.125318575 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089464652 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.12210431 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104281152 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.120829126 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115321522 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.116458759 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101260617 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128786223 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113866861 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.116744123 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092014141 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.119438661 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101601019 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.124879568 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114751207 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.11650557 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09129459 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091383814 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.128096046 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100780912 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.125750464 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102672052 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.123376513 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.089693847 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.112483952 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102362964 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.133854534 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100800262 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.124299049 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111751966 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.124443043 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099267788 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.12970914 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.099661113 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.11562922 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112254051 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.121384229 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091912852 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.126855999 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101917715 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.117024332 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10222359 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.126069458 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102864206 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.120482556 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099074894 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.120506995 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103373752 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.11494007 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.1047739 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098397057 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.135069337 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.119763424 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.091373256 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092396699 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.123361693 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097293992 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.118709177 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097419996 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.120897401 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102838185 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.121987143 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100583738 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.119083859 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117987252 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.131157125 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103848765 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.124748259 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11151002 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.119234965 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105728973 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119753262 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103556009 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.121000238 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110962096 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.12296824 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103857673 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101091535 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.110973432 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105597478 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.128429044 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.096558904 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113315344 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097832912 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120340342 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114588252 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.119729906 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103578545 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116354636 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106906688 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125957195 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102903956 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.118541615 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097412605 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10140714 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.126796584 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103321657 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122030221 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113073672 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124180618 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.090751074 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126638966 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098027574 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.126383881 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092437686 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.117900448 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098028789 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.121936237 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102063041 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.118008055 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090369312 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110258598 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130574707 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103791714 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.117225827 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100890416 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.135675447 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100207586 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.127004042 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102973843 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.128053059 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.144656251 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.09844504 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.121168026 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117043732 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120054177 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090559524 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107476947 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118192626 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096746371 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.118982971 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098572875 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.123759642 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106006894 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.124911327 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090112038 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.121177276 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099221241 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.097473034 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.111809327 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113011976 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.124421753 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104544381 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.136548984 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122187501 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103786158 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105018416 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.119700626 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103607837 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.122202984 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104556078 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.121636592 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.099867501 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.115964279 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.104699653 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.116281549 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094716372 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.119417081 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103043088 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.122239113 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106572506 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.118249157 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11306637 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.121405177 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103444514 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1624957 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099752874 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.116887847 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105085591 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.125713128 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102290585 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.121085055 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.091713345 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.128120736 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101588737 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.129232577 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101617289 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111090921 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103484659 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.120907826 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104291343 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102519739 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.123182188 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100946187 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120351587 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102491077 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.1359683 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098302948 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.132977041 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106890959 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.125619177 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102352519 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.125355505 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101489433 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.116393905 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105360339 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.121581185 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104700646 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.119331651 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106265024 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.122425918 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101495073 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.118596122 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104854888 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.123885476 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105287742 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.109423097 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097913154 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.097950412 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120780122 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109961532 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.123137478 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10028783 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.11861775 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104175431 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.119501382 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093625756 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.126785191 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10801786 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121120249 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117570437 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.117124719 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104434712 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.138410501 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09122085 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117253554 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095530124 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098506915 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.131018626 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102838098 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.131705059 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104184737 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.117921722 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093619334 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.123264256 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100399921 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.110059132 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096379243 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127042743 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101147185 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100599083 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.122595426 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106223636 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124144231 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110124073 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.12012462 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10468738 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.122534163 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094273076 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.117550709 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.098254827 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.122281249 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103781667 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.117199268 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094794942 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100388423 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.125149757 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10361953 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120942874 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101625513 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.13013733 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101551533 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.122158667 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108952097 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.110689044 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104137185 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120332756 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102272197 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.116087776 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106023017 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123633298 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106292008 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.13003833 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102294229 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.125404914 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103376204 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.094850707 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.121634391 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101925877 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.121725699 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098622256 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.123806058 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113339353 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.114863117 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106864404 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.125136401 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100645994 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.125313454 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105190301 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.124778287 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109038435 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.122813131 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105141162 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.127622117 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102610049 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.124113118 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105019928 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.119665517 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110621265 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.097665488 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.134641318 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.124486225 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104575133 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101134046 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.119085831 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101887912 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120891642 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100493577 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.132981286 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104088463 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.117665292 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09849219 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114693688 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106463232 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127261761 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111293863 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.123354591 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106222694 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.111664003 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095013287 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122825807 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100589789 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101608388 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.126032309 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10932256 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.124432999 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099424203 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.119283424 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111783069 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.129282191 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.108308815 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.119854435 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108071532 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123940435 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104295858 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.120135755 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103290414 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124014429 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108044603 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.121832182 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.099205639 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.136368689 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.111872108 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.12413074 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102190658 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.126305115 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10299418 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.111702145 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105172667 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.123008165 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110474257 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.124171115 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102573886 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.139201933 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097213545 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.120954868 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109432882 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12063915 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115993952 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.111682435 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105219177 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122558797 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10498518 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.093196633 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.11944839 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099718129 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.124261124 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09792792 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.112756887 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12041522 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.131468803 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107008864 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120146079 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101105821 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.111459827 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.093396416 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.117097197 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107194969 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.100990406 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.137731528 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.117507056 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099373228 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.092260451 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121675665 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105236915 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.126453668 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094358066 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.113045965 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100493919 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.126149201 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.116729172 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119754232 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103924793 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.12507843 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106277391 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.095667665 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.130307882 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093828083 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.126189653 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.140492093 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105097829 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127038232 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110928487 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.131876691 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105279862 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094211534 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.124157117 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106377988 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.125772071 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104380235 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.126746167 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.148442784 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106170052 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.117698543 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10152963 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105669381 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.119957825 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116833893 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126618481 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103552044 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.127009253 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10176911 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126605999 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113543228 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.128504616 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106239961 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.126932216 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100077294 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.123214055 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099348162 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.12221212 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10632974 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.124766054 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103814887 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126217925 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.099602955 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.140430798 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116469633 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126054768 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094602241 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.118048874 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.100362343 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093015931 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.12483991 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.095809552 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.119238937 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100552913 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119877516 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.108138962 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.126179853 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107145317 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123716449 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103931053 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091144903 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.128838576 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104103725 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.129356194 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094228206 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.123546924 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104701296 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.132792191 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109051104 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.121484308 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105492729 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.122246832 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108894015 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.113391424 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.10749272 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120724667 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.103090598 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.117756917 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103475686 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105001772 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.127119273 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105074376 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126617913 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.103918491 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.129351446 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106342169 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.115701224 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095094963 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.128254461 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097275869 seconds)
  done (took 68.08743286 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.190650975 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102170715 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092813434 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113717451 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14903802 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096011846 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111690544 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095830981 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09426063 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.134200589 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112112543 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094358604 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14279426 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.154719932 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129114981 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.134400714 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092525647 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115109639 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092925605 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115010792 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.142465832 seconds)
  done (took 3.312598812 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.130541525 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.137272646 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134411487 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122082824 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12767759 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116421908 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.13664053 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136019882 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.141170737 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111504933 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.1418112 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136546589 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.111175052 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.130213916 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110510489 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.133467108 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.142292096 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109461932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.138261887 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135594299 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114528184 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.135845606 seconds)
  done (took 3.635365383 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.113615358 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101945107 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.130563994 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.096238625 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.122467064 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096204485 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.129264239 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099306993 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.129159701 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.105240141 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.119902443 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.104191202 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109759736 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116174829 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.101151232 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.118977019 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111527272 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.122015883 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106052881 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.114886551 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.148272085 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.116342524 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097199464 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.120826138 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114308968 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.124986738 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.103113472 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121846572 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101355142 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102118999 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118450778 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107666917 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.131603152 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.101528034 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.120524286 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103860211 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.12323246 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096933698 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098634132 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.13073073 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096686547 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.124679079 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115571937 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120683926 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.098199652 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.126749752 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102905678 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.116182308 seconds)
  done (took 6.241205229 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.137954104 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168785878 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.124108422 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.165126938 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.142741457 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115443388 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124642188 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.164897117 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098210932 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.118315649 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125182023 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.143024549 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120486703 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.1086114 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.127278964 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10133261 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.122998833 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098563972 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130889627 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102389992 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.130259809 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126979496 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122523436 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.140240104 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127612953 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10022495 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118647477 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107939773 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.137723956 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111098669 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.128319887 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128424492 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124136056 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.126703409 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102174136 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123460509 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.144682737 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102704156 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123657961 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097337053 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124013027 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108374166 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.128637398 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.144373635 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105847082 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.126084736 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101567522 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115604664 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120353812 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124330551 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115392009 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.142773609 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125036804 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10187793 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127341999 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.141866009 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102243144 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.117468589 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106638439 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.138365897 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097258351 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128851401 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.141650742 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103421982 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.133934163 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121643792 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.127644821 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.128060318 seconds)
  done (took 9.337818277 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126927923 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.148307262 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126505407 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.147894792 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13128581 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111711315 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.131738384 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111170408 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.132757646 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.140160054 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112104402 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.195479554 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122583459 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119780875 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132094522 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112025407 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.131980394 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111140339 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.133436729 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131412039 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112936742 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.145914697 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112213465 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.146194577 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.150786936 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101819577 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133004451 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131083462 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127064426 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132266297 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151586667 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112727111 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.13146499 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.146039011 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130723906 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.132771091 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098775821 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131395774 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111597329 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132861724 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102306205 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1468478 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.1315349 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102932852 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131768146 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112096685 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.147374247 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.152358675 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.138960021 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121984966 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.132422335 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.145815837 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112776955 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.131151756 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126276664 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.157606346 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.146964455 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145381562 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11237252 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.147354477 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.146236296 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.156734714 seconds)
  done (took 8.947372816 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106196179 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099308484 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117538033 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.097128117 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119139062 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098050964 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098883555 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.120655939 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099390605 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.119690913 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100484176 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095912099 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116912159 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099616776 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116933373 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097380097 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09605436 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118340241 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102351236 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116582996 seconds)
  done (took 2.954711873 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.115836486 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.145816382 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.102023174 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.13131951 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10441578 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.132302813 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103153902 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124482825 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102913617 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124925562 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117893264 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.13728326 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12122277 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113155823 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.137210709 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11103901 seconds)
  done (took 2.744600164 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.133115931 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.139902208 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.151227235 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.107493773 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.097209482 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.13295542 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099817807 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.118447519 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.095935864 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.132864755 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.10762007 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.133266629 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100364538 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.119194136 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101883931 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.128477922 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096278252 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126305297 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101151359 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.150281358 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107950236 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.125134876 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10227126 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.125050843 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104420956 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128618837 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110087758 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.118994005 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100468032 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122385745 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104823865 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131702014 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097640666 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.128283025 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099138524 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.118549252 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101247951 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.120914275 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108515258 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.120826835 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100188751 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123838351 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102032157 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.122349168 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098038966 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101081018 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.118245556 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108385684 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.124059944 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105448735 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122047284 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110045021 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.130136266 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114531043 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.134176855 seconds)
  done (took 7.190998034 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.12486031 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125618788 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.109314364 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.117439162 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106502306 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.12919474 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106533995 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102736371 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.125426651 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096956414 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124302177 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104834451 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124604638 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105881543 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.124652408 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104898022 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.115893972 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104382897 seconds)
  done (took 2.881422139 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113472042 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100036032 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.131523503 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.100836235 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.121667611 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103096522 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11660284 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099197439 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11919682 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101241599 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121335151 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105194411 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098742726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123837027 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100484987 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121301702 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.103442105 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118943008 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101314572 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115407374 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104275917 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098278607 seconds)
  done (took 3.249190961 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.129763283 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.163681933 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.120323112 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.174863962 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.129416683 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.108818846 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.140798654 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.109563174 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.150842846 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107037674 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.126888185 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.107581563 seconds)
  done (took 2.400750111 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141000732 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170251571 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100769191 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125123844 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119018711 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131143082 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109168871 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130629472 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144381405 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148991727 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110428857 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144509243 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123479279 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145463487 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13799635 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118419588 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130174903 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128914591 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10323433 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157813028 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108946121 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14604673 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128897288 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109720673 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130055134 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144378551 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126190323 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150729231 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129164981 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124655463 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139472178 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108268696 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146795762 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150843976 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10466539 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145921189 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129805058 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137554557 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139012724 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143437063 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105472489 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140283299 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1438547 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118591902 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145534894 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13046478 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118236984 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130388956 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10950863 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168712767 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140358805 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144581042 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118773554 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145073559 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14470436 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168622248 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129175969 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145291192 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138618571 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150427231 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123805128 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140238278 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144693399 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1291967 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140041163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145070089 seconds)
  done (took 9.660044146 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15900534 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121194113 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10895342 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151234277 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14549846 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109615077 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131275341 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128828402 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110734328 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123268615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189505895 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110976827 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144309734 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.144848513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110192189 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129683284 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110651469 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145788541 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102999326 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168370844 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131211436 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144636834 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124449863 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145505338 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14944485 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13979937 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110766333 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130392947 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110945882 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130775028 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118709616 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131752593 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144834747 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100779743 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145247754 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109577325 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130729175 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139415231 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110375481 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139607325 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145005525 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137638714 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131759212 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109203592 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15175944 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131105309 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109566125 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125264411 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108974834 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12548854 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150711707 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129800214 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15222803 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145746964 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129559661 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111275633 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131354376 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11095469 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130982299 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118445314 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145563487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130266072 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16971176 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110900848 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130882559 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124416963 seconds)
  done (took 9.470837365 seconds)
done (took 179.382916451 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.130672149 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.166616896 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.11784621 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.188523987 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.101778797 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.159974429 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137848066 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.140368406 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.101489356 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.100411948 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.124149692 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.10702231 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.190796232 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101126479 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.122339981 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107376281 seconds)
  done (took 2.931935564 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.225012448 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.335924455 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.129650304 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.13135078 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.111277426 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.128455627 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.110196034 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.130863039 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105076281 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.144816059 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10696311 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.128202003 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122666969 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.128846341 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.104204842 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.126907629 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.122411909 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.128321643 seconds)
  done (took 3.363465927 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.149926267 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.191114523 seconds)
  done (took 1.182882377 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.154345016 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.227566253 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.355207256 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174337408 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.160694735 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.158783824 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.196933083 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127562015 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.232572127 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.157945286 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.156740363 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.111548742 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.165991773 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.141431957 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117759438 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.132292327 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145040088 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135785237 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112577597 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.134888079 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140708498 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.13550788 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.139500561 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115350798 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.221198134 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.156583741 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.113365987 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.135952985 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113617312 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.134343226 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.142297143 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138216789 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.156731395 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.219953023 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.140464916 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.21682739 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.145092545 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111984416 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.133627786 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111571497 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.139653621 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.13803937 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132912752 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.132080957 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114124957 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.144923738 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112987782 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.135077404 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123620826 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.148351976 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.145767863 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12204221 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.236185149 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126213876 seconds)
  done (took 9.013687386 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.966082173 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.181083947 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108455023 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.139498904 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146172804 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15172648 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.209489168 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134792951 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.315056392 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.953738857 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.153137505 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122700435 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.307731011 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.301845546 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.227035856 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.416357099 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.817549193 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.14842282 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140307635 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.191365948 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142056096 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167601783 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.136243542 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.49174868 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.133575203 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10723282 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140901202 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.142751037 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.210092378 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107502436 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.135426588 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.234173408 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.312283378 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.267062649 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110017574 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.128503728 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105802915 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.215389186 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.33602971 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.284249668 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.211539662 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102872126 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12787625 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124251454 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.158004302 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101402919 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.235281353 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.222881091 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.223558378 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.135434286 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121367633 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142566646 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144823408 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.210981814 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103172775 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.411934638 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.418935666 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105446089 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14367373 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.151724705 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.308432795 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129456174 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.297803608 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14417203 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.27925719 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105307006 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.848377064 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.214917262 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.128923224 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119551223 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.141010921 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115267572 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146460094 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.207004112 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.462652155 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.149373287 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113259888 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128129819 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.266116262 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127882995 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107710621 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.211988387 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13338241 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119547746 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150879999 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14665746 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.220596325 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.297008616 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.148355584 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120143106 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.137038371 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145724783 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.111697272 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.262279304 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.295918456 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.207186447 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.264112268 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148264061 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.212887923 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.235569345 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122331389 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.218006323 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.142154125 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.151443321 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125456665 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.291037637 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.1783081 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105823424 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.138141443 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140267294 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.180150044 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111981092 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13964449 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.218008977 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.535827691 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.213733127 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.12526614 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111754218 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142334042 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.211498295 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138876578 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.306595958 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144767671 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.216733513 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.14034171 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10329328 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.141970309 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.214661131 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.148602403 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121726422 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147474336 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117846467 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.322138838 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.264878825 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.149636687 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.301183956 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193593194 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.141937797 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.224310715 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144113089 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.218968557 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.142933522 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123530436 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134380161 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842636945 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.126868743 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.141399564 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113169939 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.228261691 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128606828 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1083329 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.128234788 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104780734 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.871436338 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110205295 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103286434 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.131005378 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.139901888 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12029754 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140662091 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114895856 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.209875513 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311765255 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.145844699 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.139696979 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108715079 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.211228612 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.133728864 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108350618 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.129116773 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108787679 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.142013992 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114614405 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107944644 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.245012805 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.208634246 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.296935685 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.615320314 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.130011083 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107333477 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.30856758 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105892021 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.38140561 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142471735 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.27913827 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.239906387 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103993952 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.414107462 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.21886649 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.229770491 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.132861422 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.223411459 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103342465 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14122814 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.21172101 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129429333 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119243037 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.206830986 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.153065927 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.148950443 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.20677685 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.130473326 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.278799975 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.125654914 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.219953888 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111972235 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145892039 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.382821974 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107954766 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.155742128 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.212846843 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135474362 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109551046 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.089210513 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.130484825 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122416274 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.144201413 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.300831514 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.215657048 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141844688 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119956804 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.146579378 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.212690341 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.259077511 seconds)
  done (took 52.944797334 seconds)
done (took 70.279233298 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.404949796 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.343014472 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.376508089 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.253577307 seconds)
  done (took 2.338799529 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.228271599 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.192081958 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.155136332 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.128796133 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.187951044 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.107007701 seconds)
  done (took 1.867276202 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.647720652 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.563714781 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.433626167 seconds)
  done (took 2.516916863 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.311850504 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.329862302 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.378952017 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.573788119 seconds)
  done (took 2.588168634 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.258453243 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.127321775 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.143009025 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.162098389 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.188282827 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.277247415 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.171970875 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20312246 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135470251 seconds)
  done (took 2.595910308 seconds)
done (took 12.781344925 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.175764232 seconds)
    (2/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.33131667 seconds)
    (3/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.246001194 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.17156046 seconds)
    (5/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.277704333 seconds)
    (6/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.128299987 seconds)
    (7/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.16972416 seconds)
    (8/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.12273313 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.153865637 seconds)
    (10/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.145776439 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125954529 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.137771305 seconds)
    (13/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.131736665 seconds)
    (14/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.246737561 seconds)
    (15/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.188265731 seconds)
    (16/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.209257502 seconds)
    (17/286) benchmarking ("sort", Float32, true)...
    done (took 0.26948333 seconds)
    (18/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.123166256 seconds)
    (19/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.253190925 seconds)
    (20/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.256803302 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.203772075 seconds)
    (22/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.160211396 seconds)
    (23/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116015235 seconds)
    (24/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.196717946 seconds)
    (25/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.197672283 seconds)
    (26/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.188805761 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.150160731 seconds)
    (28/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110463032 seconds)
    (29/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.250947738 seconds)
    (30/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.154068426 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.261972056 seconds)
    (32/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.14136922 seconds)
    (33/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.201454541 seconds)
    (34/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.160074159 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121707473 seconds)
    (36/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.245979454 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.283005715 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.171286257 seconds)
    (39/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.139924425 seconds)
    (40/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.268288139 seconds)
    (41/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.149276465 seconds)
    (42/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.269096918 seconds)
    (43/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.12778431 seconds)
    (44/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.217217905 seconds)
    (45/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.150565026 seconds)
    (46/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.213123559 seconds)
    (47/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.258669994 seconds)
    (48/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.253354206 seconds)
    (49/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.212588479 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.1155789 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.169284635 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.173912497 seconds)
    (53/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.228622298 seconds)
    (54/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.149234665 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.137659561 seconds)
    (56/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118769227 seconds)
    (57/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.245112395 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.173510786 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110463834 seconds)
    (60/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.255893762 seconds)
    (61/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.150169776 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.114613972 seconds)
    (63/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.238822569 seconds)
    (64/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.138354355 seconds)
    (65/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138844685 seconds)
    (66/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.235048646 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.172392553 seconds)
    (68/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.212413394 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.28555609 seconds)
    (70/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.14961043 seconds)
    (71/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.229436797 seconds)
    (72/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.135429717 seconds)
    (73/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.099233261 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 0.127601673 seconds)
    (75/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.266921997 seconds)
    (76/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.21274096 seconds)
    (77/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.148238097 seconds)
    (78/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091517833 seconds)
    (79/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.189865109 seconds)
    (80/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.227223597 seconds)
    (81/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.126308567 seconds)
    (82/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.133828797 seconds)
    (83/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.121264147 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139946071 seconds)
    (85/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.147815171 seconds)
    (86/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.140435643 seconds)
    (87/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.103615158 seconds)
    (88/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.136347642 seconds)
    (89/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.238257783 seconds)
    (90/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.096694879 seconds)
    (91/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.112813056 seconds)
    (92/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.090182122 seconds)
    (93/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.121025202 seconds)
    (94/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.115836222 seconds)
    (95/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115537354 seconds)
    (96/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.171107176 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.145665277 seconds)
    (98/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.102078926 seconds)
    (99/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.095063685 seconds)
    (100/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.124885228 seconds)
    (101/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.154915352 seconds)
    (102/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.181149486 seconds)
    (103/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.176524948 seconds)
    (104/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.091649578 seconds)
    (105/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.141108906 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.116885677 seconds)
    (107/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.215529631 seconds)
    (108/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.117730159 seconds)
    (109/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.129902788 seconds)
    (110/286) benchmarking ("sort", Float64, false)...
    done (took 0.202422693 seconds)
    (111/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.114943953 seconds)
    (112/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.213321232 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 0.230390853 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120902026 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.13922247 seconds)
    (116/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.172003778 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123664571 seconds)
    (118/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.178181943 seconds)
    (119/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.09208481 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.13488601 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123055982 seconds)
    (122/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.136571088 seconds)
    (123/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.214014196 seconds)
    (124/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198347633 seconds)
    (125/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.171760113 seconds)
    (126/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090449489 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.145238238 seconds)
    (128/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114001142 seconds)
    (129/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.181632911 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.105203308 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.139862767 seconds)
    (132/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.148097157 seconds)
    (133/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.11125118 seconds)
    (134/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089675944 seconds)
    (135/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.227677369 seconds)
    (136/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.233944927 seconds)
    (137/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.145902751 seconds)
    (138/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12195358 seconds)
    (139/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.12465833 seconds)
    (140/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091465794 seconds)
    (141/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.161667065 seconds)
    (142/286) benchmarking ("sort", Float32, false)...
    done (took 0.181825418 seconds)
    (143/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.116270408 seconds)
    (144/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.128170811 seconds)
    (145/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.112878208 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107492249 seconds)
    (147/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.113374616 seconds)
    (148/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117166174 seconds)
    (149/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.14481472 seconds)
    (150/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.092938379 seconds)
    (151/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.118124939 seconds)
    (152/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.113506848 seconds)
    (153/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.13796638 seconds)
    (154/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.148186445 seconds)
    (155/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.090551256 seconds)
    (156/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.112834677 seconds)
    (157/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.091274972 seconds)
    (158/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.143839694 seconds)
    (159/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.205698742 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.11804672 seconds)
    (161/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114436846 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.148853504 seconds)
    (163/286) benchmarking ("sort", BigInt, false)...
    done (took 0.280364602 seconds)
    (164/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.192591868 seconds)
    (165/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.12131355 seconds)
    (166/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.172735829 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.172596327 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11526675 seconds)
    (169/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.112715848 seconds)
    (170/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112726564 seconds)
    (171/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.146786654 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.124121288 seconds)
    (173/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.113632501 seconds)
    (174/286) benchmarking ("sort", BigInt, true)...
    done (took 0.291234823 seconds)
    (175/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.093718712 seconds)
    (176/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.089130711 seconds)
    (177/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.153851907 seconds)
    (178/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092586418 seconds)
    (179/286) benchmarking ("sort", Bool, true)...
    done (took 0.263618079 seconds)
    (180/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.141014274 seconds)
    (181/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.112179899 seconds)
    (182/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.115141154 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.115967505 seconds)
    (184/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.156362373 seconds)
    (185/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.097533857 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.138875355 seconds)
    (187/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.091552856 seconds)
    (188/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.13552174 seconds)
    (189/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.091992107 seconds)
    (190/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.137976074 seconds)
    (191/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.114522323 seconds)
    (192/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.136041153 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126401264 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.145834904 seconds)
    (195/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115709379 seconds)
    (196/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.113492918 seconds)
    (197/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091597116 seconds)
    (198/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112405555 seconds)
    (199/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.129622468 seconds)
    (200/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.099003901 seconds)
    (201/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.136133879 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.116459437 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.133767458 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10681856 seconds)
    (205/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.28558176 seconds)
    (206/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.161294926 seconds)
    (207/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.093474418 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.135793113 seconds)
    (209/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091600373 seconds)
    (210/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.14717816 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.116549669 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.138390599 seconds)
    (213/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.094962937 seconds)
    (214/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116305401 seconds)
    (215/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.116654362 seconds)
    (216/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111320552 seconds)
    (217/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.132530649 seconds)
    (218/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135306393 seconds)
    (219/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.138952174 seconds)
    (220/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.090694078 seconds)
    (221/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.130778843 seconds)
    (222/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.092477947 seconds)
    (223/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.129943919 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.116701571 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.14011301 seconds)
    (226/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.124101396 seconds)
    (227/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.114618451 seconds)
    (228/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111479767 seconds)
    (229/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.138079169 seconds)
    (230/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.155756186 seconds)
    (231/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.145355661 seconds)
    (232/286) benchmarking ("sort", Int8, true)...
    done (took 0.263201654 seconds)
    (233/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.091549405 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.13082787 seconds)
    (235/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.109038749 seconds)
    (236/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.117639286 seconds)
    (237/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.115626783 seconds)
    (238/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.136249896 seconds)
    (239/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.16511293 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.140561257 seconds)
    (241/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.092146405 seconds)
    (242/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.099547026 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.139772804 seconds)
    (244/286) benchmarking ("sort", Int8, false)...
    done (took 0.241646588 seconds)
    (245/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.09244162 seconds)
    (246/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.147899544 seconds)
    (247/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099242351 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.149301438 seconds)
    (249/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115386152 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.116242035 seconds)
    (251/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.098544106 seconds)
    (252/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.136413692 seconds)
    (253/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.099205455 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.123266782 seconds)
    (255/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.117240962 seconds)
    (256/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.114988941 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.142075688 seconds)
    (258/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.215002941 seconds)
    (259/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112649228 seconds)
    (260/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.139004487 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.118295923 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.14033127 seconds)
    (263/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11585776 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.130512217 seconds)
    (265/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.09340121 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108237519 seconds)
    (267/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.143024698 seconds)
    (268/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.099974057 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.149918916 seconds)
    (270/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.093710724 seconds)
    (271/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.114722501 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.137254367 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.135644973 seconds)
    (274/286) benchmarking ("sort", Float64, true)...
    done (took 0.271682641 seconds)
    (275/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.0930969 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.140047788 seconds)
    (277/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.092071473 seconds)
    (278/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.136032736 seconds)
    (279/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.112390412 seconds)
    (280/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.137410103 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.111403689 seconds)
    (282/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.114608294 seconds)
    (283/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.113208305 seconds)
    (284/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.141742198 seconds)
    (285/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.091141153 seconds)
    (286/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091064674 seconds)
  done (took 43.863449932 seconds)
done (took 44.74213448 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.128616018 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179166556 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.12151535 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.166161833 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124389112 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.150710365 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.141578538 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.122516192 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.147456532 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126559415 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.150208285 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.101971257 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.14352261 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121036965 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.144888534 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142271068 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.148188939 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.117095596 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.1355788 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112848248 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.13528649 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114034332 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.138324942 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102236429 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.143049231 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.11889167 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.138964733 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.12050168 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.137580157 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108737295 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133866152 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115995551 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.133184632 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122674618 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.136428243 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.112424109 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.143597723 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118690588 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.138558552 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.114781616 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115965175 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.139168771 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115286914 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.14060777 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.112481275 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.135268226 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.111196651 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.149542081 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.166157653 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110670697 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.11491847 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.144438367 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.123406291 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.140266206 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109832161 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.136294216 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.11410026 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168041219 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110158356 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135254394 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115665238 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.139874177 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.112507292 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.135264227 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111925104 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.14434482 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.120028785 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.136222478 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119318217 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.137886365 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.124005914 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.135781192 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.110442321 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.131728403 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119398044 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.141593258 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105945657 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112036422 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.138866283 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114516147 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.13657515 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108617104 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.138770809 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112821227 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132235432 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103015481 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.132684275 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114444438 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.13546898 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.113051902 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.136495198 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.114504058 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115009295 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.14379549 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136079269 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.114734463 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.136663436 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.11505195 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.139726325 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110780339 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105075082 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133105811 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115588204 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.131389077 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.113150481 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.148488497 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110243549 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.136938297 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.112903704 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.136317519 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128812553 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.143636729 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114479008 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.134372418 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.107796322 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.140414417 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110964938 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.133327946 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110494383 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.137397636 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.113366691 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.136403324 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108939792 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.13941941 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123380358 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.105430276 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.134963033 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107742288 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.138530958 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114798037 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.138460246 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.109413595 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.134356149 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105372442 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131677158 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.110418999 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.141003445 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108796033 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111879304 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.137457758 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.111452312 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.137460514 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112352856 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.139383188 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110068073 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.126450123 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111236914 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.131547153 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115249029 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.13805743 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113958676 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.128992537 seconds)
done (took 20.207809736 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.130807639 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.222344228 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.175514346 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.157028158 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.189698632 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.166647144 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.151187578 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.158352499 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.149341928 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1780046 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.154864651 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.165635632 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.180933863 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.126333859 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.166877211 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.144050425 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.120658128 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.16297711 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.186615541 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.14642197 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.175610016 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.149838954 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148193472 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.177354537 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118009989 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.186824071 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.151938716 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120375821 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.150783234 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129419479 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.165995141 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.153451634 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.126810712 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.16100368 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12723264 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.143022988 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.16565556 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115124218 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.147269702 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123755789 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.161266353 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133334519 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.143109297 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.160065855 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.121748463 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.150286581 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.120194307 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.143262235 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12163768 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138050065 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129233379 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.172243506 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.145004039 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126826979 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.150098835 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120262873 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.151673603 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.150503733 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.126976876 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.151090573 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.12317938 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.150834653 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129623818 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.170668278 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.146240627 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.125924674 seconds)
  done (took 10.757093499 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.148620321 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.182173411 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.127075435 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.152668256 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.151116485 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.106570635 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.129813187 seconds)
  done (took 1.938606359 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.113452808 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.168272976 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.15050536 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.174554387 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133603577 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.179085349 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155160345 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108290509 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.163654657 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.1238114 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.166269095 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.202322733 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109681853 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.150603776 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.152682307 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.133945924 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.178428448 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.108998066 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143299461 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150487219 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.140491712 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13562143 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.154317122 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.109756214 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.159076691 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.110871319 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.219653719 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152540771 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108004839 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.144496716 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118750623 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.231961565 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.160949007 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.122893027 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131975809 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.169902292 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.135335925 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.142715543 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.140354156 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.141776603 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135623372 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.143844476 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119790097 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.143963793 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119682229 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.150899771 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.126996351 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.146696108 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116918114 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.169027146 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.149764093 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137004544 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13649267 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114754146 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.149273369 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117716981 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.15176406 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117614587 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.167656945 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120820375 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.168148689 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.1673021 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136553582 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.16871995 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132786577 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.161764989 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.15975528 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117859021 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145152839 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121245771 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.168369279 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116060075 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.149656325 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.1260304 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146160266 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.139660963 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.165827829 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114790055 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.150607677 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115990622 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.139394133 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.108721349 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.152505596 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113821878 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.138224724 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134931171 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.151882291 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117782583 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.141932683 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.166616345 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117001001 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.152398338 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.126792938 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.141438694 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133040397 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.171088838 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.151201479 seconds)
  done (took 14.802693974 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.119986955 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.109893199 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.142658992 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112414568 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.136170745 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.111010058 seconds)
  done (took 1.680820933 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.157528284 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.140351725 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.129948015 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.144637496 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187171576 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13836199 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.161526883 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124021552 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.15945485 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128909806 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.162077888 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.16390285 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.147396195 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145027162 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136363471 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.145935427 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137247956 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140184339 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128043103 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139086164 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.129528121 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146028485 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11330664 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.163238036 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.143032494 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121588816 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143426813 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130331111 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.153141499 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124507019 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.145024825 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118722997 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.146032606 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12348951 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.16324723 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.145540981 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113257572 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.144573185 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121862637 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.14290431 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.140232276 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139299285 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129378152 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145714649 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123585891 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.145721486 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.119903595 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144692418 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.161741518 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120579142 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.144384402 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121755266 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.143314301 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120690748 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.146419567 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125941873 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.144700965 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.137276686 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145659233 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121185384 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142167046 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118594345 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150626245 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11772683 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143359247 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.11945248 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.146724419 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114689934 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139618149 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119936892 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145993172 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.116204611 seconds)
  done (took 10.90093381 seconds)
done (took 41.005980618 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.72377309 seconds)
  done (took 1.667972112 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.017630314 seconds)
  done (took 1.965928037 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.150779594 seconds)
  done (took 19.132216918 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.656601082 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.801212594 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.253383849 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.196222385 seconds)
  done (took 3.854368037 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.021506766 seconds)
  done (took 1.989962448 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.37148847 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.285463715 seconds)
  done (took 1.611004896 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.891752651 seconds)
  done (took 1.856310236 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.719254772 seconds)
  done (took 2.677568836 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.44846672 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.228375404 seconds)
  done (took 1.648814105 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.672036259 seconds)
  done (took 1.63377884 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.013628669 seconds)
  done (took 15.981103751 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.298236096 seconds)
  done (took 1.275212081 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.351688279 seconds)
  done (took 1.316541848 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.800840135 seconds)
  done (took 4.765545923 seconds)
done (took 62.332984007 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.128248372 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126024188 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.152791004 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122598731 seconds)
  done (took 1.488037669 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.137184472 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.147797412 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.128204877 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.146027278 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132996546 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.149169656 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118623312 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.154327701 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121131833 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149356928 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122145754 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.14702976 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.1236982 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.144674886 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116890613 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149870138 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126320882 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.147533508 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.120259294 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.150708862 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118788668 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150430254 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.150346854 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122213359 seconds)
  done (took 4.252249081 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.126827166 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116729866 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.144014106 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115211544 seconds)
  done (took 1.479411897 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.133665216 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.165211849 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139847828 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.154476813 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.139621033 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.165027861 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115177489 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.141332137 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117458151 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.155397128 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117462132 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.169089733 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.164363991 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.111000326 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15605595 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.106735135 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.139523751 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139878555 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.153989195 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12937223 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.139627778 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127601588 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.14875938 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.132405536 seconds)
  done (took 4.338959359 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.226139618 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.15956408 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.171917595 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.125041308 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.206696243 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.172267095 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114852848 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.173273616 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.116010072 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.154159689 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.12011632 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.206042224 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.15127296 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121143638 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.144134403 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.128160495 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.152531618 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12451028 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.145213125 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.157828667 seconds)
  done (took 4.050216884 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.132003221 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115451527 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.13673993 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.114788947 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.149081928 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.118101272 seconds)
  done (took 1.742963375 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.115678842 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.107891404 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.134974731 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.107752184 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.1383923 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10858755 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.106615981 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.134575525 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.107825686 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.1343634 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.107961367 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106154569 seconds)
  done (took 2.393622468 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.51896629 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.113971834 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.154728622 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.116215152 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.167602151 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.138806142 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133357406 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.13955816 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.207705854 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.127447324 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.160092735 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.205651982 seconds)
  done (took 3.167740649 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277043801 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121056966 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.345489912 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.408799311 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193394637 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211297122 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.32083958 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207470725 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.241168845 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16919859 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250622877 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194561154 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188695187 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222638599 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146640116 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.218286719 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224409073 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265981402 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185915962 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269161053 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215514225 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211369343 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234126629 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188178718 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171272498 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207025513 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11567879 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156792715 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226929671 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218722436 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238311906 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191866358 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146251401 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29671948 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295792096 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242947991 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.387254194 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167000443 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.230815141 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.234729872 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.333878318 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147583501 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.295653115 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165785937 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162459371 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236408434 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200120762 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.230930781 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.16173891 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146956085 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28345928 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22306211 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.239590218 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144414649 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.3770057 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158634838 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175429951 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224890077 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258924357 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247594611 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212932739 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148892045 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22963721 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231834571 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23618737 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.177623216 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.219002517 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153485769 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225955101 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254067775 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234501629 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213796648 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.279662898 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166801891 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213497888 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216026591 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189696705 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227793785 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175442486 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.144988975 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184405846 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142834986 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156267278 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.218318973 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120857488 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275041416 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168510095 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.324698083 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268453648 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199893899 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209990395 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212820136 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219373834 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179486885 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.118029626 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183388398 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.204247858 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195076369 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136268815 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198995172 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181675566 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125292028 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188309819 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.147496653 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201002951 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136461437 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21302241 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208797747 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.156948737 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182188956 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185461168 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.201660804 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220189009 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2390017 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162165452 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134699759 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254075248 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199904148 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.166849324 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225331837 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.244029711 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.208680751 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142223807 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253454305 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259509151 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149079332 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247308035 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180075988 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165702961 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.195780582 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174717983 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201951045 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.192234739 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155943723 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.166885185 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281443412 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125398807 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16634507 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225069578 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125380849 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15711979 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180631007 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14196945 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.174549285 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.18900007 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.141764052 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198889234 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20044668 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192603827 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208403129 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184032929 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272325546 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134790901 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.200454274 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18057042 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.113699222 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.260205028 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241445317 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129862608 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237529657 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.215368561 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272061983 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212256708 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131060313 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233092626 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156956648 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116733736 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216957164 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205986123 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209775004 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.236255225 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242059347 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.216598044 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192178096 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184528318 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220783835 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.223463202 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213384989 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.151962708 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211633488 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22016267 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.146142051 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12085409 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154394295 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173048532 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133683667 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160727281 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246226682 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21211742 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232438885 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207378677 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173593043 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237436159 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124412738 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211471566 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.223716233 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170470597 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.240270795 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233970885 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215120572 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176960713 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230861122 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.116010552 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151138215 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135197366 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21286126 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16076724 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138330532 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187100045 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2365696 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226008853 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188435667 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285157481 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216641442 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.248462445 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118996372 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.19336658 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217348072 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199226428 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.198426641 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164606063 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.205662706 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229929933 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154851056 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288730563 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177527097 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222050673 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303412227 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.196686744 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130860468 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187147897 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213465005 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178721258 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17432625 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183408 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167873949 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192222144 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.142527544 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1549988 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248799156 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175041545 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248019857 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.195972584 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239932153 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122486254 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186984801 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204188736 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178389794 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114556335 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217861404 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249943384 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184694582 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201469481 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224673748 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15862592 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.358650763 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252595547 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247165817 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170540552 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150778819 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204907586 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200667689 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211442535 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235881363 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183959461 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235852063 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197479786 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.149581047 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166599652 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153345209 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18922608 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.196815605 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.166378347 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.19376272 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146491941 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253369598 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180900302 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200534666 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21605754 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146703353 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.192329614 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174777377 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265034634 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198740089 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233199091 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.193030317 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.208505086 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240211239 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121367138 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155616461 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124271026 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235401927 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160542246 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203642277 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.223279618 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246127829 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202908931 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214782644 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169142397 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121275229 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203729432 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185925099 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250386941 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184396979 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.16567732 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249659401 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.153747871 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15957753 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208172635 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.333097005 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177863219 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226158026 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.11748263 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.317200428 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150846596 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131962629 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20090331 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219122412 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160440711 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.194392588 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211559252 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183427034 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200404291 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141015219 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.262603918 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272158856 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22675637 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230860116 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.182040765 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203892011 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21187214 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226819441 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150205392 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178854103 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201287092 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236167013 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.239365936 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.161136291 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179148387 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207467504 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204400901 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244525684 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163888539 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2399976 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130586959 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218005599 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178653295 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150691684 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195029505 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.224083759 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138452365 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222002466 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198755403 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1597946 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124256346 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196171381 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198456904 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181521452 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128711058 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244344188 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.152991849 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21094611 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228262432 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128386527 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195587576 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181485181 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13094319 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179587489 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18478633 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138357111 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.203252925 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240665679 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.159789854 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227581694 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23250645 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210852592 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204086877 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149729158 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69652423 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.1254584 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232137154 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180997933 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252388401 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183689085 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218348779 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205734976 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155426073 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221523879 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189270461 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.259419441 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21970558 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.202209463 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130660233 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184614097 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181846964 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131657399 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189199068 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207749256 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170163709 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137926273 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.198752378 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183653366 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.181535651 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140423396 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242349373 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181855752 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249347685 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236537631 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172098717 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215759806 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247325371 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128618416 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.209084127 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221319723 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177700293 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197249441 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127879848 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.163697286 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230559138 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119231384 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204920095 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203430986 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208317006 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208637798 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139643993 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205957643 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181296963 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204365305 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122237656 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.19459621 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199216125 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158959379 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125373794 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195828864 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2085459 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.200719616 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12501353 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.203701611 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235567213 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121931941 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165633272 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.324512167 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196964143 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25561975 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.193762733 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136027193 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176428204 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198483694 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.191582437 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172851716 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.156652323 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158461561 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.133590765 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.218457407 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.194984164 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196070076 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22802269 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203777347 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240789536 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133654785 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.305326524 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166813123 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166830225 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.163466424 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127100961 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175763617 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16603901 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15504582 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.263429992 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23065529 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160118293 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.181908218 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155525088 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123731597 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160824283 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201560026 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166081698 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198041439 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184421028 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.113958952 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181299844 seconds)
  done (took 96.282375918 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178996778 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.168562868 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.177738934 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222265737 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199111906 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.277841835 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.235463378 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25692268 seconds)
  done (took 2.78771183 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.134614178 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.165998813 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.174716492 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.126247683 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.140417802 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.452456527 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.169449526 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.153732651 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.151613017 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.195883502 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.115640132 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.756778451 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121681861 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.153866268 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.136920144 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137371273 seconds)
  done (took 4.344822547 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.873762453 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.60619239 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.29468779 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.304579333 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.289218517 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.209950404 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.813996335 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.247939084 seconds)
  done (took 13.700354624 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.155827153 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.165386256 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.171031524 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.195948458 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150483189 seconds)
  done (took 1.910895324 seconds)
done (took 142.897504552 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123971749 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124000892 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.149168049 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.123134878 seconds)
  done (took 1.5747027 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.13637821 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.100659251 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.131202704 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.097978168 seconds)
  done (took 1.538490759 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.5354401 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.129412534 seconds)
  done (took 1.773354692 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.155548752 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.159925831 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.134126447 seconds)
  done (took 1.519281232 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.134791269 seconds)
  done (took 1.209462562 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126679715 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124017812 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.167561377 seconds)
  done (took 1.493121824 seconds)
done (took 10.17928595 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139185206 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.471570133 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410273023 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.163871099 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723718626 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430087771 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.078643292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166188293 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200013412 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141087442 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135501588 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.718924071 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.031986172 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.396076874 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015195676 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.394478131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696994781 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144740685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122006592 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141830642 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.025530411 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139651119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11590713 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142194644 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700753187 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420471829 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142416356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.408400285 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112809004 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120946153 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.43350479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11200996 seconds)
  done (took 17.656757257 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121405212 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.217361325 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.122640549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14326693 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118278185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142283319 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127033519 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161693758 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.219917599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11247602 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165549122 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111994829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.146812508 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113807583 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166573898 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112948659 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.14406314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11749166 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149505443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116992229 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135050796 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141077734 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114895659 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145123438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11214504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157794744 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113078504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.162152391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111606627 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.149768716 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119406671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142156392 seconds)
  done (took 5.515792112 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.172921859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.230493752 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151486773 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151839262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.208310713 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114680189 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.244841834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.197093697 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.221328285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141010691 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136922662 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111699428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.18632627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141603523 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141102805 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.140997366 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118555793 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143806844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123484617 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.143019894 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137416016 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139183743 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116342254 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115733011 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.142666942 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129548977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142961862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.161121398 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113667903 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120624423 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.149345454 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112767504 seconds)
  done (took 5.88042454 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130280242 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.153584579 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134758395 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162535068 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117417232 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.151786925 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.125564591 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.115789741 seconds)
  done (took 2.175530363 seconds)
done (took 32.301136845 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.13773338 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.118892645 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.159200069 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128607573 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.153281607 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139183975 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.140476109 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.125618778 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.155562592 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.122365134 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.159443442 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112278225 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.115066411 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.13977025 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.127857265 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.146819806 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13096933 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.152482179 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.139234257 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.159609343 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.114364538 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.154219432 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123560055 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.167767442 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.140311627 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.168408344 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.131196204 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.149841257 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.113972025 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.142729059 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.133077403 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.171234365 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116296032 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.161607187 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117952902 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146191158 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.113998229 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.114492327 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.159722922 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.125460729 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.149376166 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.125900933 seconds)
  done (took 6.875829699 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.153789127 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.193303207 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.113128114 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.140456245 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.111971377 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.191498483 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.18498688 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.111316159 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.110364195 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.174992769 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.175497574 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.111789345 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.110813591 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.140607061 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.11030416 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.139012578 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.143769284 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.172448278 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.150028401 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.177520666 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.19783323 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.151095157 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.182143222 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.172016952 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.163195734 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.185464773 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.139773559 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.184655962 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.174976021 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.109927006 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.181227506 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.14937743 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.139857703 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.110282734 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.190981503 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.185266455 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.14786052 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.191167079 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.177896974 seconds)
  done (took 7.145745959 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131151747 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129930791 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.170363945 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.223692711 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162821253 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.158194799 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.127060246 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.168022183 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.134633432 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.145187034 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124812593 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.185273304 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133763191 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.154122892 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121815134 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.16205248 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.140203728 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.148375931 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120921218 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.167836158 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13626416 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.161138306 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.128994891 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.15523622 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115013719 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.160986705 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121047949 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.161497114 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121261121 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.15285977 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.123115825 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.149658445 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123386201 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.127509586 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.14944397 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.1275609 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.173011414 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153098727 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126512615 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.185214694 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130616482 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.151992997 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144058183 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.192056528 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116449694 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.153907479 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121089917 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.154277487 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112784244 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.164471682 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127427552 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11524372 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.172087416 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.143674287 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.11277713 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130752127 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.145570394 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118034733 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.154385656 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12192929 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171454155 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120655429 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161675893 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117803716 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.150792202 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11578767 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.14291582 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.126181865 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171260187 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120474566 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.192508246 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114449479 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153595311 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.123675494 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.151639389 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126150536 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113664929 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.162921969 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125260312 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.1520262 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126145182 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.14862436 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118624032 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.164937803 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141161644 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.158480742 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122668027 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.153652231 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118965299 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145030392 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131514548 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.147081403 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119780867 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.16376961 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116241406 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.147129562 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123998461 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.150245784 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11336536 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.159110879 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.122793583 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113910102 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.156150642 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11598214 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.149260542 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125826221 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.150282908 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116409185 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.150633194 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124374243 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.14287381 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120815534 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119437644 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.148974402 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132425724 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.153885695 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118519054 seconds)
  done (took 17.588832829 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.300004208 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.262518479 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.244584626 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.370021616 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.175201595 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.147781554 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.266601376 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.207538345 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114603702 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.200444205 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.219613086 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.226773048 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.211970367 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.223583671 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.220377325 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114641537 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.175294884 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.209148591 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.262306071 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.362948367 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143722276 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.166031316 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.202027996 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.169256121 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.170195097 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.167715376 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.144354443 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.175108397 seconds)
  done (took 6.961919839 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.143845653 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.195782351 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.125021534 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.183682518 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.17945686 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.11734951 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.150986652 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116978331 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.164877027 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138915501 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.148349039 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125833664 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.152787204 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.127255355 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.144269915 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.126486707 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.157152709 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.128863536 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.147554453 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.120612096 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.168741281 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135616178 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.151472356 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124882276 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.169262204 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.125613118 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.150150026 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.17666258 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129861183 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.182403665 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.111339696 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.155993063 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132512089 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144943399 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125945927 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.149296673 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.11678863 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.147339601 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120550499 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.111671506 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.146041227 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.103520629 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.155508241 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135725255 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.155387927 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.119331665 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.152129261 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.119812877 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.152290634 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.111590103 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.148674449 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118149299 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151126732 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.138758486 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.149717785 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.111014292 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.118747599 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.134634469 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.12701143 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.148491303 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109023386 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.154054999 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.107673994 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.153177132 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127112802 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137658401 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124006518 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.146951503 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.121541622 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.154847449 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.118656851 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.133143689 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.143923654 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.118890359 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.161274954 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.133205296 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.150896032 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123975528 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.157638246 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113926474 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.133039698 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113990047 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.098833627 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.151170947 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.114121752 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154604109 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.118042369 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.152976984 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.168737079 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130382331 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.153945301 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11591012 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125529601 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.15247549 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112083325 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.151566588 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137381112 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.175623001 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.113576923 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.143117482 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.139978412 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.147682917 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.112645324 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.135733036 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12810606 seconds)
  done (took 15.609193594 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.181516085 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.218676353 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.147710627 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139393043 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.1885451 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.207202774 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.133097786 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12473025 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.146917478 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139378927 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.157221519 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.126744036 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.15852271 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134150436 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.206561919 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.157663857 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.11698571 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163437459 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123054324 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.222438489 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139437848 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.203648978 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.21194356 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.161374013 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121842056 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.200537591 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.21011525 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.132014519 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.159853193 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.182978123 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.161569253 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.209703619 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.215371688 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.123310014 seconds)
  done (took 6.751535229 seconds)
done (took 62.016100485 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.236149233 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.430915932 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.184289057 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.189426897 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.240157417 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.214249653 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.184001651 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.402589989 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.944203377 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.174938488 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.188085529 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.187622846 seconds)
done (took 27.682259248 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.298512534 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347907274 seconds)
    (2/2) benchmarking "String"...
    done (took 1.484765951 seconds)
  done (took 3.934906081 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.189763459 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.199244901 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.431905365 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.198578523 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.186731442 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.20476831 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.203160916 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.191217873 seconds)
  done (took 15.717433914 seconds)
done (took 25.24371689 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.248456643 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.376760848 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.449672679 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.205498803 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.19314793 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.198790324 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.186729715 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.226932262 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.203685098 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.18953493 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.188146943 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.471921597 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.215442686 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.576365527 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.199606514 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.201420985 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.212969266 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.402234696 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.188607737 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.176883666 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.189875075 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.173845344 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.196163764 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.212294279 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.202035893 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.203313139 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.245069362 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.189032619 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.387258475 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.209552242 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.235326858 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.192197287 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.244296646 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.191558595 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.320217819 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.215784598 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.363426228 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.202802651 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.181281253 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.19456827 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.365605174 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.604361536 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.191949213 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.191507089 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.196214496 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.24692776 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.179894357 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.922749606 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.19448906 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.191666381 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.267865735 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.591419344 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.194341228 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.211072816 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.202181062 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.440671404 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.22139876 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.20980588 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.219705614 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.195881016 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.195098831 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.19114098 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.216391593 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.196531101 seconds)
  done (took 142.806038142 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.19335955 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.197920967 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.201281866 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.200473752 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.198120134 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.197669678 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.195005148 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.196335377 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.196414808 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.226027118 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.197560956 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.191386435 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.200567829 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.167388762 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.196331645 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.208802573 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.200345761 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.212665281 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.212641479 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.198390634 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.204012257 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.200783379 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.212855613 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.194870449 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.231449331 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.248834784 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.192217776 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.201644581 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.195956565 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.198515164 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.193494524 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.196434505 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.827800523 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.049218951 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.214676042 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.227624204 seconds)
  done (took 79.887803407 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.194325419 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19798134 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195231881 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.196117952 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231758289 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.197911172 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789212169 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792472878 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.931308953 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.473344605 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.626868023 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.472019243 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.192225721 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29083244 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.210075652 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.198388743 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198092985 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.21303013 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.222784149 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196312768 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195526945 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790595684 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.213100407 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.423478845 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373233132 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.209586147 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229403153 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.591302212 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192452998 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228962356 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.533298413 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.245002456 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191361392 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594540186 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.320105605 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307246924 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.195853791 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.228761504 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.199904753 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.481330366 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19311023 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193336855 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.198249587 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199736589 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905297588 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.19733873 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779990847 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197228899 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.166622468 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199464262 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192482271 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.351269564 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.898369381 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.195530281 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.19660436 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198922912 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.19533959 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195348347 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.229400313 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.346225391 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.308419815 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.196202569 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.200860901 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228369981 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.197866055 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.432319668 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197003056 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.198505068 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.249549229 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.315514529 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.77466762 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197069024 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296533314 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315011665 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.192745041 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.195196978 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199369669 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.195395239 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.309663122 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.193821471 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.603655209 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.369116581 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.212428273 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.580270883 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.297799661 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.19564158 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.620614118 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.196988985 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.19816412 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939659247 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291270718 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.193198592 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.195553465 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197602513 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.6104071 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775447468 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.464795 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.19681868 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.535275923 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.197400246 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.198708435 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.617223402 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.752912734 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.901936457 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.200514587 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312843333 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.370672247 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.213886915 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197720213 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.599853565 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.201542212 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.257288848 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.198848474 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597192535 seconds)
  done (took 365.996965927 seconds)
done (took 589.793826632 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.958831712 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.860928453 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.001290477 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.891942558 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.85857692 seconds)
  done (took 10.679884633 seconds)
done (took 11.786748849 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.395204843 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.391501892 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260403436 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.396489848 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233117551 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.412494513 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377626913 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220350923 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.305421629 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.282053596 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.305863872 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254667835 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235123365 seconds)
  done (took 18.177307521 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.480590058 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.19692382 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280573942 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.447248859 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236204372 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.456299349 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.498488518 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.196634211 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.338869279 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224683641 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213642733 seconds)
  done (took 17.680144876 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.480339948 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.197116613 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266107844 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.450510477 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23815876 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.48775954 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.500515825 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.200084177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339271476 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213119017 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214505878 seconds)
  done (took 17.696925008 seconds)
done (took 54.664077416 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24550438 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.364115494 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.236313421 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.214992267 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.208961067 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.211464767 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.216188412 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.219424714 seconds)
  done (took 11.028426358 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.207149616 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208433741 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.207819102 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.206026307 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.208484732 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.206291084 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.210789449 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.209783413 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.2107363 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.210029675 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.206246109 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.206142844 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.209345617 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211228464 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.210650496 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.210036229 seconds)
  done (took 20.451166759 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211129863 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.207683083 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.208045082 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.207291889 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209189417 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.20954078 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.207295773 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.208255377 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.208562186 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.206544725 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.209978924 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207941294 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.20780486 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.208981715 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208348244 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.209387622 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.208515869 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.20718273 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212298813 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210794065 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.208857511 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208901914 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210706348 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.208708425 seconds)
  done (took 30.12551223 seconds)
done (took 62.715190652 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.215880531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.211946371 seconds)
  done (took 5.540453064 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.271802387 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.270395741 seconds)
  done (took 3.659339504 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.212643303 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213668696 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.216008817 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.211891827 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.211642584 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.212496899 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.211349603 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212166738 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.212842463 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213483691 seconds)
  done (took 13.241383261 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.212657692 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210492038 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209871182 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21293604 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211476914 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.208807692 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211809814 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.214096662 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211691241 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.20865682 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.212345445 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209383538 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.212690054 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209236911 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.213342243 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.210740175 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.210817182 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.210214637 seconds)
  done (took 22.915550918 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.227257626 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.234759344 seconds)
  done (took 3.577930824 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.342141967 seconds)
    (2/7) benchmarking "second"...
    done (took 1.253928127 seconds)
    (3/7) benchmarking "month"...
    done (took 1.328779723 seconds)
    (4/7) benchmarking "year"...
    done (took 1.310036293 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.253933595 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.231830698 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.255533482 seconds)
  done (took 10.090436215 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215173389 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.406811191 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.510645679 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.775856888 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213783585 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.219072317 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.075228811 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.218333723 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.220921416 seconds)
  done (took 13.972158591 seconds)
done (took 74.110044637 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.211261296 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.223128365 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.227781866 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.217921226 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.551714622 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.2279758 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.208064953 seconds)
done (took 15.986152368 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.204310339 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.194434856 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.197975718 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.203754803 seconds)
  done (took 9.916124238 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.215242445 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553783195 seconds)
  done (took 4.886525399 seconds)
done (took 15.921999329 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216258733 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.21227744 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.214283622 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.212633488 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.217339868 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.215691233 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.213356535 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215705635 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.21510873 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.21576947 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.215299017 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216826855 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21418741 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214932927 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218188636 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217989234 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.214470091 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212927802 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213014925 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214972359 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21424532 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.213237627 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.215623101 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.215941414 seconds)
  done (took 30.27755296 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.218651211 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21556065 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.219972017 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.218530587 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.217413914 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.218275717 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.220637025 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.214412705 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.217033188 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.218849084 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215355574 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216938568 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.218552407 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.217332354 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217154171 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.216198156 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.218583803 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217140726 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218197042 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.215616504 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.219701532 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217800507 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.217709437 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2217801 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.215749303 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215621873 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.220295688 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.216010834 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21913127 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21699181 seconds)
  done (took 37.65055145 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.224928741 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.229106636 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.220205076 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.218420251 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.22021764 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.219724666 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.221484318 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.218691189 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.219458298 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.22050829 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.220278756 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.220109749 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220220649 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.220834965 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.219643336 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.219805532 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.221433266 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22092591 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.218944826 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.221050916 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.220677742 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.220448418 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.220057913 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.219347803 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.220195698 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.219274764 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.219764383 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.219357526 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.222331574 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.219757234 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220731143 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.221505456 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.220702771 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222314165 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.220804239 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.221501661 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.224654451 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.229953491 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.221718267 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22246397 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.22168121 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.220895507 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.221637946 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222790082 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.223233167 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222087288 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.220630295 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.221560627 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.221069051 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.221078727 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.221409626 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.224266758 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.221313395 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.221686507 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.222794402 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.223462523 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22136144 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.223287634 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.222725474 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.220241588 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.22346946 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223603962 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.22164069 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223330974 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223837314 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.222642726 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.222192324 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.222149475 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.223500865 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.224808245 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.225189545 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.224949365 seconds)
  done (took 89.087501731 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.223321258 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.221176142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.219481899 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221088163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220997048 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.222888503 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222057258 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223792012 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220453152 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224425203 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223191186 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.221714383 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21951119 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.223876915 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222664651 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.219576898 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.224647592 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22082538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.223509528 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.22500777 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224611682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.220871531 seconds)
  done (took 28.013486898 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226756082 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.224637583 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.220728575 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.225639607 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222495722 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225323995 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.223405895 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.225559011 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224836579 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221267001 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221084053 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225703796 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22501532 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222675363 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22274016 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22131097 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226577403 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224188509 seconds)
  done (took 23.154935635 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.220872262 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.220470195 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.22631773 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.221406003 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.223395212 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.225348107 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221802524 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224554773 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.226393055 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.222844295 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.225252353 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226435816 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.225642659 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222614478 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225768824 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.223137 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.223896864 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223694518 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223974406 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221867976 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223708275 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227036044 seconds)
  done (took 28.052318216 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22744589 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226791373 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222227582 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22391089 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.224146487 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227066746 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228741322 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.226081874 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.227813977 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.226935996 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223659857 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.227899436 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.225547316 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.223534001 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.224331461 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225057794 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.226633267 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.224840822 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226696247 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22667862 seconds)
  done (took 25.642125591 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238162056 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23819292 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239699718 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235887894 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238408643 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.23881963 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238858012 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.238095144 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238107867 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236318799 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238674635 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238522405 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238071288 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.240487265 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242466964 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238824987 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240632433 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237322982 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.239001795 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238122836 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240350447 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239990051 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238913648 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239067921 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239471713 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237968091 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239908099 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.239368532 seconds)
  done (took 35.816947243 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229404831 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231352464 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.225762094 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228921414 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.227498187 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.228919703 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.227247579 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.226833545 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229352429 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227862575 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.228315226 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.229277039 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230585773 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.230531516 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2327494 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.233139951 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231709386 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229079496 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228370921 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228925438 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23118961 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230324824 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.232301049 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227788761 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228650079 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.232474283 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228054087 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228240694 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232214184 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229483416 seconds)
  done (took 38.017607192 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.276563719 seconds)
    (2/2) benchmarking "in"...
    done (took 1.275323554 seconds)
  done (took 3.682734324 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229059638 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231587221 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.231849202 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230114891 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228688697 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231384971 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234238425 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229706126 seconds)
  done (took 10.97791453 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.23336505 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.232863238 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23406104 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.235115192 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236831173 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.232248808 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240733757 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252765668 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.234312656 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.726248821 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.242931214 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.241753791 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.236022998 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232616228 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.234385794 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237310708 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235063484 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.235252142 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.23371657 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.234307922 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236400687 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234278482 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239469141 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.232658579 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.237458784 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.25122196 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.235245097 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.234504675 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23597851 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.237141613 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.235119839 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.234713323 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.237771134 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.234804047 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.237261076 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.2360347 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243291904 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255307838 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.241202356 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234285971 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.234615192 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.23288093 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.236268409 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.237315256 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236463636 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.237258143 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.234823747 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.233314917 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.236223073 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.238862762 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.24161639 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236687643 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.234407377 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241568938 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.236428784 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243178913 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.254217394 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.241747977 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250438495 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249051732 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.24700676 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.258178478 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237409881 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.237950354 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246687384 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264372676 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244499993 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.252084426 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.235906206 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.238100456 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.244860746 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248400621 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.262437311 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.23845848 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237780059 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.239203973 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237725076 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237643664 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245642538 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258148157 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239135845 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236073098 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247876416 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263447781 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.241476988 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.238336621 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.238727813 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.239797365 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.240481884 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251772842 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.257207101 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.237532899 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.238121073 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.23998921 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.238994195 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.239377812 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.237369331 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239949272 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238285934 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.240016773 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240234345 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243107301 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.247267542 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24063114 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240940985 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.245389886 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.240347769 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239586035 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.246412182 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242310864 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241127047 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.241364941 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.24593924 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.237844581 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243447501 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.248795097 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241068037 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242553971 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.242206695 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.240176907 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250226834 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.267224425 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243112048 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.240678835 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.24602246 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.254138775 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239537629 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.243504479 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.240593584 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.239938443 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.238741759 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.242215112 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241469347 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245211742 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24200436 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242625756 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.238467399 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.242327778 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.243024735 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241641151 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243131385 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.241612606 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.243603648 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.243794218 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.241780465 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.243193965 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.246648887 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.240990572 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.241988695 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.242755443 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.238607607 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241972404 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244012363 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243306182 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.241532616 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244067557 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.240378201 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242902256 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243256683 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24840741 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24627411 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.244335289 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253728005 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.24834874 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.246339274 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.243003291 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.240654037 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.24689419 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.244042163 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.243026891 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.244063163 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.243835157 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247825528 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255086305 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.245047651 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245231828 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.247139197 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245643104 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246228616 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246771355 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250438444 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25499632 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.247496933 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.252770494 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.245169715 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24332915 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.246384095 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245371346 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243561938 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244413174 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.248081823 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.256092077 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257256788 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270752408 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.245322474 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.252425366 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.246940954 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250496762 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.249174447 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246243774 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.246454152 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246076693 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.245009057 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245393155 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.24755118 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246380811 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.246717335 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.247695563 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248442922 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248991457 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247535949 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.246866655 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246184652 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.24502412 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247095389 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247657678 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.246504965 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245268226 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.244808825 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.246217758 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248421258 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249162925 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251758047 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.244267374 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249884785 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249213717 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.248429944 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.246209564 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.249595009 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252971384 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.248967639 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25540642 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.269224372 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.249265246 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255923813 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266102037 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251246466 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.25048706 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.248579447 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.246545652 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.251212792 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.260373275 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.248579145 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.248234013 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.247964424 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249235765 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249856967 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.254803422 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.246449533 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.249464527 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.252463046 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.251218231 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.247294981 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.252151534 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.251322363 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.250278773 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250661481 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250562157 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.250617342 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247764815 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.249051441 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.250149531 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.248685953 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253778776 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.259353809 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.253970075 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.249912691 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.251549396 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.252589749 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.254211809 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.250969058 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.251548033 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.249224758 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263938143 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.274101215 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256309248 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.251347626 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.25246985 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256824877 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.250663484 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.255834689 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251246958 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252693994 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.25196046 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.252090828 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249786095 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251877463 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.252426305 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253360483 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.253805491 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.259064903 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.253519718 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252492828 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.253471105 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.251298102 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252803699 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.253517676 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.252945835 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.253026655 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257349455 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.252057912 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.25221263 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258666002 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274766833 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.253382354 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.254209744 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.254428686 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.253802891 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.254629843 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.254745067 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.257946613 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.263817845 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.257415675 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.265985734 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255682624 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264277796 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.256316031 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.257895824 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.264079969 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.25202467 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.255004166 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.25453928 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256172386 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261316894 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.274382423 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.257433605 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.261159725 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255082916 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.25524284 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.256701614 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.255553647 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255872144 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.254960489 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260615421 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.275510309 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.259775343 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258748367 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.252622592 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.257171586 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.255245037 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.254284871 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258762243 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.257904231 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.256608476 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.256887577 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.256362126 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.256518664 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.257095475 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.255732586 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.253406995 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.255493796 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263011229 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.276996374 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262173481 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.254985849 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.261792133 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254887196 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261449782 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.274668136 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.256691918 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.258076289 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.255596027 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.260552577 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.25864583 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.257828337 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.255167372 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.257113431 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.261506706 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.258563438 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.258303004 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.25856749 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.258072915 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.256190726 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268089364 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284146847 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.259598968 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26432922 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.25687373 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.258018351 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.263445875 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.256435345 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.256542255 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.261804803 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268906441 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267955211 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.258939957 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.259317163 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257902957 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259965243 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.2589706 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.25971367 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.256966948 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.257769668 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.257881244 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.261705875 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25961743 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.257413756 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260347659 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260494456 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.259809044 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.271245972 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.258035977 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.261315393 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260155282 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.260185779 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.259399151 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.259640898 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.261023154 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260742856 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261533449 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.263058815 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267386003 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.268149283 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.261405883 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.26067717 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.262695537 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.260342782 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.262006106 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261911363 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.260537673 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261385063 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.259471301 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26097846 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260420489 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.261552704 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26042961 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.260155416 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261678326 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261957566 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.269301336 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26192138 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.258732459 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26173733 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261761649 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.26093811 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.260581812 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.266819734 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261410614 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.273843989 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.272318369 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.266387442 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.263184841 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266025665 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.270947874 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.260731887 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.262689987 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.262626784 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26324045 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.263915604 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266029339 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262929557 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.267628917 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.26098167 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.262166492 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272206332 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.283268428 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26289684 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.262691639 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.269007492 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.263562681 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.259529828 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.264261715 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.263955284 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270967662 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.28296412 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263922383 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.265120944 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.261619512 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.267189187 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268237472 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263849854 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.266404305 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.262584192 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26637477 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261952376 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264324925 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.261776234 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.263760816 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.263695869 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.269587487 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.272469945 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.261116016 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266783928 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.263405803 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.266316883 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264126741 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26484832 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.262739169 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.262028896 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.265075051 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265503259 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.263173506 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.266910309 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.264480803 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.266535607 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.266148423 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267353102 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268344926 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.278397495 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.274547546 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.264614391 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268242686 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.266619477 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.266926522 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265169493 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.26525067 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265240798 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.266142459 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.265873512 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.267475674 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.265042411 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.267401277 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283512277 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.28597733 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268082526 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.266184876 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269090846 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.266596564 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.266039466 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.26909721 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.268736191 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.270479073 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.274793733 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.26712335 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27309425 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285463514 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.267335068 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.270631739 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.272742034 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.276159085 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.267404602 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268337351 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.267294859 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.271640611 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.285504108 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267863538 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277211883 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.299906328 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.287196057 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.270174766 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.269208244 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26741942 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.268934388 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.266697168 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.269774546 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.270678877 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271287266 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.270438683 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.269933886 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274795076 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.266820536 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.270510073 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.269425418 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.268014374 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.268131222 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.266130059 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.271199526 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.267354856 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.27073048 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.269438713 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.270108504 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.271707276 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281030095 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.294280847 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.271530746 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.272528209 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.265787549 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.273372296 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.272476404 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282442772 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.280258367 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.271735816 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.269257144 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.270076401 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269870533 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.270248997 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272276949 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.269603766 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269259683 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.268855841 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.283589395 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295306835 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.273340762 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.270085519 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271214756 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.271758005 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273127095 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270703007 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270402586 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.270720894 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.274387113 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275602366 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.272593579 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.271791752 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.27546381 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.28138405 seconds)
  done (took 749.807697043 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27184377 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270553395 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26947447 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269951906 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270348823 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268825903 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269432019 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269101936 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.271545789 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27039319 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269772147 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271459764 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270735021 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27117351 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271352904 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270013991 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271228298 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.269325817 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.270770603 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.269564665 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.272519927 seconds)
  done (took 27.84766338 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.273109799 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.270593321 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273573867 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274813127 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271525142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.274941348 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271989664 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274121336 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274462419 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269622691 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.272818151 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274144684 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.271742257 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.273572241 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270989154 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275224666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27510516 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273811049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.272851232 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274032875 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.27548852 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.272491049 seconds)
  done (took 29.181163549 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.275133832 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.274062241 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.273092347 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.273138291 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.275755162 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.273121084 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.276641924 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.274014008 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.275973383 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.277097908 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.273337661 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.275433587 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.283588157 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.279975711 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.276209445 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.275565952 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.274336233 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.275775571 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.275591841 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.273135395 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.280887592 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.272442165 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.274932932 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.274982133 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.275288236 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.274853605 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.276195692 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.276663865 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.276515511 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.280539638 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.274646386 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277984482 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.27731944 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.276282168 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.278778813 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.283681248 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.27586468 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.273351719 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.278409237 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.28731121 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.301148611 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.279319949 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.284220443 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.277633118 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.276656799 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280474774 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.287396687 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.27414145 seconds)
  done (took 62.492839112 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.278432092 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.279044779 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.275794511 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.27815011 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.278174747 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.280331465 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.278670858 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.278364191 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.277653254 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.276147626 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.278984045 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.276972449 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27607245 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281234071 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.277737212 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275973382 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275008095 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.277027501 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.275220282 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275306047 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.276432853 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.278619987 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.279751314 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.278430643 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.280809536 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.27742401 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.277967314 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.280799024 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.277268626 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.276864483 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.281304167 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281156133 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.281828784 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.278772286 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.279080278 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.280187135 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.281454076 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.279189841 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28265417 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.280171248 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.279527283 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281681052 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.279837644 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.283570019 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280909149 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.279624931 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.276621611 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280215929 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.279095595 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.284555914 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.282701082 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.279656524 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28245231 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.278689153 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.281808901 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284404734 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.277662275 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.280067656 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.281632351 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.279313291 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.280482645 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283396951 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.280505539 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.283426884 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.282638877 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.279898279 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.279313768 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282454365 seconds)
  done (took 88.180720711 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281704529 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.281731233 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28310975 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283066733 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2834236 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.282827251 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28302679 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.28279928 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284577701 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283215609 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281411313 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283408993 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.283500258 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.284581223 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283803777 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.284624121 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283631181 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283925328 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283215003 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283064797 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.281842495 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284548436 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.284546222 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283146624 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.284592578 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.284507848 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284092095 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283038095 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283194988 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.2834932 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.285240695 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.283308517 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285722335 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.284995859 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.284186272 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.286000451 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286882223 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283570138 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286185712 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28553748 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285055301 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283881229 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.285509131 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.285582626 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285838655 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285672707 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28667965 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.288432415 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287773107 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287197609 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.287879381 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284935005 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285545883 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286715055 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285715116 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.287803522 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287604373 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283855262 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286682654 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287038114 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286933219 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.286813071 seconds)
  done (took 80.831370848 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288081327 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28796793 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.285610336 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.283969961 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28662507 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.284479577 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.286200036 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.288391937 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288177329 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.287795514 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288678104 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286764313 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28726087 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287792692 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.286029843 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287734418 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286521603 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.28551626 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288260889 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286164421 seconds)
  done (took 26.919967217 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.286131753 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288349234 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.282980204 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28667504 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.288913821 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286502845 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.288390654 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289264788 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286069065 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290018858 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290413901 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288435844 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287326824 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287349949 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.287921005 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286169941 seconds)
  done (took 21.782294979 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.287171323 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.289727408 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.289389502 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.287822672 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.287256914 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.28608319 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.289751002 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.288703462 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.288380369 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.291375084 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.289819504 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.292689406 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291544548 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.291455678 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.286074106 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.292365005 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.289742926 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.288792008 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.291541521 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.289905934 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.289790651 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.286842001 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.294166766 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.291970248 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.287910018 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.287778891 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.28757427 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.287828531 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.289340269 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.292006371 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.290292472 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.287944882 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.288481157 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.287651125 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.292582299 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.286807777 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.291583006 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.292654099 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.291330333 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.292119857 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.291004094 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.288992118 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.291774542 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.290683058 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.292136291 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.293483799 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291406554 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.292261463 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291077896 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291443865 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.292144398 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.293372285 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.290559714 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.294395658 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.291980161 seconds)
  done (took 72.147627827 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294583448 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292325845 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293290106 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292474313 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293574304 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292193006 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.293564538 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291993816 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291633453 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294379583 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290688311 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293738454 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293314166 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29511409 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291812536 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295423923 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.29215095 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293280338 seconds)
  done (took 24.460940066 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293350717 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291214844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295965772 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293530469 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.292976626 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296469046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290742178 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.295571513 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294736026 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29258471 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293318247 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.29632551 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295891983 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295750321 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294775254 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293542266 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.295963626 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298083595 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.2924637 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294079737 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296772766 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296346713 seconds)
  done (took 29.66909272 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.295839555 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.295138972 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.2928367 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.311290542 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.315566326 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.293717307 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.293887705 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.295390371 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.316169782 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.347246426 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.342194659 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.314952845 seconds)
  done (took 16.90380953 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296276138 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297112852 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295798202 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296691939 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297776942 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293153024 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295828912 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29298797 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296724178 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293638184 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294113461 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297887417 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297831631 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296093667 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296861977 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298941833 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294361359 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29480498 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295090656 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299607374 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299630126 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298814934 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295042586 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2951836 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295542948 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296311321 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298534047 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298414522 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296960206 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296979869 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29779887 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296508831 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298570955 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296984274 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297821765 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298423011 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296596504 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299847024 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296906655 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297505282 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.298190764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300598853 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29684667 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297409972 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298909897 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297184859 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296864497 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296286986 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297135685 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299693832 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300753384 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29695358 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299138098 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299791512 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30169867 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302919992 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298530501 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299170194 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303139469 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298388692 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299349507 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300656783 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296454199 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30002272 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30036218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298855572 seconds)
  done (took 86.836175551 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298295322 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298412248 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300986423 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299615663 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30007749 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297712785 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299164463 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297897868 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299820715 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299387099 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302388906 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29792411 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29890333 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29920863 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296547602 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299155652 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299537846 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300209664 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300406316 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303439537 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300213104 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298556991 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300720067 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298720622 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300034803 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301853843 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299818595 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299136702 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30085785 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302143824 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301082899 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300607254 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300865608 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300111031 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300516615 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299149103 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29868163 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29889181 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3014028 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305023062 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302926018 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304469181 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302687554 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301897454 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300576531 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301824837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300436036 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303669708 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302449679 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302181841 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302730976 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301321399 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302679547 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301303466 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298598626 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303447307 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302640353 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301967915 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300727019 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30420603 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302901173 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30251587 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306769405 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302357168 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303069111 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303897149 seconds)
  done (took 87.057769221 seconds)
done (took 1755.608668729 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.469498085 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.4257271 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.302954411 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.316027283 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.299316551 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.327360539 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.311253465 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.300429169 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.303152127 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.303022034 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.303191093 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489876003 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.360355205 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298323418 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.305354025 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.400466229 seconds)
  done (took 26.71484892 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.335728781 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.3121241 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.433936548 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.325599535 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.334934461 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.506577978 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.365177131 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.310974074 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.498297011 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351482319 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.311900342 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332241647 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.31021509 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.300952988 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.343321482 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.506442159 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.578014047 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.310656338 seconds)
  done (took 28.965372876 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.796834944 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.346268367 seconds)
  done (took 5.343316412 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.332182182 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.31044282 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.312989127 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309217616 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.306869964 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.295273661 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.309558976 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.302919541 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.31235906 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.448652334 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.312048184 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.323628628 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.331414896 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.31302069 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.305005141 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.354175425 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.507357315 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.310197177 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.305555214 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.318055243 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.312517609 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.406211587 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.357683492 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.307397432 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.447873355 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.299319714 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.311441734 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.31771675 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.461787486 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.308741138 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.312670645 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.311528091 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.312653998 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.281533453 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.813502477 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.303453754 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.33468201 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.318630625 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.30903479 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.472618855 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.312546429 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.320285622 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.317693392 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.791472716 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.456285045 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.442806136 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.317496655 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.309595519 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.316100688 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.379602524 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.309650757 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.313890702 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.35812863 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.138085393 seconds)
  done (took 84.21727964 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.316681518 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.303696338 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487878565 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326994759 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.300893232 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.306002543 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.305405163 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.625316983 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.336277531 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305301382 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.614881353 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.876338635 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321864955 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.353995785 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.15554833 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.365071595 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.307577975 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.32078433 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.302574112 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.300409305 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87743146 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.308740929 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.325159448 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.533629174 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.34648182 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.848559964 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.302098484 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.309017476 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.31274493 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.305091211 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850170156 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.33146563 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.365372023 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.30389633 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.602957548 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.725897292 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666931572 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.309320302 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.33500418 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.302571602 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.310880989 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.828538858 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.686047561 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.303329617 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.307599428 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.835184397 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.303635036 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.319125295 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.318432752 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563328405 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.308040864 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.309614365 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.321848358 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.3094653 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.310185223 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.327662129 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.382747242 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.84917562 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.30538818 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.319897869 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350122007 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.30853226 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.307636554 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.312665294 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.314442282 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.69203744 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.446209084 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.312013916 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.695028125 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838415134 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.326635281 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907013228 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.327330553 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.324459383 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.454277881 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310848854 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.304745461 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.859990454 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.337388267 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.307235255 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.677725488 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.31163137 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.622126701 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.333550991 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.307931742 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890076754 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.320135376 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.395802314 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.310525918 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.312132288 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.312178362 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.330575512 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.608164755 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.366992257 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.312713034 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.312894821 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.316745922 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310624977 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.312541159 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.320265993 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913763531 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.326674952 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.313106812 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.314540402 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310686009 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.313133672 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.31297484 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318151429 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.580449003 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.322593953 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.319325171 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.316847514 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.307680003 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.322387462 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.539755407 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.31641422 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.647409863 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.308683714 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310200236 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.338216304 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.314234012 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.317595189 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310149632 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.315083491 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.222675406 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.61620599 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.339007088 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.312806342 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316378669 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.314441784 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.325428008 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32744297 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.348838715 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.314209109 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.094448841 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.350829159 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.341598705 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.314179527 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.315078751 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.32052673 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.311309485 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313077545 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616405546 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.613436601 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.455016248 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.315169043 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.313385718 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.094326196 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.377522692 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493707779 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.334448765 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314805494 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568608365 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.553884944 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.314541479 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.310696622 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.317931896 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.581996843 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.31724493 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625107326 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.878834142 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.328006899 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.317994684 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.095200245 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.058751332 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.319664277 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.319517577 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.62025181 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.333343117 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.318260277 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.317630283 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.317424149 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.315292876 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.322180235 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.326118854 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.318349787 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.316534053 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.433679242 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.5112917 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.336337271 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.321834987 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.852752724 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327481004 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313666134 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326841835 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.316996598 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.317600168 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.376238607 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.318711152 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.355677348 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.319749874 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.322398989 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.903355254 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.311875096 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.32054442 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.512367625 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022937372 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.329849981 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.320020444 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.33135756 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.215132205 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.876694062 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.35770191 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.655398948 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.321533653 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.358800011 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.322857481 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.339624101 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.873775225 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.319576335 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.339427974 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.992585051 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.332372487 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.172510295 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.315893724 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.317470164 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938957272 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.332552363 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.322968573 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.314071539 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318554488 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.615678267 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.321302158 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.347347062 seconds)
  done (took 495.125993872 seconds)
done (took 641.564454965 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.319946123 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.325094015 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.306142535 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.323227031 seconds)
  done (took 10.490546877 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327575187 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.327995996 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.340193812 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.325507855 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.330592435 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.328882192 seconds)
  done (took 9.198813932 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.321086695 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.324599357 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.322956417 seconds)
  done (took 8.184516733 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.549376756 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.354584829 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.673329406 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.350706886 seconds)
  done (took 9.148317559 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.341337193 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.337605492 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.339213003 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.330230267 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.330522623 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.335413917 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.332758538 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.331424552 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.331590444 seconds)
  done (took 13.226500659 seconds)
done (took 51.464465946 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.36360757 seconds)
    (2/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.403342595 seconds)
    (3/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.514061775 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.345080702 seconds)
    (5/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.366633145 seconds)
    (6/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.336207895 seconds)
    (7/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.330549619 seconds)
    (8/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.329513729 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.360322611 seconds)
    (10/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.342828637 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.332222924 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.330878458 seconds)
    (13/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.411008797 seconds)
    (14/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.357041905 seconds)
    (15/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.450929925 seconds)
    (16/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.430935729 seconds)
    (17/286) benchmarking ("sort", Float32, true)...
    done (took 1.890500986 seconds)
    (18/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.337420595 seconds)
    (19/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.163187709 seconds)
    (20/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.474191238 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.392466017 seconds)
    (22/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.332804404 seconds)
    (23/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.332668539 seconds)
    (24/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.330211458 seconds)
    (25/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.328982107 seconds)
    (26/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.459676687 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.545858654 seconds)
    (28/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.416722589 seconds)
    (29/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.027184344 seconds)
    (30/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.331374501 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 1.776962705 seconds)
    (32/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.336103823 seconds)
    (33/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.372445257 seconds)
    (34/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.466928504 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.359165626 seconds)
    (36/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.091502 seconds)
    (37/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.226110299 seconds)
    (38/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.449399934 seconds)
    (39/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.378827332 seconds)
    (40/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.311854519 seconds)
    (41/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.383725587 seconds)
    (42/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.002260996 seconds)
    (43/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.486767921 seconds)
    (44/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.193465289 seconds)
    (45/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.670922553 seconds)
    (46/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.445422426 seconds)
    (47/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.406505393 seconds)
    (48/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.332515269 seconds)
    (49/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.351034298 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.342066313 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.355741409 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.326241262 seconds)
    (53/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.005449349 seconds)
    (54/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.387762359 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.44302543 seconds)
    (56/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.349469258 seconds)
    (57/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.085228254 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.519546746 seconds)
    (59/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.334603236 seconds)
    (60/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.976259454 seconds)
    (61/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.336889977 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.377137924 seconds)
    (63/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.32362596 seconds)
    (64/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.339641186 seconds)
    (65/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.664671047 seconds)
    (66/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.465327379 seconds)
    (67/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.409072742 seconds)
    (68/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.444622697 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.620491265 seconds)
    (70/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.338099484 seconds)
    (71/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.408573885 seconds)
    (72/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.395576214 seconds)
    (73/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.360383922 seconds)
    (74/286) benchmarking ("sort", Int64, false)...
    done (took 1.526156006 seconds)
    (75/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.338195372 seconds)
    (76/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.312043987 seconds)
    (77/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.368847594 seconds)
    (78/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.314615606 seconds)
    (79/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.329442766 seconds)
    (80/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.384549802 seconds)
    (81/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.554947687 seconds)
    (82/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.347507922 seconds)
    (83/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.335343596 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.329167143 seconds)
    (85/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.363718068 seconds)
    (86/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.341636152 seconds)
    (87/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.344584291 seconds)
    (88/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.342432356 seconds)
    (89/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.325793988 seconds)
    (90/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.409358079 seconds)
    (91/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.351267817 seconds)
    (92/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.390838437 seconds)
    (93/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.364044432 seconds)
    (94/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.007313583 seconds)
    (95/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.336781859 seconds)
    (96/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.330392636 seconds)
    (97/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.373201143 seconds)
    (98/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.530829544 seconds)
    (99/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.355317803 seconds)
    (100/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.388254815 seconds)
    (101/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.341940232 seconds)
    (102/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.33133149 seconds)
    (103/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.454107738 seconds)
    (104/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.357755011 seconds)
    (105/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.565218575 seconds)
    (106/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.511105729 seconds)
    (107/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.454437222 seconds)
    (108/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.370022811 seconds)
    (109/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.390570079 seconds)
    (110/286) benchmarking ("sort", Float64, false)...
    done (took 1.555470878 seconds)
    (111/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.33588063 seconds)
    (112/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.406468915 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 1.362976435 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.338067097 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.406019354 seconds)
    (116/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.340574825 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.36050185 seconds)
    (118/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.399024308 seconds)
    (119/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.218943407 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.432732548 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.355017989 seconds)
    (122/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.329844858 seconds)
    (123/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.086608088 seconds)
    (124/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.166297052 seconds)
    (125/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.385346167 seconds)
    (126/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.385905282 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.347851243 seconds)
    (128/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.34077437 seconds)
    (129/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.494089905 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.416567466 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.336062509 seconds)
    (132/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.347530015 seconds)
    (133/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.350493068 seconds)
    (134/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.48240266 seconds)
    (135/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.505917811 seconds)
    (136/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.428173928 seconds)
    (137/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.363160434 seconds)
    (138/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.339599828 seconds)
    (139/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.215006086 seconds)
    (140/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.340899765 seconds)
    (141/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.415769577 seconds)
    (142/286) benchmarking ("sort", Float32, false)...
    done (took 1.49745927 seconds)
    (143/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.590032709 seconds)
    (144/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.338647795 seconds)
    (145/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.388089092 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.387510565 seconds)
    (147/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.0516978 seconds)
    (148/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.340215186 seconds)
    (149/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.349410621 seconds)
    (150/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.097990029 seconds)
    (151/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.565036996 seconds)
    (152/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.406222438 seconds)
    (153/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.543048483 seconds)
    (154/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.374153536 seconds)
    (155/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.411285234 seconds)
    (156/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.374807807 seconds)
    (157/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.493803408 seconds)
    (158/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.368060249 seconds)
    (159/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.442508378 seconds)
    (160/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.443233711 seconds)
    (161/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.341747254 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.389102886 seconds)
    (163/286) benchmarking ("sort", BigInt, false)...
    done (took 2.335831854 seconds)
    (164/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.454281116 seconds)
    (165/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.361336128 seconds)
    (166/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.353046641 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.438498219 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.338052809 seconds)
    (169/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.343785633 seconds)
    (170/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.363689949 seconds)
    (171/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.341784385 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.344711108 seconds)
    (173/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.468451981 seconds)
    (174/286) benchmarking ("sort", BigInt, true)...
    done (took 2.349206727 seconds)
    (175/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.414370177 seconds)
    (176/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.420246629 seconds)
    (177/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.36267956 seconds)
    (178/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.320629915 seconds)
    (179/286) benchmarking ("sort", Bool, true)...
    done (took 1.553182596 seconds)
    (180/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.352616479 seconds)
    (181/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.346977764 seconds)
    (182/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.321367052 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.406926331 seconds)
    (184/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.350305308 seconds)
    (185/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.471760343 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.402141787 seconds)
    (187/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.487084004 seconds)
    (188/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.345571294 seconds)
    (189/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.332366257 seconds)
    (190/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.34947307 seconds)
    (191/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.349073966 seconds)
    (192/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.352131443 seconds)
    (193/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.434024396 seconds)
    (194/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.357186687 seconds)
    (195/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.420082249 seconds)
    (196/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.633218039 seconds)
    (197/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.39780815 seconds)
    (198/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.37398533 seconds)
    (199/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.423166161 seconds)
    (200/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.523795494 seconds)
    (201/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.501441321 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.382302249 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.343961677 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.426458723 seconds)
    (205/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.332968409 seconds)
    (206/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.373986236 seconds)
    (207/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.994621057 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.348632926 seconds)
    (209/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.393993168 seconds)
    (210/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.540061465 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.446463043 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.441907376 seconds)
    (213/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.982900226 seconds)
    (214/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.344437469 seconds)
    (215/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.32094649 seconds)
    (216/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.362757974 seconds)
    (217/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.394886484 seconds)
    (218/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.340620723 seconds)
    (219/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.348810221 seconds)
    (220/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.990815189 seconds)
    (221/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.434666358 seconds)
    (222/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.097378444 seconds)
    (223/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.510294191 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.448384995 seconds)
    (225/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.516421767 seconds)
    (226/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.390910606 seconds)
    (227/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.495250114 seconds)
    (228/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.361536554 seconds)
    (229/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.350262789 seconds)
    (230/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.366352602 seconds)
    (231/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.424398059 seconds)
    (232/286) benchmarking ("sort", Int8, true)...
    done (took 1.712776654 seconds)
    (233/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.469161356 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.388685804 seconds)
    (235/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.351658666 seconds)
    (236/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.324120281 seconds)
    (237/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.346063519 seconds)
    (238/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.339545098 seconds)
    (239/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.336774282 seconds)
    (240/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.352405207 seconds)
    (241/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.515716118 seconds)
    (242/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.391478073 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.358435424 seconds)
    (244/286) benchmarking ("sort", Int8, false)...
    done (took 1.486659975 seconds)
    (245/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.490319067 seconds)
    (246/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.573186668 seconds)
    (247/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.493884806 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.37512534 seconds)
    (249/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.348197894 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.99196952 seconds)
    (251/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.479444802 seconds)
    (252/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.366889291 seconds)
    (253/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.605508164 seconds)
    (254/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.429079581 seconds)
    (255/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.053189423 seconds)
    (256/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.338545756 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.338059982 seconds)
    (258/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.485772871 seconds)
    (259/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.363869975 seconds)
    (260/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.358939279 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.53911946 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.351987595 seconds)
    (263/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.348873993 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.353474438 seconds)
    (265/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.329337033 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.356326818 seconds)
    (267/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.425787014 seconds)
    (268/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.327792024 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.514747529 seconds)
    (270/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.479339246 seconds)
    (271/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.130449655 seconds)
    (272/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.38184459 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.351619664 seconds)
    (274/286) benchmarking ("sort", Float64, true)...
    done (took 1.982560703 seconds)
    (275/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.095924452 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.41447217 seconds)
    (277/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.128860849 seconds)
    (278/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.370142506 seconds)
    (279/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.343 seconds)
    (280/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.396139016 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.346105571 seconds)
    (282/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.080623812 seconds)
    (283/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.354043696 seconds)
    (284/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.352105116 seconds)
    (285/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.345668723 seconds)
    (286/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.452935649 seconds)
  done (took 470.543426326 seconds)
done (took 471.762002782 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.386781902 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400235978 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.354576925 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.384804179 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.467975015 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.526599071 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.364910616 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.393783515 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.402594476 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.406221598 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.362692859 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.527244472 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.357438886 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.354743119 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.357130427 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399184825 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.357373722 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.351040059 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.37113516 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.393938565 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.371016854 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.368384991 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.404752508 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.527609504 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.359588366 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.355981055 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.358519513 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.378534536 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.472808229 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.357383983 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.358090505 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.365218036 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.355431612 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.355857684 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.350302215 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.381892493 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.367931736 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.367961373 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.390745546 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.471049005 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.360057013 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.358028276 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.360154762 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.357334421 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.35622118 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.397275535 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.358924312 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.414211067 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400256972 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.401075987 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.345752769 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.365451296 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.369436752 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.358406688 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.367898225 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.357161173 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.415057118 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401200365 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.376737169 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.404053942 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.347385655 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.357648544 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.397049666 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.37502473 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.367027504 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.347986057 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.350308048 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.397615527 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.36047708 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.354931597 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.349176935 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.365485541 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.361953858 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.373517374 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.394036375 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.35797059 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.351026227 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.360081062 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.369057814 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.357166712 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.408447592 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403847408 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.410740529 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.361423267 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403305949 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.532916527 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.369799745 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.360786265 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.394420619 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379748695 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.372862658 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.371736974 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.393564764 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.363398028 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.408360071 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.41714152 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.373398639 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.373712802 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.410733963 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37204171 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.364879691 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401220217 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.356672288 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.357281824 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.361304143 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.482759724 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.36780755 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.354116705 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.396153983 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.411146594 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.420808771 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.356060337 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.368118822 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406450838 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.369777954 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.422338838 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.365788545 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.353308098 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.350763788 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.476221977 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.364796423 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.367175972 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406420082 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.423514651 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.361828748 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.350234428 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.376460822 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.40441851 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.484911226 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.372881081 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.479040204 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.360562795 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.368648682 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.394954376 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40765132 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.398124066 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.422650154 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.409021438 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.379896719 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.365477421 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.374001638 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.372694563 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.363849053 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.420476643 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.360056242 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.394467331 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.40529641 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.407908716 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.397135334 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.483871433 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.370272092 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.355978593 seconds)
done (took 227.93221172 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.423043799 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.358740615 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.461030592 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.360124912 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.463236358 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.461233449 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.356098575 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.358803847 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.358691813 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.739166007 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.358565655 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.358808731 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.359953559 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.357332113 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.443315816 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360998382 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.358930857 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.700587565 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.363412335 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.431406355 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.362085542 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.357772406 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362273202 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.743428932 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.361871504 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.356827711 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.433805056 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.362750164 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.70749895 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.355291327 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.357136653 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.709102912 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.451870374 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.379284155 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.372995418 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.36935575 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.465578577 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.381885664 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.445458313 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.446041346 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.465098505 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.402729132 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.357587571 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.359290397 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.363185715 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.363526423 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.359312801 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.390698053 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.360567421 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.359375213 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.700012969 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.374594089 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.360745106 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.360518068 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.36244376 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.393251861 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.35958959 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.363951005 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.452530521 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.366366012 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.427020428 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.741842147 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.742303827 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.363864644 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.361655121 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.360313919 seconds)
  done (took 106.333751189 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.430812747 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.437998903 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.482246075 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.359100864 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.414570448 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.492610604 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361256287 seconds)
  done (took 11.227234205 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.371364963 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364673032 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.415724385 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.414246392 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.363088215 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.577344593 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36585484 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.378400132 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.361984708 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.448963854 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.378380002 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.366684883 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.373665763 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.365553358 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.413599975 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.376907128 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.48203289 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.368231214 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.368724418 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.520442836 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363447615 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.373401989 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.444371881 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.377395784 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.379537805 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.374081246 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.311833432 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.36558158 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362157666 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.366153452 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365212369 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.476612239 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366705548 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.367774387 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364310834 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.528220751 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.36681008 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364646309 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.367746158 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.36906146 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.368898405 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.367584439 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.366779522 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.363913117 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.369497995 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.389281831 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.368023805 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.367539205 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.369586358 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.370600491 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.449776503 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370246188 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.367835763 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.365310546 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.447420975 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.375927798 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.370140433 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.366817837 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.36996416 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365766413 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.522876479 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.417187154 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.370780319 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416636571 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369194517 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.370045141 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.371028869 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.369167453 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461030248 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.371111462 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417898255 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.36317228 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.592681717 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393992188 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371584409 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.372048432 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.37269227 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370539565 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.368255404 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.379383433 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.368640093 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.370592602 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.377706295 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367974242 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367455328 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.55329591 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.527748894 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.366151125 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.381537067 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.37949459 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.366772724 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.446096869 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.37285515 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.367219313 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423016535 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.486204818 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.450597767 seconds)
  done (took 141.549100126 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.374021347 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.377187774 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.378913959 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.395201693 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.370857406 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.371479541 seconds)
  done (took 9.523321077 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.372791521 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.374349902 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.371777387 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.370579531 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.370828638 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.383502248 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.383918843 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372648288 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.376430536 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.370564283 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.383374464 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.374088181 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.373851 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.370539156 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.383747851 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.372293714 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.384095986 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369710362 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.370846789 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374356338 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.370900569 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.371386655 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373520053 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.372855264 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.390871502 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.371776101 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381116626 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.373521218 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.374344665 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379183781 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.392423139 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.385523105 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.376226239 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.38108957 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.38773941 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.373459794 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378888965 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.378557929 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.371679802 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.38900444 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.376843143 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377247923 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.375796916 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.375864201 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.374590407 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.383521109 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.382604438 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383058532 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.387183953 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.375464831 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.374162323 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.377127463 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.388390371 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.376359158 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.377298183 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39907422 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.382193667 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.387715588 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.37622769 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.378691163 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.378310151 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.386795451 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.378643174 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.39105532 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.375042873 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.376280227 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.379675896 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381862442 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377090027 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.376455846 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.37891589 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.373859357 seconds)
  done (took 101.499270153 seconds)
done (took 371.377509759 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.85991336 seconds)
  done (took 4.118031196 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.478463132 seconds)
  done (took 3.740847735 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.405590522 seconds)
  done (took 24.673520716 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.46379349 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.379644326 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.372348839 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.368191439 seconds)
  done (took 10.845468613 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.690142259 seconds)
  done (took 3.951589223 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.369517592 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.366073839 seconds)
  done (took 5.999761529 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.705342292 seconds)
  done (took 3.96763002 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.79948481 seconds)
  done (took 4.068149303 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.401582149 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.385130534 seconds)
  done (took 6.059141118 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.354000719 seconds)
  done (took 3.616365957 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.98390166 seconds)
  done (took 17.245824352 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.380209929 seconds)
  done (took 3.645931954 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.394921396 seconds)
  done (took 3.656796006 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.295067522 seconds)
  done (took 6.555156209 seconds)
done (took 103.403848842 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.370972887 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.375906028 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.373353088 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.374951843 seconds)
  done (took 10.756791544 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.430831331 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.431747939 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.419336054 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.423626387 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.414771621 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.411462185 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.404128464 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.410744018 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.42756326 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.414126296 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.430372618 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41653162 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.41349633 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.421668213 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.415532956 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.414033364 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.422808765 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.4136131 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.405586366 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.417941303 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.379920033 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.423784526 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.417630671 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.379688564 seconds)
  done (took 35.224700421 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.875958357 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.452663435 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.536966071 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.434675909 seconds)
  done (took 7.564208406 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.450905656 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.451384588 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.455676041 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.498076807 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.532789321 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.459875437 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.405973915 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.403810641 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.389744598 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.450148956 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.513906415 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.447339514 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.548253989 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.381948546 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.644605045 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.381174953 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.38120259 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.459865382 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.496864769 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.515098778 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.382547203 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.458780906 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.461617366 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.44851997 seconds)
  done (took 36.283664636 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.37916939 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.401034934 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.381120858 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.379624219 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.39194755 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.383141126 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.383906189 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.382868463 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.382618517 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.387842907 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.380508307 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.39548026 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.381020005 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.383071653 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.391459234 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.382803006 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.386411056 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.383766361 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.382018643 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.391072326 seconds)
  done (took 28.97553795 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.374221841 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.375254602 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.728357891 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.631113889 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.376266584 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.376597027 seconds)
  done (took 14.128462878 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.463004169 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.62992726 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.383561406 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.799858534 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.884694904 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.387759294 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.386491302 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.671025395 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.022334327 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.996449936 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.450723595 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.464275783 seconds)
  done (took 20.808659938 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.384734302 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.377630059 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.380823635 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.393512021 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.449540256 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.385926404 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.394948526 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.379038348 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.447674802 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.452386181 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.390614098 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.453436581 seconds)
  done (took 22.162237655 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474382716 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37952758 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378399779 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419424056 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373148958 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223482306 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416921963 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116927588 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.397596188 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65366765 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378371933 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489283926 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.639259485 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3901064 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.379672048 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.361775547 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605884572 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923300653 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376149532 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379239707 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414627916 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39367245 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393195795 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613392619 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381305577 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380687136 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.715344847 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380614246 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698059467 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390159463 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391336916 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380040605 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656094625 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070911647 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497958603 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.618472701 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390188845 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377654673 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.375982085 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.411759515 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384860045 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380705828 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392674036 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382035709 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381198991 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384744067 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146869142 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.402199566 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.37961547 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385392565 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675620432 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476327697 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.389299046 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382907724 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470581357 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380284996 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.385497964 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484466301 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960176558 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397965445 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387350752 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.386077941 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382337301 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395238428 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067340006 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.385351279 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.390405228 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387976293 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383359155 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38033193 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394998269 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385276254 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.40690131 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383376855 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160490548 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380582045 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383452324 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974366972 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388593893 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.386604363 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617971838 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38549692 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384071929 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.384465833 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389355027 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147513328 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390368616 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.367681374 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400999575 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.131380496 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638696817 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408433983 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418329558 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613466112 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.367855959 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38557908 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.399102942 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382193103 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404855877 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143948474 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40053329 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.383723978 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647470955 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.597743095 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401066242 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371828786 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893930649 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416524605 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.400690075 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391201397 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627856727 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.048433152 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402852974 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400131669 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400862562 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387884567 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18743879 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394244442 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.487750999 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388196174 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685220968 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.220716215 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383847914 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456879262 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394812793 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389671685 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38619832 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385344442 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389067709 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.615934239 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41820642 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.400518628 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.401173665 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387710409 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.388581042 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387954861 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.386461845 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614610115 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406945424 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666918075 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389203266 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390688294 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382713386 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.608914284 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.387566364 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.740668095 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65721233 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400192359 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400289088 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401565282 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410324036 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498005774 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412339325 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.391630873 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65017973 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.393531786 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.395271666 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396367963 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385996504 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397892607 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.395679627 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39649531 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046182199 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366041643 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394284418 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306940976 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.402246606 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459384533 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398593409 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631650826 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.402843856 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392325606 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392847002 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.396401332 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619106841 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399990654 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.406943322 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465106606 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.90236905 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076832528 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40674274 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.391601705 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.389844135 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.389798467 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39215106 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391798198 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390529545 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631428639 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406725137 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404637693 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056991175 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397201203 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.3899816 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.393977558 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.406298318 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.399482111 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394772391 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.403683184 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406549624 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401928958 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.405046474 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538894066 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.406928026 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393554111 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908936576 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400485053 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395446173 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39273483 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428844414 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39406186 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270201605 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654561598 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412569935 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690258358 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401435129 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.40706871 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.393039004 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392887614 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4055966 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.402263766 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39928429 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.407230818 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392935822 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406874757 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968666813 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214898109 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999445633 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406648273 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.406057321 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394494993 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159594704 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409375275 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397506474 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661010807 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149401503 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410130073 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906387575 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.408788093 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254931852 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694898417 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627328596 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406672978 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.391885102 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691090592 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606214931 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431194406 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412911804 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397960352 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.372115802 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991455276 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425456566 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472486798 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155477452 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408666927 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394509605 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.478422084 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.395349504 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845933563 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416652576 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395728987 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39255516 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415904342 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243256829 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399283282 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397764858 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106731626 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410247971 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.91114584 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411379162 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640166911 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.411438801 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.401251813 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.394929471 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.416117428 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.655906113 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697349052 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394330261 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407222632 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022112748 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.280619595 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.405861155 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400547011 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197484984 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398097619 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721854108 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.40118178 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.398385675 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401231564 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398898787 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398274586 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.39658604 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405629261 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371125553 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933329621 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.410940924 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395562112 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399287983 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401443059 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655602157 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.413742929 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.069983328 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633037878 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425647006 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419762828 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.403748051 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403141448 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.381024429 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.401311416 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401561213 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473074641 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620596283 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.401274285 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.377886942 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.461246351 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608562673 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400279315 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402245416 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667409676 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.40000195 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.417584636 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18938368 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430136634 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403821284 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400025073 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399777908 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418738693 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468427692 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642703689 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.413208888 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.413803735 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85396184 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420555519 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398307023 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.418455388 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495808804 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404866234 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.397840308 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.176516668 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077198981 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216703404 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.079475064 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701716983 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39887338 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406833376 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402659483 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563989304 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405807432 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678285052 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404424788 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.413970359 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421176204 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407884947 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405608254 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616266904 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679937668 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40381182 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404528233 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403544571 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.403883046 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415764189 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.61678654 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946801812 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002479571 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400259855 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409511033 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172747162 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692530637 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404819114 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403130699 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40328847 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.42204295 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.412816573 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.404455932 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418693906 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544760205 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705156539 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107945141 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.428972116 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.435938105 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.179021267 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412656538 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65952104 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400508005 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.66922391 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07412214 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.213344454 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674726668 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475933249 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648583504 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.406339848 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569786932 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.403614647 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424138901 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408294777 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406264415 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.404150361 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.416152892 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09597703 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673347478 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.41077496 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.403900025 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439389968 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.418374026 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632893459 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18743041 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628429658 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418583085 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412211032 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407486333 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082655677 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710233461 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404346713 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.407004082 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680837233 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408489769 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433772568 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.862093582 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.403487862 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014333835 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.402790187 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428022804 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424030394 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.216558913 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081871164 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.409733097 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955347757 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404227034 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410734179 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681818278 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.415061254 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.4241048 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690241391 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.411994363 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413617758 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653256172 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.067826363 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273933215 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.427741267 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407979067 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.405739137 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411274639 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417877461 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405945792 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412974569 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.869940864 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425581112 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410370077 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417623592 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.406205743 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426321784 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.407094383 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411140331 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.410444206 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.419716154 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.413365366 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422697198 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510320768 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009839034 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431989049 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.082661586 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.741516343 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.670264145 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413002344 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.395407485 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.417420806 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41112979 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411990374 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406341186 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418652115 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012969819 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.412816801 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.423254559 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416753488 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.631607743 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622442674 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41890535 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652632564 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416545807 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42756933 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.395995462 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413298833 seconds)
  done (took 990.51866843 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.45586337 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.42754416 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.437131535 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.432750785 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.465927732 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.459897123 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.491960598 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.435404002 seconds)
  done (took 20.90593969 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.412984543 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.418165835 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.416942407 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.423911286 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.413635334 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.952198697 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.442110853 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.417506735 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.424018757 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.430804339 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.427996457 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.211057914 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.419350628 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.412684954 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.408194301 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.42212144 seconds)
  done (took 33.359946024 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.727730304 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.653386993 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.013454593 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.474758545 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.448500021 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.409709166 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.773869625 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.442840412 seconds)
  done (took 28.246555593 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.427205513 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.428135154 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.4269996 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.426151904 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.426383957 seconds)
  done (took 8.436660657 seconds)
done (took 1258.633372029 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.418705287 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.422905085 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.418635983 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.41997374 seconds)
  done (took 6.978636446 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.399680941 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.397175141 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.396309759 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.412516252 seconds)
  done (took 9.90672681 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.226079308 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.108174144 seconds)
  done (took 5.637210236 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.416700357 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.164450806 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.165295809 seconds)
  done (took 8.048718133 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.730739648 seconds)
  done (took 3.034347283 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.846983158 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.790833994 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.609122802 seconds)
  done (took 6.551152488 seconds)
done (took 41.459372937 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.419434977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.659383724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.609542804 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.416184204 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.574363865 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.590238312 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.199291103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418137177 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.441046705 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.41522137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.411509591 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.574511221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.181926689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.664992152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.180426407 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.665484535 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.581784325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.421479606 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414177282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.413970639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.217582476 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.432134354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.422958318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.42023304 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.579319584 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.563757774 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.423614738 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.660594645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422239185 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41719516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.561267911 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.41779241 seconds)
  done (took 84.09683258 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.420113583 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.41258495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.414986487 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.43268914 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414958269 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.418473419 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.435328594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.414890749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.427500772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423777093 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417374829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.414017624 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.424738903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.431460451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.428433569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.429891575 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.41550273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.417137417 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.429203688 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415774629 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.424412983 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.414554648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.432776694 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415039064 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.414889043 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.418749374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.445859096 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.427216501 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.415445444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419696921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.438602559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.433207335 seconds)
  done (took 78.848057923 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.439922041 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.429463234 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.417802049 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415738174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.429663286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.419295582 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.42015428 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.416667321 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.419897835 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.41555868 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417632129 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.422572253 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.416295381 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.418009224 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.41575915 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.431834866 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.421775752 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.419949751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417731508 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.436381644 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.417298862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.428464175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.41732768 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415748315 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.437041166 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.43413627 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419310658 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.417195538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.416987648 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.430290296 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.439353862 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.424372312 seconds)
  done (took 78.848728298 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.703559884 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.428655171 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.430544404 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.406023289 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.431962881 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.431750753 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.427931756 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.70841223 seconds)
  done (took 15.278417088 seconds)
done (took 258.377104598 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.42228005 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.421393132 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.641394751 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.454508546 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.430025931 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.448340162 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.451781332 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.671096865 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.442552487 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.671157752 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.457655114 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.447783522 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.425480896 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445519742 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.729309016 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.585092255 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.422539799 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.421967097 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.82633359 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.461758228 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.708173482 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.426675698 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.751676355 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.436179575 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.439084536 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.420017639 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.447599963 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.404305557 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463884697 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.817726837 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.428956212 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.404879706 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.519481916 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.548839356 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.656515667 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.601336595 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.435432131 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.518231451 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.665942668 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.427576096 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.435347707 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.232882308 seconds)
  done (took 85.781216375 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.434506008 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.554511215 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.43394179 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.43576234 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.431906171 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.550034985 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.525293896 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.43294296 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.434884096 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.4346649 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.433104664 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.434470107 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.434382573 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.432735528 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.435450739 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.436494996 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.43395487 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.447015034 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.449222661 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.477658804 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.55304479 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.456716768 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.426229537 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.435504568 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.535862429 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.570286223 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.434158616 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.428347711 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.474211035 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.437534415 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.437448382 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.48062541 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.437837519 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.43664137 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.551691096 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.533208469 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.447043544 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.429687613 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.545859499 seconds)
  done (took 58.449322039 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.439738829 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.711737103 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.906091704 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.446865161 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.437004387 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.442291285 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.525498452 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.440267955 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.438765625 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.441055953 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.623691247 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.443468865 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.476920157 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.930736428 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.442310065 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.439737348 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.439783675 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.439001636 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.721577337 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449176111 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.547873414 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.441113356 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.529284944 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.451850716 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.461484381 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438042802 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.445354529 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.020050782 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.441809746 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.622336331 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.340835971 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.528617533 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.95731463 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.911856714 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.340522909 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.441696882 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.441214824 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.626988267 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.437383648 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.441025355 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.529987859 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.438615363 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.920433318 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.126465087 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.46305142 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.442128982 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.048186374 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.626801913 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.72481122 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450349059 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.944169693 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.445817442 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.443435894 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.442429427 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.723452771 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.450567932 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.439587698 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.048942916 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.466435703 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.529182621 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.443743207 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.442268535 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.72873892 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.437225159 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.717378222 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.439953287 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.448664458 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.463542517 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.920635123 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.445566242 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.149844698 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.462150475 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.439424108 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.623253522 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.712683726 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.077110379 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.447002671 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.731205608 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.970286894 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.530105815 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.446635153 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.01189058 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.536385695 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.446667163 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.446727778 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.445138808 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.443760175 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.547674573 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.530222398 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.091084224 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.1371724 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.077842291 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.55189829 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.456990452 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.443520554 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.050557506 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.462310974 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.444171706 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.915216229 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.15007139 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.461108274 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.451816048 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.15506409 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.46806249 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.536852803 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.451893127 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.965238369 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.447124102 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.495115772 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.444155354 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.451969985 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.466856215 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.53375525 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.45154221 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.443971462 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.121804955 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.65301908 seconds)
  done (took 190.793978413 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.439069087 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.433362082 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.439901834 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.451067646 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.437225602 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.447782654 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.447417705 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.440589774 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.442381714 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.437131111 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.439170059 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.43981513 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.437699047 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.446151173 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.444779793 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.447385099 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.436632373 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.439549503 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.440126838 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.432880723 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.439394377 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.457643813 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.438093786 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.433287529 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.44072019 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.442820061 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.445029893 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.435177901 seconds)
  done (took 65.67700999 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.447899092 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.089193905 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.446111829 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.595935013 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.464553855 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.443406277 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.593866959 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.506857329 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.450315698 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.445200571 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.444446499 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.803466474 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.449392107 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.054015677 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.670899755 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.599510248 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.052107324 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.467512436 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.442768236 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.446047268 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.593721244 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.450974941 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.80347091 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.115700122 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.450315449 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.115833001 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43590678 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.448943864 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.449109704 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.116149343 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.446730909 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.804576054 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.537090232 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.516652832 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.11644741 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.032541694 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.039588166 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.608506675 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.441989475 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444866873 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.451131908 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.437875178 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.116400392 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.45161618 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.44983974 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.108713289 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.46559932 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.449594684 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.440619526 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.44789808 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.51795992 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.52341639 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.813763723 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.193686315 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.537526603 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.450568872 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.597754212 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.747623125 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.448872372 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.058012174 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.435066479 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.119139324 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.456576634 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.437876291 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.45062409 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.441818192 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.622728819 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.600511989 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.058259876 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.470473232 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.063793108 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.642251849 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.450799313 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.448857362 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.453435622 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.123583566 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.067515502 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.638006289 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.605311763 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.675971516 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.440206338 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.450956954 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.438385506 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.539772134 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.451080624 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.12137665 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.08086368 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.467259702 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.452626205 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.453348739 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.453032639 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.655817303 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.125337398 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.539614727 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.037505209 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.824907693 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.816162476 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.454567852 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.520762094 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.468809014 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.878149943 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.453023119 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.516279888 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.805476791 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.811435546 seconds)
  done (took 174.437817564 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.725325444 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.468941719 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.543946094 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.612045573 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.118321645 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.071096065 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.442798817 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.587019912 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.572991294 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.736158303 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.459787614 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.53844438 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.691859641 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.545775569 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.22908093 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.538897007 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.551100208 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.613275196 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.607581975 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.449732423 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.170709526 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.781818522 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.656600862 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.479715199 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.565449758 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.313330829 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.070535324 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.048815022 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.65512106 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.455119063 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.013875537 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.448065825 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.46228383 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.216872336 seconds)
  done (took 67.774406994 seconds)
done (took 644.22412603 seconds)
SAVING RESULT...
DONE!
