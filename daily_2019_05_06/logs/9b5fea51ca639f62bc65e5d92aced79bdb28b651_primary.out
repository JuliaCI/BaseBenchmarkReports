cset: moving following pidspec: 30073
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.287570045 seconds)
loading group "string"... done (took 0.581041415 seconds)
loading group "linalg"... done (took 7.148919155 seconds)
loading group "parallel"... done (took 0.165401809 seconds)
loading group "find"... done (took 1.11968516 seconds)
loading group "tuple"... done (took 1.983668633 seconds)
loading group "dates"... done (took 1.292067443 seconds)
loading group "micro"... done (took 0.240212486 seconds)
loading group "io"... done (took 0.962059284 seconds)
loading group "scalar"... done (took 38.789674262 seconds)
loading group "sparse"... done (took 12.341688366 seconds)
loading group "broadcast"... done (took 0.963376434 seconds)
loading group "union"... done (took 13.292749821 seconds)
loading group "simd"... done (took 4.414209979 seconds)
loading group "random"... done (took 8.91963124 seconds)
loading group "problem"... done (took 1.936838568 seconds)
loading group "array"... done (took 21.115918395 seconds)
loading group "misc"... done (took 1.925803347 seconds)
loading group "sort"... done (took 3.196748534 seconds)
loading group "collection"... done (took 17.903130771 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52959775 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141116613 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116670784 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138028473 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183412403 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131353921 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144185056 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084143413 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.019291647 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15994172 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138092347 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475306718 seconds)
done (took 5.017045143 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.244859991 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08648139 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095197179 seconds)
  done (took 0.889347254 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065481204 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125511559 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079381287 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067502902 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065928928 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080023303 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066312191 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065781324 seconds)
  done (took 1.256980438 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072986559 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067488389 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083367324 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066975462 seconds)
  done (took 0.998305252 seconds)
done (took 4.171971664 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.893877541 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.247572263 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188295794 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.451453882 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147098238 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187821115 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.820407722 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.347416589 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209462486 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100258394 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103814994 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376393225 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105847765 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.726821344 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076255617 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105198393 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.170553165 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.461328529 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080480119 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082071338 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103360553 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144172096 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.099860681 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076656683 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166843182 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068340161 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14716153 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096959561 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068834143 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.240807075 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189446998 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.763068417 seconds)
  done (took 10.790385832 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09865546 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115923568 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068694461 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138561763 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100956068 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085489124 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071059434 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082319592 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090396401 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156394618 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112412925 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105086736 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080930907 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069195203 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099678783 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210573744 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106465345 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.0841069 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085675029 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074856854 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120693521 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082611698 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092453444 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077173357 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150710851 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194403073 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110298643 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110143828 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067963929 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079212842 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131289828 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140352024 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066831296 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081131004 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138818003 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109619907 seconds)
  done (took 4.511800001 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.032834879 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160376171 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090982278 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151112733 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084801242 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109590906 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082910715 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098951013 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246317372 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.096331218 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.457049206 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128196019 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100983634 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067501748 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083178584 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067690362 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.522255956 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146427379 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101758959 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10409518 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089619598 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071349773 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.717337769 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069079126 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066209552 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085112695 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059705358 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.129234555 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146413 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067791606 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.220986181 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090136135 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086655976 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102856802 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196455088 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094591103 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123597129 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066463591 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081686671 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170165081 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074117003 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066798726 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10572418 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117830714 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104654927 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083908808 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06777646 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181029407 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06636249 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099773622 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.882687655 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165143424 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077446505 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066123177 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.287970677 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084598015 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0843834 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064105448 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.2555108 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.068066352 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.148206618 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084371722 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065926282 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065776486 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08320177 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072245709 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.740508339 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083099262 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.098715052 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07085554 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076756296 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084801573 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067028111 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088568141 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072736021 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100774294 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067292596 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067922504 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082377456 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06610775 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083275928 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.085280977 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203944162 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08267596 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067489859 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064316721 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102564253 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110563974 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070387155 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064605693 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116384565 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068717608 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083114064 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101784424 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084722207 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063841917 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100947016 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084602267 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113511552 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08158955 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.11585898 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067870414 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110054862 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076188309 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114042652 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092963898 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069008108 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153406922 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06420924 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082165616 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067417022 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064668603 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085442095 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068348048 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098122989 seconds)
  done (took 21.956876361 seconds)
done (took 38.999772717 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290005506 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.091161811 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091468399 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074500643 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091112352 seconds)
  done (took 1.428046621 seconds)
done (took 2.190613004 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120108897 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117007714 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063347835 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112100893 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064204986 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116275784 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114592772 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081117266 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118722151 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064438659 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112230821 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064252411 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063395376 seconds)
  done (took 2.00150382 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082599714 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084757528 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085242581 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081321686 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078456854 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082220179 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080145045 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104763811 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08017314 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087140367 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064194743 seconds)
  done (took 1.670791784 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082250632 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083691691 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084508758 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080540364 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078305584 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081740425 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08046192 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101711147 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080691838 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088869962 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064170216 seconds)
  done (took 1.668133267 seconds)
done (took 6.09443735 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078015025 seconds)
  done (took 0.830799186 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.696994416 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.569642348 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083317391 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136956327 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224150567 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154449269 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.44778385 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109558355 seconds)
  done (took 10.350326639 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104131057 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08476488 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069508682 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088643453 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071823724 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085796058 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071583395 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071606686 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084723742 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068972625 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084441657 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071087274 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08521392 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07100986 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068810894 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086583659 seconds)
  done (took 2.090784086 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093278473 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091893512 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090401702 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076495192 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08900116 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072684507 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090866007 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074654997 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086790573 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072792653 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091444647 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074646654 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087922177 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065340811 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089716673 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076270372 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087340331 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075059458 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090994366 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075708894 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090607313 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065140185 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.0881618 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075084318 seconds)
  done (took 2.837689242 seconds)
done (took 16.870135075 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130865074 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075881016 seconds)
  done (took 0.968067227 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080253481 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098061078 seconds)
  done (took 0.94490801 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082736316 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081001205 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088650554 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092433564 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081268951 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065899427 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102242478 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066062942 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081524175 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06591412 seconds)
  done (took 1.574277707 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067639896 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093043489 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071118938 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097310204 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073977611 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080365653 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072587964 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084230508 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078123874 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079098715 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071691484 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098843036 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071490664 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099981392 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073789081 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083529003 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086967492 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067631431 seconds)
  done (took 2.220593176 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066252718 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066557475 seconds)
  done (took 0.904026922 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066464816 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064295004 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081818889 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067316767 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078704839 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062840527 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079175295 seconds)
  done (took 1.271964399 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40127755 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109773207 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.244214278 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087953482 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103957462 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26390609 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082723898 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070582857 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088209862 seconds)
  done (took 2.261343862 seconds)
done (took 10.914175815 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079941515 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08587308 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109537268 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.421058456 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105363461 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066307047 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.142773571 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.206599314 seconds)
done (took 1.990994958 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124238941 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611116199 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400740421 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212707315 seconds)
  done (took 1.997386137 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.372748862 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09172542 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074135705 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066683304 seconds)
  done (took 1.384053219 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06632507 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06947345 seconds)
  done (took 0.916784837 seconds)
done (took 5.198999527 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06645759 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066504203 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.102388954 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064242111 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083867317 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064000692 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064368388 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081214434 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066044865 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066542638 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082846457 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066600932 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.081504292 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066286924 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06624177 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079203163 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063706595 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066452724 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079748602 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064296169 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064587102 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082227041 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06419101 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06413753 seconds)
  done (took 2.532066425 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085375781 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083087991 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071548034 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088533751 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070743886 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088026312 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072084693 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066942502 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087720774 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068818698 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085536364 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070284341 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084376753 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070763265 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08495582 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070926555 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087911455 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069815258 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069657077 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086489296 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072648441 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08248085 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07070003 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087492187 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070248943 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086168437 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068527776 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082371685 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071793009 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086271075 seconds)
  done (took 3.125972283 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070797043 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064004486 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080019887 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070663255 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064390039 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080754071 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063939227 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080956388 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064344901 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063973541 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081134307 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063438018 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064058514 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080548533 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065526107 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083237947 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080777418 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064053549 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080502226 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064871636 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067211991 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079751573 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064862371 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079680499 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063739298 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064094626 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.0803861 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064110601 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065683227 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080061422 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066824686 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067425029 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079516946 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070331005 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084086138 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063433066 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068342618 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079351479 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064379561 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063909232 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079441377 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064074288 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063332616 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086879916 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064591686 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082406266 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063650304 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065038736 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080634211 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068039801 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079648822 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064361728 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066266577 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080964171 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068380347 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063332804 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080657425 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064016627 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080782279 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06350584 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063422671 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079757557 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065989914 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064732388 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09479593 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070626689 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081361456 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06525961 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065397955 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08196733 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065838593 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077681035 seconds)
  done (took 5.940434253 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116902485 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090683384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082194985 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065826997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079486442 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064559452 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068240761 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080116296 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065979735 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086214391 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064479494 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065085043 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081555494 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077560684 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08115002 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066045165 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086310494 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061993862 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06469522 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084115234 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065384496 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083603915 seconds)
  done (took 2.469239112 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186204855 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087439561 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109957692 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090044869 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084833681 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074026796 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086473796 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070243121 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071401762 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086220918 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069282536 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085909055 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068686653 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084483575 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06917741 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084893131 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070773988 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084970827 seconds)
  done (took 2.350824766 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077921053 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066718363 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106726002 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06629165 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083418914 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06948044 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088377722 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076053745 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085659747 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067060989 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092257047 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069448972 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085481462 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066474092 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069281055 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082485903 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070033452 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083476054 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075300932 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087672835 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071721844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090751655 seconds)
  done (took 2.519253686 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081034136 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068253392 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100476835 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085341443 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062329759 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065551637 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089340779 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067458016 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08952868 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068782928 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067263879 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081301363 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071537728 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083038136 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071240292 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08302018 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068924835 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066499637 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084651529 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063062042 seconds)
  done (took 2.307257372 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086800306 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084052811 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067928863 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092356612 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068343017 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085127454 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075939696 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084424975 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067614346 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107499485 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068667792 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084320735 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076218711 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0896571 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068735893 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092161267 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076248694 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091723617 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067836701 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084466269 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.221768243 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067844605 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092079848 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067951446 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084571823 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067753913 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068220293 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089163299 seconds)
  done (took 3.172656498 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067017856 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067215992 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080963536 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064597595 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064874733 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081005119 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064061403 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064685718 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083210484 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065015377 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067078211 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082121235 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067132924 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082502132 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066402166 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067025953 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082909104 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064240697 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064646285 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080935335 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06666559 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066880825 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082509434 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064425963 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080084052 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066976488 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064955129 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08052632 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066181618 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064347147 seconds)
  done (took 2.924112895 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075949469 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090981242 seconds)
  done (took 0.963449167 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063870194 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080866688 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080732693 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071407193 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087311912 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067511539 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091225752 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071449883 seconds)
  done (took 1.407731568 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083313303 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078102119 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084488649 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078296122 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093934598 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084006169 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155628051 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085432775 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073446772 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082610845 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080862198 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067122212 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090335796 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067666272 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0894928 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073132413 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064476071 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088999337 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069430355 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082548907 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068127768 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092389237 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069129867 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063732527 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085309169 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076089505 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094725979 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068870428 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086992481 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074219761 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072304316 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078154439 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067200649 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084350298 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064827602 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093668275 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082214051 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086767721 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075508871 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068076899 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093604658 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063050752 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088289027 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073834222 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093998461 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067769097 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067686127 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07949937 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065388583 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085372243 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062286871 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067507239 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078608374 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073916398 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086951722 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077962123 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068202701 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085169387 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070159162 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087273781 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07380906 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085184279 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069652112 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066959624 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092983026 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072219494 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092679851 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062289341 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060834822 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081613326 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076677759 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105349179 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072900396 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084929513 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068745658 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081880204 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07061008 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068546824 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089920558 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074743083 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084297012 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072460996 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091019912 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067573331 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070335009 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091023084 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066481923 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085172851 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065164381 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099680055 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06667157 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081466685 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064317421 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077372493 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086747786 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067298999 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081836219 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073304369 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061692801 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084108296 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06807095 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084922406 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.0772389 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08923905 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072584614 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091949468 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074910989 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067211721 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087417227 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064048964 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085308139 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06643867 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075198747 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078145936 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070428186 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084827533 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068717039 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092479959 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065733919 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067892159 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091143654 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072698334 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082228907 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063830223 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070483421 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084138564 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070696548 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091809907 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065897132 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061980148 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078654236 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07144971 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083586078 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071087037 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089486163 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070111933 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061964632 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082322766 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072325005 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092728324 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067495473 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067594491 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089814988 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068891164 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083445231 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073836499 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08654033 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066130326 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072665196 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084800613 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062496091 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08696842 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069501225 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065449696 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087930375 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071249735 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086324958 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067967967 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082647072 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072444126 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068108503 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083213439 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067489187 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082575104 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077270875 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068953995 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07931413 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064868658 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090386623 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065621026 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066862529 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083053168 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070734212 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084758715 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065694159 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066562318 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08574371 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07737054 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087896845 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068294173 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088844714 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078530451 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084302112 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070015616 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066927994 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085126489 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06828336 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092999017 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072670082 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08923985 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070291628 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063834903 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088906476 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074718486 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083346518 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0650408 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065941502 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087025659 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072949474 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087551655 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068817583 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082719702 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067796034 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070175691 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086468506 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067436609 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082840343 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071055849 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083901063 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074066402 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06787376 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093878705 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070531425 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079381695 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070962837 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082762009 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073343625 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062757318 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082480747 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066888975 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084787645 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06604293 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070025585 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078444996 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073888444 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091801881 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.0676549 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06673809 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083704376 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073625833 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085725001 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071692474 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070860821 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090153843 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07752531 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083436505 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071076086 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094386771 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067644914 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061710675 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089094804 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066690299 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08340837 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066333353 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065458525 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087459095 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07518928 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090975495 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062204824 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086472055 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065586268 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066857838 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.0812351 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072470955 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087728414 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068018303 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073529938 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08517556 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.0681932 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08856279 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066837707 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068446937 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084811466 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071032207 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084894946 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070354316 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066453638 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086956261 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067241924 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082523448 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069098152 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066771434 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084791176 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072932801 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083966628 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067312294 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086738283 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068173529 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068562805 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084799509 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066889551 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087329691 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067959033 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068262413 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086694529 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063160693 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091380537 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06696872 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074624518 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084934527 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064333118 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088974685 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069584 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072307613 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085375913 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06813523 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08562579 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067060392 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087137499 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073598276 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065654446 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095025573 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07458455 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085151348 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06962441 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084639771 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068986246 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066721698 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085535937 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068208498 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067092228 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085223765 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072552163 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08671703 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067868513 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069453703 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085711047 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068180581 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085873781 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062468184 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066240802 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084138009 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067631394 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094102101 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068747325 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084339963 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06643943 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068353285 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083755073 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064705544 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091510643 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076144414 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085653381 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07412521 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065886044 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085980803 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077750237 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079633211 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065815006 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082476449 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.0649072 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074327805 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084712465 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076702862 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084904721 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.0668784 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06476476 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085025269 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066388296 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061903677 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082760194 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071474651 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084253483 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067059134 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06711761 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088492208 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068572293 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093767298 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066867702 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085963512 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067834308 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064661203 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083416503 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067027921 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088263751 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068390731 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065477569 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082741835 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066991817 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068609246 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085962362 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067627282 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08592559 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074216725 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083864912 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069698287 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070609494 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08220046 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07081407 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08442215 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067041624 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06653096 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087880763 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070460341 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085640888 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076210901 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084706648 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068322013 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068153265 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083049947 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067387575 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066499704 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.0854542 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066359968 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085852778 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075031557 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082092938 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070085221 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067105717 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085396389 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074608984 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085357901 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070302227 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091641443 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068073635 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06898319 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092688038 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070953923 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088097085 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068713006 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068874114 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090710628 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066467136 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091199392 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067977989 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085025255 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068963723 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065880507 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084461438 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067675584 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065997008 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091169953 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068161278 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084444386 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066789484 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06468438 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086419489 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070732553 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092518738 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07019036 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087625878 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062402154 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064715366 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086025806 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065952471 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08654337 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070963164 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072804584 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087029497 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068343597 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083625856 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076687826 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091108668 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070819858 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066166109 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088621885 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069153268 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087043282 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068300781 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068234956 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086539871 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071424909 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086667192 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066939396 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074043432 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088015582 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068946119 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086337911 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068537253 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067405257 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080262295 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068706363 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087607515 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072289794 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069778487 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085247907 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077870943 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083161583 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068251402 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089031026 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067165296 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071395908 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080345385 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068857573 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085813183 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068546688 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062881733 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084650387 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06556564 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087193923 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066554728 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062604213 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094907171 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076170281 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088086381 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066843464 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065635723 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080552993 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062618718 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084437461 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068958988 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06890073 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095494867 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066724495 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084505855 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062881195 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067487228 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088252696 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070787318 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082380788 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063355916 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066027252 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087971979 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073226407 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084050721 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067859627 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069973924 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087155616 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065190367 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088894734 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064732637 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089046536 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079510178 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06738496 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085754886 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07359855 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092318808 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068467015 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080113466 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06850949 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070247313 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085671205 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068363037 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086138371 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082197182 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088696788 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067291579 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066040866 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087862557 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067175415 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093447399 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068152321 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.0672359 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089863526 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069253496 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093618924 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070588837 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092356449 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071628951 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088278643 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066557641 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067387663 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083958935 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067026042 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086786275 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068611398 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071756887 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092665645 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066612429 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096127017 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076571409 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087554239 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064747508 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066839085 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085616053 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063736276 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086205207 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065965576 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065406102 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084419955 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066786163 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086318688 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073677525 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068401265 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08617017 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06764548 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07994103 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069961736 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069926434 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086142754 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06439578 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067152974 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086199176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071406412 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088215506 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066379915 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08750453 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06930549 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067834262 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081002966 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074095313 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066083327 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088790771 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067097642 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085996439 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068595021 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088324585 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073326544 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067877512 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087518336 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077281261 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087339772 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065555343 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064820465 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091024037 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065538503 seconds)
  done (took 46.41535462 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107881087 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082706647 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062772583 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08166448 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075683629 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08239841 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063262734 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063790959 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082299473 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066330368 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080784941 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062872149 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090705648 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086742886 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093327832 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067587137 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081079596 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064349687 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080771656 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064326542 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091265236 seconds)
  done (took 2.478344059 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07611677 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090273964 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0747231 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095381511 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06864125 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090934221 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074163925 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089884845 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096410171 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068211344 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096017981 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071324433 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086252743 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06851509 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086144145 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071892079 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095522871 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069200969 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089547262 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073981557 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089506491 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073750571 seconds)
  done (took 2.637867823 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067578749 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066450748 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086497403 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062308118 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066239208 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079989583 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070861769 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083583562 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069891188 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066157583 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084369927 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.07588309 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086513253 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062396488 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067349134 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082857208 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132184512 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070718098 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06574358 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087182583 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06258201 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087476261 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062499857 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062521694 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.08384336 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071245799 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085757301 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065942989 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066222528 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084240902 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067469171 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082632284 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068493473 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067771453 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084599808 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066993221 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066461165 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085096513 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062633186 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083484887 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067025261 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063563701 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085801685 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069157094 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064260532 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082991293 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068960976 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084702662 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062400276 seconds)
  done (took 4.498766652 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084697529 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131484064 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087892153 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090794209 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102522185 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093534417 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070439256 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111373464 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064067396 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084895159 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082849141 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103931566 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086110471 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072002408 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092292092 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067030943 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067754048 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084300828 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070257024 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086073051 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071566341 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092532438 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099063666 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080064276 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088417074 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06646857 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084584306 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071738903 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098520703 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072396445 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.08975595 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07248762 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100932301 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071836912 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085683742 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069156302 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101347784 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086210658 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069759743 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064274485 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087130922 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071996436 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091859319 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102558625 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067664992 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072182406 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084804873 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064224334 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098309065 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069362796 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093627545 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100162632 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070671098 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085944559 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07142965 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100124336 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067689986 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083767073 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069930093 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098299148 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06502616 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089249962 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080940914 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087198461 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074668292 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10070557 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07318081 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089783323 seconds)
  done (took 6.657184093 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075718939 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.091954448 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081318637 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100835213 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09267377 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073934968 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092498818 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073733576 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092077072 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077922669 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092359246 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113061489 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069749173 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094219283 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074599657 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093245547 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073815228 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092438517 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073523255 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092376606 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092185156 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081194587 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092019445 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100486919 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104339828 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088377515 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073976048 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092360756 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082115093 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092663856 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103981441 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074714658 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092697414 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101162534 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08617177 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091786399 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06686987 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091957898 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074167929 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092071372 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068796264 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100759102 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073337419 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087705053 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073507624 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092250687 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100139185 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084965829 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094555301 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097345726 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073907713 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100243646 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072999354 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092875809 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099053447 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107061599 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100817937 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100856498 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07485828 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100567986 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.099980687 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107281197 seconds)
  done (took 6.359320346 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088010269 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094231745 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097640715 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062763421 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06588552 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09088636 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065433903 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084075553 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075688808 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094485342 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07905924 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08964756 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074242965 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097832521 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089853474 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074662215 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089475129 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071391104 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094466412 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070864035 seconds)
  done (took 2.507989941 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076929227 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104081153 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067703195 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073234227 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090270915 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07332108 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088609229 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070751089 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087135154 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070875315 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09610774 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077539978 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086811747 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073557951 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095431981 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073528757 seconds)
  done (took 2.167722871 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078662154 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096974064 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082306219 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086428654 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066306316 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083288938 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06749683 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062828586 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083131595 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081753691 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086430845 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070331381 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086363414 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066062347 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063839945 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089566383 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064031444 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083877309 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067300269 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100947933 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07828681 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084780357 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068887952 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069302328 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08662693 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072509138 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.08679994 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065899843 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084723465 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068683239 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086781446 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075660415 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083370076 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065646922 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066011523 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083042343 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067750015 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08648697 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070709961 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06681058 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084908484 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066755727 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08582107 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068373591 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082375802 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06790123 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063859631 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092160868 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066269687 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086465898 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067048738 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087936072 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068722398 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076830433 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089956585 seconds)
  done (took 5.107004791 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08101884 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069945984 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082253691 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065286754 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089119201 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068821851 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070839173 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088432266 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069146292 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08407372 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069242755 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088937264 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069362332 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071285447 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088234979 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071391396 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081880609 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069247603 seconds)
  done (took 2.245580801 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073113905 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066815028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093499561 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067571641 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086621565 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069698201 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062810663 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085095 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06573698 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086228047 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067458919 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069164961 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084845243 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069687361 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085815827 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067242639 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069520365 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084842704 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067685768 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081882951 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069583332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065899867 seconds)
  done (took 2.509850004 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072581109 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093830233 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.163148326 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107888449 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083501907 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100421171 seconds)
  done (took 1.491578069 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091413235 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099609298 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068809334 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108668415 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074926039 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088658667 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069368965 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087811241 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078054285 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102349172 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069450083 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09701078 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096623235 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077495192 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09387848 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075526327 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08846172 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068844269 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087016288 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106774449 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070149107 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096943448 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070270577 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088224523 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06902577 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096501184 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078577195 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10121875 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087706499 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078318299 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093713684 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069857082 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096779504 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101848418 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071420933 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096305297 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069880598 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105534949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074391121 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095893472 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069697969 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09535683 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097368518 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074229352 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097349371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06951981 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092943486 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068173682 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08913884 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112512694 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075370018 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095894232 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094819504 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077178383 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096778283 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113186739 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0825873 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096751681 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09402651 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082488983 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097439841 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074373192 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096732338 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101383534 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075237755 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09697932 seconds)
  done (took 6.632774226 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085272677 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106386393 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069532338 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101875862 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097636346 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069407688 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088593658 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069758437 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088221837 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069440024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129299435 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069661636 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097145755 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097457955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070039675 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088070012 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069528127 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096638011 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068968925 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112669343 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088440069 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077549091 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096778109 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095961512 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083849547 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093895203 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069271223 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08754669 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069686396 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088982629 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074173141 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088320176 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096511276 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069730757 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09663144 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069470089 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0884684 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074995103 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088402143 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074561658 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097022804 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106091104 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070079966 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087934242 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082159682 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089143893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069067341 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088893907 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069503474 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088110963 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08245112 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103099568 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101688814 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096521743 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070277403 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08954601 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069619752 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088995003 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07024676 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094002536 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077221499 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088272595 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113642139 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069411585 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08908039 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077540352 seconds)
  done (took 6.524384301 seconds)
done (took 128.727344228 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211401723 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.200161598 seconds)
  done (took 1.284013311 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068946534 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096515936 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098601783 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129539343 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087792579 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101107125 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119037325 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079574026 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067113679 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087129726 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067651079 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088909453 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132284193 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067620159 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.08673105 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068952403 seconds)
  done (took 2.32885319 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103325825 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197391183 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10961062 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066297934 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100376359 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079301809 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086099377 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07701901 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095606951 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066629359 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078625164 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095708914 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065753008 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096237088 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075292768 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098616072 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065813057 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098211575 seconds)
  done (took 2.539175289 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103916676 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149281019 seconds)
  done (took 1.132381402 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204325075 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123088245 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202440278 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.412899676 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206720789 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.282751813 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175180111 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173342096 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161403561 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168945422 seconds)
  done (took 2.989231369 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100061886 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172080666 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312318432 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138664315 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086363806 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116564801 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138413368 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.089322052 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101466722 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100883795 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081942323 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098024542 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097915632 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096325788 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075626088 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097546363 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121920087 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074896861 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097489835 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076852505 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118944612 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067861332 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095082274 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075313851 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077532286 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099499489 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066001221 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086369616 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076283474 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095485544 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079256874 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114652205 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097464162 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132544249 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082553905 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131399874 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098441256 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07271633 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095740004 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073321462 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097679544 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07769007 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104222322 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096283321 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067821377 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077978074 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086711326 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068344516 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100929609 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.078210771 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099973812 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07999876 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130984638 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09772239 seconds)
  done (took 6.255320473 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.755044138 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111766834 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094964132 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.821130025 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090900675 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10631022 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.720374624 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118491516 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209417332 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.776302172 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090140023 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100152046 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.182913328 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237136962 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.909454405 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290093053 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.641895603 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10485721 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109494333 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131930158 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140747222 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.178826224 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14948944 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.41124187 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075813112 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092966147 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138551847 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.096669273 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141052984 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084971173 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094320286 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156650968 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.229073984 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.157166977 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098045659 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070353003 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091981206 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.149547614 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244676821 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.171685792 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159607752 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068182613 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09158242 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141538609 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131450629 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068351784 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140159871 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175496877 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148807917 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07351908 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096318837 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143170677 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139409104 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143781443 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102437269 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.275327947 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286867999 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09093394 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099570176 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105247263 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239078891 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083559571 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201834393 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141439131 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.16860237 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092026615 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.734863118 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.148457556 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092323602 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074757825 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119980015 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095880594 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140186668 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145412039 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369676831 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144478705 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074159367 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091680929 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197643458 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104535575 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072077059 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141649567 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096461746 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102001819 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16720698 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.145535123 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147859342 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.213430462 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142764003 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.161583517 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075171636 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124459409 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096098747 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.19015449 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.173584789 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.142353565 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207639459 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140367534 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.14324009 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.148665798 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09725604 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.151629227 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120633077 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080935276 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138878361 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19555947 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.124286804 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08252968 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096221345 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14108483 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.127318391 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086080685 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.162080675 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152144977 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.438692517 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147406685 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.090090028 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087124394 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140465518 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163491129 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076731045 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235094182 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102170145 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17111194 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121673866 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069964413 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1204706 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141771177 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077815618 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123757916 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.160500543 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077889161 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.213547142 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.192148997 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077623258 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.215618222 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.162781334 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076414749 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148938003 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121611462 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146247385 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098577949 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140498381 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075133125 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77470976 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142955287 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122189448 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074049666 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165049848 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0924293 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083003764 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105624596 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068681216 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793887811 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085625854 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102322619 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104700667 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07526639 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122273972 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138552438 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094541617 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140829269 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.181724188 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097556425 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119176654 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083235045 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139087871 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097696719 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105054592 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084386878 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104459967 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123416418 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07453273 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104338328 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.147726671 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.142162156 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193236182 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.544789682 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070368553 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104969692 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.2013984 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071560482 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263557532 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137297822 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199485361 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142490587 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080703833 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.282484839 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143454438 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.166708641 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106055087 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152759514 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069957239 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136930667 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143925321 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092156682 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075912116 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140667893 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.166691382 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144488988 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.935741813 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071437635 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20353321 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067682522 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171646723 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077398365 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097270026 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.249396985 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091836051 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1471149 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143227573 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093946837 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084586326 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.684891677 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106196628 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137837589 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095348518 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.174660577 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163500746 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137574834 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138577861 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074728225 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139455181 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206296888 seconds)
  done (took 40.637005821 seconds)
done (took 58.046847826 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.262138767 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180370158 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243196239 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145022188 seconds)
  done (took 1.810479138 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14413228 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105316613 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118208187 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086787943 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103107675 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086318486 seconds)
  done (took 1.548246128 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.40595149 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266357779 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232480884 seconds)
  done (took 1.810979774 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.264831003 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213132202 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.452881213 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29971705 seconds)
  done (took 2.265026677 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176369432 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113756079 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067993062 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106848754 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160713704 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253687557 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127972074 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188806691 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080088333 seconds)
  done (took 2.229897817 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198401857 seconds)
done (took 10.771462987 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.274361132 seconds)
    (2/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.221468699 seconds)
    (3/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.205095352 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.20651905 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126795841 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.159650652 seconds)
    (7/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073215943 seconds)
    (8/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.101247362 seconds)
    (9/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.17149064 seconds)
    (10/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.17928426 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10405555 seconds)
    (12/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.127168543 seconds)
    (13/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.185253137 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078257042 seconds)
    (15/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.100166925 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076696244 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109907335 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113891587 seconds)
    (19/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.157783851 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103151244 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076956276 seconds)
    (22/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163851515 seconds)
    (23/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.172692521 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074976234 seconds)
    (25/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.218842326 seconds)
    (26/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114768952 seconds)
    (27/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.099554661 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.147373735 seconds)
    (29/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07767495 seconds)
    (30/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.206779097 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072910033 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161198011 seconds)
    (33/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.110618129 seconds)
    (34/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096282979 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.126770757 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.161264833 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.133293805 seconds)
    (38/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.215719332 seconds)
    (39/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.117021058 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.166993964 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.222148702 seconds)
    (42/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072321503 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072678255 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.096640747 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.120613277 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067092893 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117564895 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074107774 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.148568418 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.172432949 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.118258187 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053390554 seconds)
    (53/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103612713 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101593925 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073836385 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.1963086 seconds)
    (57/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080083151 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.089400134 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092842695 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09782863 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073239881 seconds)
    (62/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069713653 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.185914741 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.117663802 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090580424 seconds)
    (66/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.102148926 seconds)
    (67/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074010558 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068149027 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095816652 seconds)
    (70/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.181964198 seconds)
    (71/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.171971182 seconds)
    (72/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.185018202 seconds)
    (73/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.171218525 seconds)
    (74/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.091047961 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.136976043 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077873952 seconds)
    (77/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.202586674 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.210845128 seconds)
    (79/309) benchmarking ("sort", Float32, false)...
    done (took 0.151332322 seconds)
    (80/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110614249 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.162356008 seconds)
    (82/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.162882756 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136581831 seconds)
    (84/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096820945 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074099602 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.233668667 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15973188 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072616315 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.090092161 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.115881902 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089341952 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077888485 seconds)
    (93/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070765196 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.160586 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052443937 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074809028 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065951129 seconds)
    (98/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114911945 seconds)
    (99/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052973242 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.178344523 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.106551084 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.150196444 seconds)
    (103/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195315388 seconds)
    (104/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.168435891 seconds)
    (105/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.090083205 seconds)
    (106/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073075059 seconds)
    (107/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.074310339 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099534041 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191342764 seconds)
    (110/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068031794 seconds)
    (111/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.15872469 seconds)
    (112/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067763713 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076975504 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.117313371 seconds)
    (115/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160050655 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069070853 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.193253103 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069513403 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.170926019 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096331528 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073451735 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079604447 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076170561 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051887692 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169329712 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07748515 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202743665 seconds)
    (128/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08211334 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119172811 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052253549 seconds)
    (131/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114079337 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150218285 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.110735963 seconds)
    (134/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068685448 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09600692 seconds)
    (136/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073395761 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073369276 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088351832 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 0.158413609 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074995821 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073554215 seconds)
    (142/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089544817 seconds)
    (143/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062609947 seconds)
    (144/309) benchmarking ("sort", Float64, false)...
    done (took 0.149482954 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051899079 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052296761 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093759279 seconds)
    (148/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053786308 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052313138 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095490185 seconds)
    (151/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077947235 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078033056 seconds)
    (153/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.075313783 seconds)
    (154/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07461647 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051629376 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.09530486 seconds)
    (157/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052747284 seconds)
    (158/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053419927 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116333262 seconds)
    (160/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075041641 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088439734 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074725088 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055471363 seconds)
    (164/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.122475848 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.147177064 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090094439 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067093385 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.095404015 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074717637 seconds)
    (170/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053233866 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.183257177 seconds)
    (172/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159915015 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055133841 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09026115 seconds)
    (175/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.075315761 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067136021 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158737752 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073678554 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.154899564 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098936502 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194763651 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072823243 seconds)
    (183/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.120847196 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093167203 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097605625 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065943685 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103912449 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06687423 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052282498 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091766328 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05237283 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073126147 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094252883 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.13771338 seconds)
    (195/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076967011 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091967467 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075376126 seconds)
    (198/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.075939453 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067340401 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.111565605 seconds)
    (201/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062613647 seconds)
    (202/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069541558 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087578372 seconds)
    (204/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.288049883 seconds)
    (205/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080016985 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.075428032 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094294472 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117179339 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090911081 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113423691 seconds)
    (211/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076428496 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.119099055 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076770109 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07632846 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.115586399 seconds)
    (216/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052304856 seconds)
    (217/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.074136783 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066710253 seconds)
    (219/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066456566 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192046013 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067046875 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09241481 seconds)
    (223/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076929896 seconds)
    (224/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051544369 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088414963 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091766952 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121970494 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082865857 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095898486 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068004014 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117953887 seconds)
    (232/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052579013 seconds)
    (233/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068781944 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113308376 seconds)
    (235/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052517662 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089045676 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082486716 seconds)
    (238/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052282909 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088441603 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09004299 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.161193369 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084573499 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163319697 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.152445237 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067571518 seconds)
    (246/309) benchmarking ("sort", Int8, false)...
    done (took 0.165761498 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192853511 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178837088 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166272611 seconds)
    (250/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052969212 seconds)
    (251/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.075275262 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070669169 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.139842288 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.066589935 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055176087 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101349109 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066445633 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072830978 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121169227 seconds)
    (260/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05391183 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097807045 seconds)
    (262/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053277638 seconds)
    (263/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06698567 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.090363462 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067065813 seconds)
    (266/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073996878 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.074868227 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053292463 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.131469995 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06599928 seconds)
    (271/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06705991 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110884611 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063634283 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.164105059 seconds)
    (275/309) benchmarking ("sort", BigInt, false)...
    done (took 0.211145653 seconds)
    (276/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064728134 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061411541 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07689703 seconds)
    (279/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.0692791 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074053336 seconds)
    (281/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.074626671 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065945294 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065894005 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076060307 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065481194 seconds)
    (286/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05321095 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089666319 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075108705 seconds)
    (289/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062458976 seconds)
    (290/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090421714 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053255533 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05328866 seconds)
    (293/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076741986 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075248708 seconds)
    (295/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072492175 seconds)
    (296/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07808632 seconds)
    (297/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067997208 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071710829 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.077987667 seconds)
    (300/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051983369 seconds)
    (301/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07293057 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099201677 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066784276 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072177105 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07500896 seconds)
    (306/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052097307 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052366794 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074146696 seconds)
    (309/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061464583 seconds)
  done (took 33.368052355 seconds)
done (took 34.286183164 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082095151 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115445423 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075556724 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116489273 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082159616 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101601506 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074075733 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079285023 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104387422 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083485562 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102809635 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055647139 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097862438 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076807937 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097652867 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09255449 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.101944515 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07329817 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07491339 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088074999 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074800593 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089204609 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069576085 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055614599 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101209634 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073033519 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073467086 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098491124 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066639297 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089041598 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070351443 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073527144 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089399699 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079305857 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09477972 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075505414 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076698951 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099212416 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069063055 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089064415 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074316247 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066605723 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.09615367 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074431178 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072134765 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094116401 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07469489 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102253815 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092467388 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092379356 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07547375 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100614099 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077397285 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073310832 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093199008 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075755699 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093886436 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092831468 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09839755 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069258528 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075240148 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097557517 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072079438 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097760931 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075420003 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076324784 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099169332 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072828086 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098117078 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07152974 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067424547 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098037079 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069760664 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066749618 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098981109 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077639552 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08733882 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072620736 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072957182 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09491005 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066572514 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090080315 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068177495 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073312076 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090550544 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055894699 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070323359 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094859679 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066071767 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075603431 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095425344 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073844668 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090876544 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077211421 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066643717 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093962642 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066912015 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066475893 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090770854 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070437101 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065598744 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090854532 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075671768 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090134403 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071870815 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080610545 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089377573 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073675459 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087718427 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066282048 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082350456 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099262299 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066586627 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091362721 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065565509 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073692673 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087785349 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065837797 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066488035 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089033531 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072424275 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066408749 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091343878 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073482451 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10241415 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066234554 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069982618 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090864413 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067112721 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0717037 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089060017 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067024026 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090270056 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.0633431 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069327167 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088946063 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074191733 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068887305 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097338054 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067718892 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098485492 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071142204 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072595428 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094310081 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065105827 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059639267 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090944831 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068009208 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068463043 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089595971 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067977369 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06681789 seconds)
done (took 13.274509965 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066971197 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168888956 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127768284 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096470495 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111266298 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06699336 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.100332609 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103908826 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091375242 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127971313 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088260375 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109019539 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114457711 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088828635 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066130782 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070307893 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090702157 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089608686 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125569995 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110141409 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117731079 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088799735 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121861831 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091025773 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113993999 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104590579 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090022193 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070984391 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092584086 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093417044 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109614206 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070761382 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066915674 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122884036 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117702625 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085658761 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089603924 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084714459 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089577501 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066849486 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115959997 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100824801 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105538433 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.105982189 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073097227 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069406022 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091483034 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08618546 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115035727 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080919632 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111675797 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134643271 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069920435 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106401731 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066120495 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11065472 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105248992 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069254206 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067481489 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092643899 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066101396 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06996578 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111551926 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116323337 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070281721 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105830046 seconds)
  done (took 7.289553703 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085327382 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117309334 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084890753 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108378157 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066290137 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067556948 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090472495 seconds)
  done (took 1.5965713 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067485845 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089485827 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113152391 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090369053 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109861657 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087995683 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100250056 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068104442 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.107826932 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06859848 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088020814 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128321911 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068173292 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097911365 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091829116 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091448065 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090915803 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09114459 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070327978 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114498569 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069744384 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.111468505 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068839086 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067333079 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105047528 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068262907 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140526638 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072171481 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09206303 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070875116 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066772345 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141773301 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105125271 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07843674 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067191522 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105658849 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08281798 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088826546 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084281806 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096127833 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082355405 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068367742 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092604931 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065821772 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071887446 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102000809 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069248467 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091863216 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070744519 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087834577 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092076718 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082105297 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090803357 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070945624 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06941996 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096459812 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07770662 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091614913 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087882079 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069190207 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108872892 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084371397 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105747177 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084854063 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093739792 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08279426 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105613481 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.0703544 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069920364 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094257197 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084456127 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088897089 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069699197 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078836505 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09324797 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091111615 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114416256 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069355598 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101503578 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06780503 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.0684057 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092228507 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091269553 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09449114 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068084084 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072472698 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094833885 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065561829 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066790861 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095301211 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066567928 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092198131 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070421921 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06855826 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093437041 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084741412 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068352209 seconds)
  done (took 9.344376682 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069129582 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069070491 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093804424 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068358752 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068443718 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092103834 seconds)
  done (took 1.454226927 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098498979 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093260481 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082271938 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097366707 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106335845 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106617233 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083377721 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107131755 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086096732 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103673297 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082679491 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106289827 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088540908 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097361181 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08288625 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.096422333 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082963778 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100617982 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079926878 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098370824 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08888128 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097358553 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073944796 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108017984 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071167722 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074036102 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101496607 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080455371 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103598913 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083686826 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097221617 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071811464 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095810301 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083621678 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.105790968 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073089775 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096450712 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072614502 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101214337 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071526625 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107195434 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073880768 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078581289 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096195103 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107098751 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072679152 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072733285 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101282794 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082886588 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095330479 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072602255 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096406542 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071665425 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096234479 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072228955 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106481205 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072704009 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.106159907 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074290744 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072636819 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094382839 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071934037 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107166064 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071800409 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104924556 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072751571 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095904189 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074361024 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097744877 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072776464 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07179098 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093338045 seconds)
  done (took 7.381377026 seconds)
done (took 28.041238632 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.657457506 seconds)
  done (took 1.644834136 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.786586086 seconds)
  done (took 1.776263658 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.683132835 seconds)
  done (took 16.679031332 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.622475464 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.770195536 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.816584476 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13503609 seconds)
  done (took 3.331980497 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.906310781 seconds)
  done (took 1.922083938 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237119811 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225760233 seconds)
  done (took 1.459582383 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.754733556 seconds)
  done (took 1.759341393 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.290307338 seconds)
  done (took 2.285836187 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322541891 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182466716 seconds)
  done (took 1.508562164 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.52546413 seconds)
  done (took 1.52868613 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.695134377 seconds)
  done (took 7.701969483 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2305817 seconds)
  done (took 1.245063427 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.269593868 seconds)
  done (took 1.273661114 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.303145263 seconds)
  done (took 4.309050184 seconds)
done (took 49.423782015 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078667417 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082543177 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105447102 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079309162 seconds)
  done (took 1.347610906 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07754831 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074228356 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100788462 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073311438 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101996378 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073940922 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099825413 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07702286 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073604163 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098454359 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074769997 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.096911156 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07614103 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099842926 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070600743 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07647425 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100971465 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074170662 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100500099 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074196287 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071494567 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09956145 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077275575 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096294081 seconds)
  done (took 3.054146435 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077981694 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074129636 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098882632 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073165606 seconds)
  done (took 1.335655496 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077183294 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116842731 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089441233 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.102296743 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092702921 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111589361 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069964733 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069625098 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095687809 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078602416 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09258609 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098470203 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11278929 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07788726 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103710323 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066756362 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069239764 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112125875 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078471783 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102154911 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070892155 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080264724 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09269597 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091925364 seconds)
  done (took 3.172146158 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077546316 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129261799 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078840923 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.115127951 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092376094 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090533882 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07547541 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.116955701 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125935727 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.090629032 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070418766 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066544622 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098272483 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065839314 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076394152 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134112728 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.136931561 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068855706 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122496855 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066057014 seconds)
  done (took 2.919162486 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075225194 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070713884 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090099586 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069123909 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077448354 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097163859 seconds)
  done (took 1.501021137 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068304004 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06839821 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092245079 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067310957 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072351654 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091739496 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067002742 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06838759 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091921972 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067938283 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067301877 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090533568 seconds)
  done (took 1.929848914 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.386770072 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09444766 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069452744 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089351201 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071630576 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091896114 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080918467 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068561747 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115934733 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068029922 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092216874 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069222744 seconds)
  done (took 2.319724016 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263525167 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077567995 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.327832604 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169830816 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141973941 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156798467 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10612727 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141174163 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200330969 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1402965 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203659676 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225387626 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135405162 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16920558 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116351901 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.134946475 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187932229 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225385742 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132367151 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201094404 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208586551 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156843773 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181637056 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129642231 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136602651 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151906453 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072905075 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106428053 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234847408 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162242949 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202901971 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140728359 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098213194 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233825444 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229143289 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197945771 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164994277 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085466601 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.160007201 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166001393 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259626021 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11484703 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196464038 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135269839 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107290688 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174823281 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147005173 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.149081409 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139226871 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116291318 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174445546 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242549014 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168649616 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113571652 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139554427 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142620213 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145219 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104938532 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271123098 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195463447 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159231834 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097509091 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126047849 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187936916 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160092193 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14261996 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155544695 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1192913 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169134711 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214209484 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14696373 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174976291 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182071424 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115491125 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149419057 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17033179 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157578179 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232001199 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155810003 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07456644 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154863905 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13044114 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108692122 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146036686 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102175191 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236586984 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100912403 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140287873 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141336764 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136809762 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137769883 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195872175 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204381339 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130545017 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067178497 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131508506 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.1510634 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176096188 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114593536 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135952177 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148698574 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105691982 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168404615 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076806126 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153658334 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105746174 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153078965 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163408757 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102616794 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156501729 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102739873 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128652046 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164633745 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221773123 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116454276 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083426692 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22937248 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156543171 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133656945 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175443858 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216744333 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102325154 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130312957 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207175706 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244534808 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090790322 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223849331 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137091595 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11037954 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089010805 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156877729 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139876039 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150299616 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109340683 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155621376 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229446606 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075416301 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122500111 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166849677 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108569582 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082560708 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141531531 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129165541 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.12263016 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101854623 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135481189 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19677242 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155890446 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13470735 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154159657 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126134907 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203231118 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115399476 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132910453 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131738868 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070534351 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.16601163 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218495021 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080372231 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227365138 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155390867 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132524262 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149277673 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109791577 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170482565 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080041917 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.097560991 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175393723 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139155178 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13780626 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186165564 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13214037 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155579232 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152547477 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190527141 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162040221 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163238403 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133542453 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088456815 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140697968 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181701973 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073955875 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122495384 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084836363 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132480092 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124005044 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08539381 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198998282 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157652627 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12869367 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141998799 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098777473 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205210491 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078202274 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184343246 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.149173574 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09633873 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211995816 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187577384 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191621239 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1017923 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202935191 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072618569 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100211269 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092545736 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182231315 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085224726 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11014464 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146541406 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181974756 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156927654 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194908955 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113751382 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150279821 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214526805 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072174686 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144505619 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180281256 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180254046 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.132902839 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112988265 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.1014625 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201583319 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13757136 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248382072 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144500363 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154544304 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181574166 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130763072 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106894796 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107321033 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193985654 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135178429 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182321221 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12694923 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116002632 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139441003 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.082381154 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130386632 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156136294 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149135978 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18964464 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.146102382 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162757441 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103983161 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145692047 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153230409 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151481571 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066110525 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149879849 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223783907 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122041257 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147704412 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187194417 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107052186 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155280261 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23982131 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177234176 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112566759 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146337054 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152203901 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160215673 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14893198 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171371027 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139950181 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165749455 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13829323 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112757555 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08898179 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126501892 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13462172 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09654732 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.167121514 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146612597 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096716257 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188646942 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140709327 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113289513 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147209582 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126193126 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091917125 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12519384 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235515792 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152955887 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23689482 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12825286 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181459567 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22943079 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075900212 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106729346 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108004609 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170685814 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085782274 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191557329 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098934334 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13374564 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156019167 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173895087 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122859321 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069291599 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137326175 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191372984 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113668615 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126130222 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133652149 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22282692 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104439654 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107415725 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155091135 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132765992 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104626062 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234876886 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089206933 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099370887 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102807901 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082407943 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184083689 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18901528 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110757461 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.133699443 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143911259 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175996532 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161018297 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129609524 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100485067 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142960217 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20740516 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159593968 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091218256 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141566317 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186624581 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189597276 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134560184 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123587514 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234259352 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187795276 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224403722 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117443867 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145703489 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118097422 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137699702 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198992723 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083972615 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230207306 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110994369 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168448974 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133569895 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120957929 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160239084 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127556633 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089960353 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207150809 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149343387 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128464189 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080849682 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148413022 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152188508 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135505396 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102460708 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170873268 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073702708 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195500282 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203708374 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109559188 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135320013 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097710549 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109051962 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137715724 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132284614 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114687953 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.120641316 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231570163 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118962407 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184681513 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200215949 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143077471 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168429752 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127780966 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665035309 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080024022 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213858875 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149326999 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240626629 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125671939 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148953247 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139977364 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153237642 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176202912 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132908062 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205968152 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163103929 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150656008 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106657173 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132663421 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140492496 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09191886 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134820542 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143874723 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146358813 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129186459 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151305223 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156844017 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109463146 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097031933 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217654727 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145921069 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202097998 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171816635 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085547853 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148618678 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199201195 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080850748 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179102995 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189535608 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136685573 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127394659 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082449456 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134305741 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233077213 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100334985 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19532837 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155192949 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138571304 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143451048 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.176386941 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164197728 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137003976 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156868355 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123633367 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141787896 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145709312 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085309493 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105191614 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136545297 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142193823 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101107164 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131101947 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145738685 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184403472 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099601602 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097193816 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13173649 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201782186 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213270971 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117250869 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110943276 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14889452 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142193572 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14655195 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156847284 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083072928 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111305994 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.111535478 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.114286281 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137907474 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144610402 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133345721 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140235362 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20276839 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.11324664 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253551932 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096652019 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135074229 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070447687 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107752925 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124051804 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09878031 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135755967 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12955658 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234654486 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123874951 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092053514 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121278564 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073998656 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111263792 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160040819 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140805355 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152011521 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1270264 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064205943 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13904458 seconds)
  done (took 71.902550192 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144231569 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.11953562 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.130301358 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.188651675 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160236577 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254056645 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.196788702 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240438236 seconds)
  done (took 2.530728037 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070734006 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118295472 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103631807 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117569982 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09088853 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068751291 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.297449087 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111594798 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067260959 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.116461283 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.121998576 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092856588 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.475663673 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066279364 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095802183 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086458341 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068036402 seconds)
  done (took 3.259521575 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.43572554 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.661695458 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.456869022 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073427476 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.088506648 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108316334 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.678060394 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.166654388 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092919781 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.446977523 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.726213187 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.152835413 seconds)
  done (took 18.193021065 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075739814 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070104739 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111261979 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084641859 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100419662 seconds)
  done (took 1.545947044 seconds)
done (took 116.014819944 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08074826 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.346956336 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05400891 seconds)
  done (took 1.534971123 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08426562 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085899167 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111929384 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08354305 seconds)
  done (took 1.472683324 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076357906 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077384802 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112264887 seconds)
  done (took 1.369833796 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.282551457 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168219062 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088344982 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083672074 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078126465 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10588614 seconds)
  done (took 1.374504632 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07295266 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075521272 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100996092 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077243489 seconds)
  done (took 1.422142837 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076728935 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053083589 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055798584 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083072214 seconds)
  done (took 1.372111951 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090165342 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107627823 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081091937 seconds)
  done (took 1.377639263 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107698717 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114915872 seconds)
  done (took 1.326930097 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082154309 seconds)
  done (took 1.179300803 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095556255 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141226408 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156147557 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.13865463 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.16696359 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.138757686 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.114501064 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088336658 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105665542 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.116640101 seconds)
  done (took 2.370970859 seconds)
done (took 16.515215707 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078551493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393495841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360597186 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118864125 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669991619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356791783 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.007307207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121460674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121512893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095737146 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083836211 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677725396 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970223827 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.349903218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.956583233 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321641904 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67756629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069041814 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095272992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068448113 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963741174 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095598803 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067898544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068921685 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676723126 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372018842 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096019626 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324042321 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068510257 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097940688 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355123587 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096005163 seconds)
  done (took 15.967065444 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070479882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146157206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073767483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084405511 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098904782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069945059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099472846 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069434939 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155281337 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068394876 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113029934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068565279 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099205783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069248324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087222344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095891041 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069197208 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068861998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096309947 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06946804 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114655524 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067966754 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069028315 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095995405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068889742 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108339437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069259333 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069008978 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09557723 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069983239 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098883915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069513561 seconds)
  done (took 3.875153513 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115630693 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154431668 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074175169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130106148 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114480116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09788487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171990364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093641053 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156593337 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06854034 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111951224 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068557393 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128934212 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070017779 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114971582 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068551283 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070164536 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096058321 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06878041 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096154724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08788692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095100521 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068749557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069222983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096466404 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08176501 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096091364 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06927253 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068567791 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097942377 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071902716 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096322483 seconds)
  done (took 4.187931105 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073629311 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075616796 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110013156 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083860957 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097791164 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072379362 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07366771 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097668272 seconds)
  done (took 1.794715541 seconds)
done (took 26.922844409 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078581311 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070075036 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100781572 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081873665 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100882676 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078884857 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068345302 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103170061 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076926668 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073623539 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104058082 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068460362 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099366722 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06742276 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075088383 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095345275 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080221428 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099514736 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079582227 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080168894 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097744406 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07770894 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102145186 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07981701 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107251745 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079669443 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.083326695 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101000059 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069350174 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098235051 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076983862 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084540689 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097001072 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080435696 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096591954 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068293622 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068507112 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095400977 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080215818 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10201679 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071133524 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102079155 seconds)
  done (took 4.702811734 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088504042 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092111671 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113144367 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066128603 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098655444 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065901745 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116714598 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063421055 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059957871 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116693042 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056272087 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059820734 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090861258 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054129789 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059538727 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056787131 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089542965 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056943974 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060031687 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087534169 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058333725 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054149343 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087911026 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062933223 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057121007 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.089309815 seconds)
  done (took 3.077357813 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075414643 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083982006 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115018027 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127806683 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133590557 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077345608 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106212163 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088008453 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114110411 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067543738 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071601276 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.12419889 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088152148 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102663071 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068321211 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116280311 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082109751 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069435192 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102116363 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090274927 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113040372 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078961084 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120063785 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081235367 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067446641 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098213715 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072023451 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109737613 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07293008 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077491753 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099806522 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071942734 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097596997 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079417567 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07248156 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098364163 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090408682 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105313492 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078837318 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068753299 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.099972663 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069447173 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116241553 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113432402 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095797173 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075086752 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076427154 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105681474 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068414582 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114972166 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077835108 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068395256 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098691794 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067417158 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096385037 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08241394 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070268561 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099127043 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07781781 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.09916271 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080446252 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072010374 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112255117 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068118694 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104052235 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067889695 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068971643 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095906624 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091841025 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070041192 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.137878715 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070165818 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097092805 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077376004 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10391035 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074177257 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068521318 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111751262 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077864281 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100522782 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077211882 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072235373 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098874545 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088796101 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098376805 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070191317 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069229303 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102388487 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071796302 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098096593 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081813902 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068728957 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099734345 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085684103 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096074154 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069485288 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07509567 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101114775 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067487877 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108370363 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073251714 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069246426 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106031464 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068169789 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099773635 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078086336 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07336573 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095434901 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072898949 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102682532 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06929884 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069279522 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099726202 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070755698 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106610335 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074046151 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073275767 seconds)
  done (took 11.40830792 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.193096792 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.188270886 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070957079 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.18007338 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076884399 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109587547 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.181747791 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097461234 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098688681 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.0686648 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069673396 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.132255674 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.135408513 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106134712 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.108035398 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068293516 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115404163 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105015824 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183925753 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177260531 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118329383 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076716723 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07039885 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098820772 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07053454 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.107887889 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085502066 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.104529144 seconds)
  done (took 4.334853254 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082904723 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131456734 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074880241 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089992804 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120984681 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068901148 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102844835 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070614709 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110426068 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080135833 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097066378 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.0740564 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075011534 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10778551 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069115252 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107454519 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078792353 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070269771 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100193035 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073490439 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106892353 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080522926 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101192374 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067284651 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07452857 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097239626 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065237568 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115341794 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068439363 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11918593 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066902015 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075325565 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.11143902 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069282494 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.098039638 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071599857 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071538963 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100949573 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070010506 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066754246 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096438212 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058119681 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068093062 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109400846 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075180786 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089455928 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074162606 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073674093 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.102060685 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066877315 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100002992 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071478734 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071106997 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106878634 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073629207 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073744451 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101539165 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066596478 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105530266 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071791434 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065037863 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09629456 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073827847 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067441434 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105952988 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072690125 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096376213 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07160498 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073946945 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104151785 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07258922 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071116266 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09583026 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070032498 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102607694 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072666727 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072945804 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096536418 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067835874 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069663919 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.084852208 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068449599 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05485129 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.100681743 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06679038 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068060371 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100446655 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074618345 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.111582048 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070326708 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.10314178 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069780938 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067807312 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.10043698 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064054236 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071020864 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113873429 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113699509 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068851355 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066413311 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112615639 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07328507 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067848184 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086057968 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075773415 seconds)
  done (took 9.948907589 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096060888 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094066215 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099590439 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083555603 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.12606687 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093891438 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105995995 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075156945 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070082901 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114686475 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069173622 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106248223 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068757635 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076921513 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12574846 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076724352 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099759315 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078011812 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072400571 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.138117193 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083361112 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111480682 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081542967 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098124386 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073092528 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081031141 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.126560138 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080248635 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108814236 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085699978 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080188737 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125949118 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086262277 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101715947 seconds)
  done (took 4.346741033 seconds)
done (took 38.927215953 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.199794352 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.411683749 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193535679 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.095746874 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.229940192 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.213602565 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205212464 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.195372475 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.462055819 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195583773 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.454928454 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.827699315 seconds)
done (took 58.826422221 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.259794456 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.334883199 seconds)
    (2/2) benchmarking "String"...
    done (took 1.47440986 seconds)
  done (took 3.955110466 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.616661466 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.128509273 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.452503456 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.193714509 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.199989061 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.509555647 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.898527239 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.045458356 seconds)
  done (took 27.562044363 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.20838278 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.579299855 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.785805344 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.779377624 seconds)
  done (took 18.490515516 seconds)
done (took 60.02248932 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.199832563 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.279078266 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.202673138 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178780997 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.307748467 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235472655 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.339351117 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.251170166 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.203151638 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.180670308 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.21500523 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.199027379 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.200174188 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.328385617 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.19748655 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.198278331 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.217762382 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.842804766 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.613773077 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.199347056 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.221697689 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.229202245 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.197806131 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.201931538 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.262387293 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.208076666 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.209549487 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.198063058 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.732963036 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.201357695 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.199451167 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.50936213 seconds)
  done (took 190.09768593 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.198901575 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.190816078 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.311788183 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.248453698 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.568420518 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.397696728 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.332885731 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.725677541 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.215760426 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.22779814 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.500449738 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197540336 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.569861478 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.161118487 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.206443853 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.306967248 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.504491281 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.54349058 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.211564132 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.471376411 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.223238999 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.404369927 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.310706872 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.422413791 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.258785542 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.268463452 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.209768163 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.208440183 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.387855122 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.426889303 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.230913914 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.206754221 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.812108127 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.058970396 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.20571981 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.226708483 seconds)
  done (took 150.092151036 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.469072879 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.201047399 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200086345 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200946014 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232597083 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198748581 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.777009622 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782184172 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.744154532 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.437968889 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.259620169 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.46420657 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.200027685 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293826951 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.213994869 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200365971 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.214365113 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.22470508 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200729182 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199475176 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777636473 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.212459741 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.748377917 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204220776 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.2012347 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23638732 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.592199556 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.201138089 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200362803 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230935558 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.521120538 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243456034 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200249978 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.548428318 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.454884234 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309899569 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203578187 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232314122 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200949353 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.471471194 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201944188 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200741292 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.205184539 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.828838007 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.20323462 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779613181 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202382695 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.105852527 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.202901913 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199913306 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.725208866 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.793032443 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.203996823 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200404453 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.204002961 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.201349921 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201404032 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.233552236 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.748231776 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.205476715 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.300876108 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.203181759 seconds)
    (62/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.200697417 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.207507214 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234214511 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.20648986 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.527829034 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200923454 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.426827622 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.265305184 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.310567715 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783927012 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203388026 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29894754 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3243967 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.202536798 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.206062992 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203636557 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.204096815 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.311133168 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.207065854 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.622374794 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207406198 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.203352819 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.261187215 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.300719947 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.203507082 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.570780449 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.207626897 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.203156283 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946948284 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295592591 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.20328431 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203592396 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205295725 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.204990021 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.62588602 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.783550745 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.428541579 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.207880297 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.642662893 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.204605954 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.638519664 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.751482667 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.855448444 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.207794916 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312434863 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212935769 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.206515995 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.202974805 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.236085407 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207723955 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.261479958 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.207415395 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.600948577 seconds)
  done (took 346.893480461 seconds)
done (took 689.690067852 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.903228954 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.879379641 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.99319366 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.881364539 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.860535285 seconds)
  done (took 10.657699422 seconds)
done (took 11.805364784 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.398039755 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.399502702 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271225779 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.399736102 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240368227 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.418345974 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.379974421 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.229980361 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.31126095 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.289227169 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314009078 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255169399 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23455796 seconds)
  done (took 18.28387631 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.508168852 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.499930355 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268600993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510309223 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244899987 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50903379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397357961 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.40366617 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.393576413 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220313173 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218305815 seconds)
  done (took 16.322674245 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.509992005 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.511177225 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271948359 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.510312114 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245810777 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.527850073 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405012644 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.409265968 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.39319101 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.219020681 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222244548 seconds)
  done (took 16.37223084 seconds)
done (took 52.128448816 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.21566917 seconds)
  done (took 2.359175325 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251419431 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.41814845 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.231055259 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.219290715 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.217796414 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21337353 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.219293357 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.216118791 seconds)
  done (took 11.134910484 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214441465 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.210580565 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210067125 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.217651813 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212547469 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216142542 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.214926928 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.21688108 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.212325342 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.212964234 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.212992613 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.215253743 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215349156 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.217769361 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.213968379 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216082137 seconds)
  done (took 20.578844336 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211995238 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.214408111 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.212032137 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.212259841 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.211459274 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.214333342 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.217057854 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212885456 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214863135 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211881992 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.215562408 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212969958 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211141492 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.215454548 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.215738829 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.216573408 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.215642337 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.213792923 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.216588126 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.214561741 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.214465894 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.213755534 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.217742988 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21503143 seconds)
  done (took 30.294700841 seconds)
done (took 65.51512701 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.304708008 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.962888819 seconds)
  done (took 9.41493643 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.218924581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.217853859 seconds)
  done (took 3.592050317 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.218415123 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.219146302 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.214126306 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.215819112 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.218577929 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.21701428 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220167725 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.217827219 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.215242035 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.218282636 seconds)
  done (took 13.327937657 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.214034252 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220425322 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.213881291 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.216328136 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.215163774 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.213591556 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.217474429 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.218064298 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.217621262 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.216426875 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.21775459 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.215917147 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.216726818 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21719587 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.217515141 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.215039006 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.214439195 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.212520146 seconds)
  done (took 23.043669686 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214199722 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.217351468 seconds)
  done (took 3.581203962 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.212702492 seconds)
    (2/7) benchmarking "second"...
    done (took 1.212767884 seconds)
    (3/7) benchmarking "month"...
    done (took 1.216090555 seconds)
    (4/7) benchmarking "year"...
    done (took 1.214530139 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.216835161 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.215584538 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.21619981 seconds)
  done (took 9.659010225 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.21995837 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.396494523 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.478224279 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.804846499 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.21857203 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.220399982 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.080089064 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220285521 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.226143962 seconds)
  done (took 14.018710179 seconds)
done (took 77.785135872 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.234737025 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.209549277 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.041367466 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.22465551 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.232033502 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.554905982 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.254440262 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.338485245 seconds)
done (took 37.242027876 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.222041992 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.959505814 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.961032545 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.211908737 seconds)
  done (took 11.283154227 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202191315 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.194465771 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.204207347 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.271127673 seconds)
  done (took 18.025848249 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.847202682 seconds)
    (2/2) benchmarking "read"...
    done (took 1.543781384 seconds)
  done (took 4.543970608 seconds)
done (took 41.228760254 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221412139 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.223895096 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.221627442 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.216973918 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218486184 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.218415452 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.217760669 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.218887268 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.218793173 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.223491065 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.222150942 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.222201848 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.221978828 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218651478 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.221136874 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217393774 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219566729 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219215675 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.219748145 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216173438 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217604982 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223665102 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21715607 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.216296873 seconds)
  done (took 30.425970021 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.221239095 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.218543999 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.221137861 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.220360686 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.218180203 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.22128473 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.22477144 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.217004999 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223289417 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.221010658 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216670486 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220267136 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223012248 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.220993179 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22176388 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.218131753 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.220399405 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217787108 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219918079 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.216812942 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.219513912 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219981704 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.218573485 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21959302 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.218251483 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218160926 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.223614566 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.219002317 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221042677 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.220053973 seconds)
  done (took 37.758079771 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.230542705 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.232042909 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.222085928 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224768014 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.22035604 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224419996 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225336168 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.221877464 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22419784 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224020211 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225222744 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.221673424 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220630343 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.22463908 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.224431637 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.221393526 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.224113811 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.222347931 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.222799024 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225867143 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.22426017 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.224766556 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.222602561 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.222603839 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223702564 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22180572 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.225501322 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.222681173 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221782648 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.222341406 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.225694307 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.223710687 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225083458 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222859656 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224451836 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.224702363 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.230774337 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.232797308 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.225134371 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225609854 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.225332075 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.223054055 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.222535169 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.222508404 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.222863347 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.223334863 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.223912658 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227672346 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223130736 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.227782658 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.225456854 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.225122967 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226023275 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.223548762 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.225768239 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.224783633 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.228075103 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.225505167 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.226319091 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228597684 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224612452 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.227853013 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.225599198 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227395511 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229568037 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.224032905 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.226126918 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.22923792 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.225864961 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.227284622 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.225752404 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228349659 seconds)
  done (took 89.354092121 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228935077 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.223045022 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223348119 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.222614511 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224472416 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228555474 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226140879 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227110613 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227027693 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228909921 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225199971 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.222352171 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223027734 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.227215671 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229056887 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223431899 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.225654246 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228554669 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.22680918 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227484811 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225166339 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.227475827 seconds)
  done (took 28.132653622 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22742033 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230126743 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.224711835 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226852484 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225160002 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22614895 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.228505942 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226430945 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225644833 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224526867 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226092425 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226590201 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226805428 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225787081 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223571997 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22253465 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22798353 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.225524261 seconds)
  done (took 23.235096255 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.223187434 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.224275461 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.225991761 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225906301 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.226179962 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228805923 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223384145 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229491818 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.227991335 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.227325561 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.230356589 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230643863 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.229159633 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229330156 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22821637 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229024443 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.228602085 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225539787 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22668426 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226866067 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226488844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226921015 seconds)
  done (took 28.161349237 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228985869 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228045073 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.228939893 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.226994997 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.22571868 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229969734 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.230661 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.226652357 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.22740842 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.230830224 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228478052 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.230324495 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.231416976 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227838237 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.226422159 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229061993 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233748342 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226037302 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231312124 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.226672819 seconds)
  done (took 25.737257164 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232133888 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231448863 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.231477824 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229859637 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233985909 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.234657337 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236458871 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.23355677 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23499935 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.233574261 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.233442346 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.231748396 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232551272 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233002553 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233197868 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232091949 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234405195 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234866741 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.23577753 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236890898 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.233476384 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233605937 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233548527 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.23155514 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.234494813 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237075008 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233241245 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.234510617 seconds)
  done (took 35.703535104 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229657143 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235185218 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.229254539 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228107295 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.231352016 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.230291682 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.229553498 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.227359409 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234566962 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228864021 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.233196313 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23529042 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233749368 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.233628129 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.231579651 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.233733759 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233793411 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.232841547 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230888844 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231010641 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.234666935 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235154491 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.233926012 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234157677 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230092706 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233258255 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231437918 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231505005 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237421522 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231879595 seconds)
  done (took 38.133941883 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.252142243 seconds)
    (2/2) benchmarking "in"...
    done (took 1.255170871 seconds)
  done (took 3.675792465 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.232046231 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235091475 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.23658595 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232795455 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231728228 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233907166 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23243947 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23250396 seconds)
  done (took 11.036598032 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.239972128 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.234966585 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.236694394 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.235971304 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.234911296 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235080855 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246294439 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.247578531 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.236504962 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237389552 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.246621005 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.246593074 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.243267246 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235935061 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238516899 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241852737 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.234329267 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237059959 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.240148778 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.236083505 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237474288 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24177985 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241370083 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235522648 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239681614 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.254009777 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.248571835 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.232783323 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23690891 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.246986944 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.238846471 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.236248211 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.239107912 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.237034098 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.236832669 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.235961057 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252052234 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25552522 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.247857072 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240665524 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240746023 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.236404055 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.245010413 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.243770856 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241719376 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238444556 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.23844695 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.23464764 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.240924829 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.245489467 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242850826 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239696022 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.232549805 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247728019 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.241851284 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251852568 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.253223955 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.244210709 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.254026383 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.253328741 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.257719626 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.24768117 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241710246 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240376634 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250278953 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.269276878 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250383305 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.254663533 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.237278009 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.238914362 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.252462313 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258157548 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.252886576 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.239271226 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241866157 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.240673741 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243863292 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240785974 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249560722 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.263199327 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239055267 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239186002 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252172205 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268527474 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.239097878 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.24046468 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.240118522 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.239712612 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.24316484 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252447164 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258644675 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242835041 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243694508 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.240909813 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.246289278 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.242967167 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.241390937 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241962966 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.238588488 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.239230357 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242239892 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246484065 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.253855943 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240973859 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243164766 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.251878878 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.242673044 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243960146 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.256370761 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.238769625 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241188416 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.24482196 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252217158 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.239872191 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248058037 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.256627858 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.242481095 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.24499515 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243737329 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.244097913 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2558307 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270045659 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.240064181 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243390381 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.249945326 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.255738149 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243934485 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.249712668 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244411496 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.24156008 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.241861603 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.249368857 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.244035989 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.247392679 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244525831 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248597224 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.239895968 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.241612323 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244103735 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.245256374 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.249171017 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243082765 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24977248 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.249315881 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242038917 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.249190397 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.253248468 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.245251022 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.247907227 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.2480856 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.243168642 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244334967 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.249355287 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.242309123 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.247070993 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243179706 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246813342 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242961116 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24505204 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.246833496 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246530829 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.249447523 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252533923 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.247484638 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.253865337 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.244270123 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241198992 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.246741949 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.245769897 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.246735687 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.24582897 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.246789591 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.252436388 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.256648381 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.246685921 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.247733865 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.252099471 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247135902 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247440426 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247098408 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.251257469 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.259437635 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244967644 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.258432711 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.245536337 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248083487 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.24666929 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.250686855 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246402553 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248183239 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.250805161 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.2563858 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265354139 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259315392 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.251763008 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.251461778 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.249516218 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25223625 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253933637 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.247640159 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.247885285 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248674485 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247292074 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247563339 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.248746456 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.248004298 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.247625176 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.246169477 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247407577 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.249931187 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248947951 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.251962853 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252420267 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245623399 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250854775 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248580466 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.250834773 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.246352256 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.247069146 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250737664 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248963156 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.250094956 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263186271 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246739216 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253356226 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253901473 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.249033399 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.250620686 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.248326246 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25494699 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.251329758 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26060672 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.268745395 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.253049607 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260041327 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.269666351 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.249830614 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.256292635 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.249874945 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.242950063 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.254305586 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.25929309 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.25057852 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.250778867 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.250173922 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250525821 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247577759 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.261975413 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.248394424 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.25134852 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.249558799 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255128479 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.247503862 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.254696916 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254867444 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.25466911 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253843642 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251678428 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.251141735 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256571948 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.251786757 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251375099 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.252488696 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255295169 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.26146538 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.258907184 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.253658986 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.25785683 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.252485014 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.257416045 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253452946 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.24738023 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.25412295 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26963332 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.261944349 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262662345 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.254460134 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.251651295 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261779793 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.257018431 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.259844893 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254207672 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255156903 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.253852909 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.25378881 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.250359635 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256678719 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.253132521 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25633813 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.256908276 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.25740304 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.250460265 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252546437 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.252708137 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.25370989 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252063079 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.251805981 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.250656313 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260588747 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258271602 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.256286867 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.256185195 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263795199 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273891945 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.258300193 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.252171944 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.25611629 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.255058194 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.257454035 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.254790116 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260189992 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.263099841 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.259966972 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.268941647 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.258406553 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267614634 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.254578094 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.260293428 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.261097027 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.252300616 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.252826104 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.257629169 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.255278183 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266120691 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.27277096 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.25892497 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.260339674 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255301072 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.254784933 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.253943309 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.25556107 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255507754 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.255973421 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267786253 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.274869772 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.263660265 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260051367 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.253052648 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.256487611 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.255617287 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.257882919 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265205439 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.255367506 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.26091258 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.257486261 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.258808125 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.25528182 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.256026414 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.255915031 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.251714502 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254051087 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267316464 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.276833689 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260808386 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.256511716 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.271106882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254955834 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267549489 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.274198537 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.25963449 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.257346692 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.25754668 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.262096096 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.258849616 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260599945 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.256873531 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.259716396 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.262079736 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.257843542 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.263201584 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.26091813 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.258408488 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259318218 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26949562 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286653107 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261372995 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263431735 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.253915766 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.262116536 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.263301773 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.257748796 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257238405 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.26284928 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268570841 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266860246 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.260631729 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.258162499 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261204611 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258476398 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.258153223 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257915795 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.258631913 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.258691588 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.263163823 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.25816733 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266873717 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.259324178 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.26262883 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262820959 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.262588685 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274903803 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.259186962 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.262438906 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257650766 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.25847731 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262093423 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.262110112 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.258501916 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263812712 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260372539 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.263418626 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269041415 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270950872 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.264770682 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.261240049 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.259436774 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26245207 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264145929 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259711978 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.260191411 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261257363 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.263613453 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.260637318 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.264579571 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.260952723 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.260108119 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.263363988 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257864575 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265409282 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.270419482 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262598519 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.255757875 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.260444564 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260291141 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.26239767 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.264319144 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274039005 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26607289 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.273902291 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.270548668 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.266461461 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.263628603 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266916038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273582178 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262004624 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.262710309 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.260141233 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266264403 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.264701662 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.267780041 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262078669 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.272097926 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.264458879 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.261690463 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2748062 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.283909863 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262316233 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.266075067 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.269281015 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.264658234 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.258877808 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.260022007 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.263121047 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272184487 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.284955923 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263016523 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266754269 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.263322724 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.264344763 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267613236 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261241838 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263713382 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.257857692 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.265346836 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263317085 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262452798 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.260128961 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.265159524 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.263885038 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.267932435 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.271457262 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.257707032 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267659561 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.267267063 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.266522215 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261625673 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264248882 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.261065719 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.261375022 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.267498717 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262094992 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.267256647 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.269847367 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.26390922 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.268459598 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.266107769 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265079776 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26918741 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.274435362 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.273857446 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.262239945 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268263942 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.266537827 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270546759 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264284681 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.263683761 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268313476 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.269751554 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.263728107 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262952733 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.264284633 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.271227458 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28813561 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.281593899 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268315086 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.267558889 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272622759 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.264302474 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.26269328 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.266065963 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271465197 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.271471056 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.273957244 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.264787698 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277163585 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284894277 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.266611953 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.26943289 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.272864403 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.276010519 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.27128507 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265151905 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.264123925 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.269998794 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.289037143 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266548104 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279474068 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304561305 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.287497244 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.271151316 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.266751168 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264750381 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.264781027 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.270524066 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.264973336 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.266799808 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26584668 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.26696374 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.268642641 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275154247 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.271211081 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.266955997 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.266554267 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.269801759 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.270589791 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.263769371 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.267970996 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265700775 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.267226238 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.267736943 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.267961096 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.271398927 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28531331 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.283405327 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.267126997 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.267601483 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.265605725 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.274457283 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.273688156 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282954757 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.27692595 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.268363392 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.268412044 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.272434163 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267608229 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.265142428 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.270875729 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.27104195 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269706356 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.263277661 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.286746815 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279388394 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.276584999 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.271886766 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268595617 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.269472445 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273357355 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268908079 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269273484 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.273995702 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.271324304 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273590913 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.268905802 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.269662241 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.275697547 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.275554487 seconds)
  done (took 750.222904973 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.26674312 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266591042 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266180721 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267674753 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266670215 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.264904194 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267281445 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265437311 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.267161646 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266935457 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266904409 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267098846 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.267577907 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267957218 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266830396 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267889461 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267144712 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.267813296 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267547605 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267420223 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.267607435 seconds)
  done (took 27.812031795 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269643209 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.267505716 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266893104 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270726493 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267873663 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.270147923 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.267974477 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270389202 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.270055538 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26771932 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27068259 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271167482 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.26735285 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.26907945 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268654306 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270719546 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.271135791 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268519369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27186152 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268764025 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270727228 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.269197693 seconds)
  done (took 29.13328953 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.272077238 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.271444026 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.273451696 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.269841987 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.272038118 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.269911076 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.272197075 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.272483595 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.271625455 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.276120138 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.273733063 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.276614689 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.282435576 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.278254093 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.278019395 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.272749741 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.417004832 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272482888 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.273460812 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.27304424 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.269637973 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.282063448 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.269323917 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.27071621 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.274656268 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.272169869 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.273345712 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.272696945 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.272997932 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.277455136 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.278167218 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.273501705 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.275577549 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.277734709 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.275481842 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.277098872 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.27719901 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.27464224 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.271292484 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.27458263 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.286636226 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.300415412 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.27487406 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.283391499 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.273800865 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.27411559 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280729668 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.283315097 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.271561087 seconds)
  done (took 63.846888176 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.274235532 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.273886186 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.271187363 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274327501 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.274200668 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.273862759 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.273604206 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274478323 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.271210187 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.272229732 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.274455679 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.27263779 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.272931701 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.275527088 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.276261036 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273307304 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27285574 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.272930959 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.270177101 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.272499529 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.271602492 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.275036702 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.275418675 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.27330044 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273255048 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273671471 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.272202692 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.276480459 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.274360527 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.272851725 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.27505147 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.276220699 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.277080169 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.273789258 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.274800155 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.277128435 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.275611917 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.273363802 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276504976 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.275289223 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.275615105 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.27645812 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.277638106 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.276989857 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.275790134 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.273547556 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.27475879 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.274317221 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.274235263 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.277541068 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.277053236 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.275948371 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.276296909 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.274661713 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.27722406 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.276332889 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.274990126 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.274465747 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.277524665 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.275537896 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.275324912 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.278014677 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.275390697 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.277604101 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.278971242 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.275257778 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.275862379 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.277274576 seconds)
  done (took 87.901776271 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279268998 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277935145 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278072108 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277246081 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278717301 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.278023688 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278857227 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.278242425 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277696774 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.279748889 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278962985 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277827204 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.278800245 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277758272 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278756385 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278943714 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278540366 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278514516 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278501856 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27853139 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.278856093 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278560385 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.278980911 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.278922127 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279363015 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278629633 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279106314 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278715363 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279800388 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279058446 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279174811 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.279257665 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279071187 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279575262 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.27986654 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.279544629 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279060293 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279172175 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.279361519 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279813226 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.279815238 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279757005 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27944433 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.280009648 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281074668 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279830217 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27995691 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280734055 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279883746 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280884597 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.280635813 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280201599 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280545307 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280746023 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281089467 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.280308678 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280682916 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280938214 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.280902379 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280973487 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280649966 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281928874 seconds)
  done (took 80.53739113 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.280500448 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.281073924 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.278274519 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.278424336 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281548153 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.278724132 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.281375557 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.281407508 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.280821741 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.280851268 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280939934 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278206908 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278463616 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280680322 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279395242 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279387028 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278438452 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278838246 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281303299 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.278956047 seconds)
  done (took 26.814010426 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.279014199 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283041678 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.280402514 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2795738 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.281707284 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279823932 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.281500744 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281112803 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279015359 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28188288 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282229357 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282644625 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279968904 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280657312 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283852899 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279894938 seconds)
  done (took 21.712355724 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.279279863 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.282867982 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.282626292 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.282228402 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.279487826 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.280588553 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.282274788 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.280311114 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.280694008 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.282723738 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281946117 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.282875591 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.282921749 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.282391537 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280413896 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.283188468 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.281147333 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.281695589 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.28367361 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.283648398 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.28147119 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.281035391 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.284160888 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.28493939 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.282135087 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.281770462 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.281290793 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.280751739 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.282630044 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.284560127 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.281995278 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.282781807 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.28193652 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.28204048 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.284696554 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.281652329 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.284827369 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.284636342 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.28467963 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.285207771 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.285226532 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.281653529 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.285212595 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.285740339 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.282539823 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.28590156 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.282844828 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.282383601 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.28254723 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.282760594 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.284783815 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.28531148 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.285259767 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.285583802 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.285500009 seconds)
  done (took 71.778348288 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284777018 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285231577 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282170246 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.285309027 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28621299 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.283700719 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.286063634 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282774903 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283745907 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.284937717 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283909801 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285827872 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283804459 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286221565 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284366876 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286243257 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.28330682 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284337594 seconds)
  done (took 24.343741635 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284430674 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284572338 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.287410884 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.28385425 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.284113664 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285852309 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284523598 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286494139 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286496462 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284644746 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284795937 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.287192563 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286377774 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.287629859 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285477465 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284332686 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288143324 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287197483 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.285057127 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285123658 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287489259 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288121626 seconds)
  done (took 29.510193659 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.288927365 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.28904259 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.307907327 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.336405312 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.324586014 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.288974085 seconds)
  done (took 9.057457214 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285530568 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287527135 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286396039 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288736428 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288500734 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286255115 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285086808 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286297402 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28761137 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286101569 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28596633 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288148589 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288475743 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285534462 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288430402 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288381002 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285783291 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286043957 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287053665 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289155561 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287765851 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289251912 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286573614 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286665156 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286151565 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286917632 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289624308 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287325026 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286677644 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289908796 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289953988 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286691156 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289211674 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288216898 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290984358 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289702101 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286397567 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289515534 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290295182 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287222436 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290070663 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289523726 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29077792 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287807912 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290616495 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288185769 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288094184 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288197904 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288219624 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291778159 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290167785 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287362831 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290969877 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290380933 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291690448 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291429753 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289452056 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287370177 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291091919 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2890373 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287959624 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290817776 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288859273 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289142247 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291342521 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288506814 seconds)
  done (took 86.259292252 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288618489 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28899477 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28943162 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291539234 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289353597 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288748866 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289903235 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290171983 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289477452 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290326129 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293216491 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289062724 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290026817 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290043934 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289574395 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290044977 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28933588 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289416625 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289339917 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291889325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291189129 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29019214 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289605617 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290842545 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290541872 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293135079 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290414657 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290081149 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290338896 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290355821 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289997933 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290470308 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28985758 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290911627 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291102829 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291450448 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290846361 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290997592 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291658651 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293761187 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291534793 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293319653 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291521696 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291727909 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291988438 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291133546 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291221955 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292317896 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29125538 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291485614 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29125895 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291783801 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292923457 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290973434 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291358261 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292292669 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291958675 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292092058 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29126217 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294338337 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2922204 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291375077 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293779919 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292164147 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292272431 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292329769 seconds)
  done (took 86.435916527 seconds)
done (took 1747.874710171 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.288011286 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.37889742 seconds)
  done (took 13.89447258 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.457941691 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.412742713 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.294944136 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.315444743 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.296090347 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.293690667 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.299106452 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.296405882 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.29598391 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.295674618 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.296100045 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.48698797 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.292790509 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.297447219 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.296556687 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.389196367 seconds)
  done (took 42.55309091 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.325361295 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.303096281 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.423297343 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.320627635 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.325300786 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.494747023 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.356783912 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.30110397 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.490198792 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.345037182 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.072462933 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32766601 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.3019083 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.466064448 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.319740735 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.494789692 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.5704705 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.951995925 seconds)
  done (took 30.420658332 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.79380761 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.318669562 seconds)
  done (took 9.343389099 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.311637436 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.351085211 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.310061115 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.325205337 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.324224624 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.328043557 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.320643554 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.336672924 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.327099764 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.342564186 seconds)
  done (took 64.51576105 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.32072715 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.303574402 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.302459431 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.300022058 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.296662457 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.293922724 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.300399573 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.293977322 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.267019655 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.440191655 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.318305036 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.307536973 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.302195083 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.301841424 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.296392885 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.338227426 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.447194801 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.296029419 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.295564268 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.308196471 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.302105216 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.407374936 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.346344278 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.298639135 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.439213708 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.290321571 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307964054 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.309179632 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427463315 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.298077792 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.302001942 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302666105 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.304822195 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.884146009 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.773062086 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.312942354 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.328044131 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.312313831 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.297488625 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.436064397 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.302947881 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.31034603 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.296807833 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.74257884 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.464037931 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.423853498 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.643453058 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.304045307 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.304344755 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.369783866 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.305790512 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.303325941 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.332992916 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.079216815 seconds)
  done (took 110.42785477 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.319186861 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.784800168 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467194281 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.315489291 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.177698649 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.10575909 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.296829091 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.602981423 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.302367566 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295827273 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.585872015 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827232933 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297161309 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.321834297 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.685879922 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.300670117 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297732068 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.224537459 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.297478156 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.303352318 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729111607 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330788968 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.298030235 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.496819974 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.338872985 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78305902 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.923761909 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.889494321 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.298428646 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.297413058 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.788064016 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.300170398 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.343039944 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.300083814 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.594715797 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.676662146 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650941073 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.299934083 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.351382742 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.301781988 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.322586186 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.778153515 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662468288 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.298653816 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.29871204 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.783829529 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.299306962 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.303196372 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.301851658 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510271343 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.236766275 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.300072624 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.93277725 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.301647648 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.667217679 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.391083583 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.3266211 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810356466 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312570281 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.472600843 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.342140662 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299765577 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30700841 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.302222566 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.301491065 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.665142452 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.668282855 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300206306 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.668840693 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.782822777 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.300166964 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85789371 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.233937188 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.305110266 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.35970091 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.299555992 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.041433412 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.809121915 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.333296889 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30176243 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.653375982 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.301246003 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.594713371 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.315389811 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.300827868 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730774037 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.324026237 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.330348536 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.301111516 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.301805918 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.107151106 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306680083 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.586441988 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.318686562 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.30161756 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.301388273 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.325134051 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.3023012 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.318682973 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.303178784 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.858065378 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.309546538 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.463264459 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32670622 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301364688 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.301543511 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.305366659 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.3010407 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530185029 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.842931051 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.304171726 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.303797358 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.302918482 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.307998721 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.474373685 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.302199818 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.629962307 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.304097092 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303091548 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.318913194 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.152529135 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336522211 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304082972 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.307541784 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.166781492 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.515821537 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.325298017 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.304055268 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30246002 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.319958041 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.757340022 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304167206 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.369005682 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.303956161 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.036017983 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.306857869 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.333760637 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.887844774 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.312517487 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303124437 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.325862223 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304088271 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616538003 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.598743326 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.565257551 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.305705653 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.318949075 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.014740008 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.313606386 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45424034 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324883318 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.278950334 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.504645901 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.508565995 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.306926735 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.892292077 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.304991239 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527468064 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.306677246 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.631283695 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8189117 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.305103469 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307352087 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.034236876 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.960009606 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.917026424 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.30807753 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.594725911 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.306821621 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.766083142 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.304854987 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.30530135 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.9011418 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.309857663 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.312914537 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.305075019 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.306090555 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.373822177 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481834348 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.175715321 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311813995 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788180645 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310247926 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305642892 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.322594673 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.307510241 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.657243954 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376270527 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.309004129 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.314368125 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.305949813 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.313406577 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.803471778 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.303736636 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.309516814 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463824843 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971967178 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.307057211 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.309667646 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.988463877 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.526633989 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83738924 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.339143693 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.6372015 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.308715484 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349080985 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.123933497 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306716012 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.847233513 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310898142 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.307851548 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.944374237 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.30748015 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.392274917 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.307722163 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.306411617 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87110774 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.308399831 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.309019217 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.769205325 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308039345 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566716849 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.309039821 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.321093404 seconds)
  done (took 1107.698202507 seconds)
done (took 1380.081367765 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.308491221 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.308148169 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.294320422 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.309178829 seconds)
  done (took 26.465885108 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.31164102 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.312396287 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.311344886 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.312690642 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.312844585 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.312355677 seconds)
  done (took 9.118927061 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.911572936 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.308762879 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.308958047 seconds)
  done (took 19.773847848 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.550927892 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.645505268 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.709409717 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.641888053 seconds)
  done (took 10.794006436 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.312397706 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.312098873 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.312419742 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.314715266 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.313803562 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.316075911 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.314542833 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.314619576 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.315432563 seconds)
  done (took 13.070308941 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.618888442 seconds)
done (took 86.087884424 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.31631657 seconds)
    (2/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.749570855 seconds)
    (3/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.499477518 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.755586105 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.789877704 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.292626532 seconds)
    (7/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.390225304 seconds)
    (8/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.405798456 seconds)
    (9/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.69840782 seconds)
    (10/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.080067295 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.568723934 seconds)
    (12/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.61920653 seconds)
    (13/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.125626121 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.347220583 seconds)
    (15/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.391391998 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.331942245 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.766118081 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.615524044 seconds)
    (19/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.960540282 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.310047647 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.390922387 seconds)
    (22/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.308302291 seconds)
    (23/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.865284189 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.38925111 seconds)
    (25/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.308810875 seconds)
    (26/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.321052633 seconds)
    (27/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.309227366 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.368691702 seconds)
    (29/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.392586683 seconds)
    (30/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.351281771 seconds)
    (31/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.396872452 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.957517112 seconds)
    (33/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.70932141 seconds)
    (34/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.39206984 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.384549314 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.330532387 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.3157647 seconds)
    (38/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.046656683 seconds)
    (39/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.702919586 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.309611994 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.300585933 seconds)
    (42/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.536948714 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.453687644 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.409573319 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.071214002 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.358019582 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.728853719 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.350636876 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.355209616 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.742213389 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.930302186 seconds)
    (52/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.910761633 seconds)
    (53/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.078702464 seconds)
    (54/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.338162598 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.421395219 seconds)
    (56/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.030879919 seconds)
    (57/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.421420319 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.315851083 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.5882752 seconds)
    (60/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.311261434 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.254594449 seconds)
    (62/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.373020794 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.888925879 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.979770517 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.129988398 seconds)
    (66/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.45877215 seconds)
    (67/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.334865525 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.36584445 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.245328487 seconds)
    (70/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.308008442 seconds)
    (71/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.294581747 seconds)
    (72/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.340998045 seconds)
    (73/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.842541861 seconds)
    (74/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.320984724 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.381941007 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.318240543 seconds)
    (77/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.29550945 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.308597075 seconds)
    (79/309) benchmarking ("sort", Float32, false)...
    done (took 5.33404681 seconds)
    (80/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.80330814 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.412023004 seconds)
    (82/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.952869882 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.312073296 seconds)
    (84/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.312226216 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.346493524 seconds)
    (86/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.749152739 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.315087146 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.346033401 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.55422162 seconds)
    (90/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.312882458 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.314362914 seconds)
    (92/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.406187898 seconds)
    (93/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.42619476 seconds)
    (94/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.622196484 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.983806035 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.297213122 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.430059711 seconds)
    (98/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.392827321 seconds)
    (99/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.7114722 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.015973704 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.306978053 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.308709511 seconds)
    (103/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.313055321 seconds)
    (104/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.478756702 seconds)
    (105/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.31329584 seconds)
    (106/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.356633783 seconds)
    (107/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.283415533 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.312930458 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.325342054 seconds)
    (110/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.343626987 seconds)
    (111/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.634287344 seconds)
    (112/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.907272551 seconds)
    (113/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.297551859 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.385348881 seconds)
    (115/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.962887554 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.399080482 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.396851366 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.392044526 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.633458599 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.509959434 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.420340922 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.833804475 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.326793049 seconds)
    (124/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.989225428 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.316168848 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.740496229 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.330821561 seconds)
    (128/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.850416171 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.363225742 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.748084826 seconds)
    (131/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.340398559 seconds)
    (132/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.314431715 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.063497761 seconds)
    (134/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.358496673 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.333461654 seconds)
    (136/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.827856335 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.338946029 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.685479305 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 1.849422769 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.335658198 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.570227191 seconds)
    (142/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.357097862 seconds)
    (143/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.153471861 seconds)
    (144/309) benchmarking ("sort", Float64, false)...
    done (took 5.654605099 seconds)
    (145/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.287604723 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.819732915 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.192677099 seconds)
    (148/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.054093122 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.030819932 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.56807877 seconds)
    (151/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.337972517 seconds)
    (152/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.315256548 seconds)
    (153/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.625539185 seconds)
    (154/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.32602081 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.207102876 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.417083615 seconds)
    (157/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.350836152 seconds)
    (158/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.547498602 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.941920181 seconds)
    (160/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.324951254 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.187523257 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.341748726 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.313181705 seconds)
    (164/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.189082254 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.643345551 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.399909834 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.092160751 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.59760072 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.355277021 seconds)
    (170/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.986806571 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.81896276 seconds)
    (172/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.147717329 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.312842995 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.334545467 seconds)
    (175/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.706072244 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.112055887 seconds)
    (177/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.703889394 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.341976711 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.421626919 seconds)
    (180/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.987423604 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.318939584 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.152829094 seconds)
    (183/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.507872646 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.080544442 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.34400533 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.396999252 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.060219481 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.954893748 seconds)
    (189/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.512965678 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.411079339 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.232038879 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.341031904 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.332700133 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.604663779 seconds)
    (195/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.355887876 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.353570741 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.357275967 seconds)
    (198/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.513585818 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.042933794 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.962821239 seconds)
    (201/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.755837099 seconds)
    (202/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.439632933 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.372680717 seconds)
    (204/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.508713707 seconds)
    (205/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.82248974 seconds)
    (206/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.28929709 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.364194788 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.77068746 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.495166082 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.183063578 seconds)
    (211/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.392877591 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.92432759 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.320805634 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.856098793 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.53293044 seconds)
    (216/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.093579937 seconds)
    (217/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.69292319 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.829189959 seconds)
    (219/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.83321625 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.374381947 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.361409089 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.439078909 seconds)
    (223/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.450741128 seconds)
    (224/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.723162004 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.002117126 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.333240701 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.350850948 seconds)
    (228/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.901624038 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.340635556 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.330256587 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.190103507 seconds)
    (232/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.303364128 seconds)
    (233/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.378211493 seconds)
    (234/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.320207295 seconds)
    (235/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.838205234 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.358213201 seconds)
    (237/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.77304367 seconds)
    (238/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.79717549 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.686605105 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.763198913 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.675033977 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.907302472 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.320599776 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.424889576 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.354832899 seconds)
    (246/309) benchmarking ("sort", Int8, false)...
    done (took 4.385649443 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.208975373 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.321848285 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.339876899 seconds)
    (250/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.63033466 seconds)
    (251/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.957570099 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.454142472 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.419618055 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.544652092 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.331801146 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.295419553 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.748879475 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.361927937 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.30898154 seconds)
    (260/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.292294976 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.706662032 seconds)
    (262/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.007213511 seconds)
    (263/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.324443273 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.335516232 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.241851659 seconds)
    (266/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.345700508 seconds)
    (267/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.650171664 seconds)
    (268/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.330746443 seconds)
    (269/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.872934735 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.157874422 seconds)
    (271/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.584459642 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.651150521 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.020923021 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.361701387 seconds)
    (275/309) benchmarking ("sort", BigInt, false)...
    done (took 6.323243306 seconds)
    (276/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.322504045 seconds)
    (277/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.709520189 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.957133042 seconds)
    (279/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.387706472 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.405133521 seconds)
    (281/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.466204398 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.40681122 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.311701035 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.31521549 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.443831706 seconds)
    (286/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.929221773 seconds)
    (287/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.183224685 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.49067296 seconds)
    (289/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.871313304 seconds)
    (290/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.449917877 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.246108634 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.314448988 seconds)
    (293/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.443537971 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.348700626 seconds)
    (295/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.34923975 seconds)
    (296/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.028101782 seconds)
    (297/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.429643577 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.366230513 seconds)
    (299/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.308743641 seconds)
    (300/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.250269173 seconds)
    (301/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.452133686 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.350125446 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.753431671 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.364092736 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.559223059 seconds)
    (306/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.746546517 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.832698683 seconds)
    (308/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.813101055 seconds)
    (309/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.704497565 seconds)
  done (took 934.430988605 seconds)
done (took 935.676336888 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.355279946 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347664258 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.333202332 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.353618839 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.442993117 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.361721597 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.344004201 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.334668295 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.380396697 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.381842363 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.330393489 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.360784016 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.333429557 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.332761262 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.331933342 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346278072 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.453197526 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.334276144 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.349148922 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.343300797 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.34864075 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.329979622 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.383475224 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.361718157 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.336730393 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.336133168 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.33477327 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.352779002 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.444777354 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.335334869 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.3374493 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.344786335 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.424315651 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.334029873 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.328673925 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.353736692 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.344997261 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.344031401 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.33887905 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.365857695 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.947616841 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.336948072 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.335830866 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.33611583 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.335730153 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.340736889 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.335831153 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.342036201 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.347498944 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.348045038 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.966944467 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.351638896 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.337768467 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.336405864 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.346707831 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.334790861 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.338573361 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350769771 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.355985581 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351492133 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.404377527 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.340377422 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.337498764 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.352087626 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.342234201 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.009963811 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.33541434 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.341740289 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.953381347 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.346048244 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.877655267 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.344628681 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.338729235 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.350432225 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.36686975 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.41895819 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.332463805 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.337152416 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.343859245 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.334237914 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.346339466 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349780437 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.341430779 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.337857811 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349353303 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.36686003 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.347024308 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.337983648 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.346879391 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.356736411 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.344911714 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.348204932 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.341237654 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.334952681 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.347911032 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.341336806 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.339425763 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.339817696 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.342798002 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.350177808 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.946274488 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.356165808 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.336086542 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.33541466 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.337536649 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.351685857 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.850976241 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.339013042 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.360417992 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.38622307 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.341652926 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.409185212 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.34166948 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353742816 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.347441117 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.342664437 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.334387534 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.40962361 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.848742228 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.352981044 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.341003525 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.337545617 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35414327 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.341492706 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.335262518 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.487181389 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.342466129 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.35190648 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.458713846 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.349956877 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.370046767 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.337190556 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.342920444 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.368618591 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35414211 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.370537807 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.342306397 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354526547 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.355830364 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.337473419 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.35092415 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.351443593 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.3416486 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.346695281 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.33521076 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.36965498 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.352340096 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352542501 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.361234711 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.46141483 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.338482429 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.413018729 seconds)
done (took 227.590561774 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.404436834 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.336547449 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.435227087 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.337865322 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.442731328 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.444830854 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.335708584 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.337201811 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.336549288 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.723105843 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.336828364 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.336495238 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.341975958 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.337091386 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.424013845 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.339158573 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.33724302 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.685592794 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.339636519 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.412012474 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.34165348 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.336638124 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.339057303 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.726732954 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.336928689 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.339401865 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.41191697 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.339688687 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.690399131 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.336791337 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.341709229 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.691006571 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.430728261 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.356259819 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.348903941 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.347408049 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.444703665 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.358920519 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.423652148 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.424561397 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.435964715 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.378907624 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.339974608 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.344502285 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.342300662 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.341380398 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.337883955 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.367763274 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.338513519 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.339784999 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.688630024 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.350632161 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.339049715 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.339350728 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.339305413 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.370198911 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.338740452 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.342155769 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.433533908 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.342543323 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.406760796 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.72870233 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.724179696 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.341835367 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.343485989 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.339627728 seconds)
  done (took 149.00026886 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.411128748 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.416954827 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.46144322 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.345182164 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.394258926 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.465458727 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.344843735 seconds)
  done (took 11.113094444 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.35040545 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.342789185 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.394661054 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.395439476 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.342125381 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.49212349 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342281133 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.355863495 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.339315071 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.397577842 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.343943 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343507651 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.348981764 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.340044994 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.39260882 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.356364267 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.460734681 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.347971725 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.343522282 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502119456 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.341085918 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.350416748 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.398041433 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.357049948 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.345118434 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.352528802 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.913603744 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343626915 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340866553 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.344354918 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.341603009 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.384557232 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.345091891 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.342725249 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.341137688 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.462327147 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.344334213 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342235416 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.345520883 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.344186855 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.344697946 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.345151558 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.344017086 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.341424787 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.344390943 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.369834559 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.344435539 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.344276607 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.344557428 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.345104268 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.398067828 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.344940021 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.341734525 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.342668634 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.402881639 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352113068 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.345579287 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.343342708 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.344949368 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344025322 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.503817161 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.395351141 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.345227307 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.395601489 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345910922 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.346791743 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.345665413 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.344766881 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40391914 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.345117526 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.397457111 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.343641812 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.502272686 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.372138396 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.34675439 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.3505685 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.351269614 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.346320839 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.347415445 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.355408561 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.343587277 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.350276801 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.355089878 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344699664 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343965679 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.452000645 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.458598079 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.345001976 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.362671064 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.356631016 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.344789787 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.402413369 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.347300019 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.344183878 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.40153055 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.464359278 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.403472784 seconds)
  done (took 154.425239765 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.353684204 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.357211399 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.350645119 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.365552411 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.350308471 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.349020562 seconds)
  done (took 9.405933533 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.353435851 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.350265365 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.347086674 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.347979617 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.347833657 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.3498346 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.348534273 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353065204 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.352755126 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.348021461 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.3492054 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.349684949 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.349296333 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.348647582 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.348471336 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.348659369 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.348658808 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.345927923 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.349347251 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349311872 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.446972339 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.348281138 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348487049 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.353316503 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.354676589 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.349455741 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.359710776 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.348860134 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.34982919 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.361554453 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.350938056 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.349966547 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.353311034 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.359101884 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.354926787 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.353311161 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355430311 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.35157208 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.348355209 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.351231997 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.351223957 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.350474014 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.350473646 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.351949435 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.356201306 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.359565229 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.357475612 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.360602432 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.351161642 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.351105814 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.352651538 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.351175297 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.351687086 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.352886849 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.358619932 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358141376 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.357579302 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.352115435 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.352179975 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.35536187 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.353724764 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.353025606 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.357398312 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.356846456 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.358887612 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.353143629 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.356339526 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.358073952 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352073665 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.352050528 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.353003798 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.350912938 seconds)
  done (took 99.756267457 seconds)
done (took 424.971116189 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.364425914 seconds)
  done (took 7.647692336 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.50895936 seconds)
  done (took 7.794757474 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.527432185 seconds)
  done (took 22.817746604 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.374892065 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.424095411 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.351494952 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.353397842 seconds)
  done (took 26.788693077 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.712952533 seconds)
  done (took 7.997350014 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.344762938 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.365861838 seconds)
  done (took 13.998383562 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.500306081 seconds)
  done (took 7.785413675 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.820847577 seconds)
  done (took 8.111621504 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.356854251 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.361838779 seconds)
  done (took 14.272942895 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.332127866 seconds)
  done (took 7.617822575 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.569378894 seconds)
  done (took 8.856798319 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.34763166 seconds)
  done (took 7.633999571 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.410772856 seconds)
  done (took 7.695615527 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.778966824 seconds)
  done (took 10.065425254 seconds)
done (took 160.371776327 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.348629085 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.350537589 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.348862604 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.351823036 seconds)
  done (took 26.685041469 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.386513513 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.387023943 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.388126471 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.397922994 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.390665581 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.387075571 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.379697507 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.380041074 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.39766493 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.390042129 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.389220552 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.389240891 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.387032816 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.379689251 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.389348709 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.389319398 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.39809983 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.388869554 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.379763179 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.390488621 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.355447207 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.398019528 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.39104903 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.354723357 seconds)
  done (took 34.552912912 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.555504092 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.427477226 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.51034828 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.408945157 seconds)
  done (took 7.188341962 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.407049677 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.407734718 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.419390809 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.457799274 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.484922162 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.417879715 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.381334141 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.376917978 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.361869626 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.408486142 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.483230925 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.423286873 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.491549552 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.354978711 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.570214038 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.354785629 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.354754726 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.407566662 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.458529695 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.473682181 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.355911287 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.407531053 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.411354419 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.423951955 seconds)
  done (took 35.382559524 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.353440458 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.362261075 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.361012166 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.355619811 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.355149599 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.355269217 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.360288821 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.356343134 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.376049326 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.355848705 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.354583333 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.355519748 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.353683948 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.355923514 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.355329693 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.368330577 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.368964611 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.356268723 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.359258392 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.362156044 seconds)
  done (took 28.468880608 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.352075496 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.2069157 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.703441618 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.608663149 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.35439389 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.354988678 seconds)
  done (took 27.86979686 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.437910589 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.570826908 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.359902759 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.755876982 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.831745718 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.36065155 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.359757229 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.611104988 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.969754983 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.978454684 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.421989317 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.432068528 seconds)
  done (took 20.380738255 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.352312645 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.355202463 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.372146925 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.37087958 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.419983374 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.3645479 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.365977147 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.35311574 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.421922302 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.427308972 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.365807108 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.423802294 seconds)
  done (took 37.884243776 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439590017 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402831228 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.528632456 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216377936 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.738550834 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564504992 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.266008777 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.801373016 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.358143709 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626758635 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35333738 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445096975 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.610401237 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352536424 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.3561786 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.484338338 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581230341 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918236104 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35783979 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.687524642 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380089937 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368192481 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.885719942 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.385317182 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565638765 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.487093364 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.614604329 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35353355 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66763907 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366894871 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364688225 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355116711 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627161865 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058551426 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446612759 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365098968 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.241553836 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.069334914 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.350034652 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.69205608 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365550691 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.355145609 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365138306 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355140328 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288720636 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369091157 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810459522 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.360961301 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.065277279 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.354689243 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36550008 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448839886 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.358179509 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.17180033 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494479964 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356408924 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.352106948 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36427474 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929789171 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.285702478 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373207663 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.292492709 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.527082787 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.692204639 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017982942 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.458570391 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.359842488 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360503605 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290329451 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.713188296 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373732805 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494329742 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.376981473 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017562217 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114128123 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.357245061 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.287319749 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9905603 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369618869 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.292732803 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.585305878 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355879106 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296797419 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.300143278 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.290399801 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170240991 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368577837 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.894627883 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369393084 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.804635284 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.369563532 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376745598 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381030716 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.582647265 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.243145614 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357419884 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.358025915 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494513575 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379885749 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.806238546 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294126219 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.362604735 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613861062 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.569432523 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368133482 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.498144261 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57722751 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3591723 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.376020447 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.3616085 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.370775549 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.985265912 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371441504 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091078579 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376597131 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358915047 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219337766 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361952313 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.462084551 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371520094 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624709751 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.249668071 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363326616 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443135499 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368335964 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359798396 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.810837346 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.880658252 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359847688 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.362465481 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369878866 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.372159259 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.359639856 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319130327 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.357878799 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361982296 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.362731322 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.585296833 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362333657 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635162431 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294756697 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496629936 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.462264479 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.583657448 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.636615147 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.358853969 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62138128 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366710684 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363174795 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374722814 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379628619 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459049693 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382806478 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.373339541 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.618948893 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.364986792 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.365580212 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.818415927 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.851221427 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369733578 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.367309594 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.277457873 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991693069 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335720098 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367479821 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.256808809 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.375561109 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426098949 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367248839 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.372013635 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.430775876 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.375558456 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.367256888 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.362563593 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586153446 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374074 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.721425203 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441589 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.57531409 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994546904 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375285288 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.296768008 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.073143576 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.055775014 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362579409 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297843415 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363325238 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371851448 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372983964 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.690449678 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.994208564 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365971702 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.723893681 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.37102797 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374401651 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.367510473 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363654783 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.355832314 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.328566944 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378706103 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.375932864 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506685771 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.377135393 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.297577394 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.367295283 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368465844 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362948503 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36314227 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396815558 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.754579975 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87718426 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624034385 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.220520176 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378657593 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.84537432 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.39918829 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.368152391 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378607863 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379513063 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.379816982 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37266457 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.374856323 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.83268934 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.047327302 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934895042 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16140623 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943308635 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386173214 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.373095715 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366980273 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.820077813 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299781969 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923969656 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574339929 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.819431189 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322853538 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580803543 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.641213947 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202427061 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37507431 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596114767 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37877897 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.367988239 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379184854 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578555601 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401025568 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.369170752 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.297292558 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.652706587 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616670776 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368027074 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445152796 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819605486 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368710574 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369125406 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.367775827 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.885038924 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563759356 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.080266537 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.545860844 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366861909 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369306658 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868102731 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373431079 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.597238185 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034943589 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371626028 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.584181216 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308114067 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.378854779 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.377840422 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.369964201 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.859577901 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.370159217 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.623478878 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379292855 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301360967 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368245332 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949713475 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.221896631 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.373840024 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367975705 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226510906 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385074422 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690182198 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.382603205 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.401455438 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375108902 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301582874 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301404666 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.060895364 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373888324 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338815192 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935494103 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.485412655 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.456699273 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400963272 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220169488 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625892194 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.382899763 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.004924311 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596147177 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.333468704 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393037239 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.468950086 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369035733 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.357348141 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36920861 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.605956705 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278952822 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595306428 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.583795141 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.277861761 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.370529327 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584820058 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369037925 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382246016 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636291055 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.081060116 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.369112285 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158205266 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395967755 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374158051 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.292553657 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.543154494 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380248924 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449874575 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382323932 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.381312365 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.381318619 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566740368 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385313639 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373696895 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.385963307 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464397046 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150612387 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.435427042 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.376772947 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011284288 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158108012 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010653605 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384292566 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37117606 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37984406 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305230603 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521046247 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.601352288 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64492673 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48942266 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.592561259 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393705182 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377148322 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374267869 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586566441 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6473434 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.271142301 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371438321 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38816261 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.372837065 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384412978 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.583797183 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949736579 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020721616 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488706552 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.374962595 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.825848522 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648173652 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371891808 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372292884 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967036112 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.383894001 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.893579745 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.380506653 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385211011 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522472838 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382245404 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087090688 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.382761521 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.532450074 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.147202768 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.856253585 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631609482 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.92075313 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.386132047 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013341945 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.138235932 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641424064 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440955456 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384702131 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.478700472 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52092726 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.382473535 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376642993 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374798624 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223312111 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.084961072 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.384960521 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018136291 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639920713 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.371407778 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.384923175 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399803537 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.384525048 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59871409 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21005046 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602373653 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384635345 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380738873 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.195255875 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017805129 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388166513 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309879038 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.379275259 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636931715 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.612486347 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398006201 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.827836561 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.084999898 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021968675 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.354656559 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396806912 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384751978 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.143319211 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015885397 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.453161123 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960650457 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.946522691 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378302332 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652125288 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.381493604 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376506643 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655207008 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.38146488 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382579628 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389998934 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.013089559 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260319837 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.387129748 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.807463738 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.315962593 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.723093836 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.097778755 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313446917 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386372606 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.58746353 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379531637 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496521832 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389129397 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.385885294 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38062971 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.112265287 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668626385 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.384079079 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.363551499 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.379570537 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381069816 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388439356 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634316503 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378970938 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.054053928 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.730860626 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634338387 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.376657552 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.366842363 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.381811029 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378241088 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.375537312 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.585295262 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.703688654 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0249696 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.381143996 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.409199592 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382746824 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.595030382 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590870047 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383509724 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393981378 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380176962 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396572412 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.290278521 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.887526433 seconds)
  done (took 1623.749060648 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.388417462 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.419661758 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.420202648 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.430608711 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.416380256 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.464508543 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.400679052 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.466994734 seconds)
  done (took 52.72494237 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.382325716 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.607032111 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.415557479 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.391945737 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.394138955 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.394300628 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.891102144 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.388362845 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.391906824 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.393540503 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.382228575 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.388979964 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.088479451 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.393982579 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.39765128 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.368174416 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.393572365 seconds)
  done (took 66.387068481 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.396034635 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.928076218 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.410722297 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.381724087 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.26616022 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.38582166 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.007556506 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.435872816 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.418957239 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.400053079 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.03772617 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.397826122 seconds)
  done (took 81.785254593 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.392135987 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.391448714 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.391466219 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.390209658 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.390959523 seconds)
  done (took 8.274507991 seconds)
done (took 2052.619762206 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.632952466 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.1895076 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.124776184 seconds)
  done (took 5.633618004 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.530091341 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.578523836 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.760275014 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.733164135 seconds)
  done (took 7.921254592 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.658328332 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.763260441 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.572098839 seconds)
  done (took 6.312409782 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.984807062 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.392623524 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.454603221 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.378447663 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.380777225 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.383204694 seconds)
  done (took 20.461527952 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.384570171 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.385945417 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.384048543 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.3868075 seconds)
  done (took 6.860986442 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.365287013 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.170737953 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.369324387 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.382607999 seconds)
  done (took 18.606096756 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.131043064 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.143679415 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.128277177 seconds)
  done (took 7.722265438 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.398067306 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.225011889 seconds)
  done (took 9.941999629 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.696244996 seconds)
  done (took 3.015128815 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.516129192 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.654158893 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.514488573 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.519916583 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.540186049 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.881790404 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.327592689 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.827382442 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.491379865 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.966461731 seconds)
  done (took 30.559593397 seconds)
done (took 130.819705991 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.580359345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.405561943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.589789478 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.562251632 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.618547485 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.589741611 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.675169299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.523596447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.402124738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.055871615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.566213077 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.61842116 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.613156055 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.405638376 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.613722984 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.399574731 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.616835787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.614131134 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.239853627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.385268186 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.671043894 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.190941057 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.387465834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.208401775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.617465001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.54179741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.774462981 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.401966324 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.387544699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.786484353 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.542046476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.39931295 seconds)
  done (took 197.30547227 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.385525158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.386092226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.404026124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.386080048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.385583365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.387604523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.401077402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.386596629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.392295608 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.395931923 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.391555065 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.400679341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.386228182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.395583348 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.38574155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.387216485 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.400205968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.391410815 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.386516373 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.386709157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.387804169 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.412594611 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.386391859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.407391112 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.387035134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.405516103 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.402335174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.38705203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.387056358 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.386322883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.388260042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.403802014 seconds)
  done (took 205.886016255 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.403904709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403125398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.387361078 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.387514268 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.404892095 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.387915788 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.40658843 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.388011193 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.413343079 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.390049141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.387767679 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.400728414 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.388837255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.389076218 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.406182465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.388484685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.392618822 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.394017779 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.387384769 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.39260948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.390580046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.388429481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.391314475 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.388166235 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.39242996 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.388976121 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.388324716 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.388976685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.404868147 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.390354612 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.393475061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.387913067 seconds)
  done (took 205.918390758 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.582586791 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.394005663 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.394161161 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.327894317 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.395793332 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.393483204 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.391881256 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.586211561 seconds)
  done (took 14.790154321 seconds)
done (took 625.221172497 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.838800814 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.537925581 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.604665406 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.414331021 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.245001486 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.418408069 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.414801116 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.606531454 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.354127043 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.609386043 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.753452627 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.414182198 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.90007179 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.412087447 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.680610332 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.522452067 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.316510453 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.429965591 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.762989035 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.017296411 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.684033023 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.978399885 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.598460149 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.347502513 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.993434992 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.98257231 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.244158611 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.331292249 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.414671902 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.763693159 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.187138848 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.510017341 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.490645411 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.469261207 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.519899846 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.501932109 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.411258553 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.465473759 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.613275046 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.73083623 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.011073532 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.164530318 seconds)
  done (took 95.993668634 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.384007826 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.384776626 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.38289477 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.383665205 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.385480089 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.38476616 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.38453976 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.384292393 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.384373818 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.383272059 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.384191327 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.385294825 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.383823938 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.385518814 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.384630273 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.384157504 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.384982092 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.38654609 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.384401947 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.383964145 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.385677058 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.384426004 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.385399392 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.3844147 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.38599454 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.386232328 seconds)
  done (took 37.331166551 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.398322939 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.645489396 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.85704095 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.408345864 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.400947576 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.403823868 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.490247476 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.400139585 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.402947029 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.40422334 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.569896716 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.402829231 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.440039373 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.869057155 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.405921072 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.399326313 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.399090786 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.402532704 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.655145745 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.411063709 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.492841756 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.400901059 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.492109874 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.414181347 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.405492557 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.403495849 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.406933885 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.908002283 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.404036674 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.567118228 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.284695403 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.487624218 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.862142605 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.873649698 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.290599905 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.402298746 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.400688584 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.571931191 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.404809065 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.403059984 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.492403789 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.406375871 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.872709984 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.066946809 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.423643409 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.400841067 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.931919137 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.575307573 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.692739824 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.413368481 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.8936836 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.407660421 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.402749735 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.40446764 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.693972985 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.412291292 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.403246519 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.978740657 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.409898561 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.493178329 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.404044777 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.404178536 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.664123714 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.404789595 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.652102055 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.4070638 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.413601486 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.405721414 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.874194944 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.408591728 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.07737094 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.425838207 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.401333163 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.570268754 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.654299077 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.970660397 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.409014231 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.669522248 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.879207147 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.495918465 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.411812124 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.897309988 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.494439999 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.409780591 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.40638436 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.405834585 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.40286409 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.447062961 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.489382405 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.994189306 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.072417496 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.001240801 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.496555983 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.418566183 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.40629733 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.976685743 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.42326749 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.404207926 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.869833224 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.084733931 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.426545164 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.415936526 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.069930708 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.428431246 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.492406787 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.411906965 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.877147548 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.409984335 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.448781656 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.405427795 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.415175186 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.410461238 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.493122428 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.410538035 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.404247194 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.044248963 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.594766603 seconds)
  done (took 185.017188614 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.419623814 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.400019724 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.401554403 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.418566361 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.400821792 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.40636344 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.402334145 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.400354706 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.407796254 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.401284979 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.400647475 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.400939871 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.41435266 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.403806777 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.411004611 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.409702491 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.014452984 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.403603972 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.404362901 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.401743646 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.223317881 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.404314921 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.405422967 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.402591863 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.402999114 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.402827432 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.407727968 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.405092437 seconds)
  done (took 154.114465155 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.406173567 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.038129896 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.407275757 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.555778563 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.429813922 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.40426133 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.553303223 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.476779427 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.412007347 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.404617673 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.4048141 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.775640082 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.410103758 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.02752797 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.625419735 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.562817348 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.004319735 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.408814275 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.405102791 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.405056491 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.557150148 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.417908007 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.776378789 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.093812146 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.409858765 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.091900563 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.39906332 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.408683664 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.408735575 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.044433464 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.407498132 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.77661213 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.497064254 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.476292506 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.081718111 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.005612386 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.985134913 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.570450799 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.410266237 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.406216259 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.406769724 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.396464176 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.04610951 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.409544559 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.411449715 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.036216521 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.427010696 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.409585071 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.416759051 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.407067683 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.479575464 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.483044856 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.754046803 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.04961236 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.494902836 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.430210564 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.556402404 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.786546942 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.411277569 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.986909661 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.396415708 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.045769485 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.41158872 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.397798733 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.408824049 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.413636085 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.575446538 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.553886961 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.987220185 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.412648909 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.989072062 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.575502267 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.408073841 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.409164768 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.411486311 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.04908128 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.990046349 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.576381344 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.562102698 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.635066962 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.401193787 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.41115376 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.398502407 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.496927301 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.408598353 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.045138371 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.990982561 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.411533662 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.410918237 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.411913071 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.411693275 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.617606327 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.052295327 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.498682663 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.979203123 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.771058069 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.75486761 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.411913859 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.47647613 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.411692313 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.75537532 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.413005683 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.474161974 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.852327483 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.756419792 seconds)
  done (took 169.716553211 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.676449183 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.781000963 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.508954944 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.535815554 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.981741834 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.001039389 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.718818077 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.546679533 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.528671147 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.685249634 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.677805218 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.504355638 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.611608446 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.492767657 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.163779106 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.489922997 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.509503615 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.54857975 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.53008018 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.549510687 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.079169223 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.719884793 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.600236723 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.654442288 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.513569913 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.229486108 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.989430849 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.936611865 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.593562187 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.783466909 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.939321629 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.600627923 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.429460218 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.123466936 seconds)
  done (took 68.578572976 seconds)
done (took 712.076503913 seconds)
SAVING RESULT...
DONE!
