cset: moving following pidspec: 7298
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.313885025 seconds)
loading group "string"... done (took 0.480111362 seconds)
loading group "linalg"... done (took 7.780248607 seconds)
loading group "parallel"... done (took 0.175740953 seconds)
loading group "find"... done (took 1.19606367 seconds)
loading group "tuple"... done (took 2.129791216 seconds)
loading group "dates"... done (took 1.351569935 seconds)
loading group "micro"... done (took 0.249988665 seconds)
loading group "io"... done (took 0.679738415 seconds)
loading group "scalar"... done (took 42.173814039 seconds)
loading group "sparse"... done (took 12.770411611 seconds)
loading group "broadcast"... done (took 1.11915105 seconds)
loading group "union"... done (took 14.269312562 seconds)
loading group "simd"... done (took 4.847819237 seconds)
loading group "random"... done (took 9.813099615 seconds)
loading group "problem"... done (took 2.009931989 seconds)
loading group "array"... done (took 22.67211915 seconds)
loading group "misc"... done (took 1.445611171 seconds)
loading group "sort"... done (took 3.637037855 seconds)
loading group "collection"... done (took 19.617870193 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.554455673 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14894045 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.158133069 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.1419897 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.222343202 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160353715 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163170243 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.103478195 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.01655904 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.196753936 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.159934566 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.535127386 seconds)
done (took 5.294786897 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.229912985 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095558316 seconds)
    (2/2) benchmarking "String"...
    done (took 0.109271609 seconds)
  done (took 0.881610224 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079151118 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.149214477 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097411773 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080972517 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.099038454 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.098317096 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082071374 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095828096 seconds)
  done (took 1.382584699 seconds)
done (took 3.260276684 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.751987476 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.292571112 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.208750674 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.504334734 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.184191817 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.221720759 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.697087199 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.365847703 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.27446409 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10584934 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153747482 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.398152184 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140819479 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694821061 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09142041 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127819576 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.189977259 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454643111 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085150324 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111865815 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117661832 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147153208 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129518075 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092427821 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186993047 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085420035 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.201058222 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108608522 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081495003 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289150927 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202733262 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.737971953 seconds)
  done (took 11.150015026 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116353192 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138628174 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.10041809 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141827768 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14041121 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103503827 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102227422 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083250922 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126911744 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182777224 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136538453 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.146777108 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080579934 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.101719402 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.105394185 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248424734 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125481387 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124492599 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087549438 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107797082 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141024732 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.101594211 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114130063 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111383402 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169729808 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210278313 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114318354 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129252263 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09781202 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113967241 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144034215 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145062025 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098057623 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083219105 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178018098 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127961146 seconds)
  done (took 5.272250788 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193140019 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123120583 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174337647 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.167001099 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145324676 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162747178 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118163785 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2516099 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.143580217 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177436533 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.16090365 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147661444 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100814082 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099648421 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085881813 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098669034 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.649850222 seconds)
    (18/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122895528 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139199365 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.128081658 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125255585 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107690234 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.107008204 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.091151226 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.100401111 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085214107 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.134164561 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.689604674 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166488049 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083820478 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.224498301 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105188595 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105354932 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136218745 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19973017 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131824489 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121879944 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10045623 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098004218 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.1846931 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091996882 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099844038 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.110894485 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140652718 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137552956 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100765174 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.102255446 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.213511415 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080806323 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115735343 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.019969717 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183411665 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094055111 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096020209 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335253856 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099304883 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098908414 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079166055 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097943079 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.300766413 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13940955 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083931768 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.101002154 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083016679 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097386161 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084145502 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.760485539 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098340508 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.693115166 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082182977 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10798847 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084622548 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099010621 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105901812 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090670644 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119152203 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083091037 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.102150207 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081792843 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.100389003 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102321717 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096172497 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107122886 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081901853 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168685701 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082568464 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118402867 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130495819 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084640999 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096536828 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133829386 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0988957 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083765592 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.138387995 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082931421 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113348651 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102532092 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144241005 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082016821 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.205962687 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095567283 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128905063 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104013876 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115528795 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110935716 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100110043 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087112227 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097365408 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078918421 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16596326 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082762441 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099542416 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099733185 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095308482 seconds)
  done (took 23.835531305 seconds)
done (took 40.934685522 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.343404645 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103936975 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104669353 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104209052 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102487056 seconds)
  done (took 1.508998152 seconds)
done (took 2.235795982 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28575102 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176189433 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096999619 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168935783 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094416096 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177971703 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162295879 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113094607 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.186747751 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095226058 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165383103 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077785881 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095875052 seconds)
  done (took 2.648282082 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0965486 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117186214 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08481737 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114557787 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079376916 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115204454 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113501963 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105363684 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114410017 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088075436 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097133223 seconds)
  done (took 1.849530861 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096127707 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116456639 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084894961 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114021714 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079493913 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11467309 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095968515 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120742409 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113631528 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088637117 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097675226 seconds)
  done (took 1.84365295 seconds)
done (took 7.059631394 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.096393459 seconds)
  done (took 0.813221085 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.03427723 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.126715046 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118099055 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.156981108 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.326732528 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.185770383 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.561053096 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.131331637 seconds)
  done (took 15.577933871 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.117537554 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.103048257 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101321264 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085358374 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.119319637 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104748175 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084698143 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105328425 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085343317 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.105070058 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103653705 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085486621 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103310785 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088038287 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100819902 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104028957 seconds)
  done (took 2.379236892 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12148564 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120830116 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107986074 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110748481 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106533975 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088446876 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109306677 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107389836 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086901664 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105115382 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.109020452 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092019463 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105545315 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098257242 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091299205 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111322323 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.103706121 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091204026 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109479414 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108728817 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092027884 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09744879 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105797054 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092013142 seconds)
  done (took 3.299532673 seconds)
done (took 22.792087322 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16436107 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111619865 seconds)
  done (took 1.003370796 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.104435379 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121881223 seconds)
  done (took 0.958435304 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110145099 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097436399 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139569555 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117418752 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08261712 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098407894 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.13365651 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098019474 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.0818015 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098592415 seconds)
  done (took 1.792919501 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088976703 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.117596969 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.108655847 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.104133053 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.111406076 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.10314768 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097423122 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.1053827 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.12118636 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082883863 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.109390903 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117211967 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108470858 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102233581 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.112633401 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.107918595 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.094391261 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105349056 seconds)
  done (took 2.631641131 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080731566 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102869341 seconds)
  done (took 0.924031556 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085575972 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099437533 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086999269 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101824849 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09921251 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083034399 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099532377 seconds)
  done (took 1.393689443 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.482684756 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138394911 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259247387 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087524626 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123350197 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.31181759 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099311708 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104600198 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086036992 seconds)
  done (took 2.486740293 seconds)
done (took 11.925033994 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094843495 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120759531 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.118081625 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.49161483 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.123825033 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081575349 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.163181486 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.259181721 seconds)
done (took 2.194053089 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152778145 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329782464 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118344022 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068194704 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096957781 seconds)
  done (took 1.355418835 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081690851 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101940524 seconds)
  done (took 0.925063287 seconds)
done (took 3.177310144 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082464812 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.131786039 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082418615 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099848789 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079819903 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100636519 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.097107159 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079810499 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0993215 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082771438 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098475539 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081236914 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098361156 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078899533 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097332626 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08179823 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096119571 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079799957 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09630703 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079228515 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098244777 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07987884 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095606679 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082453647 seconds)
  done (took 2.954198526 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111694891 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099586157 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105777413 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088114418 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103741966 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104868523 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08786836 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099682907 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087779054 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101173912 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103342913 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086246346 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100550081 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.10303206 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084423451 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103238719 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08830561 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098791012 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102157045 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087447906 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104922803 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082895043 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102503168 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105136516 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086965214 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101462472 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101638135 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083296411 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104895632 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08627639 seconds)
  done (took 3.654356216 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086280139 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096070113 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080759549 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104259078 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080671241 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102171731 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079683161 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097333798 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080869986 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096679414 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08157054 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096828866 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096939025 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080167724 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098193511 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082869951 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110742312 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080133724 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096848738 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080897293 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100497675 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080256275 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.10040529 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080723991 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096688516 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07929804 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09696224 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096677133 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079938197 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096962317 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082811147 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100912688 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079187491 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.10457103 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082473986 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096697941 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084094352 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09616408 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080646203 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096306544 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079557372 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096553199 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0807111 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102741591 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.100959101 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081027804 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098312737 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081421456 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.098022582 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.083422299 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.097565159 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.07991149 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.099536438 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081121555 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100564508 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096228427 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08088351 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096977551 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081164545 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096073539 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079390583 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096562255 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.08209446 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097598751 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095514557 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103942435 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08006313 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098238123 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101253177 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082483531 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099163081 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094265067 seconds)
  done (took 7.295400896 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084450676 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107896731 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08218171 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099298658 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078515257 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097351602 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101746344 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080329642 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099475931 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.098047334 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096838787 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098620044 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083002745 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101134774 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080232768 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099519476 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089465902 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095565487 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097939095 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084007119 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098819195 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084575527 seconds)
  done (took 2.792904968 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21721311 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106688464 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144269239 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124168107 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099852817 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113545981 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104488835 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090378786 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103687703 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102670965 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085536456 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10439204 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090749643 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10235112 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103304796 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087507287 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103170855 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103898227 seconds)
  done (took 2.743178883 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094915498 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101255988 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122376503 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084020445 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101118306 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086380169 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106773961 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116014975 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086659051 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100573683 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110653173 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08522618 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103337398 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083496927 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102876527 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083420219 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.103190698 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100572856 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093130448 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105684783 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107220348 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093426037 seconds)
  done (took 2.925928897 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100238793 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102678197 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119926846 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086955503 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.100428615 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.083775877 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106865088 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099977451 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091567213 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102841447 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083857641 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.10297554 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108029463 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082846959 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106747008 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083687873 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102205966 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083157628 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103075042 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100248564 seconds)
  done (took 2.711238489 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12236113 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102371134 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102023931 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109040257 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103163707 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102434381 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.217949177 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102787145 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102674594 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110378528 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101913763 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10298773 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108456799 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121392406 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102469832 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124044148 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107413131 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12480607 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102378505 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085749326 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128674145 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102756323 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124322639 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084122788 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102617821 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084573243 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10168519 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121274098 seconds)
  done (took 3.865075412 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082814606 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100699488 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080139784 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098355975 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080059602 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098032217 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080171068 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098297921 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082803918 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097853775 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082463517 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101098186 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082485157 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100762594 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083528408 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100422499 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086225184 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09742946 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080263442 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096704928 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082661746 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099836505 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.10115714 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080099228 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097730968 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082836651 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098110561 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080150654 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100445814 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080796798 seconds)
  done (took 3.475218427 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092805053 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108976958 seconds)
  done (took 0.967117958 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080630954 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117308359 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081345865 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104665754 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107058602 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083900314 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110133751 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088568602 seconds)
  done (took 1.537400002 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.102034284 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.120061782 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089852835 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.118589999 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115888711 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099486827 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163239622 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.106419446 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107331261 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080477961 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118937627 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082310204 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108272545 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083433519 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.1062163 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089751056 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101309162 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.116994663 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.090359858 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099980963 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085338938 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1121949 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103105737 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080685216 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102981665 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094676393 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110613368 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103407231 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08718216 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110982184 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089680151 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094731261 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102153267 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088981316 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102636309 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096648492 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113788599 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104896526 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091531381 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108009816 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12635619 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081656967 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106870618 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09044223 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112465596 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088711062 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.106919549 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.102978703 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081081402 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103524977 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.082310362 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101711145 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077994371 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108328534 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088069608 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114790049 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099930188 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085714219 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104767738 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08695785 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107077685 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.104336377 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08593682 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.1015094 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090748672 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105379301 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091426176 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.100012865 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095476678 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085347332 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110358185 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106825627 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110208323 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106685519 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089687116 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102001418 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087689245 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107584697 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109224035 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092913531 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.105765151 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104998161 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109591578 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101721823 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086584164 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.114584496 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083294929 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10504054 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099519641 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09928515 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100391939 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084620925 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09956223 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11158335 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087133263 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102335405 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081237193 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108770372 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078345942 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106791616 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089187806 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10193886 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11196073 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095100816 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112484543 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110322825 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09411195 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101701283 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086869359 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099170821 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107626613 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.0860175 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109194277 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078102666 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10454246 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086079699 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106366797 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109482939 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082254309 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10639879 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092801167 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109703594 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08266007 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098911991 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104798449 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088152446 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111041417 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091403093 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100580886 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.082612078 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100004445 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.106545595 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.088977788 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106724089 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094476792 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105263401 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.096979547 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085555184 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11192284 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091387557 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101762912 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08489355 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106965124 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102846038 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083203116 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107059258 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086661003 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101163437 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088750984 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103571606 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.101125903 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093789403 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10468135 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08262141 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106112846 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110774114 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087023463 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10739431 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083608739 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109252572 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089906027 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100837812 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102752855 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08339216 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111855991 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086873796 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.100889101 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082082758 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.114583032 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099883294 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087392917 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101733509 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086537853 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107786807 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.086477916 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102047245 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103682829 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115037133 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114572155 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107662376 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089527139 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113197295 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087855913 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104351129 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.08826036 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108020494 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.108512857 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092706882 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107930135 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095502995 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105766684 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098933813 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090375256 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111696988 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083496782 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103886377 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083754681 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105745684 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109953299 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089446809 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.107756169 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082631564 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102755766 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111943588 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087649102 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.106869084 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084316951 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107762292 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084497897 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11466667 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10886395 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09399437 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106585357 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08347878 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11056322 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101361444 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091645119 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.100977423 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08220563 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101627568 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.090714672 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10140041 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105580842 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077831086 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110516371 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093021096 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102339148 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083521499 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10682853 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112178993 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085760692 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105918368 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087277392 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107908862 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116148373 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084616676 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106324231 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094889119 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108114971 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078726833 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108808341 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10270563 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084613114 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101844631 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082428559 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107269412 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118772341 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089598295 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.097983766 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087494507 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101311463 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083632244 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101600452 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090861419 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106031104 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105082095 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094361361 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109146173 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.091006887 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107154114 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.107292518 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.090428558 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108928188 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087867862 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109097112 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087604506 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102649664 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.1054041 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083717965 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104127909 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087131193 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.108422319 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084614891 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108182509 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105073696 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084741874 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105400242 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090129156 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103886545 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085769851 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101893179 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087647304 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103580778 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103199032 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087386572 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101748814 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092281752 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.107286688 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093469139 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102572611 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.10043846 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090309062 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10549054 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.095428848 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108273685 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.108784338 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087039704 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107382593 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08795329 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112371556 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082514925 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113984472 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109509768 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08554668 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106756106 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086162792 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10487431 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084042083 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105523735 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.108557091 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085549702 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103231327 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089494624 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106266217 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084986403 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104587928 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.109169121 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086011124 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105124793 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080384946 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.102545318 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084297778 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107147487 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110699404 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.090630813 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105646135 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083813446 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109519108 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084046684 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100122844 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.116705686 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100338213 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108381627 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112003052 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084034324 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105506776 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095984417 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097284575 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.083297946 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104542388 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08262995 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111768503 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108811641 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.102073779 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103005131 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084022053 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.10059017 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091437845 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102438392 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079510132 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.10419812 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106689562 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087760399 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102502494 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08945869 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106478213 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090199435 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110994755 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10337879 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086918504 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.108013489 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.082858288 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101801207 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084942449 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106426805 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109269829 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083112723 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101208723 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089320061 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105685559 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085464882 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104292515 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086946186 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111065434 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104259476 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087813768 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113414985 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079726766 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106564914 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085682538 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.107282306 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102355546 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089584124 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108122213 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090484052 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111273955 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088831178 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10452975 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104383947 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086235065 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.1074071 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088640082 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108137397 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08405306 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10854564 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112050018 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086712713 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105821868 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084794359 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10427918 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08979739 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.109849119 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106682229 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098234592 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.106273845 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086578438 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110445091 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108250462 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088872213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110226207 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086919298 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11002234 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084505741 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112625102 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104163439 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.091883057 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10623402 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083092927 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103506282 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085257473 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103538773 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109401897 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091109218 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10288358 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084458374 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104826364 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088249111 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11270948 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112538933 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087966384 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106839229 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083616046 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101508784 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090689534 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101196608 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105255375 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087822916 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110555235 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088164903 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104987973 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085180761 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111117331 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11043449 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090023622 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101720594 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089596573 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109163152 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088552749 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105928055 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104374271 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086874353 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110046278 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08730404 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103783914 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112648888 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089996861 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10996289 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086919293 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104627335 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086079877 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.102661299 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090944005 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106926322 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110937247 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.088937736 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104227292 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095701864 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.1041604 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103393051 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094231895 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104443274 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091917837 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103349018 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086761469 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109409787 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109789909 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084419785 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10412592 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083746772 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106698955 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084154973 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102560959 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114426116 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093057079 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10668423 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084230125 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102630003 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084766923 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102561558 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084793369 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109790943 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105715242 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095179552 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103691879 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084171047 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.103020301 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085375992 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107714079 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108429233 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082645456 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103833152 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083602789 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106796589 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092004466 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103455001 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.089205087 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1088648 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106643037 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086385949 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112551392 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082162657 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108504613 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114816609 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.09133253 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10588031 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091445791 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113244668 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.110080176 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084415996 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109342276 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088277187 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105335665 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.091234479 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105736478 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118494818 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08894998 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10375565 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085947938 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107210104 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084742012 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111687098 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110462084 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.091350724 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109691955 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08808537 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119802626 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107391212 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091816693 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106822743 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088139879 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103958114 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105051001 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084852612 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.103613254 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088239582 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109845862 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092300258 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.117823004 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104253921 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096687541 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113351581 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091980572 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102267433 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103276096 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085815669 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.103080942 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091342276 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102666063 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084769198 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102759755 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085750541 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105512802 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11010398 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087357682 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109808695 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085886847 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098838031 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087389306 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.108055184 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086322629 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101321368 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089996924 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.111400416 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111116017 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097669978 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105245355 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087249469 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106473974 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105570617 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084897513 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111389975 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08517881 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107053748 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084936973 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10551219 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090626623 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108920821 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115892413 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087796134 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107935848 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097760168 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11154766 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101551296 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083843014 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111188443 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086450133 seconds)
  done (took 59.706781748 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149694502 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091192587 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100601067 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081171447 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119516764 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104872014 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081828781 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10489752 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08529535 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107753099 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080829437 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101151579 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114108086 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129770894 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118606246 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091501366 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10040911 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085112181 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100975195 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086880189 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11514776 seconds)
  done (took 2.968129004 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107955777 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119499617 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118024278 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121570996 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092148439 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117811561 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117350618 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118211349 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102141388 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11266041 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121784523 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118008498 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093946341 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112993256 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112215445 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095330095 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122368059 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111022622 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.119243222 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.116827735 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095849178 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117561351 seconds)
  done (took 3.278310548 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093808071 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10731157 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090397043 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099755973 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085144749 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099643875 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.093302865 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10313376 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108671143 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.084009609 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.10405825 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.084378124 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108052269 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080657344 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104364273 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08405632 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156191861 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110017747 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.109025682 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085959266 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.103438298 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087441727 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.10296858 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08500273 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103300266 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.098245353 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10648934 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.105302926 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086279271 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.103802269 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.089682196 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.103049097 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.087013433 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105870885 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08425646 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104405031 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086029447 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.109269737 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.103289015 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087100916 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.105669241 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085387417 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109260846 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.08837145 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.106105982 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084371184 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.107399501 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086479581 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.10105142 seconds)
  done (took 5.625021233 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.119822269 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157856598 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089609071 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14875178 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123854551 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119814637 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089793471 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12837095 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105430011 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.108826034 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105637542 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121986493 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109162741 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.115010735 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093550589 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109531452 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091367692 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104232764 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.113117256 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086106103 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114804996 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112614264 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123546311 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100918796 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11346805 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10812817 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086652863 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114739099 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119257024 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.095893385 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11540942 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116022389 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123283415 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.08920214 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104833239 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092186548 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.126406868 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109821424 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.111208412 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084643982 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111929114 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095725936 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114004121 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12579104 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111012998 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091150791 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109585473 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083468162 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120991653 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.112318579 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118713798 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104193364 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114496509 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109568217 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095328499 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124549008 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109845711 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088939474 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113495876 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120373399 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084339652 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114125832 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121792447 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111029403 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.099106224 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12150257 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111734819 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093413071 seconds)
  done (took 8.420431331 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117342417 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.117670666 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12861819 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12862095 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098002381 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.118062223 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118487287 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.116991453 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097364748 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123328893 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117408577 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163819236 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.09188054 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121210922 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117156706 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117448941 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.097801085 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117773173 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.116950696 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097669654 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117254562 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12757415 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117971169 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128248366 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126022189 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091645 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117012271 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117449208 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108444679 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117523299 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128000427 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.117775389 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097581704 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127574671 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126492921 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.117826907 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.088401396 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117493413 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117077387 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117383501 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.092484438 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129183758 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116361397 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.092196566 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117668072 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116903593 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128481235 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127232406 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100818607 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.123633425 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117062094 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129162819 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096629869 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117281354 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.129398613 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132048263 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128690954 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129051601 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098195943 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127691785 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128568137 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13330289 seconds)
  done (took 8.092909746 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117737335 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120958468 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.127867061 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102685222 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084825413 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11499186 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084980383 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104044824 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119525712 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101407872 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123969813 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114315257 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117703549 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102325979 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114857131 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118643332 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113861273 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095269045 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121659079 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114827276 seconds)
  done (took 3.049300685 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095548955 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128078158 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087576414 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114799269 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110259208 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094395086 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109852433 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109832622 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089259403 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109788539 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119183457 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099457383 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107627697 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114212495 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099845243 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114969695 seconds)
  done (took 2.53909261 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099585641 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128733803 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126673605 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087147443 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105824861 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103689247 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089683526 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103291986 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083058547 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123661553 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108065942 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.092909297 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110064332 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085337831 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103825302 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092768273 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103723888 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.105314309 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.091118802 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127417478 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.118086561 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086794954 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111065838 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089200001 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108514201 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113113558 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.089156096 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105687214 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085016003 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111573007 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107992755 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095310813 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103538277 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085384312 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105138378 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105102663 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.090190008 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.110778801 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.093794889 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109369022 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105230581 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.086831602 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.110423542 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.088808528 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103611158 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089584527 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103941848 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113888525 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.086401079 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107211927 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.08958488 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109555467 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108508329 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098167612 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11195814 seconds)
  done (took 6.448045584 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102588669 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111307614 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082711935 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105572929 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090574601 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109793837 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11188226 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09063026 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108973768 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084987338 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109611966 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112109972 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090110644 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111470003 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089006611 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111685144 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082764305 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108950865 seconds)
  done (took 2.654606893 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09343412 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107699094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095694546 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108656459 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087379692 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111356791 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103376216 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085704778 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105662423 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087992173 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107858009 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090278333 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106397861 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089880998 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107886782 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107962097 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.09079565 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106044431 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088285621 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103908189 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090277652 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106308106 seconds)
  done (took 3.025950134 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123852654 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127785438 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095330813 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.238126649 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106033896 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135107085 seconds)
  done (took 1.669230654 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112131672 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145837084 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108825119 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092144773 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120826961 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112984493 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093086032 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113434122 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124825142 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124681575 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093533015 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124138958 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125315169 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123333877 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100129543 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121118184 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112779227 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093006229 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109784795 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133166467 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113613195 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104171768 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114228789 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1133216 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093757492 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124568163 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125857859 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126288633 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113303963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104004401 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120705661 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11326113 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124401925 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105816705 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111880787 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123896889 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093700669 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133420034 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121012632 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124091314 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111930589 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100824159 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124507127 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119477732 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124538044 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093084431 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120546046 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113717416 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09325954 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139716387 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121861447 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123536666 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12054295 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124708622 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104689927 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140134789 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125876698 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124904476 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12105948 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126861272 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124005141 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100581778 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124447168 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126926749 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122543835 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124280177 seconds)
  done (took 8.531407815 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127527188 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11105204 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114202087 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125644548 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103806223 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113157459 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113844532 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09252503 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114437191 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109337461 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157786221 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093464001 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125054073 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124896208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113008195 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092434709 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114282508 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125015942 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089295169 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.159579537 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093439347 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12476147 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125315033 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12538515 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126388339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100072725 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113741433 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113615359 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093053672 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114024262 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120289561 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093140391 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125941406 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109781513 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125290662 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093516049 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114149448 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121355234 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09434948 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121456416 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124891544 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133242275 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114010702 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093899002 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126812506 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114342342 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093929447 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110435139 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113494618 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09029344 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127542944 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127104624 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126835759 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12450529 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09296781 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11505418 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113158517 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094192485 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114926281 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121197942 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124530077 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093299896 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139832464 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114430179 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114687866 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125347218 seconds)
  done (took 8.399596819 seconds)
done (took 160.071666329 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103909728 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.142219483 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100311122 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171334104 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108358428 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121275178 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.141210809 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102567371 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108741767 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08795775 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109805976 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110765075 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15286634 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.108218443 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088348395 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110544137 seconds)
  done (took 2.712622721 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.202870687 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.27468238 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104639951 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.109013065 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.114113849 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.087950032 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.107242264 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096030543 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109624599 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087801854 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108972566 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087915274 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.107506534 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087408848 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110630927 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108924693 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.087982504 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107966174 seconds)
  done (took 2.951619701 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116222529 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148526814 seconds)
  done (took 1.118107183 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122221068 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186204476 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302952829 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155955511 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122627576 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130599131 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158736329 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133216832 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.207901749 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127477724 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126908605 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120069893 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.123670804 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118639627 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118080873 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09948117 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145678753 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115802033 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097348399 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.120008323 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142941167 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088347158 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119035182 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11666683 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.192630321 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.101935935 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109470468 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087175821 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.1209574 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.117269048 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094850792 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129962315 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.124342327 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.170200894 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125987578 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.163775387 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.122796642 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113681458 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09675187 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.114439977 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121824504 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100565454 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.128111741 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120154155 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089441272 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121874916 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086542634 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108979967 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116681484 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.10056151 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116799684 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115217917 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16251389 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120618459 seconds)
  done (took 7.748833756 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.832059524 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164079979 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118148775 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.912972132 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145793319 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129824821 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.812780806 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142679646 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244183638 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.805814295 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13625563 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100533937 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240621292 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.264263376 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.96400513 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.321778798 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.691022713 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108102783 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.143191796 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159512009 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119665386 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137745499 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109921516 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.45499236 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.096797811 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113864186 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096308664 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122205649 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166620287 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.115038278 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092975856 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206710459 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.254582527 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212163579 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116271583 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091171598 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112483066 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.176057348 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274920229 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.2238616 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182497739 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088233422 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113015959 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101007961 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131417479 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10945769 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.169317312 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.200644302 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.178270943 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115118129 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100989465 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121280237 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121065811 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.171887405 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123080151 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.32686105 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323405337 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091137157 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12079272 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12722179 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249480896 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127258997 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231579645 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137687807 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198128447 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113024636 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812403209 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173857137 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112465642 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097540621 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120601763 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117191078 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10046297 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171324485 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.412381947 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124587968 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115473479 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090695566 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234736939 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091624744 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112586901 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168046084 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117702138 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11883955 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103796439 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1246578 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175382044 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257482973 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101813753 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121353476 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117222391 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102749407 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117494913 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216983376 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227303463 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.189302774 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.218388071 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122539849 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.170450121 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172687351 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122902146 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177531476 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120049232 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126562029 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100660625 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224231244 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.149095969 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126888141 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116843466 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097440526 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151991936 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.117356568 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118783357 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.177616627 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.48598395 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.175315412 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088273451 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117449041 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121012672 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.167478646 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118582215 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250069084 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122576632 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17529389 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120106759 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108828447 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099334958 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.190572874 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102779444 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122361437 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12260864 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098403065 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.261176135 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202914486 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126112432 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245569232 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186573127 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119500552 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178567776 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119774659 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173898959 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12051023 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101979683 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118207425 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808042899 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.102590762 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120671039 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116684929 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192624401 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0912014 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126878975 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091011008 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110693116 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822968706 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093064802 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.124663118 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127335786 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097491519 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120471068 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118404091 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094875485 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.193266808 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24306876 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10385669 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119368224 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.112302869 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.167493201 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095660402 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.114623034 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.113203886 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.09396876 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121225397 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09442466 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127751639 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17624146 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.190369091 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.23096693 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.544995914 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113803173 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091874719 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238410151 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114061466 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298624701 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119093723 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.212608078 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19292174 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101373891 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323957885 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.194918294 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195940084 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094298592 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.202146786 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091127562 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119060216 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.170943672 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114002607 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096988483 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.190017236 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103637576 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125269854 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.969326554 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11333511 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235574473 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087725679 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.199515034 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095388414 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12303546 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306030587 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11359632 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107479543 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.192519821 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094880072 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.11468272 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.860317173 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.115295527 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121342919 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100076516 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230598375 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.170300567 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120842262 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120521206 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100049498 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.191015903 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.217006032 seconds)
  done (took 44.981471357 seconds)
done (took 60.361008812 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29144275 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219190413 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263202974 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178311485 seconds)
  done (took 1.907132122 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180784977 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151429249 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125930137 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109377942 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15578058 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087047886 seconds)
  done (took 1.691358814 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.37487306 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280137119 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24582093 seconds)
  done (took 1.787705002 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253215199 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274232368 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331458767 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.423783036 seconds)
  done (took 2.263469558 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.239245105 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.144500106 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.129246502 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.126023306 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.223590158 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.266786046 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.16056157 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.192843888 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.141822047 seconds)
  done (took 2.551827901 seconds)
done (took 11.08770516 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.143091451 seconds)
    (2/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.223151468 seconds)
    (3/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.174735385 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.131796158 seconds)
    (5/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.279368615 seconds)
    (6/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.239754715 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127313496 seconds)
    (8/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137903728 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096747718 seconds)
    (10/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.234487552 seconds)
    (11/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.132255957 seconds)
    (12/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.238577251 seconds)
    (13/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.100872746 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.204902108 seconds)
    (15/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.253259418 seconds)
    (16/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.19720579 seconds)
    (17/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097699468 seconds)
    (18/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.144409206 seconds)
    (19/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097415418 seconds)
    (20/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.11842824 seconds)
    (21/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117601763 seconds)
    (22/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097135445 seconds)
    (23/286) benchmarking ("sort", Int64, true)...
    done (took 0.23423429 seconds)
    (24/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183098005 seconds)
    (25/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214396141 seconds)
    (26/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.095006445 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121802934 seconds)
    (28/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.207057831 seconds)
    (29/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.229743457 seconds)
    (30/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.178584854 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.138525596 seconds)
    (32/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.188563766 seconds)
    (33/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092769733 seconds)
    (34/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151466728 seconds)
    (35/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.125531973 seconds)
    (36/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.135954202 seconds)
    (37/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.153324955 seconds)
    (38/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168944055 seconds)
    (39/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096884815 seconds)
    (40/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.092468274 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089851576 seconds)
    (42/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.264503768 seconds)
    (43/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117960068 seconds)
    (44/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096673003 seconds)
    (45/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118467754 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096207662 seconds)
    (47/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.255358012 seconds)
    (48/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.15876633 seconds)
    (49/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.128855834 seconds)
    (50/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119452074 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095680972 seconds)
    (52/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.202369487 seconds)
    (53/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.188918154 seconds)
    (54/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.17260146 seconds)
    (55/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.070856164 seconds)
    (56/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.1954289 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.128295822 seconds)
    (58/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.167611397 seconds)
    (59/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.140697366 seconds)
    (60/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.191193839 seconds)
    (61/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.124761398 seconds)
    (62/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088454131 seconds)
    (63/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.195555274 seconds)
    (64/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068876463 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.137736968 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.07075432 seconds)
    (67/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.128171596 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.215822279 seconds)
    (69/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174692279 seconds)
    (70/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.117478501 seconds)
    (71/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114008997 seconds)
    (72/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068641652 seconds)
    (73/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128134629 seconds)
    (74/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092839793 seconds)
    (75/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.187143101 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.141635283 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085859499 seconds)
    (78/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.140275473 seconds)
    (79/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.072301436 seconds)
    (80/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.12072916 seconds)
    (81/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.098097681 seconds)
    (82/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.092501418 seconds)
    (83/286) benchmarking ("sort", Float64, true)...
    done (took 0.241423418 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.138028966 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118961728 seconds)
    (86/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.123642593 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.088181563 seconds)
    (88/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.118535717 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136336598 seconds)
    (90/286) benchmarking ("sort", Int64, false)...
    done (took 0.089193096 seconds)
    (91/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112184807 seconds)
    (92/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.174909999 seconds)
    (93/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091242425 seconds)
    (94/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.151645816 seconds)
    (95/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088772097 seconds)
    (96/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.106228876 seconds)
    (97/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.161112661 seconds)
    (98/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.0949716 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.144338185 seconds)
    (100/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101802888 seconds)
    (101/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.101479882 seconds)
    (102/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.189476503 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.11134489 seconds)
    (104/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.223911425 seconds)
    (105/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098437068 seconds)
    (106/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123847554 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089557898 seconds)
    (108/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126210083 seconds)
    (109/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08885094 seconds)
    (110/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.148272294 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.135329159 seconds)
    (112/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.084130866 seconds)
    (113/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.190320235 seconds)
    (114/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.087252426 seconds)
    (115/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.095222474 seconds)
    (116/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09597326 seconds)
    (117/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11291128 seconds)
    (118/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097395142 seconds)
    (119/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.141894783 seconds)
    (120/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091771384 seconds)
    (121/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.1402991 seconds)
    (122/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111492181 seconds)
    (123/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.06952599 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 0.190706827 seconds)
    (125/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.12151993 seconds)
    (126/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115556617 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121176951 seconds)
    (128/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.181457182 seconds)
    (129/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.153169901 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118717594 seconds)
    (131/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.068445916 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119314294 seconds)
    (133/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138163637 seconds)
    (134/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.10200078 seconds)
    (135/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068614463 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.124879822 seconds)
    (137/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.174257371 seconds)
    (138/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095279515 seconds)
    (139/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.139352 seconds)
    (140/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.143938895 seconds)
    (141/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.071878691 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088561288 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.120079201 seconds)
    (144/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175514392 seconds)
    (145/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.099504412 seconds)
    (146/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119090906 seconds)
    (147/286) benchmarking ("sort", BigInt, true)...
    done (took 0.246393071 seconds)
    (148/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.123804054 seconds)
    (149/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119479551 seconds)
    (150/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103605168 seconds)
    (151/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093495671 seconds)
    (152/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183459904 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098711102 seconds)
    (154/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.123105964 seconds)
    (155/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068988151 seconds)
    (156/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.121647266 seconds)
    (157/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.135561804 seconds)
    (158/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111393099 seconds)
    (159/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.146045249 seconds)
    (160/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115489281 seconds)
    (161/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084869449 seconds)
    (162/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.145089555 seconds)
    (163/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148631188 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093565783 seconds)
    (165/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.126567419 seconds)
    (166/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.070863777 seconds)
    (167/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189759955 seconds)
    (168/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111487887 seconds)
    (169/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.164327209 seconds)
    (170/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.141085282 seconds)
    (171/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125674606 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096562691 seconds)
    (173/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.11185338 seconds)
    (174/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077916535 seconds)
    (175/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.091549496 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070652567 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099864435 seconds)
    (178/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.096856772 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103663473 seconds)
    (180/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.103273378 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109080957 seconds)
    (182/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.147112662 seconds)
    (183/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.124805692 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.45564175 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088494461 seconds)
    (186/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.095864714 seconds)
    (187/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.135764817 seconds)
    (188/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092583055 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098465522 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119959104 seconds)
    (191/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.071748214 seconds)
    (192/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.124869806 seconds)
    (193/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.245727478 seconds)
    (194/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068944293 seconds)
    (195/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.069880804 seconds)
    (196/286) benchmarking ("sort", Float64, false)...
    done (took 0.18201627 seconds)
    (197/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130137088 seconds)
    (198/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095172653 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117994012 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099165366 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111747585 seconds)
    (202/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.071408256 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111060267 seconds)
    (204/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.153768138 seconds)
    (205/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.095750071 seconds)
    (206/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094876169 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.1111856 seconds)
    (208/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095714707 seconds)
    (209/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115784494 seconds)
    (210/286) benchmarking ("sort", BigInt, false)...
    done (took 0.228505246 seconds)
    (211/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.092138851 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089736779 seconds)
    (213/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.076604081 seconds)
    (214/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.174838315 seconds)
    (215/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069193561 seconds)
    (216/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.093263398 seconds)
    (217/286) benchmarking ("sort", Float32, true)...
    done (took 0.24260615 seconds)
    (218/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.0699722 seconds)
    (219/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.114398351 seconds)
    (220/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089028242 seconds)
    (221/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.093265598 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089398653 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110797134 seconds)
    (224/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.071199001 seconds)
    (225/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.06953685 seconds)
    (226/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.091390065 seconds)
    (227/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.100580227 seconds)
    (228/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167241534 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.111082763 seconds)
    (230/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090819875 seconds)
    (231/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.094445525 seconds)
    (232/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06953434 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137616979 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090085432 seconds)
    (235/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.112964654 seconds)
    (236/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.070591914 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117861074 seconds)
    (238/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090018138 seconds)
    (239/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.115311317 seconds)
    (240/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093702466 seconds)
    (241/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.092071288 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098908801 seconds)
    (243/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068852209 seconds)
    (244/286) benchmarking ("sort", Int8, true)...
    done (took 0.23106341 seconds)
    (245/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.114712565 seconds)
    (246/286) benchmarking ("sort", Int8, false)...
    done (took 0.198852307 seconds)
    (247/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067650798 seconds)
    (248/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.093063883 seconds)
    (249/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069623728 seconds)
    (250/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13833745 seconds)
    (251/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.069527568 seconds)
    (252/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.101384008 seconds)
    (253/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.081891923 seconds)
    (254/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.068454738 seconds)
    (255/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138397329 seconds)
    (256/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.069088573 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112488001 seconds)
    (258/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095245767 seconds)
    (259/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120491177 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096219059 seconds)
    (261/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.09483155 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08730559 seconds)
    (263/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.101347791 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08824863 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109784172 seconds)
    (266/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.091449301 seconds)
    (267/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13686022 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120704096 seconds)
    (269/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098688672 seconds)
    (270/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111344096 seconds)
    (271/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094715503 seconds)
    (272/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117088892 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088841596 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117885138 seconds)
    (275/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.069336835 seconds)
    (276/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119205761 seconds)
    (277/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089998533 seconds)
    (278/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.116969196 seconds)
    (279/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06866482 seconds)
    (280/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114711634 seconds)
    (281/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090216621 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117786654 seconds)
    (283/286) benchmarking ("sort", Float32, false)...
    done (took 0.15853318 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.096041152 seconds)
    (285/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071913095 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111977625 seconds)
  done (took 37.052583813 seconds)
done (took 37.946595849 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104011388 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154122549 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098696681 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.14251352 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125098879 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093214931 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120548263 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.124136818 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.101987226 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127179703 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100404396 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094555247 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098639297 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122485871 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.12164055 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119933533 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125072029 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.096083897 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121040716 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110537619 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.098161821 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.1108078 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.090860432 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.093659286 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100324707 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118403406 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095439371 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121911704 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08816452 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111995908 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094034772 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120222335 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08834453 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126345912 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.118510915 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097474621 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.122531803 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.099760822 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114136156 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088568661 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120522091 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088212253 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119264608 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.119431126 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09459254 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116812599 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097810203 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12533145 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144773733 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093564433 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.120236484 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099511539 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.122767241 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.096327483 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116615003 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097828874 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117828143 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143813268 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099212493 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117635584 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.096452143 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.121338417 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.094725022 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.121710743 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121196395 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100287098 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123712431 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095113607 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122701545 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.095718873 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.11236479 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120681853 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.093043866 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111777567 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099024975 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12308523 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.089408322 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118369092 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096404783 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117305885 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.088377496 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11555154 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.091477817 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118592158 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091535205 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095172906 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093715139 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118712201 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.088394356 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.122330155 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118825075 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096687341 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114626809 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101367491 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112502983 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095460755 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112585558 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089354318 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114652548 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094623277 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113113794 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091533497 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122220655 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090412673 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118605821 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.1255643 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089369212 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118349817 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.089445157 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112336112 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.105185967 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123907354 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088888468 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117693669 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088077155 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120301273 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111290973 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089559559 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112913496 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089365178 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119137834 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.090114564 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115288137 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097415457 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127472676 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089477105 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116440376 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09321822 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112678097 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094775755 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112801873 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089029168 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115163972 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079784124 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115617807 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089364301 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120916432 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091381051 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.122513149 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11492552 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099344957 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.117321326 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09587617 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117738314 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088611889 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.099525164 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094922264 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115165223 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09128078 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112482967 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.090990865 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.113187847 seconds)
done (took 17.30540087 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090942382 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189159761 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.158328411 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148098798 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109961582 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11455716 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123971605 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.146540305 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091901582 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146038355 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.13757727 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110075035 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.153450294 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088364399 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114134747 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093070096 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115943807 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.130194955 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.129432135 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134971309 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.169549805 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113164471 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149520233 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.114051457 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123745982 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.14197927 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090735393 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116874465 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094538482 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130181707 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109385282 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117222337 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089693997 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136349402 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13088917 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.097655831 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.114398365 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.097661609 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.113707331 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089529011 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.144133575 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137529024 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119535128 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.095798355 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118162718 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.092408015 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114855625 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.09896434 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12585549 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11784486 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.106529518 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159750822 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.1182982 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124915254 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.089843896 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124321899 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.099575989 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116411255 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.09089672 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.116543038 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.089923878 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.1172272 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129388182 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144348459 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09390344 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12472117 seconds)
  done (took 8.817383831 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124362158 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143797828 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.131997341 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108506152 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114204946 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089646668 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11447088 seconds)
  done (took 1.776895342 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089785828 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140239135 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116108018 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140710739 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137866208 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.117368117 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120640681 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090801534 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135600757 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116538018 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.116200903 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156489207 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092510151 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.123277559 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.143074408 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090633519 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.14182156 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08986522 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119111249 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142934691 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094474452 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134635848 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092170916 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115431765 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.133676411 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090844269 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164284329 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095417944 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113485253 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11953819 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089602324 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.154599882 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.134046196 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.099197713 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115643701 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110529568 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.133485345 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088961496 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132394079 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.120988497 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.109370372 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117320084 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092903986 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.114327486 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095711674 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.128829527 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094829164 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116414813 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09331018 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.140182391 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115784231 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109590358 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116053583 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095586358 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117737949 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094741767 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127246898 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092380911 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140837826 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113732237 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111696427 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135351984 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.133996344 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11128055 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118232735 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109918459 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.133977088 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.094285995 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117385606 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094988365 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136270529 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113779124 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.094349037 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.129733571 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09378721 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.143776054 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146240313 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093709914 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.129555233 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091964605 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.119070891 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091800454 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.142348917 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120191502 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09269624 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120608361 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094287749 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114143628 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.093356774 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119440732 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090257823 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117657127 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094628784 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117178741 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094267817 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136574662 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11636884 seconds)
  done (took 12.144915436 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092864726 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116443791 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094451496 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.118061269 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092822136 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.117103553 seconds)
  done (took 1.59258181 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119141805 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119677192 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.13259767 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097638952 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158092497 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135329419 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111746908 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126275873 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.135654132 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105394492 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.134596485 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111755414 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142729521 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123858769 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110522227 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123081917 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.13537706 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102726554 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130415894 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124504637 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114939746 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12390288 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09941488 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.137807712 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120692922 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099132852 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129040169 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130490022 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104998564 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.126322572 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123720574 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.09621146 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.124113502 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.101323572 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.137262719 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123389449 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098239279 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121481665 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129390795 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.096312719 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137082238 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098536021 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129275276 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122479711 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101806231 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124434147 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121497918 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103565002 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135832221 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120952424 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096740219 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122465254 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095994892 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122491656 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124415808 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101969857 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122194958 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111395585 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12454443 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123897109 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.096426185 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120972245 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126746651 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096392033 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.133440761 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096398427 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123812428 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1252849 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099437098 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.123459734 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096384823 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121072519 seconds)
  done (took 9.485833988 seconds)
done (took 34.760776813 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.692690287 seconds)
  done (took 1.653744439 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.836177861 seconds)
  done (took 1.798645516 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.201469956 seconds)
  done (took 18.19301711 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.511436487 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.602701297 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.995170372 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174542303 seconds)
  done (took 3.245461316 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.94765289 seconds)
  done (took 1.932593684 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.288450318 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238886408 seconds)
  done (took 1.494083774 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.778245453 seconds)
  done (took 1.756295056 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.444249916 seconds)
  done (took 2.416841223 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332726273 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189387361 seconds)
  done (took 1.50838625 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.563719043 seconds)
  done (took 1.540957733 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.092386957 seconds)
  done (took 11.074397172 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.272782072 seconds)
  done (took 1.262556132 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307253396 seconds)
  done (took 1.2887031 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.533627634 seconds)
  done (took 4.518364842 seconds)
done (took 54.656689379 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101364589 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12947573 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104580189 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126308659 seconds)
  done (took 1.438928735 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107440305 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122731442 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10645157 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123000913 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132055503 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097483635 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125645138 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.104340455 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123934074 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.124484675 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.09889455 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12212035 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101031377 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125398472 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096339499 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125499634 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127517973 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.09852594 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127210325 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.099057607 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121065279 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126345116 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.102313801 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121364188 seconds)
  done (took 3.745724267 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102223032 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121519834 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099429089 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121024098 seconds)
  done (took 1.429236033 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101552611 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13401242 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108277978 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127002489 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133862357 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10888269 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11987629 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094801747 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121539241 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101920689 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.118316416 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142846805 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109527323 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12809739 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103798104 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117447608 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117953142 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109188505 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.128316418 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103283263 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120910441 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101870251 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118543401 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136893409 seconds)
  done (took 3.793857884 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175065364 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13041827 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141896884 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097864841 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164503432 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143549824 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091284763 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143427947 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08996522 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134051212 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.121230743 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136372931 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131542756 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.090011757 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116048376 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.115598625 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104724043 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129793386 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093654916 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130138909 seconds)
  done (took 3.4678385 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100173048 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119753708 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090367239 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119287217 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.101880768 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122876696 seconds)
  done (took 1.646711072 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099133296 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117502178 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095275441 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119435918 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096609823 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116243489 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090743545 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.117851382 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092447605 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115542052 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093284894 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115691359 seconds)
  done (took 2.261653846 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.517194985 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123578079 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.123200919 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091102602 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.12848621 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091521439 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133976757 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095305809 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.146655305 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089699109 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.119435073 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.120470098 seconds)
  done (took 2.772649375 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238929262 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127710868 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290208617 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361527965 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179829477 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171153678 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.306298276 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168787677 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.215193516 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159730724 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205001815 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208179275 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133160218 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236632002 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118099913 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.148810715 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223358488 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257017378 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157460781 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250381053 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175916339 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172013696 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185379704 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156964793 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142773802 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176152349 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123147434 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107328159 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217722655 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184305278 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194660142 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167714941 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16012821 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238661594 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267571129 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200497118 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287230346 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13732778 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.174155327 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173582598 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266779165 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11931293 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244477775 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167982564 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133942117 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21409396 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164069569 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188521805 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150882177 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14618979 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233299324 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20178687 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203767223 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142610386 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310273351 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154678735 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167845646 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222188015 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220522023 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233561279 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200079256 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122884123 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193456954 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198058993 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220050485 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135634561 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.216205864 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149962694 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183480523 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201363524 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183436816 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17430709 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.212855007 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140395433 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17321593 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177757392 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174099087 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269729703 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192576101 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125596976 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172341178 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154226177 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107762456 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196867797 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127909849 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223457546 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147230967 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.168414599 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242517468 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134845329 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164271721 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219849425 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181594234 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152135765 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085707664 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158764168 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158945769 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177859535 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144360203 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161757034 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154479853 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106837999 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173693529 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127049249 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189827123 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.120548399 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172749305 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189023627 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130441102 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167627326 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154636437 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126451469 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216757993 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202113887 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144143394 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136409714 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214521497 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185062428 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145177751 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181539709 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237386525 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120382405 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152809468 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235603143 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222452685 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147209802 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23366753 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125549001 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138027256 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136182224 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188438041 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160423508 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165981914 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135934553 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.187375873 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205052497 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128315892 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141056165 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205918264 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137843232 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135813953 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150165763 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124080868 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139754249 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146208813 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14847213 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180963297 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182586368 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158017564 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170832136 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150318301 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249670464 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14350131 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12793053 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151995128 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123608036 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204030144 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229567628 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106611843 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233156952 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173757885 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203855441 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172233396 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138340779 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182348452 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133499936 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096121329 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22895616 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170384747 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167328794 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198822049 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22691899 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189240217 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187721284 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17079871 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207057244 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.142898861 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157538783 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141279878 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164975106 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162585423 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125787401 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.116047666 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137153286 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154539846 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146794177 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136894305 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20417012 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176817024 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220840005 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16307489 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153693404 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18791587 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105880799 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20509248 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.18107202 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150731019 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.201515833 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198231466 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222766427 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119556225 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238867341 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123402062 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102079166 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.147302791 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172561137 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136975419 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111438926 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195116408 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187099596 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181770598 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178016155 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240209267 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185189403 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196596492 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12474528 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143003202 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208208421 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182805548 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.158875565 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140664752 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156384593 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183389411 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15295717 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245095653 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172217887 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180623015 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204117991 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.154181523 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135341825 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152687833 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175625649 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15981177 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17670342 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15032982 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113362982 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158105288 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133541289 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164674491 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210534923 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137468342 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212535659 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.153002042 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195475595 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130546939 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169256414 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165206449 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166448452 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082922614 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173340842 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228105425 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147121315 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165484436 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187174546 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106528149 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.340088271 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208689758 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19324916 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14140257 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160580168 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166277477 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165945348 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168740916 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182711968 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164434054 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192077288 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16211392 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140068653 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1402606 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12401811 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157068036 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136892205 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150806021 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.181460874 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140963025 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187095144 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151253558 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162537535 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177776392 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153842091 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119174755 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154047059 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250675253 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189842378 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223862059 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12515569 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179315202 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236778496 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100877486 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135827568 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13824889 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183601763 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139841924 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200283396 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192938768 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23039885 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187185804 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177259181 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142590275 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122375468 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161578594 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172992989 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210049408 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150254458 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152718535 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201637013 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140162766 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134422614 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170064101 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292858206 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148932119 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191482196 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081075028 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.310126519 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103375821 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137166454 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166495232 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189796448 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139521365 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.156085669 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197165684 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127963144 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166752693 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154001995 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224252529 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218488573 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236483451 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188411619 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.135938142 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16220262 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173803876 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189267211 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16370454 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140908431 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192037572 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199662092 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197996268 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.146077858 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172701085 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171808272 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16268299 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226159105 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109953672 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237038451 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137014899 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201211245 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15793834 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142148625 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17886547 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192868301 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145249671 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212273615 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189052288 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138105897 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109203468 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165857199 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210346498 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124049467 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.131215434 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183048851 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128503511 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202503727 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272281928 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137646051 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157165372 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149517369 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113576973 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159998343 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163972503 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141879685 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166708586 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201392119 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138607764 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190665892 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239960593 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175513731 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170845012 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148129145 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.715064571 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10627323 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226384771 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123473778 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214986193 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124577392 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204732385 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16248253 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170960259 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204565992 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162358135 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235024874 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199108391 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.211850061 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106880715 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192204152 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123325917 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14776747 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157400948 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172214204 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163329163 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150224733 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.183539987 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160151136 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.13886404 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141698534 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20598628 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151045794 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187440843 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183896779 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141496783 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178270908 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195960315 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136850088 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.186011807 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217730504 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116875161 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152773017 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138674944 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.15574819 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27454955 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099981361 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215144781 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191931888 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163055009 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172733079 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150552573 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199964967 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189279412 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194246499 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14739092 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160524443 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160346779 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112316041 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.135145838 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159705893 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171181762 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.15433814 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16500154 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142843416 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221846461 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099102389 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148864111 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289843089 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202297079 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220390956 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139805283 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110215925 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164569217 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151286278 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18179755 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21194912 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111409922 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139420403 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139031768 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159355473 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114962041 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16103321 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198849751 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163124782 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238346449 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112403274 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.2845121 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143540056 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158968621 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090761222 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13714162 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155300875 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149099707 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154576241 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198182292 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275329408 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14958143 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10991976 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156376421 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128586055 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111575843 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167693091 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166694935 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212607028 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118257013 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111619636 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162292712 seconds)
  done (took 84.112261067 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172587478 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.137361514 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151510009 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204882714 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.182579905 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295665836 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.21285078 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25923766 seconds)
  done (took 2.696490415 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.096438448 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.154699363 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15910507 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.137652768 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093747156 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122667089 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.358375764 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13607623 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093414708 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.150424331 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176187326 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09624917 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.638454202 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.123486321 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.122812574 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.15758032 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.118700899 seconds)
  done (took 4.009658238 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.25740968 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.480628307 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.084356499 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19891081 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.180098664 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121185782 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.695446498 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.119903351 seconds)
  done (took 12.221529701 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126181633 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147851521 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.137538822 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.16564227 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152742006 seconds)
  done (took 1.821862606 seconds)
done (took 126.395958821 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100100461 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130985746 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100752969 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132431787 seconds)
  done (took 1.54141384 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099215943 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072048943 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102960362 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076170849 seconds)
  done (took 1.436162459 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.197096953 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.171357273 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394336562 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073369499 seconds)
  done (took 1.587801051 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.116244403 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135363427 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106912177 seconds)
  done (took 1.456609922 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.108798973 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131259686 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105277788 seconds)
  done (took 1.440435508 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108839161 seconds)
  done (took 1.204264767 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112367139 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.142340462 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114920598 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.141125172 seconds)
  done (took 1.606253175 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100311048 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129114658 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114424182 seconds)
  done (took 1.438118761 seconds)
done (took 13.167345464 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108649831 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.42727752 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.419591605 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11172048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726936747 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382385491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04348017 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148511388 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171671545 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095847676 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141443571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673129156 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.034503085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.37593601 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.99242389 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467602618 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702707603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094837109 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121457329 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095780693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.027087904 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094028869 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123961926 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094326219 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704937242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428716427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09579819 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.467875176 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09447908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131076314 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.40935788 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096688477 seconds)
  done (took 17.187414852 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100831053 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183045476 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133480325 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096814331 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130688138 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095922749 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126126028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095360185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185879126 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12403223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143504161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095061918 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128512445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097539222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144331508 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09484314 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125618295 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12267954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095799548 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123963354 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113683789 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12307394 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09595068 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123602917 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09670084 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136578561 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124958804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094829251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12412069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103616703 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126589865 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097101133 seconds)
  done (took 4.903212853 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147030836 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191017048 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135506005 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128541303 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176626301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125338453 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20225638 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15012416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189898513 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096708491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142621983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094182484 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158735622 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124619745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117567645 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123682725 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096690422 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123894761 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123147239 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09709185 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142567716 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094734684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124874154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094091882 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12534789 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.139067867 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09713497 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123382405 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094462051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132517907 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098018379 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12526559 seconds)
  done (took 5.237271333 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099384391 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127938144 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112068152 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140551117 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096355883 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127377977 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.099642007 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12667938 seconds)
  done (took 2.033402953 seconds)
done (took 30.456547114 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113105528 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128616773 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108361089 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136974344 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104604393 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136804465 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092706183 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135321835 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.136007336 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10481872 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140133378 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.094766954 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125342375 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094087053 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137006644 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099197999 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.137198993 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.132692989 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.110002623 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.137137108 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097039184 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135518551 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104050136 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.137949146 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137288944 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109372514 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139653642 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101217688 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12537921 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095852667 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129354768 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.107360577 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125970856 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.139115441 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099738203 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.127950732 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096362461 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.127576938 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.108357132 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.135141228 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100637378 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.136307205 seconds)
  done (took 6.113703287 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112793691 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144452746 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108644198 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082095807 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118687234 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082246007 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.141762006 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080206304 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111671392 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113204365 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104519925 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079848868 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079798602 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10309825 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078621373 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076384059 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110434685 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077087736 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078587297 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107422015 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081559505 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.103019615 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081545253 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079621008 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105633179 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08315027 seconds)
  done (took 3.633232481 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102378421 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.1432345 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115786906 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.177701795 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158316276 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102129375 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137613806 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141675227 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111410624 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122347561 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098804225 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.153403231 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112662342 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.132045522 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.125631393 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.109739915 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137342876 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096549172 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.13470952 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113962176 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141315884 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133717133 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113321599 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134896821 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094635849 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125981257 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.1013871 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136609147 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.13052497 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.10509454 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.130169854 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.098327155 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125554954 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106044483 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.130616227 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125235251 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115791237 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139041217 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104742784 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.126454127 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102056195 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127423236 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144563168 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134611961 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.124052303 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102886744 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127838155 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134155377 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097712696 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142613609 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105202091 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.124116308 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098492752 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125676931 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095753013 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140656542 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096753922 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.126715851 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133320755 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.101348575 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136219169 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100625101 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140607067 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.095486605 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132312399 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095408167 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125086827 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093232649 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146899888 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129397709 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135342626 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.125591334 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125744687 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105370665 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132967962 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101532442 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12429789 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111413412 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134788471 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098631592 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.135773965 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127289516 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098371494 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142859059 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097703008 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126645695 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095795246 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131496249 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.097542283 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125470102 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137998738 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094428031 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126572783 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108244795 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.124423445 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096935501 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131696929 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100624919 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.12388099 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136880096 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100362717 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125223987 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.106423189 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125771385 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097549371 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134587621 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128713121 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094965119 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129106342 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101977966 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125440339 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099597018 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12801668 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.097014294 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134750235 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10227995 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129343077 seconds)
  done (took 15.159232435 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.236301155 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.222479567 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.192272013 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302032593 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137620544 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.119748434 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.219442371 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.161588562 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.126142792 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.163755298 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174028075 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.188247605 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.145646652 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185303605 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.203685324 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09545277 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144632807 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.139534402 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.25349212 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.268630212 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146959689 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103077337 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165574004 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163735912 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.141474988 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134993953 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112670173 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.137152839 seconds)
  done (took 5.907519655 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111725537 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157882607 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.10123793 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148886631 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.153841656 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094919555 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130875216 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.12638433 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109371869 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139937411 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095461735 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131462974 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.132363564 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106067543 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125471259 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106014788 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.136045564 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097079798 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129448323 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.100197172 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.136137045 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135045025 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099128762 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124778623 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105129461 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12509883 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08942522 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.146313865 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124918913 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117825856 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123688272 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103439477 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139683387 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.125419015 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095251078 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.127468394 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.098337312 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.126862858 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.097300052 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123355734 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094914835 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109235637 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094839621 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.140384968 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101881318 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112072228 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.101939388 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.131107056 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096934565 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122740728 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.127596524 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.09927973 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.127424255 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104248697 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127455565 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.097527033 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.128664914 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087337708 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131812959 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.098155075 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115964554 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094354569 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.13064796 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091076427 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135579391 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.100875765 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.125705882 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.097991469 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.130495334 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102299431 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.127701261 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101425443 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.123665673 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127867091 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098521644 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130694846 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.099275415 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124550528 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095788215 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12582651 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077376314 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124592593 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076107504 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127490479 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.094763359 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123607898 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09769027 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130882249 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.112216253 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.127645468 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.134726831 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096858372 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124925418 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099056177 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114036006 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099728119 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.14140969 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11424339 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125801136 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124111935 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110716364 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128155994 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095398526 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108007033 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105377462 seconds)
  done (took 13.261044327 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133414077 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156537559 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127404843 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.115061116 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159884192 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.160818953 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10297984 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.134264188 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097661657 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.145761287 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.096617141 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13539343 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096075054 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140305333 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159761286 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.107091283 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128099423 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110554651 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130478815 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17299065 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114695771 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144511299 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143565856 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096041488 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132109315 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112283755 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16358273 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.139797432 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109171199 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14536063 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110030205 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163261663 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146517457 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099510637 seconds)
  done (took 5.573218601 seconds)
done (took 50.750711745 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.208992652 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.423756676 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198463199 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.068221475 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.239987756 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.203512637 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.213654268 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.198696824 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.232349483 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.202842609 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.472359945 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.722995913 seconds)
done (took 58.510798319 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.315585614 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.351299511 seconds)
    (2/2) benchmarking "String"...
    done (took 1.483955134 seconds)
  done (took 3.960234166 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.746030576 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.156640642 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461339287 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.208432766 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.20290337 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49020115 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.902691547 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.574989435 seconds)
  done (took 28.115383753 seconds)
done (took 42.263495984 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.204326153 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.242134385 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.232495506 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178708611 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.333212223 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235317162 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.514362317 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.205771953 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.21659502 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.178396865 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.235884726 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.205616303 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.203795667 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.467516274 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.209238587 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.211093489 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.208468857 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.794365064 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.607936306 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.211050545 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.228814804 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.292932123 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.209017711 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.204620716 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.251274521 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.201822941 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.218578784 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.213381188 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.810388268 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.205841514 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.215320552 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.717543155 seconds)
  done (took 190.781987018 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.201799728 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.24741262 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.352051429 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.243408375 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.705171029 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.40532544 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.346879475 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.787113443 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.220238798 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.229011915 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.569967194 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.202221245 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.568716965 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.199083266 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.22920811 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.26512647 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.503596662 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.576829565 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240268852 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.355001546 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.220061869 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.47046953 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.381209472 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.485986643 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.223906917 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.241066912 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.214244508 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.235444994 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.393037862 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.426439992 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.26076973 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.242328102 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.827693793 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.059080827 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.225542826 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.241693865 seconds)
  done (took 150.718567556 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.20327891 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.202432255 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201021833 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231047202 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202676562 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789707503 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790268185 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.716687237 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.507861809 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.625924959 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20678897 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457533302 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202029027 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298676516 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.21561056 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.2016619 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.22216625 seconds)
    (18/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.216230587 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204799133 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.227824601 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203500466 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.789241853 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220543378 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.37850418 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.218522318 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237328097 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.595394648 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.199996678 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216952623 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23832005 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.540903923 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.25083249 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204338813 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.596105669 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.161374544 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318021565 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203091731 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237868802 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.209345887 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483529489 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.206473272 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206105613 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206580155 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.864689523 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.206306176 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.778970776 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209429761 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.150969433 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203576994 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204137828 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.296226294 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.884299729 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.222176332 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200999352 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206081044 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.203452869 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204382968 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.237244673 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204301815 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.231419776 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301854441 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.221743293 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.206866073 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238179466 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203659512 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.207691297 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.414335435 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204305419 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.658533643 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.269498627 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.31498073 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.795894411 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210245922 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306074934 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327529791 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.204799849 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204399439 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207578648 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.205798394 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.320651943 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.207228772 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.61894871 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.384850143 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.223341542 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.638124893 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.305851621 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206562773 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.624250836 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.208898544 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207034697 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.963496325 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.302638677 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207922509 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.208557594 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208833082 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.616374266 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795571344 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.474254875 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.21086737 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.296432215 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.211575232 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.639663954 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.764573263 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.908492141 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.210199695 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319754113 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.386925095 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22327252 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208232223 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.620307124 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.21315178 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263513135 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.210590143 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.606784956 seconds)
  done (took 366.405714879 seconds)
done (took 709.029139653 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.827496618 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.818339009 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.938522256 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.815256344 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.773336554 seconds)
  done (took 10.298560795 seconds)
done (took 11.431920233 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.403078275 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.402284098 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27339389 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.406732682 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246580002 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.42142557 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.386887618 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.232140203 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.315564427 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.293787604 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.31565122 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264262494 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.242221206 seconds)
  done (took 18.328928876 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531758177 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.544550578 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274179389 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.535737698 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24909639 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.544883656 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.448989248 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.436858072 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433665466 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244347499 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222824716 seconds)
  done (took 16.594218879 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.560664406 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.544036787 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282019318 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.583540995 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254924713 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.556703455 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429785488 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.43739641 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431069033 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24495136 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223077967 seconds)
  done (took 16.675469213 seconds)
done (took 52.730619922 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.22054829 seconds)
  done (took 2.345144516 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.256823864 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.420306239 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239996168 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.227646704 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.21972289 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222940154 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223774746 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220348035 seconds)
  done (took 11.16264224 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.216400975 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.217316054 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.214975592 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.21490535 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.219271073 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.220428725 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216201852 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218230499 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.219392437 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219024909 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220331303 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.22073446 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220630274 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.218586096 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.215904155 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.221585747 seconds)
  done (took 20.623007176 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218358869 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.220059987 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.213317623 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.220580385 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.217165514 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212950608 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.21941728 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.2177097 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.216251572 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.216173173 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.220254297 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.22048702 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.218610929 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.218581357 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.217732782 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.220563457 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.21838669 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.217696347 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.221043207 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218920406 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219267025 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221751463 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.220737736 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222423719 seconds)
  done (took 30.378710324 seconds)
done (took 65.643348898 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.850339317 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.930133528 seconds)
  done (took 6.910171541 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.280063687 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.283997534 seconds)
  done (took 3.698238228 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.221355555 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.223448363 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223254997 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.225930389 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222073846 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.221491258 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220306459 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.221238776 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.223534603 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.221003497 seconds)
  done (took 13.358136639 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.221882699 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222241602 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.224837976 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.2240033 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.223705285 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21899967 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.221058034 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223832424 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.224012209 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.221397968 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223423826 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.21989965 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.221635591 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.220465165 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.220948313 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.216288422 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.218415395 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.219636223 seconds)
  done (took 23.126749188 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218863596 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.240166646 seconds)
  done (took 3.591577064 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.350397224 seconds)
    (2/7) benchmarking "second"...
    done (took 1.261460392 seconds)
    (3/7) benchmarking "month"...
    done (took 1.327628221 seconds)
    (4/7) benchmarking "year"...
    done (took 1.319239187 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.258857501 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.242302269 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.261849555 seconds)
  done (took 10.151162649 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.218888673 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.401459746 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.511526116 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.821268972 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.223150214 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.223743204 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.092910897 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.225117583 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.228404495 seconds)
  done (took 14.079801487 seconds)
done (took 76.04615365 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.243054371 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.230450582 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.522621698 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.219407465 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.245027805 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.514789509 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.257185567 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.344156975 seconds)
done (took 37.707258083 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.219539108 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.189141731 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.965977781 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.208441159 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.274670264 seconds)
  done (took 18.774177493 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.261249429 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55132422 seconds)
  done (took 4.944046911 seconds)
done (took 31.071635966 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219145699 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216146581 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.220749934 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.215881707 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.218815932 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221695785 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.218036603 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.220040131 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.219465753 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221555624 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.219813005 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.219995921 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218763432 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219480784 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219305211 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221709587 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217059524 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21931464 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219328887 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221044822 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221713644 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219852353 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.217903799 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.222059485 seconds)
  done (took 30.396588631 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.219969382 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.21966721 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.221706887 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.225685034 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220084271 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.219652011 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.220880908 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.220555472 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.221707329 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.222905436 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221815934 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.219003097 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.222489911 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.222480094 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220497216 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.216330725 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223145029 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218825833 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224251716 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.22022438 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.224488381 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218363369 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.2230168 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224272161 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220598402 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218272497 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.219057987 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.219905212 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22622585 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222291528 seconds)
  done (took 37.772443193 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.227092688 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.234625151 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.225189996 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.222400633 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.222142026 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.227590803 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225929999 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.225571633 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22217507 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224157038 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.222605725 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225705944 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.223549332 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221190585 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.223220737 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.222180137 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.225096454 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.225389471 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.222168209 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.223968415 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225746827 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.227411234 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.223265068 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.225348743 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.22453195 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.226452729 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.223794994 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22529108 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.231278599 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.221302054 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224325124 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.227998589 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.22782452 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226326556 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224868206 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226481492 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231785978 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234025535 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.224393666 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22646751 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.225875094 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226634398 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.22746298 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.225637108 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.2269767 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.225981515 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.228877943 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.229009961 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.227065711 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.226598658 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.228147449 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227150823 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.227135532 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.225623886 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.22444012 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.225543365 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.228563392 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.227433172 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.226966131 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.224870155 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.226274288 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.224091817 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227830516 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.227384184 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229160041 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.228724609 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228649698 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.23070035 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.228681229 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.225723593 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.226505499 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228606383 seconds)
  done (took 89.429991396 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230578847 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226261964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.224161513 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224090994 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22657864 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.226454902 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225546632 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228813157 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225357666 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.225868687 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226824122 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224612282 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224738537 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230628447 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227727123 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.227495683 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2276204 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225547817 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.228553429 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.232714419 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230126136 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.23115574 seconds)
  done (took 28.14182004 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228409038 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231355138 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.221438177 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231972252 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22822793 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23112359 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22797949 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229620196 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229094171 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224839198 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225563791 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231021695 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231174865 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22367757 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228957608 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229652962 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231940364 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228613766 seconds)
  done (took 23.255118445 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.22811838 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.228590062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.232531558 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225642898 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.229036479 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23173401 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227753726 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228078264 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.228017052 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.228397891 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236161003 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235440505 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228993783 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230444178 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23712111 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.227013788 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.233528192 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229472975 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229534072 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226248341 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228912252 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229674158 seconds)
  done (took 28.204645216 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237199836 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233850168 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.227356343 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228604948 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226867887 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228647738 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.232384575 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225174679 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.231254225 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.23375006 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229638582 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231159134 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.230042531 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230326984 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.23018107 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22985998 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232243052 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.229172197 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234394145 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.23131454 seconds)
  done (took 25.755942659 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232299638 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234773729 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234384239 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235173511 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235961204 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.23522011 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235022873 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.232618123 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.22768788 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.235508525 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.235030054 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235048105 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235307975 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.23377048 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235531424 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234111595 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234755996 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233647348 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236092487 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236114689 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23757573 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23347312 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236324085 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235070259 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.235389281 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234484747 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232801098 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.235698315 seconds)
  done (took 35.711760787 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237423034 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235697738 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.230184803 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233588167 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.232406322 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.232330061 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.230233448 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.231560538 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235316083 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.239215367 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.236975989 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23574427 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236627771 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.234728043 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.238433937 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.234997281 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232941455 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229597047 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235083696 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235101821 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.238353052 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237480519 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.235967866 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233311186 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23625175 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.241094442 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239846583 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240510882 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239968276 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.237402245 seconds)
  done (took 38.217497475 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.258417094 seconds)
    (2/2) benchmarking "in"...
    done (took 1.255603292 seconds)
  done (took 3.665674289 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235479307 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238593785 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.23582015 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233349893 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232576155 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236856488 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23911018 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232454053 seconds)
  done (took 11.029960182 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.235544089 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.238711697 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.240513235 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.239462328 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236926508 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.238809472 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241833986 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.258599029 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237496806 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.238220451 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.246547648 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245226697 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.2404165 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238508682 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238713523 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240274809 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.238058839 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.239163098 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.240685299 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238937527 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236141488 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243340486 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238361475 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.236998024 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.2431198 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250178036 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260356142 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.239420074 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238941557 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.241577644 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240800573 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.237278454 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.241105173 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.238912252 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.240247701 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.239872972 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251587589 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257878322 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.247158164 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259965083 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242386421 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237660806 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.242176329 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.241394977 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242316684 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.240854704 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.24193539 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.239040521 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.239664827 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.24424317 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.246612786 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240421552 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.238745574 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244037752 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.242135924 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249276151 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.260106802 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.245209214 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.25141037 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.252437016 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.274849009 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.26522483 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244806654 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.241612511 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252854805 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.26630669 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249989481 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.259726399 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.239892369 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.242128505 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.249664744 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273965461 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.267522369 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24246692 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244039385 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.243580568 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24409904 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244067967 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24997221 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.264790089 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.242587248 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243860633 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252480635 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267351455 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.244302724 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.243599646 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.244523238 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.244065332 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.245088712 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255111411 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.262731069 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244788678 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.243338384 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245200031 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.245650167 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244833521 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.242534202 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245384817 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.241468014 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.244990761 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244191948 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.2488824 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.254036298 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245005716 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244836618 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.252323383 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.263851565 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245191927 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.25143567 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.245872114 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245046685 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.246204102 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252064539 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.243801544 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247932348 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.253385891 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.245013236 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.246853389 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.245508702 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245970501 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25524933 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.272152677 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.24703018 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.245231586 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.250595224 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.257592295 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245781158 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.249375092 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.246633052 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.244217291 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.243402783 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.246854362 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.247099947 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.247219715 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245956433 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246799857 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.244924139 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.247142246 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.246890625 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.248745535 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.248922909 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.249005847 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.248706515 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.249397862 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.247183182 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.249399846 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.254201763 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.266272266 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248557318 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247689512 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.245661814 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24876752 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.248520767 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.248523052 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.247769917 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248744685 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.248368256 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.247433353 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248467445 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249361922 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.248094356 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.248936838 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253046677 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.248908046 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.251357189 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.248950608 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.245842057 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.249787446 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.249841869 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.25005881 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.249951339 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.2483362 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.25367195 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.257942346 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.249327567 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.249626631 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.251940261 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249883106 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250522341 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249303902 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.254404796 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.258180955 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.250374197 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.256993973 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.269293098 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250870947 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.250984476 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.25058005 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.25070032 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251088176 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.254263139 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.25770767 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263608951 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276471005 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.251253129 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.255302885 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.251892092 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25553153 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253780589 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.251507793 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.251742021 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251083361 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250936852 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251700624 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.253483163 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.251597065 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.250734021 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252176727 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.251434945 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.25238023 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252883743 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.252606769 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252797955 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249029062 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252799924 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253095384 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.252942818 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.250949427 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.252632979 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.252066622 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.254181397 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.252776698 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258703577 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.248984114 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254095195 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253539607 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.253976641 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.251645127 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.254082986 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254821525 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.252887119 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260721832 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272376578 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.254496294 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260945588 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272332157 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.252430251 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.256221445 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253712648 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.251950074 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.256687922 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.262517908 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255597738 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.254776701 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.255217432 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256195515 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254974675 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.261550247 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.272351311 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.254340694 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.256379555 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255947813 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.25370846 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.257368555 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.255570814 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.255735819 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257756997 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255595857 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.256096887 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256920727 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.255092385 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.25551604 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.255857895 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258361653 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.263912088 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.261060536 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.255917298 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.258084285 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.257479626 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261433626 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.257393314 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.256179094 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.256813702 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270197732 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.281238782 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263431719 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.277946933 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257715299 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261945899 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.278236047 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.261992352 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256592642 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257465604 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.256505307 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.25658547 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.255299999 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257575273 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.257958433 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258864804 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.258143224 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.262467732 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258666956 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.257659827 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.259046426 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.258186472 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.258468883 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.258492893 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257620715 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.260114834 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259475823 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.257579314 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259264845 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263861421 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278639474 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.258599331 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.259279456 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.258619854 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.257779947 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259349661 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.25843385 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.262534636 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.267235132 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.262228191 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.268340497 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.260359509 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267756334 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.25833773 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.263527284 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.267025847 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.257204709 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.258894497 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.259096558 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.259403572 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266911274 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.27878296 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.261607207 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.264898728 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260262915 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.260314498 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.260945045 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.260407058 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261122612 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.259410624 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269556972 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.282020439 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.264381672 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262429945 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.257669327 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.259939497 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261712583 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.261233888 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263834381 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260439463 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.261511714 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.26198378 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.26102121 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262121928 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261365563 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.263224309 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.259120611 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.262299262 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268267526 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.283776776 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265777912 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.263835682 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.268357483 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280603447 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268803496 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.281136491 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.262707091 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.262049157 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.261954838 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.263840337 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.261842289 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.26330926 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261580872 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.263370979 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.267161225 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.262106174 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264569105 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.262957667 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.26250791 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.26293077 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27346508 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286382539 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265086952 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26775953 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.260635096 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263984967 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267665388 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.263216309 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.261821527 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.267966373 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.274595412 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271154834 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.263896483 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.263459831 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264045951 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.264426687 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.263230671 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264412287 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.264802618 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.265357307 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.266208405 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.264832313 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266762418 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.264388593 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.264532361 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266404116 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.265270549 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.273609706 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.284033293 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.265132519 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265242917 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.265862247 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.265381131 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.26512848 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.264492048 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266375086 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266908515 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.268110295 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273395731 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.273457233 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.267871605 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.264901432 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.266340326 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.265812605 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.266800832 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266081514 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266856693 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266334937 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.26732109 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.265965839 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.264974456 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.265704325 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.266935704 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.266965943 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266939917 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270208213 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.27487201 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267601968 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263190567 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.266741684 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267161287 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266026873 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.268118056 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274784176 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288138884 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.278120189 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.275204521 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.271447404 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.267094673 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270843126 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.274978574 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266541866 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.269257164 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.267981974 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.268648999 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268397338 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.27111403 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268656925 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.272943299 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.286399669 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.267693251 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276572309 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.291506212 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268379984 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269895637 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.273223338 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268375742 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.265886679 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.26888135 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.268685024 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275554605 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.288886987 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269115628 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270201217 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268871147 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.270350802 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273511304 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268543399 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.271210427 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.26688836 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.270289695 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269912454 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269845645 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.268503389 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268819408 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.269680278 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.273849095 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.277642933 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.268076871 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271082791 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.271126826 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.271246824 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270812726 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271200864 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.268507089 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.269090299 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.270134882 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271906441 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.271825129 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273458436 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.270049501 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.273096642 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272978888 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271944266 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27577185 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.284133805 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.280336962 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.270181183 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.270409674 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.272374801 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275097488 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271344137 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.27198372 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273127813 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273052947 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.273519131 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.272049501 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272944804 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.27582858 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28946032 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.294540619 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27250146 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.273586172 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274968183 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273184845 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270103701 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.272507403 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.274835946 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276145091 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.280536603 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.273466238 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279329336 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292776612 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274849951 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.278214377 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277071486 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.280721845 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.276480833 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274035015 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.274019796 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.27985602 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290095772 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.295026956 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283751411 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305276008 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.293977365 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.275318594 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.274936257 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273803149 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274285577 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.276035791 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.274408749 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275251786 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274152933 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.276342575 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.276258736 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2799674 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.276224551 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.277609177 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275422943 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.274365135 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.275718511 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.27309787 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274501121 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275232713 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274421042 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27433297 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.275909585 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.275495351 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287547488 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.300742871 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.276662222 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274920078 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.273275538 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.279105006 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.279339056 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288207806 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.28459797 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275540149 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.275856748 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.27756388 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275681759 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.275931731 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.276589797 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275834046 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276592342 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.274548572 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28941889 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301505065 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281713091 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.276125346 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278673591 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.277965807 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278728116 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276869847 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277527851 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278708594 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.27919649 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282536162 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.278081678 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.27812298 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.280136121 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.285453304 seconds)
  done (took 752.761712923 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275255506 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275000295 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275803462 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.275652714 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275063508 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27549518 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275832803 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274542328 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276185471 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275735192 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275766688 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27696682 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276846441 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276158066 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276532937 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276725029 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275650542 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276905733 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276482528 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277866191 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277383646 seconds)
  done (took 27.987004187 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.279800432 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276578783 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27645222 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279176042 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277101957 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.280129987 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.276405472 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280240732 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27955153 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276979016 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279671998 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280545986 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.278193915 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.277278622 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277427461 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27986879 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279525328 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277498028 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.279550606 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.277674683 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280451567 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278490026 seconds)
  done (took 29.31886743 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.280303302 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.279385147 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280219788 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.278716395 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.281452472 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.278777654 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281185922 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.280600762 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.281882184 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.280842955 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.280189541 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.282154982 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.288211342 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.286985034 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.282396252 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.28173672 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.42674265 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.281942219 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.281803344 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.281214786 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.278663228 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.287166683 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.298837349 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.278693976 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.28050021 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.282140636 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.282173459 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.281837446 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.282027497 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.282126639 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.286093424 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.282250299 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.283170926 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.284177743 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.281710609 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.283617198 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286923665 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.283506859 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.279513972 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.282558809 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.292326981 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.301728847 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.283681263 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.289159664 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.303772206 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.283614982 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286812908 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.290414563 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.280315915 seconds)
  done (took 64.248584675 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282977362 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.283876255 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.28113729 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284335842 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283056181 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.283685763 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284629172 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284361828 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.280984497 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281606935 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.284230969 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.280837075 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282702534 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.28434411 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284188763 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282805729 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283006827 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281261013 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.28187804 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282256664 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.282116848 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.284867743 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.283608118 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.283254918 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285133509 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283151099 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282273783 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285285726 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.282874902 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.28179354 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.28464981 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284542804 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.285256415 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283083932 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283020694 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.285437576 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.286730151 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.283167824 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286751139 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.282558306 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.285466967 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286604557 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.286569769 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.285836746 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283831192 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.28407336 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.284049671 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.282561982 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.283560898 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.286944866 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286370306 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.286129065 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286471969 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284801274 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287996564 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286561051 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.286026065 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.284901301 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.287820279 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.285203728 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.284189907 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287629628 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.286351032 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.288622037 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.287861441 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.286722343 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.286874038 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287873717 seconds)
  done (took 88.541624155 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287504635 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.287234771 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287240238 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287217285 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287646377 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.28755717 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286682279 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.288097706 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288719554 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.28728396 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28898514 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288129607 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287310919 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287615783 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288148674 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.28797386 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287451103 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287636375 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287628129 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288469075 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.287703719 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286495371 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288841896 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289189279 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288227777 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288743898 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288930125 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288669262 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288761549 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289110062 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289018326 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.289648341 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287996177 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288214174 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.290409333 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.29011328 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28918849 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2908532 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.289102072 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289225867 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290850363 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290429879 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290381116 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288772599 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28948243 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291040769 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290569014 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.289168403 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.291296902 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291131524 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.291911293 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290739434 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291079427 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290862448 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289662984 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.291171107 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29097604 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291952916 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291915075 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291626757 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29174503 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.290527076 seconds)
  done (took 81.129136791 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29178339 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292041536 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.291159841 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.290294301 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.291311128 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.290977534 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291324101 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292981135 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292358184 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.293641568 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293518039 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291282062 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292087799 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293102435 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290515801 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291088632 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291819866 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.290678186 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292846034 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.291652376 seconds)
  done (took 27.038076298 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.290724841 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293342882 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.290830793 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291928408 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294144204 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290222286 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293003227 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294885779 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291057154 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293266296 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293552118 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293555294 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291149766 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291379158 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294529783 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291813172 seconds)
  done (took 21.882707397 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291427398 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.293074936 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.292255561 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.294160643 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291179189 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.290283332 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.295113778 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.29211759 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291921308 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.294928699 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.294687762 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294216302 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.295076508 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.294573096 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.291616421 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.295337466 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291302901 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.293664036 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.295536409 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.295949645 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.292359008 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.292884122 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.295452493 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.295089768 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.292805863 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.294806086 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29251787 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.293925366 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.293477018 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.294020937 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.292647866 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292985034 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292797627 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293290458 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.294805773 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292565633 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.295876978 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.295946443 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.29734209 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.295941217 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.296858812 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.293979839 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.297150494 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.297224276 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296004657 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.295495212 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.294442032 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29447325 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.29457775 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293936941 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.297822197 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.296992173 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296413991 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.297060973 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296718379 seconds)
  done (took 72.393678674 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297579095 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29747849 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294957693 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297445666 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297628929 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294906432 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297923085 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.297187769 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295191354 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.298930304 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296531985 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297922506 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296499888 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296409237 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295436237 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298762239 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296524974 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296126135 seconds)
  done (took 24.548984191 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.296772069 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296318473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.301084036 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.298221807 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.295926063 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299315665 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296923295 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.301291142 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301874503 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.297288051 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296818327 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.299205638 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300337924 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.298651144 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297759713 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297078481 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.300417971 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300558523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296431692 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297642197 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.301013764 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299965511 seconds)
  done (took 29.776532933 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.299866659 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.300185882 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.300133999 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.315524635 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.319055812 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.323170446 seconds)
  done (took 9.066078251 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307373614 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300820075 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298394849 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302296028 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301129242 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299649719 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297894333 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299599541 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301438621 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299206245 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299092307 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301671964 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301972739 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299685521 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301241907 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301713369 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300530662 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299070646 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29947746 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302468576 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299140059 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302231377 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299492036 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299296495 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300993711 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300336179 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302365832 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300487897 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299639759 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303669298 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302545154 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299952337 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303144444 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301152055 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302949568 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303332502 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300728187 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302914838 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304797788 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29958773 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303870094 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303837303 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302871472 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300194704 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304037579 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300675777 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300739979 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301418167 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301275466 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303230709 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303913362 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300243927 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304662121 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303301271 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303390837 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30369647 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302114411 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300726791 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302207106 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301287886 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302254325 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305162561 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301381998 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302299008 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304133721 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302484088 seconds)
  done (took 87.142978618 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3020946 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302308179 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303014235 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303307677 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302400746 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302749698 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302495706 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302405985 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302850661 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302935272 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305008761 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303195168 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303670755 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303445843 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302815168 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303126775 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304713047 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301974293 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302647572 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307972427 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303345245 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301477344 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303439149 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303394007 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304436542 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305786767 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305529967 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302627788 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303886963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303926977 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304245017 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30435917 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304066595 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304769818 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30471964 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30372246 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304128593 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304795869 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305006555 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307103767 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307147008 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309031799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304148607 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304374707 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304477661 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303992661 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304446391 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304547977 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306092893 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305301938 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304877196 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306366874 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307988891 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305953627 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307383411 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307912411 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30642961 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307192404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303970074 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308274649 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306025897 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30631024 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309415352 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306023556 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307578895 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306549565 seconds)
  done (took 87.327444557 seconds)
done (took 1755.879737126 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.470627357 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.424557747 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.307350444 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.301803148 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.307907761 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.320429388 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.306579475 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.30706093 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.308855565 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.307320144 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.307117317 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.49471112 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.311216323 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.308893612 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.30780473 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.40157846 seconds)
  done (took 42.709872468 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.335282161 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.313796553 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.433470834 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.332663973 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.336918519 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.506598667 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.367150214 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.31214424 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.490736697 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.357457688 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.939560358 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337039891 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.312794882 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.472235177 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.333251395 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.505508153 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.570064122 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.946879119 seconds)
  done (took 30.41997965 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.790039734 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.332076321 seconds)
  done (took 9.339823576 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.346510043 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.325217392 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.327321768 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.320081218 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.316468505 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.313473403 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.32443805 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.322064398 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.164771227 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.453944935 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.326174522 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.337277147 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.345955014 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.325610966 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.32085123 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.366381163 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.478141444 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.322680285 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.322258635 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.331031742 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.324774082 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.441347619 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.362823694 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.319501724 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.45793985 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.183141987 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.32858101 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.334887179 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.470079849 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.32433758 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.32681882 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.326648844 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.327797522 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.264748003 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.871750977 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.327437337 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.348501908 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.337069196 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.322269556 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.49348003 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.323380053 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.333176146 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.319666443 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.865637766 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.464832726 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.444813764 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.624895423 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.346050487 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.328377913 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.391527418 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.326263836 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.329539955 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.373610442 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.150918992 seconds)
  done (took 112.048423989 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.359803299 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.724888108 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492390305 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.339586697 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.131148429 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.068612627 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.331283021 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.629475997 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.343191706 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32040176 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.615399731 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.846760157 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.342188379 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.391369585 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.848702209 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.360361288 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322195895 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.210284135 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339417894 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.316223742 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830116177 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320455127 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316113672 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.483144871 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.359054327 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.810631504 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.78276272 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.865628994 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.341665533 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.317656334 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.814785351 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.342263462 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.346944103 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.318717669 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.595562623 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.707145035 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.703164844 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.344586308 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.328112821 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.320114575 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.32906657 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803948562 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.711892019 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.341468345 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.317931729 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.816729287 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.340313836 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.325338605 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.32282373 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533017195 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.993284355 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.31910546 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.775912499 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.320132139 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.61271128 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.383236016 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.332327992 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838724791 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.341373384 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.504546379 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343196195 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.319815166 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.324979097 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326664549 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.320184688 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.697601869 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.697930234 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.322551124 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702239984 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.829056845 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.338704417 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.872839854 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.232843097 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.342555313 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.438092523 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.334303544 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.024576063 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.847997363 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.365878079 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.317231372 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.691882373 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.343845828 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.608855927 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.344061646 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320389476 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837978874 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.333007771 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.366954407 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.325692369 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.35013284 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.075202363 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327576816 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.618305115 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.341631751 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.325258779 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.327954325 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.33359814 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324975099 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.32166539 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.323905863 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871540952 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.344121584 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.490975954 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.343355105 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32795953 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.342776938 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.328740343 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.328056715 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.556768823 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.83348142 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.346523004 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329118079 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.322008447 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.35170676 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.497872695 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.328518705 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.658792946 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.346035518 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324361111 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.347996056 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.130699743 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.38600698 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32301996 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.327121456 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.223407908 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.53523811 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.347417956 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.324103109 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327344353 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.348552548 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.611896566 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.343776467 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.407141123 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.332211725 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052161233 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.381956179 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.354891667 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.666352824 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.336121316 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.281464745 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.341914418 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329447392 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620912695 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.596865457 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.603983538 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.32685502 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.348259697 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.055455927 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.379369143 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.462041216 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.347429232 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325117156 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.529114677 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.769817808 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.32898628 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.951222663 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.330584974 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.549180666 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.331401518 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.653407709 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.841834008 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.346585269 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.334088813 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.064982856 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.068105632 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.180771489 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.331222836 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.61259837 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.324782067 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.812791937 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.330120966 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332240296 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.900541864 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.333320544 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.326276386 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.331789201 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.331575122 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.625049922 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.507584788 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.015933011 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.336885944 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.811527504 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.386166516 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338142928 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.335743813 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.331967061 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.677119394 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.39687387 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.337841543 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.369525161 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.32858993 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.334719116 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.839495899 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.282484128 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.333256799 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.483463757 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989856478 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.350260741 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.333198037 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.998971541 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.552178972 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.912323345 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.363789362 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.669425649 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.358301018 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.373890946 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.047914116 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.424036452 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832957026 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.354232305 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.33407329 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960086703 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.350194666 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.704868666 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.330978037 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.334694728 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912107861 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.351317508 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.32581487 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.619845663 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.347672914 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.584545152 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.334769576 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.342477351 seconds)
  done (took 1113.039016841 seconds)
done (took 1308.775000908 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.335132034 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.335327876 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.316883782 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.341501807 seconds)
  done (took 26.570716343 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.351724213 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.340420926 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.342180022 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.341654087 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345655288 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.342329104 seconds)
  done (took 9.310660399 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.457467408 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.339498772 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.337354466 seconds)
  done (took 19.377586033 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.569210012 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.659217259 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.682955069 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.603514483 seconds)
  done (took 10.760764613 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.343048151 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.341125779 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.343751814 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.347026175 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.355547622 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.355179462 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.347293222 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.346124296 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.355073382 seconds)
  done (took 13.377838391 seconds)
done (took 80.642884331 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.209841988 seconds)
    (2/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.423793468 seconds)
    (3/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.85456267 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.603771999 seconds)
    (5/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.337016848 seconds)
    (6/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.311165079 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.372296166 seconds)
    (8/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.984961678 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.365655059 seconds)
    (10/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.585639353 seconds)
    (11/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.17428136 seconds)
    (12/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.326881285 seconds)
    (13/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.419037182 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.75930652 seconds)
    (15/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.269177812 seconds)
    (16/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.589247059 seconds)
    (17/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.433724385 seconds)
    (18/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.068810541 seconds)
    (19/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.441872889 seconds)
    (20/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.315856356 seconds)
    (21/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.360236391 seconds)
    (22/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.367507792 seconds)
    (23/286) benchmarking ("sort", Int64, true)...
    done (took 6.336597201 seconds)
    (24/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.436926479 seconds)
    (25/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.316588063 seconds)
    (26/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.542104903 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.464758374 seconds)
    (28/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.318478752 seconds)
    (29/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.15777832 seconds)
    (30/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.728043114 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.699105877 seconds)
    (32/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.165289171 seconds)
    (33/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.421766384 seconds)
    (34/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.332667154 seconds)
    (35/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.470066563 seconds)
    (36/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.74497482 seconds)
    (37/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.713111277 seconds)
    (38/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.332076168 seconds)
    (39/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.417165869 seconds)
    (40/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.611344043 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.751448772 seconds)
    (42/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.423585976 seconds)
    (43/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.244681011 seconds)
    (44/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.367060119 seconds)
    (45/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.355205955 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.449748468 seconds)
    (47/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.964991263 seconds)
    (48/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.780356357 seconds)
    (49/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.916608648 seconds)
    (50/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.452721176 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.619323484 seconds)
    (52/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.322405262 seconds)
    (53/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.317139225 seconds)
    (54/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.430711877 seconds)
    (55/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.872721424 seconds)
    (56/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.145954198 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.084424714 seconds)
    (58/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.337054837 seconds)
    (59/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.419724346 seconds)
    (60/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.319074583 seconds)
    (61/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.377206832 seconds)
    (62/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.214171711 seconds)
    (63/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.317080779 seconds)
    (64/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.926270607 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.306909923 seconds)
    (66/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.83845026 seconds)
    (67/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.341904644 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.895805959 seconds)
    (69/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.663155134 seconds)
    (70/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.88796143 seconds)
    (71/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.399081798 seconds)
    (72/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.241535522 seconds)
    (73/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.795106873 seconds)
    (74/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.40535388 seconds)
    (75/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.32040459 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.064802587 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.254896009 seconds)
    (78/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.362303866 seconds)
    (79/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.360850148 seconds)
    (80/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.476204342 seconds)
    (81/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.341873761 seconds)
    (82/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.322652614 seconds)
    (83/286) benchmarking ("sort", Float64, true)...
    done (took 6.336495976 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.315717626 seconds)
    (85/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.34753598 seconds)
    (86/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.344275025 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.125301597 seconds)
    (88/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.562626954 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.376279784 seconds)
    (90/286) benchmarking ("sort", Int64, false)...
    done (took 5.593119957 seconds)
    (91/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.338144094 seconds)
    (92/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.378237604 seconds)
    (93/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.468229901 seconds)
    (94/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.739622627 seconds)
    (95/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.442370226 seconds)
    (96/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.34831721 seconds)
    (97/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.356740062 seconds)
    (98/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.323250032 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.357356476 seconds)
    (100/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.329017837 seconds)
    (101/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.349156414 seconds)
    (102/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.586907364 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.15845403 seconds)
    (104/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.860928858 seconds)
    (105/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.349970822 seconds)
    (106/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.360522796 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.30696435 seconds)
    (108/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.769040126 seconds)
    (109/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.348110161 seconds)
    (110/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.985297556 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.584189899 seconds)
    (112/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.875089091 seconds)
    (113/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.317126325 seconds)
    (114/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.425777043 seconds)
    (115/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.322881811 seconds)
    (116/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.381315965 seconds)
    (117/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.391229255 seconds)
    (118/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.460706715 seconds)
    (119/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.371575504 seconds)
    (120/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.871035057 seconds)
    (121/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.930077064 seconds)
    (122/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.362405308 seconds)
    (123/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.583341492 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 1.891431804 seconds)
    (125/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.388759243 seconds)
    (126/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.377232508 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.630030452 seconds)
    (128/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.233841134 seconds)
    (129/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.322756657 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.140678576 seconds)
    (131/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.527671315 seconds)
    (132/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.619713192 seconds)
    (133/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.933682577 seconds)
    (134/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.345706971 seconds)
    (135/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.407769687 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.450186152 seconds)
    (137/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.324648891 seconds)
    (138/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.427215138 seconds)
    (139/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.222671468 seconds)
    (140/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.214562483 seconds)
    (141/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.319503836 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.164661389 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.367569108 seconds)
    (144/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.326344428 seconds)
    (145/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.367192658 seconds)
    (146/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374125828 seconds)
    (147/286) benchmarking ("sort", BigInt, true)...
    done (took 6.349828153 seconds)
    (148/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.992267243 seconds)
    (149/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.373633056 seconds)
    (150/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.475252496 seconds)
    (151/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.325072289 seconds)
    (152/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.160418759 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.381992311 seconds)
    (154/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.357812562 seconds)
    (155/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.865269219 seconds)
    (156/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.476600059 seconds)
    (157/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.75559949 seconds)
    (158/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.123643602 seconds)
    (159/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.341104597 seconds)
    (160/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.470191782 seconds)
    (161/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.021714389 seconds)
    (162/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.914420078 seconds)
    (163/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.204454257 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.406499493 seconds)
    (165/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.457204235 seconds)
    (166/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.325999217 seconds)
    (167/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.436358124 seconds)
    (168/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.349500465 seconds)
    (169/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.325765837 seconds)
    (170/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.038567961 seconds)
    (171/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.798016357 seconds)
    (172/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.375264596 seconds)
    (173/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.348315187 seconds)
    (174/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.856020399 seconds)
    (175/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.7727162 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.353258203 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.395450292 seconds)
    (178/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.333024387 seconds)
    (179/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.952402928 seconds)
    (180/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.230006396 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.950920598 seconds)
    (182/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.538568036 seconds)
    (183/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.385106799 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 5.413255596 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.416232458 seconds)
    (186/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.330715061 seconds)
    (187/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.143739293 seconds)
    (188/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.800240812 seconds)
    (189/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.981834072 seconds)
    (190/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.571204085 seconds)
    (191/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.327664739 seconds)
    (192/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.554645465 seconds)
    (193/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.34941401 seconds)
    (194/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.354748185 seconds)
    (195/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.329162718 seconds)
    (196/286) benchmarking ("sort", Float64, false)...
    done (took 5.684292496 seconds)
    (197/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.598451297 seconds)
    (198/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.837823115 seconds)
    (199/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.370682675 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.037419204 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.324703646 seconds)
    (202/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.593768438 seconds)
    (203/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.7912753 seconds)
    (204/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.341484644 seconds)
    (205/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.328524983 seconds)
    (206/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.377106177 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.393545149 seconds)
    (208/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.436959549 seconds)
    (209/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.413265408 seconds)
    (210/286) benchmarking ("sort", BigInt, false)...
    done (took 6.349655067 seconds)
    (211/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.237062834 seconds)
    (212/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.10711519 seconds)
    (213/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.716038316 seconds)
    (214/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.326122824 seconds)
    (215/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.60790711 seconds)
    (216/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.333255655 seconds)
    (217/286) benchmarking ("sort", Float32, true)...
    done (took 6.359459918 seconds)
    (218/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.398613246 seconds)
    (219/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.468556748 seconds)
    (220/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.623473861 seconds)
    (221/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.347504969 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.364893576 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.304894313 seconds)
    (224/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.374373139 seconds)
    (225/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.330483526 seconds)
    (226/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.022156647 seconds)
    (227/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.455264982 seconds)
    (228/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.330905062 seconds)
    (229/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.581903042 seconds)
    (230/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.41702963 seconds)
    (231/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.335314243 seconds)
    (232/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.325095122 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.230024151 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.384102353 seconds)
    (235/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.373738504 seconds)
    (236/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.342905942 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.375373537 seconds)
    (238/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.352614774 seconds)
    (239/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.543412376 seconds)
    (240/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.370557191 seconds)
    (241/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.568026018 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.760623673 seconds)
    (243/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.457422768 seconds)
    (244/286) benchmarking ("sort", Int8, true)...
    done (took 6.369824075 seconds)
    (245/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.427193672 seconds)
    (246/286) benchmarking ("sort", Int8, false)...
    done (took 4.371718345 seconds)
    (247/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.751037002 seconds)
    (248/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.005754607 seconds)
    (249/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.983246283 seconds)
    (250/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.350505578 seconds)
    (251/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.028835448 seconds)
    (252/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.802234736 seconds)
    (253/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.334624424 seconds)
    (254/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.537795774 seconds)
    (255/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.399979955 seconds)
    (256/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.144271217 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.800690903 seconds)
    (258/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.393295915 seconds)
    (259/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.36483042 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.436944883 seconds)
    (261/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.450467294 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.45375935 seconds)
    (263/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.786532552 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.012333359 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.467933161 seconds)
    (266/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.443991709 seconds)
    (267/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.37123424 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.185958403 seconds)
    (269/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.374541716 seconds)
    (270/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.851818314 seconds)
    (271/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.830577027 seconds)
    (272/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.433880207 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.967685008 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.390980347 seconds)
    (275/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.660685459 seconds)
    (276/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.355736584 seconds)
    (277/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.361346564 seconds)
    (278/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.441898712 seconds)
    (279/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.423101788 seconds)
    (280/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.847524743 seconds)
    (281/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.349480372 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.374657048 seconds)
    (283/286) benchmarking ("sort", Float32, false)...
    done (took 5.378737539 seconds)
    (284/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.330997974 seconds)
    (285/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.334156235 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.717112243 seconds)
  done (took 950.052184449 seconds)
done (took 951.297877098 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.390248888 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392889814 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.36670858 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.38844926 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.486993185 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.387270667 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.378488652 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.369561054 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.412411628 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.416608711 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.37464165 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.388868023 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.375968494 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.375260197 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.367426682 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389716669 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.482124878 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.370770708 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.390880055 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.374240131 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.389979834 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.374158241 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.416596073 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.388701273 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.371932928 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.36858401 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.377111388 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.392296678 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.486910381 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.378195077 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.367561507 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.387222803 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.47828062 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.362137222 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.364402407 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.394988192 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.386951392 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.37876335 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.373703514 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.407189089 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.913546701 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.385422628 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.379144663 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.371407341 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.371456304 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.373703506 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.379264417 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.375754712 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391973828 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386827885 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.905669159 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.399785206 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.380153961 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.371974834 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.379841918 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.375800885 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.37592106 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394577919 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.397586389 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394583821 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.471023531 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.370473927 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.373369442 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.394737029 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.384626179 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.942947644 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.376132446 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.375830063 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.917355233 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.385155047 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.947727482 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.39449052 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.374987656 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.390050287 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.41045826 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.489637206 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.361901334 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.368304673 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.387820909 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.377565607 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.383253969 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392031108 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.376646399 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.373842754 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393641923 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.393183215 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.383855309 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.380445052 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.38342764 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.401390937 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.387489349 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.392138468 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.375393714 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.368139358 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.382425787 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.378162371 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.383224586 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.383290316 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.378242887 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.384448178 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.914320774 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.410217982 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.36831575 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.368751464 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.37243608 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.39443486 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.917520466 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.392834607 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.394648026 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.421909138 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.375711967 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.477425908 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.377574965 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399338321 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.381935713 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.378812184 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.369177811 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.481083097 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.904921362 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.40367329 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.374570602 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.38149645 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399965097 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.376672235 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.373051303 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.507078355 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.371374552 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.395768803 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.499645361 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.384026101 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.414446314 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.380324152 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.382496432 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.401816428 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.401818517 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.414293097 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.379101206 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.401732022 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.398393138 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.374418356 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.393546031 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.383487257 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.375335332 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.384025253 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.371100148 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.402318622 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397624802 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396761141 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.39977047 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.502415202 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.373151925 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.500017975 seconds)
done (took 233.264320615 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.435087633 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.370084559 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.456187445 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.373415616 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.47479824 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.488504677 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.370589225 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.372747633 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.373054782 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.752247447 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.372155889 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.372769839 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.37228985 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.37183332 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.457464928 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.374448245 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.371908851 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.739770524 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.375225924 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.448383608 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.373642827 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.372212124 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.374468202 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.785375747 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.367845144 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.369339735 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.459321536 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.373970093 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.720402913 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.376865924 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.370960236 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.744790691 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.483820558 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.391687386 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.383765953 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.382482846 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.489177843 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.395126629 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.468724044 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.458277005 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.468793697 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.415218825 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.375075012 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.376746552 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.378047365 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.375721052 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.373750791 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.402784758 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.369162882 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.374704807 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.719135495 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.386552016 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.38347667 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.374507028 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.374096355 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.397508861 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.369251156 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.376022711 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.472862119 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.376032798 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.454608086 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.801615641 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.78312109 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.376478322 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.379534903 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.3751674 seconds)
  done (took 151.448070786 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.443124773 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.453949763 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.496557269 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.394422605 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.429103516 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.501865299 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.394993037 seconds)
  done (took 11.389675945 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.384013342 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.380078627 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.429111728 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.429730429 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.378807284 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.555196861 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.380462814 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.391346337 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.376775291 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.431362797 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.378995929 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.377444211 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.388322915 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.377197533 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.427617993 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.390913585 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.493789712 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.380813723 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.379906368 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.539792457 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378424947 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.387499511 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.430038022 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.391536147 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.379990963 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.386472013 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.201647279 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.379465112 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378102885 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.379898089 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379440934 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.458108554 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.380095603 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.373031666 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377224238 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.49533861 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.380727923 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378559191 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.382099775 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.374287184 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.381387873 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.382573372 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.380188307 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.378390119 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.382639359 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.403206487 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.38063434 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.381575719 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.383511732 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.381147039 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.430945662 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.382859826 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.380388548 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.379532511 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.435089594 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390595945 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.381749993 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.378971094 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.383895764 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380308893 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.545261793 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.430964504 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.384126014 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.428944551 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384497093 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.383848617 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.382509649 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.38652958 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438519041 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.384242505 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.431361805 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.380991557 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.564123007 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.407491633 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.384268994 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.38808808 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.38627056 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.385434647 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.372457949 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.390728871 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.380308305 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.384582658 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.390567511 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383300488 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.382262086 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.56723454 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.490543782 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.383044399 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.395247692 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.3905642 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.380583411 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.438136937 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.385113481 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.382676669 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43696636 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.498423781 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.435970359 seconds)
  done (took 158.328889609 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.388762409 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.393244852 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.388498239 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.407662667 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.405838519 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.386175693 seconds)
  done (took 9.652130615 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.386816298 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.388369138 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.386541044 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.385151609 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.384969241 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.383725748 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.385593426 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387236282 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.390586715 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.385151161 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.387670647 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.387786183 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.386907426 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.383971338 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.385452717 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.386631681 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.384930171 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.381785286 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.386523252 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38456015 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.490580307 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.388280934 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386686548 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.387346652 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.394951202 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.387107321 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.395891951 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.38427584 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.387463099 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.392607998 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.405158193 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.388595751 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.389569583 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.394796773 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.391038071 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.38635966 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392807091 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.393480041 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385231757 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.390729694 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.390393118 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386356982 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.389604379 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.393382995 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.389010152 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.39623949 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.397352623 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397969715 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.388980607 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.392096279 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.392365569 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.384287807 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.38926632 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.394106753 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.390179054 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.412435445 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.395029709 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.389194882 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.387815003 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.389404738 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.39279199 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.391637232 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.390683671 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.393785991 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.38564369 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.394061267 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.391156564 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394520265 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390005141 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.387662256 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.394720634 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.389054694 seconds)
  done (took 102.460796843 seconds)
done (took 434.55086173 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.386880814 seconds)
  done (took 7.674985628 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.538605605 seconds)
  done (took 7.826139847 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.484513607 seconds)
  done (took 24.779518742 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.409643113 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.511647746 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.395266102 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.386309298 seconds)
  done (took 26.991132304 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.925256707 seconds)
  done (took 8.212105911 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.391282725 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.376353178 seconds)
  done (took 14.054631115 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.553550218 seconds)
  done (took 7.839540736 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.406388784 seconds)
  done (took 7.697579826 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.410530082 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.412044443 seconds)
  done (took 14.124619436 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.36504627 seconds)
  done (took 7.653613196 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.862237518 seconds)
  done (took 12.149627082 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.395395563 seconds)
  done (took 7.685520077 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.462588694 seconds)
  done (took 7.750575276 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.215053875 seconds)
  done (took 10.503214712 seconds)
done (took 166.231833352 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.383761708 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.378895649 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.377932241 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.379883024 seconds)
  done (took 26.808632849 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.427276546 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.426187559 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.425800016 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.437568543 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.431104385 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.427405917 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.417418055 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.4191055 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.436295897 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.431158227 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.429429919 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.429297145 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.427818498 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.418777358 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.429255491 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.428716733 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.436946591 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.427435806 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.41958099 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.430205789 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.392630366 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.436658647 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.431304394 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.396102069 seconds)
  done (took 35.502523558 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.918845563 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.4643357 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.548074854 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.446821051 seconds)
  done (took 7.667742223 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.446056649 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.447295122 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.463692353 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.498855676 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.525110631 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.457137585 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.417214347 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.407941797 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.402614064 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.446951376 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.524274773 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.465490145 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.53276632 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.39686451 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.582467883 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.396443959 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.394916003 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.448511077 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.499225228 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.524860757 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.397360103 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.448413525 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.452650437 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.465510972 seconds)
  done (took 36.332947535 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.395009825 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.412922237 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.396886301 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.394829756 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.403923905 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.397274193 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.395990188 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.395751196 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.395964295 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.401288396 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.394347739 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.407001477 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.394432038 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.395058647 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.401498488 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.395814042 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.400748701 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.397523493 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.396078225 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.402075092 seconds)
  done (took 29.265285379 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.389068114 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.256379395 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.740977282 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.645892657 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.390059431 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.385123403 seconds)
  done (took 28.098969544 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.471483557 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.637123524 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.389670532 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.795546688 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.892411146 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.415233795 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.398840225 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.659444794 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.007052788 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.995754083 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.456772048 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.469010887 seconds)
  done (took 20.882829012 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.390290088 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.391842131 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.391446378 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.405534999 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.459937853 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.411202037 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.402770689 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.390687187 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.45917227 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.478338919 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.418110419 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.461786656 seconds)
  done (took 38.35805407 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478432437 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.440818073 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.435723111 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41745928 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131798198 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59878239 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392552138 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.175254424 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.416234795 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664958585 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411198982 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477389166 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.649796127 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396070016 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393029662 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.4499193 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637466359 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915128724 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392340418 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.90063065 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420705738 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409304386 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.827231365 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647151396 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624485336 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370609056 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.653025769 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.172628084 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707116499 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407061231 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404493699 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392942706 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668919778 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090481577 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510156204 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627733097 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41449163 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.034208688 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.405580709 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.706251314 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398925443 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390162279 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405425249 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396392919 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331215356 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395687429 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176239847 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.422793639 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.106341818 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395154979 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679722122 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495138474 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.401604328 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.96566702 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43529958 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.413165563 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.399403551 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492563959 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983802317 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.003057154 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400221021 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.347486119 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406042533 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.735566849 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05530025 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.411967786 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.400643198 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401440899 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333735405 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.713037161 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414695248 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546007805 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.41490672 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.048354629 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108312677 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.416714262 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.3214657 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961830457 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406603296 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.33107273 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626032772 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.184537484 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335987849 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.346823176 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.330233753 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136774748 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39923892 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.994206937 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41118376 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.200064982 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.650982152 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434955248 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421283836 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.623349873 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.27207046 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398808908 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.400336385 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51874559 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416650886 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.160352636 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345392535 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396093632 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6535192 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.607139504 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396006371 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.452330175 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940564394 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418575412 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.414914663 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.415794012 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635367443 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.03996131 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430433328 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.009718959 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418666977 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.175113748 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193578377 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398081826 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404904744 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400234121 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698868075 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.205296285 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.276971195 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468812215 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405612543 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401592586 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.776278073 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.253463336 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.55972743 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.620587212 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422736394 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.41162597 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.402160272 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346829227 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.404055843 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415158496 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.17332776 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624966428 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399042596 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68063116 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336718032 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549906015 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40620566 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.619710801 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.680907756 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.41909863 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663888266 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410129346 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410538833 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414984821 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421813518 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504644376 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426285919 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.417141018 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.657876665 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.403257173 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.408268185 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.774636192 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.184421018 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413124166 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.403636954 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408207836 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039251054 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40092795 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.401804418 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295185087 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.415846056 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473155227 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408633443 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639893024 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.849443952 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437263206 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.403035812 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.405749276 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628587753 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412152208 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.728649994 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486406045 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.93569809 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063425127 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432819341 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.338795775 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.116058831 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.098837106 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40654382 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.592289558 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405003756 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641839608 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.438413656 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419506915 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.026319077 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425092828 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.775935302 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.413060596 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417475741 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.410290659 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406895725 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.829225612 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.043477468 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410621456 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.420148469 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551673083 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.422351732 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.340862107 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.923689419 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413250635 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409423703 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.183338937 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443227021 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.791334235 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242895027 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678738134 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420496002 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687360904 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.876946154 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.442985498 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.404868251 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415024802 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419369982 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.41396676 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408544128 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.41837254 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.759807521 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.846536175 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965577956 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157535077 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987837504 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.868039364 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.444159171 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.292124545 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183450554 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35435042 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064952065 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666503302 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167315184 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366509439 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932432728 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.704817969 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261955306 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697110244 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641197839 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.756595151 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.432122845 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.694143342 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622407869 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441405777 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.422393583 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.342535717 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.700474846 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993394143 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439274719 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48161161 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171807742 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437807634 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.181344159 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.41824174 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.212219985 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857774368 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.975180225 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.799122312 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404438251 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429446429 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240459553 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427109587 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936536087 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070808091 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422055168 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.938364229 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360203284 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651843115 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.443648592 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.403992465 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.198987906 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.896690937 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.668536521 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695116726 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35017607 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.424585694 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982996017 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.276231621 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.416857972 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410191742 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192307311 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415413236 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729418147 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.418041288 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.846775483 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435036987 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.347986172 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341731393 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.103505057 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419584821 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385386784 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927682423 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.418248457 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436292976 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415286027 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278537305 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664704308 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.422822325 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.031636006 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656579674 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415873748 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456700503 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.415965699 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422032796 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.389398194 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.308098141 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647251423 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434978407 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655925039 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.457561571 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.306528336 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.442052318 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626081553 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.291279078 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417569974 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.671677174 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.143600139 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.428593175 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.179471782 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457747611 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417636192 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.430087026 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418369635 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436770665 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503816321 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651878614 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.444230586 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.426078208 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862274527 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434589519 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408603111 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.430226056 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5085408 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.055403469 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.838096648 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.204101407 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043560597 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217953024 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.061064496 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.720200712 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417603024 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417560261 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348851757 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5576587 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936922011 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689215528 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54456156 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.423033278 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438924189 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425177065 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418799305 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62932148 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686726639 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.286257465 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422846884 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.074149433 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.297459383 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426363965 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.623509678 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938916333 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020812923 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526569087 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428480341 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.158025667 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703604135 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.500440187 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416543582 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93505623 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.41777189 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.189891462 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.418876285 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418158751 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558989572 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702987272 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111783999 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.438979827 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.576660597 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.191339991 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.788147974 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.675432056 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.972834025 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.658858567 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063888174 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.190170025 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680854095 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484295522 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652216534 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.55986552 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56569315 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.422485151 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.316099295 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414822337 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262410533 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.12318909 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.424883504 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044749102 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699417501 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.416508552 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.419577768 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438862159 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.424445562 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637470605 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183453748 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645828024 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423068086 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.428181359 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.992634624 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051863481 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722497523 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357059855 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.41721791 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681950857 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.672673135 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440535452 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.87232717 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.130793169 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019933413 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.449407847 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437311097 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433804677 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.17918155 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056765707 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.867905373 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966311653 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082035266 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428920106 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696338045 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.426901325 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420279567 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698042402 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.423091946 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.428485054 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661788667 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.066299922 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283794511 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.426928192 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.814132818 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.35897167 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.646265033 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.503571037 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35227718 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414149535 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.875635825 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.443456231 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55561868 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426275993 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.421807325 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423386188 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.156481703 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701746752 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.422337396 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.425714463 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.438163927 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42549281 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52052068 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00528499 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440936036 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.097182467 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.770047369 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.673924889 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431614739 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.403138676 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.424885579 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421230349 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.134739714 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386886896 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.428809033 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016966506 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.440046094 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.435308022 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.428021013 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.637416053 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629500189 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.432470297 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65689657 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444403987 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43875336 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.32032481 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.188871884 seconds)
  done (took 1704.648344722 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.465742468 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.437251886 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.462562717 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.513642278 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.436484639 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.447210765 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.532852565 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.496002128 seconds)
  done (took 53.114399677 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.422745353 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.58135293 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.454836233 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.439810645 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.436288914 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.420929674 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.922218314 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.445175691 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.428243286 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.432389625 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.431225868 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.434527239 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.097563002 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.428164364 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.425064601 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.436016398 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.434818193 seconds)
  done (took 67.003587989 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.989071233 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.718310244 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.687547308 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.476745398 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.462560753 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.420842907 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.789033585 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.438312842 seconds)
  done (took 55.311945219 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.437255818 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.438592345 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.436158648 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.438557271 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.437635033 seconds)
  done (took 8.51295052 seconds)
done (took 2112.797880472 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.430721343 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.432413233 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.424879333 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.427860727 seconds)
  done (took 7.041042855 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.404890242 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.10290575 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.407811213 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.422511454 seconds)
  done (took 18.664816153 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.430707961 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.473962463 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.189348972 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.094646973 seconds)
  done (took 5.610861117 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.177049685 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.189908001 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.167608753 seconds)
  done (took 7.85878947 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.428133259 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.427184913 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.426975759 seconds)
  done (took 20.607801736 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.73648627 seconds)
  done (took 3.064872272 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.57680346 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.623341817 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.806458142 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.768905091 seconds)
  done (took 8.101704334 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.820167728 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.810192847 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.609754539 seconds)
  done (took 6.566185629 seconds)
done (took 91.747785336 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.514483158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.44673812 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.63697294 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.527422262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.649782591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.636934107 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.745391685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.495498081 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.001187049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.976936977 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.480273038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.644026059 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.706638355 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.447938996 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.707037055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.825654786 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.650964626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.542988833 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.168456055 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.366326763 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.751357529 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.11735905 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.312149174 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.140585259 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.644101093 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.579977719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.697393546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.819972111 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.350751451 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.726583661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.579460454 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.431049397 seconds)
  done (took 197.648583731 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.42854709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.42195596 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.437233684 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.423050556 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.436097085 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422801232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.421948511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.439436103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.423396311 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.437721477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.420510293 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.422196348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.424864779 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.453884037 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.423305371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.43983521 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.431520405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.425975315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.434609151 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.422986784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.442438635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.422960295 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.451346948 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.423461022 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.422839182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.440775981 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.425210712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.424849422 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.440625585 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.455028852 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.42311351 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.422995025 seconds)
  done (took 207.115787043 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.430561926 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.438787349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.422620158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.423294999 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.425295562 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.444228062 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.423583831 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.450123502 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.437722367 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424224422 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.452486887 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.423517225 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.425715322 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.426734126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.440412208 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.425234552 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.425538121 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.423381177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.43950182 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.428527171 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.426358491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.458533462 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.439778756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.427704105 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.43899419 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.426177082 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.449547539 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.426525293 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.460476035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.427959025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.444167754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.427200762 seconds)
  done (took 207.216333911 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.631121544 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.435184007 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.436287028 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.370676857 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.435555451 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.44013497 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.434716508 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.634050281 seconds)
  done (took 15.149990246 seconds)
done (took 628.458737058 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.934392802 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.567754875 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.64232499 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.455293316 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.281949113 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.471898391 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.457404789 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.647480023 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.395082154 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.651610494 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.78281311 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.467923827 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.922086803 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.455652794 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.731730526 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.561971193 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.374703754 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.467799503 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.792933458 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.047784102 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.731792956 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.968210273 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.65827008 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.384870036 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.944908951 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.969717315 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.222564444 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.334825691 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.472755896 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.803364305 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.277365096 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.522563753 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.504690811 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.524319888 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.587685439 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.561458841 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.460217526 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.51957418 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.66609398 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.721960032 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.071194345 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.200579295 seconds)
  done (took 97.553354092 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.427576872 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.422590841 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.421780425 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.4232762 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.425965229 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.424968716 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.422841698 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.419942882 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.425012286 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.423086048 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.422699955 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.424196233 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.423248279 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.428924724 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.422443637 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.424896739 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.427549648 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.425051085 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.421003774 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.423191208 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.426048735 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.423401398 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.425393196 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.424091857 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.423572243 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.424013423 seconds)
  done (took 38.363565189 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.447857615 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.702483831 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.880222167 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.44518675 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.4460875 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.452445388 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.533155348 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.450173785 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.446220988 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.446352016 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.614531773 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.442745528 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.481201388 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.912073106 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.442311959 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.448172793 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.444048121 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.442869987 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.710019864 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.452259355 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.559860814 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.449382544 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.532841627 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.455154462 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.469395973 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.450107858 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.454895548 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.023151903 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.461216257 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.613772024 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.309765151 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.530920592 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.97250847 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.909313551 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.311041631 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.451061898 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.446044584 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.610739936 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.442087578 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.450370538 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.531541501 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.44347969 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.888849077 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.132703833 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.46268775 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445344109 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.037856505 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.629651193 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.718860005 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453524311 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.915072984 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.446936036 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.446330844 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.450398268 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.726503698 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.451895763 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.447620568 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.073217522 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.469451985 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.537944741 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.445912454 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.446449863 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.714560293 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.443713857 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.706824405 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.446447567 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.457450476 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.468047154 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.889474195 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.447199506 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.163881112 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.464573632 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.450067674 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.609391225 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.703405747 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.071995884 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.469240817 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.725817817 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.983421039 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.548257669 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.451982468 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.015798756 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.551785982 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.453269467 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.455093296 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.449947999 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.449450091 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.551288283 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.532824687 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.1001939 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.171895751 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.097877143 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.552565107 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.45425018 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.449789923 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.08969289 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.465779987 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.446561922 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.898509308 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.170223235 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.462318123 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.457925183 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.166889077 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.466105392 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.543584679 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.453445826 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.905497232 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.450745862 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.50198101 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.448629977 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.453562372 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.473493111 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.536793085 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.452600159 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.452311181 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.142666234 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.638484132 seconds)
  done (took 191.067856083 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.450187009 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.442738839 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.451945802 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.439585347 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.445955414 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.456942813 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.450319667 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.449292778 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.450937786 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.448407828 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.450980557 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.445136098 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.452097007 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.451874119 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.454340857 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.457958456 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.062794331 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.447225497 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.448450166 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.442138289 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.271214584 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.451493176 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.448789839 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.459160502 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.450311196 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.450155058 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.455023167 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.446593623 seconds)
  done (took 155.378102686 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.456558223 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.084241647 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.470575839 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.597925714 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.476493627 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.449281224 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.598136113 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.518491532 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.475474563 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.454743071 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.453007641 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.788914723 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.452733267 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.016148195 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.65837213 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.618614989 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.009914335 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.469251884 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.45365053 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.454233276 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.601163328 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.453561576 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.799226489 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.10245908 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.477996466 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.096269083 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.444437529 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.453943743 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.453635221 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.102994988 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.476050553 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.802293849 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.54702385 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.526203441 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.123223877 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.068496107 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.033736641 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.613898634 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.452503645 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.457799541 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.452765858 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.437576651 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.072766121 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.469376391 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.459525326 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.064793976 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.471565214 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.45965454 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.464300964 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.457840911 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.527210428 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.542945983 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.818103608 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.077745891 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.555609016 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.464583079 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.605898753 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.860293235 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.453953295 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.051954519 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.442874962 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.110380204 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.480653782 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.444030594 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.459564926 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.465670552 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.629188516 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.609952228 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.02927782 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.469427261 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.049401882 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.637723596 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.458191043 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.456163176 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.459568722 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.103788458 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.068160873 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.647941574 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.611742254 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.672192604 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.444758061 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.458457268 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.444803004 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.546711315 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.460605685 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.105891072 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.06735128 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.478111979 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.458679465 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.458644966 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.463592706 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.653457355 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.128422491 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.567571127 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.017899738 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.822103095 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.811748719 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.46556661 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.52799889 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.470652927 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.808079283 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.466465313 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.526544867 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.922525809 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.804968807 seconds)
  done (took 174.854443568 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.724419669 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.753055616 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.56109619 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.613482718 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.113584402 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.069173097 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.796878414 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.609813034 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.582704615 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.739116603 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.739950631 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.55455323 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.695681829 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.549046208 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.24664494 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.551425696 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.580646047 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.620329854 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.631992761 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.540401561 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.171719408 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.762838248 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.659769508 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.487188525 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.561345053 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.299556598 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.055536653 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.002048083 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.66192684 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.859765653 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.035607166 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.644663271 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.535061608 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.20814803 seconds)
  done (took 70.573903495 seconds)
done (took 729.123082236 seconds)
SAVING RESULT...
DONE!
