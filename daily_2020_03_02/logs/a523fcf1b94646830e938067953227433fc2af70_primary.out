cset: moving following pidspec: 17099
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.418604649 seconds)
loading group "string"... done (took 0.601999672 seconds)
loading group "linalg"... done (took 7.9310662 seconds)
loading group "parallel"... done (took 0.17782987 seconds)
loading group "find"... done (took 1.177099498 seconds)
loading group "tuple"... done (took 1.86212904 seconds)
loading group "dates"... done (took 1.298859834 seconds)
loading group "micro"... done (took 0.228631904 seconds)
loading group "io"... done (took 0.966585474 seconds)
loading group "scalar"... done (took 39.021533345 seconds)
loading group "sparse"... done (took 12.312204471 seconds)
loading group "broadcast"... done (took 0.997026268 seconds)
loading group "union"... done (took 12.711248845 seconds)
loading group "simd"... done (took 4.695065703 seconds)
loading group "random"... done (took 9.415433296 seconds)
loading group "problem"... done (took 1.713471919 seconds)
loading group "array"... done (took 21.871400104 seconds)
loading group "misc"... done (took 1.777525489 seconds)
loading group "sort"... done (took 3.438724964 seconds)
loading group "collection"... done (took 18.014477828 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.564679427 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134347745 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135770048 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128267419 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.156482376 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122853107 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.134567035 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.094820283 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.853627704 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15987376 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.125868197 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432363899 seconds)
done (took 5.543796822 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.182500604 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090166685 seconds)
    (2/2) benchmarking "String"...
    done (took 0.091309538 seconds)
  done (took 1.325389454 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.074125597 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133868736 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.075139724 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075053932 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.078479341 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074116512 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074438002 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07492098 seconds)
  done (took 1.730340888 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08073389 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.077865479 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.074566409 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075699244 seconds)
  done (took 1.453720485 seconds)
done (took 5.92060372 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.80752817 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.219613829 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.195778427 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.419720332 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137266682 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182079775 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656875621 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329296359 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.196946036 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08406645 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117216994 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.352334009 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132699634 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.653421496 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.083426498 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098894292 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143685497 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43358784 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.074840896 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090306077 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09621516 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.138068891 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092610568 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081147156 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153216602 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075494533 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143651337 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087860744 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07392544 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226681852 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.179555039 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.6669647 seconds)
  done (took 10.60710578 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.107857198 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.107262839 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076814941 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.133876779 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.107884046 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077404111 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083085884 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075182978 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.098260423 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.141359607 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.099768007 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110829025 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073656965 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076817191 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.09274042 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212726945 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.088619091 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088899568 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078275954 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086251418 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11575671 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085710433 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087981849 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.088552089 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.137148934 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.187322935 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106621485 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10507867 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074759436 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090189969 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122622197 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13643349 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0742982 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.073509369 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.134822065 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.101417858 seconds)
  done (took 4.919580772 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.024842762 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151960513 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097647904 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141806757 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072220362 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.115826802 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073382434 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092000942 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.218539165 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.419343013 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.63406917 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119159196 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113289423 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075157766 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.0763912 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074709246 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.554662483 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105071996 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114716135 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089519161 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078397667 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.076731592 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363741076 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075005409 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07209036 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076994578 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064142317 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.092941319 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.099381326 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129857128 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075621911 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.973892299 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167161872 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073029004 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107174334 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.299527794 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0994275 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148995474 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076990234 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.073132629 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.071867342 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162531726 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077670927 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073754357 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091862495 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1111838 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124646556 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073448389 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074197161 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173159945 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07257429 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087709796 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.105882738 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16107122 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.085343401 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072111078 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286197651 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097602142 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077805738 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073118356 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182529711 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132799574 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.076322256 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074259001 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076495885 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076535145 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368840753 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.074283647 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.886008606 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077435335 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085813441 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077584227 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07645806 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080292855 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080263568 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096309739 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.074058967 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082116952 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073650911 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.074045189 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.07513295 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.092066344 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.403385406 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.073889862 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074767012 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.173448595 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.073579542 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09816257 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104037433 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.075132532 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073833279 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106977732 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075885751 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074337055 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119556538 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.075762025 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090198994 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07762006 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.120412607 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077134551 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.098615187 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075884295 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103895636 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077463643 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111234596 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.088269829 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078340334 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.448578043 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074334074 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073933665 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075725659 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073798311 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07577614 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074329836 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.086188715 seconds)
  done (took 22.611495874 seconds)
done (took 40.307682423 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.261769749 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082845482 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080294295 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080627797 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080439443 seconds)
  done (took 1.825341672 seconds)
done (took 3.047472239 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.13125058 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108188588 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072143908 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1056931 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072367806 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110705763 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109700481 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085570325 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109066712 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072023249 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106229396 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07194647 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07258784 seconds)
  done (took 2.466407914 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091747071 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092966359 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078493796 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092562448 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071364079 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091989336 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090333378 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097516799 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090207218 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081656863 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071285653 seconds)
  done (took 2.161988186 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090150492 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093092169 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077639277 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091007967 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072644548 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09170649 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09313373 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094266865 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090573069 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082957413 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071953067 seconds)
  done (took 2.15762244 seconds)
done (took 7.994707956 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.086017575 seconds)
  done (took 1.287383316 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.581333217 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.959631748 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.089651957 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.117706534 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.20078142 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123695036 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.26743187 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.094875756 seconds)
  done (took 8.818937227 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097401508 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077805359 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089698152 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079003158 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075813378 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079640713 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079794704 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077466526 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078202366 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076491386 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076952782 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079444006 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07555346 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076937083 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079010923 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080264045 seconds)
  done (took 2.553588144 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099845507 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099918574 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.08122674 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.081922355 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079534902 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078876405 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.081215238 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081517294 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077485651 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079421512 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.081537826 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.08083052 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079157757 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071464932 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081332901 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082064713 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078036163 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08106304 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082374815 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082849537 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.081550823 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071366205 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079096326 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081461773 seconds)
  done (took 3.263324909 seconds)
done (took 17.13285373 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113377334 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075380105 seconds)
  done (took 1.398219383 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.088786824 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089369147 seconds)
  done (took 1.39523032 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.090127535 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.07339524 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094932642 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084491109 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.073990339 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.073322523 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093309089 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.073630972 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.073340271 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.073597791 seconds)
  done (took 2.021018614 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.075983511 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084013953 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.076668875 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.088645618 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.080639417 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.071469184 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078903221 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074752075 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083787994 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.070277892 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078691027 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090556249 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.078078508 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.09197173 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079683887 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075587867 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077286142 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074419683 seconds)
  done (took 2.651328964 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.073067376 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.074329566 seconds)
  done (took 1.371205926 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.074477227 seconds)
    (2/7) benchmarking "second"...
    done (took 0.071464989 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073487205 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073873106 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.071048526 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.069791032 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.071441815 seconds)
  done (took 1.725611452 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395364531 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.126516228 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328527872 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079154133 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088895027 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.272964571 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.0734578 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078131676 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.079051556 seconds)
  done (took 2.785890316 seconds)
done (took 14.572471346 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088236728 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095076564 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.104753623 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.386639276 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098394263 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073825415 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121254764 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.195124487 seconds)
done (took 2.398111702 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220134435 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.703916543 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.445722392 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219779985 seconds)
  done (took 2.592934794 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360973206 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.096125363 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066697738 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074931536 seconds)
  done (took 1.832718259 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074009244 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077156202 seconds)
  done (took 1.382223525 seconds)
done (took 7.260390234 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074230374 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07417267 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.071653465 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094797314 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074142212 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071788349 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.071520128 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071580991 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071125358 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073424161 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073622203 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07360644 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.074107391 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.073897262 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074321631 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071843245 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070906473 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.18721583 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071176255 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071491675 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070794423 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073627934 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.070915605 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071169237 seconds)
  done (took 3.142406464 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.092860147 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.07364111 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079271936 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.078301115 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077144486 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.078898272 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.078658518 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073258871 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.078750435 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075806045 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076519551 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.077711639 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075505906 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.077564193 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076063077 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.077543474 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.079149102 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073429567 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075957245 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.077216318 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.078310362 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073521456 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.076725669 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078481211 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.076954972 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076723928 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076219998 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073471485 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078316726 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07712603 seconds)
  done (took 3.55803289 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.0773918 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070901761 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.071962517 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.079000886 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.071089335 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.071550101 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071439677 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.071216749 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072151203 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.070571771 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.072400217 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.070949876 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071088969 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.071749225 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.072150845 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074807278 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.086948994 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071598102 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070831716 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.071606862 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07478642 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073392022 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.071198915 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071172531 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070469587 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070844531 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.071986438 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071563872 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.071995839 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.070873217 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.073948138 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074739488 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.07036099 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.077889287 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.075065889 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070970166 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.076401073 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07065502 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.071719479 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.070685439 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071012992 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071432722 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.071026014 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.078363139 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.071731044 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.072850916 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071328699 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.072841999 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.070982226 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.073505012 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070862339 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071037942 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.073325295 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.071910428 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075170452 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.070978504 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.072135172 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071048254 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.071785013 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070748703 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071220571 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.070972056 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.073936446 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.071940191 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.086916246 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078308243 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.0712765 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.072560163 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.072262713 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073771919 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.072634934 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.085451862 seconds)
  done (took 6.499613346 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09621363 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09355217 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072997803 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073024217 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06962093 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072002162 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077300008 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071272685 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072939887 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.089671106 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071344988 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072870705 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073456583 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075357544 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072077111 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072646787 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07940321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069068119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072176964 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075165481 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071560537 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077044282 seconds)
  done (took 2.923979537 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161440716 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078315778 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112435499 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082917118 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077037087 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08238636 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.077891269 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077055873 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077296122 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074588373 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075038676 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077385094 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076951218 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075094549 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075373804 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07477412 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077422546 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074417001 seconds)
  done (took 2.754878291 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.084074524 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.073366057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.09461727 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074433495 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.073376765 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076388896 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077846678 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0813082 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076307468 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.072993428 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080875568 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075741207 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0759909 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073557899 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076136438 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073607843 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076000122 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073055137 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080751847 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077060921 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077524503 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08055305 seconds)
  done (took 2.953784969 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086570744 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075911715 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088599788 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.076079061 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069515445 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071858871 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077402443 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073516152 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077353251 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.074816319 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073307891 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071520993 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076595585 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073219572 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075946299 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07322904 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075232659 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073212224 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075497435 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069894703 seconds)
  done (took 2.758330975 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09305709 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076204776 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075770567 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082954247 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07573429 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07662925 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082029812 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075537436 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075376706 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096243861 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075954314 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076189465 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082200603 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08043572 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077757565 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082236712 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082559033 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082033869 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075526537 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075364437 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096373825 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075244023 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082389418 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075529256 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076942331 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075330805 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076059918 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079888073 seconds)
  done (took 3.488492122 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073943597 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073407295 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.071120607 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071623199 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.070695551 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071432478 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072088894 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071801798 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0737676 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071389203 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073757456 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074207928 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073561146 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074204007 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074733279 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073872394 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073224894 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.070863291 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071293409 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070753979 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.0736799 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073547186 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073458054 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070863024 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071099251 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.074435612 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071311619 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071427193 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073297162 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071053119 seconds)
  done (took 3.430076309 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082668517 seconds)
    (2/2) benchmarking "in"...
    done (took 0.079915206 seconds)
  done (took 1.418407698 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069971792 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087182684 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.071572563 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078649005 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076675573 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074735531 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080914372 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076559111 seconds)
  done (took 1.867163148 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.090797827 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.085553234 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.074429787 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.085644635 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.084853628 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.091037311 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.144571638 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073963338 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080338411 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071571608 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087332384 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073353408 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.080267582 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074607505 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.079747764 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080580656 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.072164411 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079066001 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.076212958 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.072216517 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074832236 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083381073 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076797735 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06897579 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.074845702 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096332001 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.085021537 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.073167295 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07685504 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.081188135 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07990977 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.067979853 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.074616709 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.074773977 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.072107908 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.084089444 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088822305 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077527441 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.082728554 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074715062 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083410249 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.068957698 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078589609 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081113793 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085549905 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.074412922 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.075254227 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.069320135 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.072262587 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.079159711 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068946464 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074138699 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.068549812 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080971132 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077351883 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084221738 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.07341577 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075753117 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076842183 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077302921 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.081149294 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075513081 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077510032 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.074300995 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084457165 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079340261 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082261456 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.069117287 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.068053181 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.072972983 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083521866 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097142891 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079375035 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07410446 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074587892 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071636138 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077452679 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074754045 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079763606 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080580123 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073767361 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.079386446 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081138261 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074497409 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076985437 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.081737883 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.072481226 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.075905026 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.071728431 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089244378 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072387417 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071505537 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.072201767 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.086372532 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076827063 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.072923061 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.071250586 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080199267 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0669967 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.073293199 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073652151 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07412058 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083032092 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07626619 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0769755 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.082258697 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.080228295 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073371257 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075189968 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.069931225 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.199564845 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.073905058 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.08209433 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.069043917 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078209936 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.075439898 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075684687 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.08293617 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.073279516 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.074464883 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08182785 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080361822 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07331275 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070887721 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.077206528 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.074441953 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077311705 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082338149 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.073279341 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.069306498 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.069671954 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.078217148 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.074168472 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077354377 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077994842 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077139865 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068620557 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071984109 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.078153913 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082674049 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074570025 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07628391 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.079709748 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07544826 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.07393259 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080456924 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.076671489 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.073485731 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08014059 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075310479 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.069263589 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076268958 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07765805 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.073233011 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.077353615 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076926743 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.076951021 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.074384205 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072483157 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080114832 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074106344 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073408202 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074689382 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.073748638 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084758941 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075813142 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.069096691 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.071400442 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082202942 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.072556455 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.073546328 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073043465 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076542162 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.074271442 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.072357647 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07443226 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.077630901 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082895358 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.077588444 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075137854 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.079524094 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.085599318 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.073920837 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.076492049 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.074148525 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075269425 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.074076083 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083471299 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080065153 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078505889 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07667936 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.071404955 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07964865 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081811523 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073318642 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.072262707 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073863529 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.078185437 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.080377904 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.078228365 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.075133958 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072148101 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074846627 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076709772 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076866616 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.073044409 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073605489 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.079621289 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.072168229 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.079962105 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073985262 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083188104 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076628096 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067946329 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075822986 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071729589 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.080128102 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067902136 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.071534846 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.072375154 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072862762 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.072614766 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075435418 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.067271292 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.208738534 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08262883 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.076083277 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.075653518 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074508227 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081485403 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.076654632 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07873674 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.079113334 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.081097697 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084942551 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.074786677 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078479301 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085071318 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.074925214 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.068736198 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082910356 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.073255298 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.073440436 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.073501821 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.072394038 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077914945 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082353841 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080877601 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.068169926 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.077234076 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.072941839 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.073505441 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.070349781 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.078914138 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.078171562 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.075005956 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081696916 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075142608 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.074624319 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078601203 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.07441355 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.075317238 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.074598915 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076827999 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07446354 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.076389565 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.074106021 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.077299014 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.074460439 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.072613799 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.076284457 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.074424468 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.075151191 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079487603 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.074248371 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074205886 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.076285634 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.074380483 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075192481 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.075021281 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.074140462 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078658502 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0752189 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074605879 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076744192 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.069698852 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081723388 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.073730445 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082162921 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074581722 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.071184047 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.080602516 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.076438383 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.079189236 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.075910627 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.074010021 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.074925501 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.073089565 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.076470585 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080790377 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.07269459 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084817951 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081283937 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075580537 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.077013679 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.075628219 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.075594506 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073655871 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075429182 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.074565163 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.075015832 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.074244861 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.079431442 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076672868 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.074556367 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076431765 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.075235008 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074172804 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.074524811 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06831527 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073201501 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073467614 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.074016619 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082966231 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.074068755 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.073787072 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.073259851 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075117969 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.072989913 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070169842 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080749936 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080359719 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073796707 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07975512 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072849732 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074311234 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083307387 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066868973 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.071168597 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.071105324 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.202962051 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082631752 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.075308924 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.085188523 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.075318963 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.074469739 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071789054 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.075438058 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.073170901 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.069502926 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.073043241 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079391987 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.073661582 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073881081 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.074711706 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.077359421 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074663445 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084758112 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.074045876 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.076352891 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.075019887 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.071364371 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.075102661 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073856514 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.077248221 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.074966996 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.072606675 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.072677076 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.074215899 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075594253 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.076070138 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.0747413 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076786441 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08091352 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075017703 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077411853 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077162482 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068895401 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.076907555 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.074143896 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.073724047 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073001411 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077727056 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077508711 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074435602 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.084407128 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.074017601 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078498443 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074039442 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.072384738 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.073029735 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.074185219 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.075104313 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073487283 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.075247025 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082524751 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.072779962 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.077877279 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074567191 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.075007911 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080218196 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.075097718 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077407422 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08056559 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.074261015 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07630749 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.083231302 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.078115902 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077894291 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07458315 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.075901024 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080300268 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.073292122 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080848741 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.074627268 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.07437868 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07562492 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072232751 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073949772 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.074056138 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073569979 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.080652191 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.075018336 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073702848 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.073760607 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.072181236 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.075587708 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076408744 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082524942 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.077003048 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077166249 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.069388652 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.071396034 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074610997 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07173061 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075701971 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076922423 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079534007 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07574755 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.073728866 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072786317 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082998618 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079323503 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.077481535 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.071441971 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.077144433 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.073967185 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075971841 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074655715 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073685677 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074665022 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076444056 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.075004574 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.072432165 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079419775 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076502566 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07408141 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075364225 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.206413212 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.076449917 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.069920761 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.075165507 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.077999194 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080175792 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.077783558 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074466067 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084504939 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.073254481 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.074576729 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077085788 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073778125 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.078935866 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069382771 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.077339603 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075474623 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075012495 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.069489363 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.074584124 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.073252705 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.077545677 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.073918 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.069688369 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085738182 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083760848 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07773012 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073972716 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072528452 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069333831 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068923819 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07396069 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075240736 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076192812 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.085145761 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.074546931 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.07373943 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.069257788 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074110666 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077215627 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077886223 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.071326511 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069861694 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073013712 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077715666 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.079482991 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073032078 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.073703415 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077797139 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076338621 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.07185472 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077959211 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.071086681 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.077942441 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086672451 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.074798577 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076017358 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.081160116 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08139124 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073897625 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.069314204 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.074805463 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.078588917 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074999114 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074775142 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.075917333 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089157475 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076312508 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073182939 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072294682 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076565434 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.073586228 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082419791 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075208232 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.07402951 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078608194 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07867363 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081922045 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077360246 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081660912 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.076876109 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077178653 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07326424 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075035477 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.072919692 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.073035395 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.075159296 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07427984 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.078759253 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081226443 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.073608373 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084864693 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083152453 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.076141746 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.070510018 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073488297 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073154016 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.069174983 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.074149644 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071597562 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.071986586 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.072535933 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072873048 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074887515 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078726096 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.075323794 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073697643 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.074062173 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.068630236 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075480672 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075828131 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074631945 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.070047524 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072952245 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.073428153 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076770368 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.208791787 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.072941282 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.077429172 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.076369565 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076567873 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.069813908 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.080943104 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073962503 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.076555118 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.074633043 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074779916 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.074536283 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077994505 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078553135 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074728512 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.076431316 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077818184 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076561182 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.071881199 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071794426 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.080134871 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.072457039 seconds)
  done (took 47.338134273 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108793162 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071266144 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069368937 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069466762 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079406275 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069959011 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06902268 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070060027 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07013917 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071877655 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069175238 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069082519 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076713839 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08385957 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079464415 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073975674 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069421043 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069835429 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069697839 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070525918 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076784836 seconds)
  done (took 2.90127753 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080746712 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084546218 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081846439 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088487886 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077756004 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076943239 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082104806 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077246078 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085404139 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0792096 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084729677 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076761527 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079532299 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07919064 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079348296 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077676725 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08455569 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078149998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077284931 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082080266 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077800792 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082126081 seconds)
  done (took 3.107573869 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.074467882 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.073757079 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.074428886 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.068618518 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.073231587 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068280345 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076395016 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070799149 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.076766725 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072490609 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.07226681 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073005244 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075735375 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06902107 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073818702 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.07155666 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115161915 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.076339922 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.0736265 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.07477953 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.0683302 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075379364 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.068571784 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.069276339 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.072507047 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.076421609 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073645403 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.07186314 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.073189269 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.074177815 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.073242236 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.071011231 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075182665 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074306921 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.072259466 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072168073 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07325265 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.073401429 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.068747365 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071507383 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073819363 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.071225767 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.074368062 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07402337 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.071190456 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071518795 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075500739 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.073314439 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06843933 seconds)
  done (took 4.942774658 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084360866 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.118008875 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.074640905 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096755124 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086544371 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078975788 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.076949811 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098252445 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070402502 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.071020907 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088202498 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086166452 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.073147209 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.077564641 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.080166861 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072743193 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.074014506 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.072089439 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.076203579 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07171636 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.076730516 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.079929366 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08623966 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.085318939 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07621055 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071485471 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072204594 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076698094 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.085259511 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076716541 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07743781 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077690455 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086949026 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074783835 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072098302 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074886541 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.0885298 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.073045601 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074984712 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.071241231 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074737421 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076654649 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07970219 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088533831 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072961236 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.078118605 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072423946 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.070296502 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08506555 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.076411413 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07993508 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.086249611 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07697056 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.073400556 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076901775 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086937567 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.072500023 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.071012602 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075630886 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084575045 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070059671 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076229115 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085523754 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074454043 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07907125 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08607079 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.078893963 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076537166 seconds)
  done (took 6.844582177 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083007349 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103001696 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090369577 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088954723 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082951025 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.083096744 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082700592 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.082805781 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091002882 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086761382 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08270049 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122866959 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.078380505 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084768817 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082969874 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08283811 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.082450848 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083173612 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08256478 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082302006 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.082561941 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089308692 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082746804 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089526777 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086140122 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.078589424 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08298157 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082825159 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089156661 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082555441 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086127439 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082949823 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08245007 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089110695 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085976598 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.08238139 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073099094 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082531211 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.082670454 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082994796 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078837712 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089911996 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082944863 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.078285673 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082412039 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082245947 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089275307 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08630288 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085294571 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086292938 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.08323591 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089017117 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082332205 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082240082 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089284579 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.091406715 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089147383 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088933129 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082684981 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08893942 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089493956 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091205301 seconds)
  done (took 6.664211192 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090086068 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082430177 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089310935 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068702162 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072276648 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079283586 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071620756 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.071706957 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080633954 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.083791877 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082969644 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07888078 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082035146 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082579264 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078531756 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081648231 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078464695 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07918634 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080238251 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078414027 seconds)
  done (took 2.951726737 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08225224 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090504913 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.074209718 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078471778 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.076667578 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078432974 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075943575 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076531117 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074744266 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07658997 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082773142 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082776064 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074587038 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078856012 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08216189 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.078293075 seconds)
  done (took 2.61594993 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.092634185 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.080337756 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.087078001 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.074004297 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.074285941 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.069954703 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.072504405 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068509976 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069462638 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085616071 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072700798 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.08356404 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.073416561 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.072026443 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069884682 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.077962606 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.070096635 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.070174129 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.073691635 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085169999 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076959564 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.072364565 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076007984 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.073067925 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075997737 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07787996 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071790115 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.073393633 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.070175557 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.074733447 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.0762035 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076494354 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.070197323 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070870139 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.072795898 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.070347471 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072772343 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073593157 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.078416443 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.073612826 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.071296037 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075827484 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.073627772 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074074515 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.069535468 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.073985967 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069665702 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075215641 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.071030188 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.076049176 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.073231575 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.076007409 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073822253 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080114323 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.076053217 seconds)
  done (took 5.463250735 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087600485 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077303116 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069544185 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071589889 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077102129 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07476984 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076911516 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074344631 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074595295 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071692982 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076008443 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076329034 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075158046 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076875627 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074764508 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076882151 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069839288 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075221826 seconds)
  done (took 2.720060053 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078740367 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07384111 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.080723128 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074486446 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.073212605 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075651912 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069260653 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.072528698 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072738332 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073699181 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07332277 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.075949294 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072013317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.076079205 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07371575 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073287129 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.076480109 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071922103 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.073362803 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069887741 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076125666 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072900575 seconds)
  done (took 2.987090171 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.10139231 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090915756 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.149873004 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086733742 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093227643 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.080246958 seconds)
  done (took 1.960861348 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099716079 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108448172 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074592481 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077202121 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083043326 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077568183 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077297031 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077430888 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08512239 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08256927 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077703415 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085485968 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084803567 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084937924 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082760922 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08321526 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077535387 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079877508 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074162832 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09034649 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078333526 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085952037 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077858333 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077756648 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077566376 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084197305 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085090031 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08339417 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077480912 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085734114 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082562858 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077519751 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085211876 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08263528 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076804261 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084803034 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077383607 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08964744 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083339773 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084942081 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.076786344 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083505219 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084846682 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081392196 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08543227 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077421313 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081152674 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076957313 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07723757 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091807786 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083378098 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084141879 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082815299 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08560679 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084672985 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091730595 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082488058 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084019227 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0830423 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082968875 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08356323 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08303172 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08346518 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082701512 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083227473 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084426983 seconds)
  done (took 6.825824254 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11207293 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074707037 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078314694 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082393833 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084746429 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077425813 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077424683 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077613782 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077810511 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074806741 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115013961 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0779516 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08404307 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084090514 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077851718 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077087749 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077608385 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084010667 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074748815 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091894631 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07716624 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08355471 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085004146 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084567919 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082431098 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083037865 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077409359 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07761853 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077180393 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076966711 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081905444 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077490808 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084674415 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074230488 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084058622 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077771566 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077211771 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081487281 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078331954 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082651008 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084558099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090185309 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077588819 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077455997 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082611216 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077565999 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077185446 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074714802 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077185334 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07444639 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082963274 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082686407 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0829566 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083655067 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077501698 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077831762 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07751175 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077070615 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0777355 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082565153 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084042816 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077407046 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091379204 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077664855 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077312737 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083919334 seconds)
  done (took 6.731107738 seconds)
done (took 140.083053454 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.19547512 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.177173223 seconds)
  done (took 1.727458979 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076367912 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107051877 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08498372 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136442536 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.074629807 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108377129 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.106680301 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.085915087 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074590373 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07471212 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073738958 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075939723 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138527113 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073968477 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.073990779 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076625019 seconds)
  done (took 2.811156927 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107009325 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172037136 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110039904 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.072745291 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10627829 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080073166 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072508269 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08244715 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077771112 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073327817 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079763812 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077706184 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073548008 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077479109 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.080501145 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080078405 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072858588 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079974531 seconds)
  done (took 2.946974929 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105914352 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098397851 seconds)
  done (took 1.576252161 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161552387 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.142903668 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.213703427 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.352966829 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165102604 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.159168735 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149343654 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14797074 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119885814 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143641658 seconds)
  done (took 3.124957689 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107653601 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160998371 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279869167 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.126880341 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.080486765 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.100099474 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.127770022 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.085911094 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087167409 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087370116 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087013627 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.084041687 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.107726525 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080846095 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.08275892 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.084275896 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.11093948 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.0811522 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.083047937 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.082856899 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109447089 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.074046883 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080372648 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.08200928 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084258791 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084359983 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07381159 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.073774706 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083495044 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.082870112 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.084133409 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098669835 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084018309 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.111633452 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078625234 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112846565 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084306376 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.080972432 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.083009963 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.080330237 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.084547415 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.085130139 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080261488 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083975248 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073347851 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.084365599 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073426848 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.074393369 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084523133 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075183475 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.085440037 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083781429 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111353395 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074336765 seconds)
  done (took 6.406276178 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112054005 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.114343199 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078607446 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11946374 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11068268 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077435015 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111371538 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103564515 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111810189 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07776647 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075295672 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077127865 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086723328 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.089250931 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121544188 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.114720036 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079626139 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076697012 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114413941 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.113451986 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076108586 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106090656 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100137203 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111344168 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075765724 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077008004 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076097602 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076967551 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083074841 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084228082 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076052134 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086495416 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090748644 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084107743 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074675231 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075228 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076664393 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.085950073 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085721872 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085664908 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.084404234 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075214343 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075065086 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.077100405 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076582337 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075631913 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085108678 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.086317725 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.084548436 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076197806 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077344116 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075971896 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076913633 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085966989 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083570818 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086580682 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086270868 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075994901 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075679201 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.079130146 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086402366 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085302376 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085864973 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077417156 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086256483 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075918099 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087248368 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090267801 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075947269 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077840006 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075095972 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076000335 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07891891 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084445122 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084401247 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077754888 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075804748 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07677496 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085844629 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084874431 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075967806 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083475181 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075073146 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075019679 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076440135 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07631537 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083123534 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.085121905 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076340173 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076174821 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07437703 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074686899 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073530525 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.082089716 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084012683 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083187232 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.082628951 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075357338 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.083323338 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.213602122 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077474746 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.086609267 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076731892 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077726388 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077266756 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085995708 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.084063971 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085944545 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07632646 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076895134 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08516101 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087799245 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.077434692 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.085013609 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08672463 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.085408004 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.074892529 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087793766 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076409098 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087682241 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076323993 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086411483 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076235458 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085223277 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076166105 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075181692 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076012755 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.085789883 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077289493 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076293508 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076703197 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076204867 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.086273903 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08799892 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077411978 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08473369 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.084652901 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076548694 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085144213 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075601176 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086268458 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077008392 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077590288 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074939855 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087352734 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076375103 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075856062 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075752133 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086581952 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07658134 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085893159 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083702758 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074786426 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087717098 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086521968 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.083181771 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086620177 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07728042 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075952232 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075971484 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076008599 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085085191 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085321962 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07696969 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075358393 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084432694 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086171371 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074645598 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084734295 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083771325 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084389613 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076467667 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075221227 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08716444 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08615598 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.084205984 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.085017027 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085256056 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076022875 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084379747 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084664343 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075716412 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089849504 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07584349 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088851849 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084497214 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082828653 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08443709 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.085950662 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.085735436 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085865312 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.088447726 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074771804 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074421663 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083336595 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07532063 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074361198 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082214116 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075870304 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075869331 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086880044 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.207828355 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.088045795 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.076079035 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.085827847 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075685118 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078016962 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090026203 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076464218 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077644135 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.087013658 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0761826 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084603282 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086814724 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086008223 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076247166 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077295143 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086007666 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.085202398 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07838566 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076307175 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077696828 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.084760319 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084419483 seconds)
  done (took 20.201802729 seconds)
done (took 40.176296257 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211852557 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157698981 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.177142639 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123470985 seconds)
  done (took 2.139561667 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122111804 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106996391 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098710996 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.0727278 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105448969 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.072719491 seconds)
  done (took 1.991268963 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302497064 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208395985 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187050032 seconds)
  done (took 2.103632548 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210393086 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194958904 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.455918596 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.278823546 seconds)
  done (took 2.656958705 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.149679709 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093458827 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.074860416 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.092163944 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136036251 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163856594 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104464031 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.13010917 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.086802063 seconds)
  done (took 2.494768199 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.151196317 seconds)
done (took 12.948899795 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.252350479 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.119525417 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.181472747 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.215933 seconds)
    (5/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.121913306 seconds)
    (6/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.216692086 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.11264378 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.11615265 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.086143272 seconds)
    (10/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.186647248 seconds)
    (11/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.178563379 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.175047847 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.082463941 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112212876 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.13158409 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.08380814 seconds)
    (17/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.16791995 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109579793 seconds)
    (19/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.21345918 seconds)
    (20/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097885288 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.182266494 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.222176685 seconds)
    (23/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.080034514 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075720364 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119634866 seconds)
    (26/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.077067105 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.126605765 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.242778784 seconds)
    (29/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.216579915 seconds)
    (30/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.215562227 seconds)
    (31/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.129581738 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.296917145 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.217895232 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080739587 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080258252 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.097856189 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.088191287 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097367599 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.079777475 seconds)
    (40/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.165492569 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087037737 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.168150953 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.083932812 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.157639927 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088569716 seconds)
    (46/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.131148611 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.15726696 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081080459 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092909684 seconds)
    (50/309) benchmarking ("sort", Float32, false)...
    done (took 0.141201827 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081586052 seconds)
    (52/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.16591293 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.085555546 seconds)
    (54/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.083257318 seconds)
    (55/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.184312845 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07544701 seconds)
    (57/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.08118762 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.081739255 seconds)
    (59/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.119083415 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.157368467 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.184497222 seconds)
    (62/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.132730514 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.155612321 seconds)
    (64/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.162217203 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.080455886 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.072246435 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162293169 seconds)
    (68/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.084151045 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072478057 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.080008846 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076476421 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080760625 seconds)
    (73/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129968542 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.073613833 seconds)
    (75/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079400086 seconds)
    (76/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.084371685 seconds)
    (77/309) benchmarking ("sort", Float64, false)...
    done (took 0.139593162 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07557805 seconds)
    (79/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161222945 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19346688 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.313792342 seconds)
    (82/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205899524 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.116986937 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.102856289 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.225569152 seconds)
    (86/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.082494871 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.150938902 seconds)
    (88/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05832476 seconds)
    (89/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.070746002 seconds)
    (90/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.087761043 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.073119239 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136279105 seconds)
    (93/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.081745261 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.097127134 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119879909 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086516622 seconds)
    (97/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.081287178 seconds)
    (98/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.059416363 seconds)
    (99/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.082238498 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.214229555 seconds)
    (101/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163649921 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.059185243 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.155977287 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.079685149 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079671313 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074863354 seconds)
    (107/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078982364 seconds)
    (108/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.112350382 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080766022 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.160453306 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.099003817 seconds)
    (112/309) benchmarking ("sort", Bool, false)...
    done (took 0.1472189 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.081824667 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.07319842 seconds)
    (115/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.109753809 seconds)
    (116/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05813504 seconds)
    (117/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.081756834 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073304738 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.080301289 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202605837 seconds)
    (121/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.081158959 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102208531 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.071816939 seconds)
    (124/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.080071171 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07770161 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.059235039 seconds)
    (127/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.068508118 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.059069534 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072613471 seconds)
    (130/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081022802 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.094892217 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.097941195 seconds)
    (133/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.081091797 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075953417 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.190250511 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.183245535 seconds)
    (137/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081139022 seconds)
    (138/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071910853 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073162555 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112172487 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.150248726 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169186113 seconds)
    (143/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10389871 seconds)
    (144/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.059551153 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12335568 seconds)
    (146/309) benchmarking ("sort", Int8, false)...
    done (took 0.151713206 seconds)
    (147/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.058864088 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.099784721 seconds)
    (149/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.078533797 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.075661912 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.073124757 seconds)
    (152/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19278212 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073465956 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.094333815 seconds)
    (155/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.110679263 seconds)
    (156/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.110719161 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.058462379 seconds)
    (158/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.086229494 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07430977 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05925804 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124735038 seconds)
    (162/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.059843135 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.058330289 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058285873 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.059610247 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.082228884 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.083990448 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079966721 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.079788031 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.075463057 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096695708 seconds)
    (172/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058964902 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073878074 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.072797162 seconds)
    (175/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.082101572 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139948827 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.18983457 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07850641 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.059194126 seconds)
    (180/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203288811 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.184904596 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.085373325 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.186914891 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.215872429 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.074682176 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.103961605 seconds)
    (187/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.087960758 seconds)
    (188/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.080724912 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098516412 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.196252839 seconds)
    (191/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.058191537 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071797299 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076100222 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.074597694 seconds)
    (195/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.085474678 seconds)
    (196/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.081637643 seconds)
    (197/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.081104179 seconds)
    (198/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.058387326 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.074044628 seconds)
    (200/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.058380729 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.074734953 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.189232589 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10068813 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.08323011 seconds)
    (205/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07268493 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.0811365 seconds)
    (207/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.058650076 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.103419122 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.060367145 seconds)
    (210/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080064431 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.08371841 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.100914698 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118527658 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073043964 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079310275 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073854188 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094164249 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.083617367 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.058467551 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07270625 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081659108 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083710684 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.092892698 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.060120539 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.073850575 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.104444967 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.150233648 seconds)
    (228/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07750318 seconds)
    (229/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.123361461 seconds)
    (230/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.076254599 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134565669 seconds)
    (232/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097508585 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05988344 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136242595 seconds)
    (235/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.081407283 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.08196534 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.058618482 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.059568294 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074322266 seconds)
    (240/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.203300799 seconds)
    (241/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.071456582 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.058006633 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.058603233 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.058502371 seconds)
    (245/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.098414731 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073259709 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.058508071 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.08339525 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072727031 seconds)
    (250/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.070934751 seconds)
    (251/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.060498789 seconds)
    (252/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.169374803 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.07078991 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080469974 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087652852 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.071470739 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.18919803 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.096446954 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09431249 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05866802 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.082024729 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.058700958 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.058151439 seconds)
    (264/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.075970481 seconds)
    (265/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.082166258 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.072931059 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095976753 seconds)
    (268/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.059647276 seconds)
    (269/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.07222748 seconds)
    (270/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.058592251 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.08020711 seconds)
    (272/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.060607662 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.058159851 seconds)
    (274/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075027473 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09533151 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142953495 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.060551018 seconds)
    (278/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.058509855 seconds)
    (279/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.07023758 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.081445469 seconds)
    (281/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.060218528 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.072000663 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073729618 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.072857442 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071674655 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.072715379 seconds)
    (287/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087430492 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.080678122 seconds)
    (289/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073870115 seconds)
    (290/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.058034457 seconds)
    (291/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073735232 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098117568 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079480393 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143326749 seconds)
    (295/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.058298691 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073492264 seconds)
    (297/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.058880391 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.058378206 seconds)
    (299/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.069899508 seconds)
    (300/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.060432695 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07844949 seconds)
    (302/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079202742 seconds)
    (303/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08525117 seconds)
    (304/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.057620916 seconds)
    (305/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.10902313 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.072466254 seconds)
    (307/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.070213263 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096655399 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.214922672 seconds)
  done (took 33.699283197 seconds)
done (took 35.12313881 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089837934 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101202954 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.084788283 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.102914787 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.089269466 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.084472687 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.081275097 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08630843 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087917377 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.090059352 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085104061 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.06286969 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.082891803 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.082485679 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.083608772 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098663781 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08672888 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.080798076 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.081606332 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.072358036 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08112253 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.072858961 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.074644749 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061646286 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.086886181 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.079207215 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07946405 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.081936377 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.073039327 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073150762 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077491519 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.081514049 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.072734075 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086094185 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080555016 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.081546582 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.082430203 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.085263766 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.074929 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.07319957 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.08238663 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.07322214 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.080440706 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.081798216 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.080443571 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07898114 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.080854264 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.085376812 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098146511 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075816111 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.082434354 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.084280162 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082978143 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.081964237 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.077129295 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.081458156 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.078684661 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098888775 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.082201836 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075222092 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.081852498 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.081902167 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079046278 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.081127411 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.081240561 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.084197179 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083688329 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.078607635 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.08228121 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.079705602 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073768735 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080775083 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.077023832 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.072613258 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.083560157 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08566244 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.071494768 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07973467 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.081055615 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078387022 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.072084661 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075177344 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.074905885 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.080738858 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075093364 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.063762776 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077963071 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080034735 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072662539 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081694541 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.080029437 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.080246752 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.074768794 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084066421 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.072528307 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.078768041 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073275996 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.074027362 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.074903742 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.077302715 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.073277048 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074832251 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.08304354 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.074405119 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.079648293 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086266578 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.072952683 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080293263 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.071952975 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072196634 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086368886 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082058451 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.072474272 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074244983 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.07157107 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.079781195 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070818517 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.07185064 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072183612 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.072737557 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.078291647 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.072059652 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074285597 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.079900875 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.222135811 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.074196092 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07758454 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076576479 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.073322737 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.079339445 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.073825987 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072996316 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075666273 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.069780619 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075634494 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.07374479 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080604723 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074658511 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081890397 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.074827104 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.08178057 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.078715902 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.079666908 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078377752 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.0719832 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067294651 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075436505 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07528178 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075162176 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073303314 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.074882509 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073706313 seconds)
done (took 13.629263228 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074512038 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146138908 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10376819 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103465694 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092574595 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.075422911 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.083380121 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106151773 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.076167032 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.108109665 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.096095872 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.094311213 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121154545 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.073051843 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07426226 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.078185448 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075675843 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089074894 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10789505 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.095325675 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121520249 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.073854628 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.100122679 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.097239408 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095243098 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.110167567 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.075178563 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.078627417 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.078069685 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099948968 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.097665298 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.078424609 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.075354663 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105091968 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100341449 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090498132 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.07489614 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09022711 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074825833 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.074425666 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.075841435 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106374091 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087659179 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087568054 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078218216 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.08529757 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075095903 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090819936 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096810631 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086748064 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.092943433 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.107466569 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.076615018 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092403065 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.073125693 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09336636 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084265796 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.077564667 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.074651595 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.082805126 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074390241 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.078361734 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.088252135 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088704343 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078173858 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.092491351 seconds)
  done (took 7.377843191 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.092589884 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100376724 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.091737331 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.092847402 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.074055548 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074652881 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.07470367 seconds)
  done (took 2.120532995 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.074714328 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09723656 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.098635784 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.0978971 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.089689626 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096661041 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08666369 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.07489221 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096998732 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075860244 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.096303354 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109396582 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.078681055 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.082258679 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09932021 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074605499 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100780699 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.075807657 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077917708 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.099288088 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076768298 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104752176 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079060463 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.075644509 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089524407 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.075366299 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123329463 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079551015 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.077222364 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077879368 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072616217 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.115813012 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089417207 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082732053 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075431368 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090593027 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.089932264 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073308077 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.0921196 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083702548 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.089570282 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075910175 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.076352181 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.072869156 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.080167844 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.086165786 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.076563822 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.075731762 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.078082643 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.095666257 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.076046458 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088811868 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.078243712 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.080569106 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.076659643 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.081662208 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086072667 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.076220238 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.095873199 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076658518 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09230917 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091643086 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.089939535 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091971007 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076883511 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088603471 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.089186951 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077778246 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077446721 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078932543 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091646861 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073911754 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.076525646 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08629532 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077252619 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.098530446 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.098771213 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077148849 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.089011405 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075386825 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.074629357 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.074579721 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.098098726 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08063051 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074573758 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079524837 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078599103 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.073391221 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.074266703 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079061006 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.073497912 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.077021341 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.078891684 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.078539843 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077853985 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091896555 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.077508151 seconds)
  done (took 9.682332704 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.076849459 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.076748737 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.077582553 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.076191488 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.075676647 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.076370464 seconds)
  done (took 2.001999319 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101383548 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.077540444 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.088402862 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.080632697 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112783756 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.095105217 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.095520358 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086487533 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.09198729 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.087379521 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.095706588 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.097055327 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.100661122 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.080561324 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.094861303 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.079902935 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.0959777 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082213175 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086387661 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081272413 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093632204 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.080189716 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08072582 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089943784 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.084217764 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.080071981 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.086529378 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.086976288 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.0864975 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08615526 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.08027418 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.084116927 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079087453 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085456991 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.095655838 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078716061 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079190708 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.084957725 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079677895 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083780874 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.096321924 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080161042 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.082372776 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.085865039 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085011051 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078081676 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.084643188 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.086861655 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.095489444 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084894403 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.087113988 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.079442527 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083825583 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.08490029 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078242484 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085924056 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.086001577 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.095405632 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079967276 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078760258 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076297085 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083783609 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085804072 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.084282553 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085585389 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084454343 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07860611 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079951183 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080622533 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.079188651 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.085000076 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.076444214 seconds)
  done (took 7.696666202 seconds)
done (took 30.394545926 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.548791628 seconds)
  done (took 2.058064432 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.641700463 seconds)
  done (took 2.175697083 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.549808211 seconds)
  done (took 8.078109801 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.398467825 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.500052347 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.742983871 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140512097 seconds)
  done (took 3.35042432 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.754236333 seconds)
  done (took 2.29628848 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23590101 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221684927 seconds)
  done (took 2.009845168 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.387562854 seconds)
  done (took 1.923454677 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.150786553 seconds)
  done (took 2.685717395 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257023432 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185070879 seconds)
  done (took 1.981504247 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.496055278 seconds)
  done (took 2.035403164 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.945000763 seconds)
  done (took 6.484327274 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227137103 seconds)
  done (took 1.817310736 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246097487 seconds)
  done (took 1.789881566 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.769821306 seconds)
  done (took 3.313651623 seconds)
done (took 43.539906624 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.092860069 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.094505927 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.094084002 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.090114564 seconds)
  done (took 1.899882386 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.085883443 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.082524402 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.085398836 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.081784466 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.085677475 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.081460329 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.082744571 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.08454863 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.081854837 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081702579 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.081155437 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.081528495 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.083965962 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.082698896 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.08038851 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.084371042 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.084955693 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.08179398 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.084486706 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.081150986 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.079169936 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.083207935 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.083735763 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.080230454 seconds)
  done (took 3.530047806 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086632362 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.081443818 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.085082849 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080778122 seconds)
  done (took 1.882365906 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.086657401 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101454389 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.098591063 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.086249908 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.101704341 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.096064709 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.078231609 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077861633 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.079330826 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.086308647 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076425949 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.105044848 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.097881089 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.087059291 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088718245 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.074214092 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.076853269 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09702405 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.087399591 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.087982312 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078890995 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.086855102 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.077306878 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09810664 seconds)
  done (took 3.656895808 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094669953 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110399895 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.090316817 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.098183026 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.099693735 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073621084 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.09671467 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.10066057 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136450915 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.073585236 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.079488688 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.074406764 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.08183798 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073937268 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.090056812 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.118454813 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.121958578 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.077431364 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.106666426 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.074249205 seconds)
  done (took 3.427116605 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.081903058 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.077910527 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076202904 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07446733 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.086488209 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.081920078 seconds)
  done (took 2.035589817 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.077505543 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.079011803 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.075804401 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.075571038 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.081135272 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.076195238 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.074346128 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07596652 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.075820142 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075359398 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07509474 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.074072525 seconds)
  done (took 2.467078607 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209600205 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.077222532 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.077954743 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.074266652 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.079041205 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.074711922 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.090086324 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.076462028 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.102029656 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.075513331 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.075684964 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.077419341 seconds)
  done (took 2.643451412 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217811145 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084923454 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246915261 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160582045 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121006343 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124820954 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12140697 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122639098 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.151183977 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109543325 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174910588 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17621206 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116671752 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151490958 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098825385 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108052186 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164905432 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173793798 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115092423 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174418683 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155790718 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135532427 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156503678 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111350608 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114755616 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132399602 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.08056673 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090723596 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179205363 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141808416 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153132379 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120175375 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102097165 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186031288 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180228238 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148918022 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156816583 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094210768 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.111827509 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142307527 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207228855 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097260565 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168880023 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262301283 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090865304 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143548715 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126470814 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12962766 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114480678 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099439268 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154789661 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194479289 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.147531343 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098009382 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133815778 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124633191 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.123256256 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123193652 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191182189 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168976486 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136571795 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.081104659 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117957923 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16155258 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142251382 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.116965525 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133667911 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100723018 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144523941 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163576058 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133588019 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152172061 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127586954 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09826662 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127164757 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150165202 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136644312 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167935721 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132113437 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.081630111 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133000235 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111468764 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088940798 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.156461206 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083280128 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182785871 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107466666 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.114262665 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134968066 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117141039 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117158471 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16757056 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.296871911 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114637443 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.075878977 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114988882 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.129592171 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156298032 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096613367 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11744344 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12553253 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.087539231 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147264387 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.084138621 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132489726 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083883112 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133328155 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137002636 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.087581319 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131099127 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113312634 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10923921 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141428612 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168497719 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097999932 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091578186 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176907651 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129270549 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.112304213 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153912351 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164080887 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.108203629 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110403645 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160752128 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180708281 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098448106 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170742937 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115637572 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093158045 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.096373591 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131714215 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120383384 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.134161109 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090217609 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.126573448 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17651772 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.083821973 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104127788 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142483354 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086624912 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08867795 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113563305 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114245156 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.104676658 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.108197439 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.110377409 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145200679 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130236781 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260884085 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13520815 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108450785 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181858126 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097731709 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.111772863 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114245324 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07938137 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.14486091 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168535894 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089614696 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17088806 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.130453207 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126374671 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127368113 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093052979 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148889459 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088819803 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078680178 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153761959 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119129828 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11853313 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.158983246 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125697097 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.13337248 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127108225 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141777997 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139148215 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1387389 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115238299 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.096676438 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11996774 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136917348 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.081854881 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098949692 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.0885574 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113726908 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105155372 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092196755 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149828865 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132339488 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118831925 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120174197 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105249927 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155066337 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.084753586 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135327321 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.127536827 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103304815 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.159518965 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158724934 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139272824 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106462111 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14338269 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.2248119 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084111541 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.098983762 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132519685 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092449794 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093933089 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126852239 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155910943 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13836333 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14713616 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133662864 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129696626 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164881232 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.0792005 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12963242 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154687052 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130335786 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.113692565 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099938502 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10872995 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15187936 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11689145 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189429787 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121818521 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131533246 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16176034 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.110323215 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089053687 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111601064 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142938528 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113317208 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150868648 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107352282 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097222604 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117131359 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.083372906 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106721493 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135677056 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12771541 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143400838 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123625877 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141629444 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086088706 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124683603 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132148995 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129663345 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.071998507 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126519372 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167564874 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103056247 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125095226 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158189563 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087360723 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.292891024 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184686217 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154277773 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094646746 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119242201 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128466791 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137368856 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129226119 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149269504 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117754325 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146465016 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118116962 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.094727076 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097413155 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105793835 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113696553 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103055582 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.113835291 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121581115 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.105107933 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140784357 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112479436 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118703114 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124601833 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.109465233 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.099424235 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105632678 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185387071 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128295267 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179111006 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.1082051 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.149925338 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170091634 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08400046 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087637514 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.086672873 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148763309 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093034971 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138284284 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.116318182 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125936244 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131664075 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150542915 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104573731 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076842621 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116533548 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141205676 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133417279 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106957962 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.111872709 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168936011 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108785933 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087474398 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121684617 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122531376 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.257573211 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179286854 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.07169955 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115003612 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086752607 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089682384 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135708355 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161125474 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.089686749 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108554674 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128221593 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121265193 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135793666 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113356898 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117471422 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135663882 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160750794 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136732444 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.098476015 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119707005 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136071117 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16374892 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111577371 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.106634279 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181518737 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159226122 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.166703819 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.097849682 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121824087 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121382815 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118920252 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145202289 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09226868 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170005165 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090037723 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144918954 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112841814 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097061233 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138662426 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.118044391 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096753521 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153687007 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124128512 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091267669 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085292926 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126334627 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126473579 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11416644 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.083937635 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147243021 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.081797056 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139317517 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316300382 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090898552 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114696555 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105577002 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089453829 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116573857 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112900415 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096698079 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10772889 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179545124 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.094968225 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158172209 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14150767 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120869815 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143191391 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111629421 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.650280308 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.086539416 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159823226 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125384671 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181008684 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108965079 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125648092 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118632807 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13269055 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154672002 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112629513 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.194072424 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140732629 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123776 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088592575 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11046828 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113064107 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.096796522 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116054748 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121220001 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123563164 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.101417193 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.124276719 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132644023 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.091030267 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104631449 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163424934 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125127096 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1513103 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146820564 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094433608 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125229173 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1442616 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088440437 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127979948 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306739654 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115549674 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110510453 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.090745875 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10976458 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167651237 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.082318903 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171363704 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128207069 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118300781 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121953981 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.120809523 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142699803 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117528929 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129482769 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102027382 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.117738274 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122532974 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089883886 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.085088903 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114609547 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119487909 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.106525913 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106146113 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.107505081 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159387865 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.081150777 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108113591 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124212313 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154143137 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181675783 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.097105831 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091026192 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128314168 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124793053 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120272523 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129079821 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087483296 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090208846 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088170397 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.087572147 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116638273 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121365769 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123405386 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118814326 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170814239 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.092025694 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.247282418 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104589847 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113294241 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.078770818 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085837786 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103372366 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105447615 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115204475 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116952474 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164324526 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.25313724 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.099695632 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100577536 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.083579271 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09264225 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137495798 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118758161 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126840565 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112089328 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.071527421 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118620932 seconds)
  done (took 63.305845365 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116086484 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.0908708 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.104415517 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.153407194 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131354297 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209658679 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160027473 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198183066 seconds)
  done (took 2.833179614 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07667155 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.104958734 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.112585398 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.092351591 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.075295337 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.077514684 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.241611488 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.091658147 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.074934031 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104308813 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.086735731 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.078563333 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.448250939 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074595531 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.076682475 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070208592 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.075793787 seconds)
  done (took 3.620370149 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.417190265 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.630108267 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.364120971 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.085262257 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.964762945 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.100903963 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.156546405 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.144504122 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08780925 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54856527 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.418983887 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.139195301 seconds)
  done (took 18.729767978 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.090855854 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.08434139 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.098986961 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.099107399 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.08750412 seconds)
  done (took 2.132348863 seconds)
done (took 113.764574686 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.091504838 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.625061598 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.061874001 seconds)
  done (took 2.387289282 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092389309 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.094538442 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.094275157 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.092742491 seconds)
  done (took 2.05112158 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.083608431 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.08479768 seconds)
  done (took 1.839452301 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.247354046 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17864952 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.105640025 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.092338188 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.088892477 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.089270565 seconds)
  done (took 1.943734926 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.080394436 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.083766929 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.081823648 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.085140809 seconds)
  done (took 2.00001014 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.086791915 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060410995 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062870822 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.065637146 seconds)
  done (took 1.944921484 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095711449 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087698464 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087627849 seconds)
  done (took 1.94097582 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111285979 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095637705 seconds)
  done (took 1.87677376 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.090944391 seconds)
  done (took 1.761737613 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104675789 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.110051664 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.1422682 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.120106007 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.148917917 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118062022 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.092635751 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093529824 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.085035987 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094671053 seconds)
  done (took 2.78070069 seconds)
done (took 22.820979796 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087491671 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375714603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.369120192 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099645498 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.6784931 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.365298224 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.976582069 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101337902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124231208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07597254 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093155426 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.655626403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969650811 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330586321 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955467731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333530322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.657069547 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07692978 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075918932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076326044 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963601126 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.076037028 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076218227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07699788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656666513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.380864583 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.076886537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.350297819 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076655878 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078286881 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.363825727 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07682614 seconds)
  done (took 16.388456912 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079156366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130822778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081264019 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092940108 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.078869303 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077733292 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.080519245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.077909868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130486671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076757142 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094129308 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075800208 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.08009449 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077195474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097623462 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076628449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077249946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077212928 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077606144 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076937759 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096205522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077001553 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076766075 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07731764 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.076654964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089467609 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077332868 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.076851744 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077835605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07909253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080093038 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077595779 seconds)
  done (took 4.364628673 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12581008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.136538289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082381594 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114000676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121088379 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078532339 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.15318004 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102914614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.136729094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077207279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094340412 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.076764853 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111982112 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.077522906 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097713576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077273424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077715357 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.077333669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.076755521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.076650364 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096752499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07649404 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.077233598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.078454555 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.078072247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.091117956 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.077419064 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077370013 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077536911 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.079258969 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080066205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077551409 seconds)
  done (took 4.627685569 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.082005208 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.083700423 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.091996851 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.09436117 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.077965254 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080550006 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.082244589 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07851292 seconds)
  done (took 2.362465347 seconds)
done (took 29.421782401 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087639394 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.077702163 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.081980087 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091308024 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.081686854 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.088203423 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.074966385 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.084667008 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081471411 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.082432293 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.083639069 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.076423103 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.080482033 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07559136 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.082844162 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.076842941 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.088695041 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.080831319 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.088388364 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.088566052 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07884184 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.082394018 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.084684344 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.088296657 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.088718419 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.088103156 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.086329059 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.082147457 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.077408531 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07950542 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.086577289 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.09315599 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.077506844 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.088979054 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07639999 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07658147 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.08041679 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.077461443 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.088303627 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.085639407 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.078529236 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.085169187 seconds)
  done (took 5.155743347 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096605651 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.102082728 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.093635469 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.070596707 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07511136 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.074311979 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.098625407 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.068602878 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.068303292 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.097175924 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063819178 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.068532826 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072322677 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062075697 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06878638 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.065227436 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.070635758 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.063617457 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.069019515 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.068440636 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.098617977 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061926239 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086908248 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.071758097 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.064669345 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.070035861 seconds)
  done (took 3.669832177 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.083246847 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.094391226 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.099701932 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142050588 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114562526 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.088540859 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.088044017 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.105445852 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098164128 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075313826 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079672269 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.1029542 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099166313 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.083493519 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.076817105 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.095678736 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.093095069 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077482448 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.082583367 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104450577 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.097021196 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.095293624 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.10525975 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.092034422 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.075777319 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078471592 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.080332833 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091790226 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079215524 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.086524658 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079200183 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.080446925 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.078852692 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.088360094 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.079803661 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.078478103 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.104167097 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087091528 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.090145303 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076530396 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.085168143 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.077988586 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.101725876 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.136856981 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.075758755 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.081932433 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.080065639 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08643659 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.075784888 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097020045 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087959924 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07572593 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.079237254 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.075334464 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.075330624 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079257445 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.077871052 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.078611366 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.085731337 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.081878864 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101625557 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.08069265 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.092667015 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075626596 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.084608106 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.076942717 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07679838 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.075218565 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.105246246 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077751436 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120625863 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.077434066 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07775642 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.085550089 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.08412728 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.082583403 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07580232 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.092810013 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088430901 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.080271328 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.085440356 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.080430538 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.079151364 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100678061 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.079186493 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.077647648 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.077180947 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081854225 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.079791622 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.077186653 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090363359 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.075466081 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.08032442 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.093463533 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.076641853 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07792072 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.081976646 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.081111675 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.075821799 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08755983 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079795021 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.076544457 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.086212569 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.075778288 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.079627357 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.089024213 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082427629 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.074653489 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080325741 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.08098809 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.077090533 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.078185125 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07824563 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.077182764 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.084353111 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082750327 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.079942057 seconds)
  done (took 11.721513457 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.176516137 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.169066309 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.079991644 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.160518873 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.086046725 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.088284083 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.162112796 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104609637 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.076409194 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.077467834 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07782751 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.120094446 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.115248882 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.125708386 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.088695729 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.076603794 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093436212 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.127265793 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.16449135 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.157541231 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094045534 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.086175453 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.078942504 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.078038155 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.079525241 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.087911504 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.094916801 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085739063 seconds)
  done (took 4.751741216 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088779229 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.116181918 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.085110072 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.100494911 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.100070949 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.076726057 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.078975422 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.079005138 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091236006 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.086019923 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.076207779 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.082276223 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.083528404 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079648635 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.077059282 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.08383802 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.084027158 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07790395 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.080740866 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.082296905 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.087938224 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101476867 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.081251799 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075980787 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.082191718 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.076403966 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071721457 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.092986507 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.077756439 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105647069 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.07462957 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.082013779 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.091700493 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.078030614 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076672428 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.077450663 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076902005 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076764371 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.078305954 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.077333272 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.075306664 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.065977935 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.075616229 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.087850461 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083783199 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064887923 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.081851857 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.082172724 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.082184829 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.074106522 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.079917846 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.080128063 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.080376033 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.085022455 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.081140095 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.082134917 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077986185 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.08276146 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.086585419 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.076223706 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.074045445 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.074712596 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.081108457 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073241044 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085904272 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.081555734 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.075290812 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.076347946 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078852754 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083720157 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076700384 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.081400245 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.07428287 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.078456206 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.081265644 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.078408467 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07776561 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.074798777 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.076553209 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.076509917 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063586842 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.076466537 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.061281597 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.079585565 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.074562281 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074795608 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.076632316 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.081666496 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087902574 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.077775175 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.082503538 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077771201 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075242727 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.08004525 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068630469 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.079766083 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088264044 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.090628597 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.077540006 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074435626 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.09020007 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.081980643 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.075652465 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.064663774 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081832286 seconds)
  done (took 10.165720755 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100783747 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.078273809 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.095172316 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.101089891 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096509275 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.084572362 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.08686907 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07827039 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.092628108 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.083138595 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.086619914 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.077295665 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08723283 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.086797879 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.079613802 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087836315 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.08058657 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.094409763 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.092438834 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.076537799 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.085437358 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.090168773 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.100092135 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.091225013 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.090169587 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.091336679 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.10122009 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.08687353 seconds)
  done (took 4.222588223 seconds)
done (took 41.374194121 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.792762726 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.954562969 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.776872856 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.118304146 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.849923385 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.993445057 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.974353584 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.772367395 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.057818117 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.812874971 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.02355061 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.925473613 seconds)
done (took 65.898761874 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.86820078 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.907209269 seconds)
    (2/2) benchmarking "String"...
    done (took 2.017976793 seconds)
  done (took 5.631906211 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.104521293 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.350586964 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.022118755 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.772331518 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.778049986 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.090332444 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.57831851 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.288334114 seconds)
  done (took 30.5892186 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.999162457 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.998958135 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.50346289 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.533887469 seconds)
  done (took 15.800722716 seconds)
done (took 63.795204509 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.784711495 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.788084146 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.777671714 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.755994747 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.833554866 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.793224382 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.177122998 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.862570527 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.774086518 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.758229658 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.777136477 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.26025188 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.777785962 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.097772165 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.774616312 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.77490686 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.775276876 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.287257823 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.934439242 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.791546978 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.783902875 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.828113964 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.778577771 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.934735338 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.79051191 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.776073907 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.188652138 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.776187753 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.392732207 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.777414564 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.805564714 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.222840217 seconds)
  done (took 204.320579852 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.774137029 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.790715284 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.884293816 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.783853527 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.223305158 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.956810543 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.859946484 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.26186993 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.778226737 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.798571538 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.996544996 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.77620831 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.024781275 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.726111603 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.803305277 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.861692096 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.011251493 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.069602186 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.806694661 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.926242733 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.784788394 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.894005391 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.851208798 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.023366451 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.819476761 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.886496679 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.779029024 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.780877138 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.96827943 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.974417745 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.817406841 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.802718588 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.982034416 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.64881282 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.794786418 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.800372391 seconds)
  done (took 170.433125844 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.942079359 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.775659088 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.775385725 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.775364681 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.782660198 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.775400119 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.898448833 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.904930294 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.381558915 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.50292809 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.828937414 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.582511224 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.775749002 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.843969507 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.788398903 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.777266755 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.791990591 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.80511098 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.776715752 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.777495906 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.902564316 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.78951852 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.801090334 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.784781578 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.778112179 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783714771 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.146196368 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.776230795 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.776750912 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.777076737 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.783135228 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.017831208 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.778445316 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.777703033 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.631350786 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.454324774 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.869620837 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.778636036 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.783772643 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.777898576 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.778076434 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.994564831 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.777912879 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.777536233 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.780344544 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927627844 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.777689873 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.904584271 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.777740493 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.257366156 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.777410547 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.777107532 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.697745007 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.376288167 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.783176528 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.778413479 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.781565872 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.778581503 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.777884143 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.784865662 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.807443775 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.859909353 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.779958286 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.782926936 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783840343 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.77900575 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.966544596 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.781643068 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.980452638 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.835108377 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.010551266 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.901516166 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.780645466 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.845713861 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.873713961 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.780067103 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.780167625 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.779247085 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.77915912 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.859577176 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.779508695 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.902966462 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.786132387 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.780889135 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.831393697 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.780188265 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.848219645 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.779203718 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.632854767 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.781484206 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.778799225 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.046425802 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845625749 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.779423844 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.77943978 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.780748255 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.904782968 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.90312964 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.488741433 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.782335941 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.874598665 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.798727838 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.917378461 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.78200887 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.935685474 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.78515378 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.862518952 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.785790433 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.782686102 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.781885685 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.81385964 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.78381904 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.840048424 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.781099674 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.154325804 seconds)
  done (took 401.501565663 seconds)
done (took 779.963703328 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.439571036 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.397047433 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.508232052 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.420550059 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.395401446 seconds)
  done (took 13.877396126 seconds)
done (took 15.594771974 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.872591906 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.877221307 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.807177533 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.874090682 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804490691 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.874199248 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.856560576 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.807380749 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.841679746 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.807058659 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.845321887 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.807334483 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794961009 seconds)
  done (took 25.586509086 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.034854884 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.012649081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.852655347 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.017886502 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.829019336 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.009100986 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.945104857 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.935792781 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.934776068 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.799351187 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.795215363 seconds)
  done (took 22.885322311 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.01061672 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.022346934 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.86125643 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.016266804 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.832558025 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.014390844 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.949215201 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.941332187 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.939415617 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.799737531 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.796761473 seconds)
  done (took 22.90228698 seconds)
done (took 73.091446482 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.791715012 seconds)
  done (took 3.510465713 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.820037479 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.988472548 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.799969213 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.796855974 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.793377115 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.793073425 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.79718795 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.792403641 seconds)
  done (took 16.301729306 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.788961929 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.788532671 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.791661551 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.792198365 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.788435378 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.791996039 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.792300708 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.788028483 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.791095728 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.788802223 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.788777925 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.791156001 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.78883447 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.789730171 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.790877399 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.790292202 seconds)
  done (took 30.361710765 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.789350249 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.78762608 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.788314792 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.787197925 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.786828835 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.786555955 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.788070544 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.788497266 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.786757416 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.786531272 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.787819598 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.788004525 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.787188842 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.78849018 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.787349594 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.789325011 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.787527237 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.788381056 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.792136303 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.787753572 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.790172751 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.787726762 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.788138582 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.788618635 seconds)
  done (took 44.635579892 seconds)
done (took 96.529696517 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.588529112 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.422329921 seconds)
  done (took 9.729234643 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.792860605 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.790604908 seconds)
  done (took 5.36111919 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.790359304 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.791098568 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.790214492 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.791060951 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.791056889 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.790940847 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.792345018 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.789874689 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.789679193 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.790212489 seconds)
  done (took 19.625902936 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.790921153 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.790834278 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.787239021 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.789889089 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.790219586 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.787276382 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.789138306 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.786494511 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.782973419 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.780480623 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.782003748 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.781106187 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.783986435 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.779384303 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.782115069 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.779185794 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.778748861 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.778809279 seconds)
  done (took 33.839578332 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.780698649 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.780321395 seconds)
  done (took 5.269643147 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.777303509 seconds)
    (2/7) benchmarking "second"...
    done (took 1.777018959 seconds)
    (3/7) benchmarking "month"...
    done (took 1.777187901 seconds)
    (4/7) benchmarking "year"...
    done (took 1.777693979 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.777627357 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.778768807 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.777967953 seconds)
  done (took 14.151500649 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.780806037 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.938377279 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.009503244 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.411830898 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.782993448 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.784500896 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.745319963 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.783791949 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.78594719 seconds)
  done (took 19.730805326 seconds)
done (took 109.432211639 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.562030508 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.778235784 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.020430853 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.840626637 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.839562664 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.074236308 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.780295306 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.080667036 seconds)
done (took 42.686855788 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.780710081 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.090517407 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.164964787 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.803064789 seconds)
  done (took 16.767885386 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.761432832 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.31380902 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.82367994 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.442872756 seconds)
  done (took 20.280877121 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.150408033 seconds)
    (2/2) benchmarking "read"...
    done (took 2.130505906 seconds)
  done (took 5.994367391 seconds)
done (took 51.534926943 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780926891 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.781011243 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.778564526 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.780523917 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.780651772 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.777323159 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.777903529 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.778845334 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.779039261 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.780306034 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.780457227 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.78185153 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.780993922 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.78270235 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777579286 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775928425 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774889045 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778303123 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.776373054 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774798454 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77207181 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774873572 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.771653053 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.772466006 seconds)
  done (took 44.378739962 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.77425042 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.772922638 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.775545955 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.775310104 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.772528521 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.775721675 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.775940168 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.772068827 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.774478971 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.774831774 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771966128 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.771804353 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.773892636 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.771707445 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774391243 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.77171925 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.776568096 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771687765 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774101792 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.772706649 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.775725675 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772237912 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.772309268 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774442575 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.771691577 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771193536 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.775095265 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.773791614 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774401711 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.771287965 seconds)
  done (took 54.909766376 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.779871303 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.782825722 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.77625717 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.776010732 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.774975162 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.775894202 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.774697636 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.774645132 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.775557948 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.775259649 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.775600174 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.774993741 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.776193542 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.776423787 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.775726212 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.77616747 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.776554522 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.77486728 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.77660353 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.775438515 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.77599777 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.775543481 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.776036265 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.776030668 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.776126563 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.776327545 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.775701766 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.775847937 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.77478622 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.776457842 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.776320886 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.775191653 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.775372027 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.77503878 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.774806307 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.774927836 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.781643444 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.781063726 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.774343456 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.775101837 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.776103265 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.77505663 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.775057035 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.773288233 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.773647854 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.773851082 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.775158768 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.774041998 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.771674099 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.775008505 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.772347379 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.77261047 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.772750456 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.774406952 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.772107756 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.772267892 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.772274414 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.773854364 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.772999083 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.770934046 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.771328984 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.77088791 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.771367247 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.770786506 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.771390467 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.770430483 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.771382341 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.771459787 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.770644217 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.771461968 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.770189577 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.769155636 seconds)
  done (took 129.471846454 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.768594033 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.766795347 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.767103172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.765506113 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.765629222 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.76885007 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.766055208 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769352807 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766883532 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.768284734 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767616846 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766335678 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765256059 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.769664323 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769759221 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.765581723 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.768700548 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765787976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.768907475 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.77044931 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769568655 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.766957012 seconds)
  done (took 40.584343373 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769268669 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.769824881 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.766710131 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769174746 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.766238996 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.769059647 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.770170418 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768706455 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770069188 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767079797 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76669935 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770115455 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.766381728 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768171578 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766151156 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76676574 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770038891 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.767125246 seconds)
  done (took 33.524814068 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.768573372 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.767088318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.76915115 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.766064102 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.76821632 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.770227917 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76935681 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.770188576 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.768711914 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.767650156 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.769435862 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769721867 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.769455598 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766542346 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769702822 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.767251157 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.768830296 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767421521 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7689813 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766929643 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.766345046 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770443443 seconds)
  done (took 40.605110133 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770532298 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.768948722 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.765716192 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.766130548 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.766422581 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.769767021 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.768536549 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.765724578 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.768182371 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.768296578 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765612051 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.76881688 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.765806344 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.766613941 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.76586656 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766227217 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.768484035 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.766865196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768304042 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.765078515 seconds)
  done (took 37.043232601 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.76885789 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770713427 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768840658 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768814167 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76946922 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.769045043 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769613896 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.769763513 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.768291546 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.769847464 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.769612034 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.768481144 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76926845 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.769849421 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769911945 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767777682 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769713405 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.769767004 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.770763587 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.769109308 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.769590068 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.767999129 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.769739676 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.768605479 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.770077411 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.769109987 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768892355 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.769906346 seconds)
  done (took 51.237906607 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767205613 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.767717365 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.765170809 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.764452662 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.763895232 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.764451029 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.766894096 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.764518461 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.76709409 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.765107574 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.768304789 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.767140823 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.767998342 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.766641928 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.767014835 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.767313639 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767459991 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.76483922 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765258018 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764207782 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.768073458 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767025556 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.767484847 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.764512783 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764411298 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.766948394 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764262653 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.765368472 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767556707 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.766476518 seconds)
  done (took 54.680839108 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.78423149 seconds)
    (2/2) benchmarking "in"...
    done (took 1.785786937 seconds)
  done (took 5.264770342 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.76507809 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.770262229 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.766416572 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.764053184 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.76393989 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.767152409 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.768458276 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763731769 seconds)
  done (took 15.824950805 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.766836478 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.767708629 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.767622683 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.768679934 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.76867373 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.768505064 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772643427 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.767960647 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.769564504 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.770118019 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.773903415 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.773350666 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.77015368 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.767371937 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.768555236 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.769184727 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.767630858 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.767890735 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.768796393 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.768284844 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.769161977 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.769110281 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.769975327 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.765461514 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.768532051 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.777415115 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.771234484 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.768342827 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.767384377 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.77200735 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.768097438 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.766222876 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.768627208 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.770011581 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.768646348 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.769935132 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.776333942 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769166938 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.774371635 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.769153842 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767811051 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.765293754 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.769750429 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.770363815 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769481671 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.769156593 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.76952149 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.765484952 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.769694773 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.772537089 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.771992429 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.76805796 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.766080838 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.772779845 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.77161655 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.775636418 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.770748893 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.772174445 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.776869719 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.777087064 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.781424594 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.775066343 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770671127 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.770367249 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.777786746 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.789026336 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776841134 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.767065041 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.767232788 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.769975764 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.775542563 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783028623 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.776424565 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.770760051 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.77062316 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.770114575 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.77019581 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.770856919 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.777029255 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.772594446 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.771166797 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.770704182 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779743322 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.788150284 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.770221239 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.771245377 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.770506636 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.77118162 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.771755244 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.779812801 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.772256088 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.770617981 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.770403428 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.771872661 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.772080057 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.771559625 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.770269846 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771851935 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.768297077 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.772065315 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.773252917 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.774088961 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.778801657 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.771974761 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.772361831 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.77896844 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.771919085 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771046859 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.777426417 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.772429054 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.773394594 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.77253275 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.777446904 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.768864436 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.774101276 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.779950294 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.77236535 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.774236162 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.773671043 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.772416469 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781088922 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.792834144 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.773157224 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.771957448 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.776739993 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.781180506 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.773284001 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.776343714 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.773477952 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.771109762 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.769932173 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.773635446 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.772955754 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.774621463 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.773963153 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.774699485 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.770372637 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.773718369 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.772762403 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.77531573 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.774457082 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.774202433 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.775257482 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.775018325 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.774275856 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.774373004 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.778901733 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.774526695 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.774908755 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.774726933 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.772536136 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773394652 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.775265549 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.774521009 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.775010007 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.776873391 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.773136325 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.774420788 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.773966082 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.775101488 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.773884053 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.7760637 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778806255 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.776281744 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.778563306 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.775213509 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.772493965 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.775763363 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.775723677 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.774707598 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.77461835 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.774562646 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.779860161 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.781511175 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.776325413 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.776012727 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.778373219 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.776958268 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.776544703 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.776510704 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.78041782 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.78090934 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.776253019 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.781583115 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.777849956 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.776691815 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.776273383 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.775366349 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.775673915 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777472642 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.777529927 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.782807022 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.788207596 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.783149192 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.777150546 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.78016987 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.777597702 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.779052918 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.780319861 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.776972591 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.777069421 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777914543 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777115316 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.778198836 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.777073475 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.777327819 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.776729574 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.776597377 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.776487912 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.777784473 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.776513316 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.777354432 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.780268867 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.77415411 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.776701003 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.777845953 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.776538175 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.775005731 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.776676066 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.777358613 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.778051559 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.778339734 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.783849421 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.776531218 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779111295 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.778738581 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.77839979 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.77873213 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.778974603 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.780856895 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.778580665 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78451879 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.779505565 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.780228644 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.785298023 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.778541986 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.777682602 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.780491362 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.777655447 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.776204996 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.781387194 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.784440732 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.777729179 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.778792197 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.77956379 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.780333445 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778928582 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.784780438 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.776825177 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.777793418 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.779933551 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.782057768 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.775458449 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.781069983 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.779679045 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.780677327 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.780611454 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.780423583 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.779190121 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780093918 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.780142751 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.779899493 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.782987724 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.781464845 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.786000275 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.784480212 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.779385946 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.781766435 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.782046765 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.782162986 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.78067971 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.781390922 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.780202185 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.791648672 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.78757638 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.785589476 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.781641722 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.780755662 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786046694 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.781252795 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.783376599 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779860505 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.782149941 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.780798703 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.78049161 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.778554365 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.781318371 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.781456368 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.782675564 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.781788468 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.784865768 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.781435221 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.780759731 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.781798988 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.782186751 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.782557545 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.780934705 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.781204143 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.783442889 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783335501 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.781942222 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.78166384 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788935459 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.781644843 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.78260034 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.781682399 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.781139186 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.782983866 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.782777091 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.783062143 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.78463091 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.78838505 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.785909172 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.790355222 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.7827798 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790990782 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.784300941 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.784723127 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.789699366 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.778724212 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.78116764 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.782270316 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.782924041 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789565352 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.783858322 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.783137205 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.786271834 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78252894 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.784610209 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.782028646 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.784846702 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.78274854 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.783537174 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791456324 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.78398065 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.787909718 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785031602 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.780798817 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.784169359 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.784072864 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.782784286 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788475377 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.784509909 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.78515882 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.78431912 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.784620195 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.785275126 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.784487457 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.78399833 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.781290349 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.783858827 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790525209 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.785646234 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78711799 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.783812625 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.791407444 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.784823419 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.791448536 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.786031272 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.785530986 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.785417177 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.784119733 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.785453667 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.784615272 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.785925865 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.785611065 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.786314263 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.788578614 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.78603695 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.7886904 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.785337424 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.786671885 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.785584477 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793300323 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804607543 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.786251623 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788376815 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.781704764 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.786608096 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.78916216 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.78587476 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.785302715 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.787383996 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.792844377 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.790824932 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.785533913 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.786596745 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78578161 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786311756 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.785465817 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.785848662 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.787223316 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.785553125 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.786659936 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.786947267 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.78924562 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.786159003 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.789275467 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786968904 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.78674953 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.795166065 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.787598619 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.788872708 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787724997 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.786825281 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.787121453 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.78735553 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.787495955 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788197079 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.7871356 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.788189336 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.792633885 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.792287967 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.789297944 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.786387186 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.788372724 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.788058713 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.78734311 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.787870024 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.78901949 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78826817 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.789454701 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.78845859 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.788371959 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.785792831 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.787946352 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.789143553 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.788305162 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.790041638 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.793455575 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788534884 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.784962165 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.788509202 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.787450292 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.786923254 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.788802243 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.796374584 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790046643 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.795669913 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.794879058 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.792355688 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.790157194 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79046845 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.794993455 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.788134136 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.789315389 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.79036635 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.79238564 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.789840076 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.791491327 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.790148714 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.796654336 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.789674039 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.789156394 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798269112 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.790758066 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790845962 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.790834781 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.793756546 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.790041308 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.787329488 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.789868118 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.789975461 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.796332487 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.793341918 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.790775238 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.791116386 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.787760135 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.790663754 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.79449457 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.789666618 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.790974641 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.786639151 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.790603957 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.791699846 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.790039385 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.786608352 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.789888735 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.789848477 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.792876253 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.794917838 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.788615098 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.792074661 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.789936132 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.790556581 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791696381 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.790926393 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.787621115 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.787523468 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.789507063 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790583892 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.789770546 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.793216408 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.790000779 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.791008631 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.790886798 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.79181491 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.79407592 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.799074058 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.797182068 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.788257312 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.790770027 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.792481026 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.79657751 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.791541141 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.792100173 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.79206127 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.793575741 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.791998279 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792859933 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.792274798 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.793706298 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805558712 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.794127545 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792984747 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.793123266 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.795879203 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.791425361 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.788513089 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.791613178 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.795563358 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.795290007 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.798187898 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.793173172 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80034191 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792550022 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.793312297 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.795650979 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.795881842 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.799302421 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.795928609 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795499676 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.794208547 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.798699826 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.806025368 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79331005 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.802777701 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817401458 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.794377882 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.794609001 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.794875319 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.793704198 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.796491785 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.796523759 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.795112519 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.79354642 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.794348959 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.794347417 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.796119527 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798156023 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.794871445 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.793657514 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.795036777 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.79452186 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.795712671 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.791894778 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.795534767 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.795103105 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.795189987 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.795690071 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.796060268 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.795589967 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.805676902 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.802422956 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.796987536 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.796174914 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.792496745 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.799105073 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.79747566 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.803689661 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.802530717 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.796130516 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.796505298 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.796689625 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.796014949 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.794053673 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.795851025 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.795706765 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795286149 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.791951005 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.807666923 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802922236 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.799938246 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.796732327 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797145301 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.795528721 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.798388165 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796462337 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796955124 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.797543237 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.796320916 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79983347 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.797817106 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.796260923 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.798978962 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.802361549 seconds)
  done (took 1064.523298988 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.793838022 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795443722 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793536779 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.793977248 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793849358 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794501577 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795193317 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.7958681 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.795455975 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.794779498 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.794649365 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795084983 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79527742 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.795384398 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794089763 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.794238589 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794827409 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.796158333 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.794881388 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79454289 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.795191095 seconds)
  done (took 39.415092709 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.797377335 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.797118801 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.795270493 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.798484897 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795462885 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.7985992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.795876965 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798696963 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.7988775 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796399401 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.798592824 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797920678 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.794992235 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.794893481 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796050403 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798018593 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.798924047 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795596505 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.797726776 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.7960266 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798325109 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.796783795 seconds)
  done (took 41.262194202 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.800058498 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.799629881 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.798275436 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.796186194 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.799110897 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.797112818 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.799511772 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.800202876 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.79905323 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.799723121 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.798835317 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.800225114 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.805562978 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.802881341 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.802455121 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.800871637 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.944406189 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.800953521 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.800995961 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.801464198 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.797705834 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.805973015 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.79701561 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.796646017 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.799985309 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.801338222 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.800365001 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.800095939 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.80126467 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.800763479 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.803566322 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.800174684 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.8003441 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.802959298 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.800981361 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.80130162 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.803138266 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.801060197 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.798473235 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.801391959 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.808667598 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.817134327 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.801608929 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.807314013 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.801717442 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.80104624 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.803366903 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.806996849 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.798365463 seconds)
  done (took 90.135895435 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.801858695 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.802458462 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.79797356 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.801430625 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.800912187 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.800889601 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.802888985 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.801775069 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.799200176 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.798706342 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.80221132 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.798864795 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.798545079 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.801606242 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.801479914 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.798673549 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.79902995 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.799535596 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.798794753 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.799144151 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.799220541 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.801878519 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.802186793 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.799493256 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.802660323 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.799436068 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.799233813 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.802446044 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.799445296 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.799176608 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.801905761 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.802704593 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.802435706 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.801668116 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.800354497 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.803106718 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.803683206 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.799779417 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.803477006 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.80108577 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.803275521 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.803805487 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.804257754 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.803556626 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.800306962 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.802099463 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.800598082 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.800628513 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.800815297 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.803079039 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.803065661 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.80081155 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.803271627 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.801168668 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.804404616 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.803811369 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.803045369 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.801191886 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.804972012 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.801290462 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.801047661 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.803713335 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.801564913 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.804444543 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.803629973 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.801183509 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.801525198 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.805955022 seconds)
  done (took 124.235356216 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804991211 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.806038732 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804476273 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806794214 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.806544223 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.805402548 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.805775659 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.805809351 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.806014238 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.806416225 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.806117847 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.80522986 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.805831481 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.806049794 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.807560834 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.806558993 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.806001489 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.806468008 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.806740734 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807156303 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.807108888 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.807872019 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.806803994 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.807949878 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.808618076 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.808235804 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.807599989 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.807452275 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807393046 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.807193998 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.808105305 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.807945445 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.807620833 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.807849902 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.807910879 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.808353408 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.806517706 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807754656 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.807483144 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.807492866 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.807525968 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.808211459 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.808122613 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.807339878 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.80805016 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.80701894 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.808239488 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.808362746 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.807482837 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.807795018 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.808997543 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.8075536 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808229777 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80826763 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.808963984 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.807377523 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.809070063 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808659582 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.809194124 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.809170134 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.808654542 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.808009455 seconds)
  done (took 113.789569919 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808004287 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.808546329 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.804829782 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.805465637 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.807507027 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.806194964 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.809596869 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.807966263 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808372714 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.80751854 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808238801 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806131545 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807912281 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808714053 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.806674868 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807903647 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806621872 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.805626441 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810989911 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.806584198 seconds)
  done (took 37.885546828 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.805701936 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.80923383 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.806447112 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.807211321 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.80980116 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.807090294 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.809718072 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810056697 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807137931 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810472325 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.809913019 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.809141536 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808021597 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.808723282 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.809522676 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.807881668 seconds)
  done (took 30.673222756 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.807616782 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.810481414 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.810441071 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.8115177 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.808594607 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.807353578 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.811340085 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.808048217 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.808456239 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.811791308 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.81200088 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.812039985 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.810351455 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.812040129 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.80768067 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.810696791 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.808642272 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.808559185 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.810407973 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.812283855 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.809593116 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.809592178 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.811428643 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.812131375 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.810048981 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.809687455 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.809103761 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.808523531 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.808309493 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.811898371 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.80970984 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.809859304 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.812148336 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.810250341 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.814058555 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.810104109 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.81166572 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.812829708 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.813395594 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.813532078 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.812381598 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.810242594 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.812502648 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.812009584 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.810259726 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.812311027 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.809856978 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.809342059 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.809793265 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.81054186 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.813109302 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.81355639 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.813123081 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.813690801 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.812775668 seconds)
  done (took 101.332651967 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813754546 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.813725625 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.810157415 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.813723933 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.813331258 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.810842783 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.813390001 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.811120269 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810910532 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.8133927 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.811826732 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.813035758 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.811592867 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.813741833 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.811979291 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813707026 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.811417421 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.811471879 seconds)
  done (took 34.364002813 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.811856253 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.811373421 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.814129802 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.81088673 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.81135702 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.815230436 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811438057 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.814414471 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814512823 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.812350067 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811479694 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.815412121 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814501137 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.815308905 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.812518918 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813491188 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.815786188 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814911783 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.81248828 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.812769155 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816077973 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.816421659 seconds)
  done (took 41.641140093 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.813959479 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.814052866 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.829989838 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.832719889 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.834692088 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.844337931 seconds)
  done (took 12.711465292 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81281356 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815349075 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.812590771 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815088253 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815388466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812965153 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812398063 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81296755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816143537 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813963826 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812947316 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816438629 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816341789 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814349505 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815599794 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815760372 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812683665 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813929235 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813580592 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815413314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813867064 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816749809 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813692792 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813694978 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813763493 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813459418 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815993321 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813405824 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813819332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816054349 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816287267 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814365683 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817752933 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814745563 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81673141 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816638688 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814617468 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816602777 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817525878 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8153085 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.816947898 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817464495 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818047934 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815774307 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817700718 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814846206 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815799973 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814490949 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81526537 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818450359 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817790626 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815766315 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818785202 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817916003 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818220275 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817808449 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815430244 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814753087 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81781855 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815169843 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816591571 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818655318 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815355581 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816953417 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818683304 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815520154 seconds)
  done (took 121.572447626 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816101192 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816085065 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815254374 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816202289 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816190252 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815647021 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815639828 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81682023 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815837132 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816332034 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81879591 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816127135 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818135107 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815815978 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817059518 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816386194 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816608228 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817767833 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817536274 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819946115 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816565894 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81628733 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816884471 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818010999 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817882255 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819769512 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818047404 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817454084 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817306957 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817548767 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818685591 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816609725 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817157244 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.817238205 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818273817 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817473976 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818242369 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817248612 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817423799 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819655945 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818618149 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821440762 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817525015 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818999016 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818274306 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818308967 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818783741 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817944637 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818758712 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818265283 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818049807 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818810944 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817715846 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818194538 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818853952 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818646726 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819011114 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819664373 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818709888 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820607402 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819991924 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818762462 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821451834 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819319013 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818709996 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818985433 seconds)
  done (took 121.727819122 seconds)
done (took 2484.51000133 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.904541498 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.820739305 seconds)
  done (took 15.475232552 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.986361721 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.936939598 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.821664421 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.833653854 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.821924755 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.843400749 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.82669167 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.82115423 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.822084382 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.821602038 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.821489493 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.008391767 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.877216183 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.821548748 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.821030365 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.914348185 seconds)
  done (took 51.55350463 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.824172763 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.825661182 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.836133669 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.827262781 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.823909724 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.83623795 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.858352128 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.827490674 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.858231126 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.836670706 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.892747057 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.833280605 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.825063569 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.873876451 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.836918947 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.839586323 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.916974353 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.896813276 seconds)
  done (took 35.018838989 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.899337552 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.824002317 seconds)
  done (took 10.478271219 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.854786891 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.864306685 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.850838437 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.818842731 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.840351952 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.833291343 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.846356898 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.837093058 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.839740844 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.831660056 seconds)
  done (took 70.174258453 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.82915212 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.824909041 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.824679008 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.823061618 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.816107018 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.820619687 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.8231966 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.820037369 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.481699958 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.856778432 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.829489712 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.830103232 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.824078316 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.825849786 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.822253706 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.847457843 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.921860169 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.821168875 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.821116779 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.829729914 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.826065827 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.879205264 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.838993954 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.826009071 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.854114454 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.481904092 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.834285478 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.831426307 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.918385499 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.823128633 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.824557348 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.826682637 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.827965014 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.221252063 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.09900666 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.824155278 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.83821382 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.833825436 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.821985658 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.919102253 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.826227853 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.831214546 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.430680285 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.079209898 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.918718005 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.86504711 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.138210788 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.839121641 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.828283305 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.853670493 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.828305934 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.828287849 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.840324763 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.301671574 seconds)
  done (took 129.608225607 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.821339074 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.17363333 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.992135813 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.820871338 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.11098145 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.032875955 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.822764872 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871318647 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.823650816 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.053631079 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.079146894 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931253158 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822360057 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.82045701 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.821900343 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.82036685 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.98127936 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.894792648 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.823466377 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.820887881 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854514604 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.066751193 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.948803626 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.822996267 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.852704927 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.0352978 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.948546131 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.9312489 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.598082184 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.820949002 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.8881668 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.822068033 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.822574211 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.822708227 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.981665002 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.920637636 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90707859 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.823241594 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.821756641 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.822265741 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.496604473 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.025829456 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.920738179 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.966365494 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.020902457 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.032339592 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.607407831 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.821142251 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.566626442 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.989583192 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.057784059 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.054026716 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.947459593 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.824293032 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.155670226 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.822938269 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.822169268 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.076443425 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.968801078 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.925193248 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.824709021 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.82396189 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822214288 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.072540542 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.825054562 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.921881052 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.826072211 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.823503222 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.924096658 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.928346162 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.96421614 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038318553 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.857891078 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.758576435 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.358351071 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.073506404 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.892392734 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075740561 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.827248464 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.82368677 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905310807 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.669202003 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.081056341 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.074994451 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.079000598 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862530606 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.54781685 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.824608086 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.054537051 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.048096145 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.079820776 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.03125299 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.063655102 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.151758024 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.82489008 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.823790706 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.050703679 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962418323 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.826904206 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.179336254 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062537048 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.39338873 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.846802579 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.135116364 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958653822 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.829252319 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.469411421 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.826177438 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.051893946 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.869119402 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.827396883 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.82480843 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.048503708 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.802058096 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828115008 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.678770776 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.89245124 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.829961996 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.063177708 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.83078778 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091432122 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827590182 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06736036 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.907186649 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.861076352 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.003422471 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.032794583 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.82753521 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.075374448 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.073900471 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.943842243 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.101922962 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.728474165 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.828411469 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.11869179 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.828754485 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.827500215 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.000206754 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.827902974 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.976294125 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.827699016 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114497347 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852050252 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.059455705 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.828816635 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.085399965 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.866334848 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881885593 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.829026866 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.963517006 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.827115843 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.666882071 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.990143044 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.83115135 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.829552862 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.385263985 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.827294795 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979666879 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.062971352 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852646371 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.904335179 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.499947477 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.828140437 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919936365 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855629937 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.227291825 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.830847746 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.087066408 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.831241592 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.827673506 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.828489213 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.072516583 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.067574633 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.830658608 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.829004385 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.726690581 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.827643639 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.828368291 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.013946888 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.18015953 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.829084886 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034595161 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831224086 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961293638 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.833352845 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.913525778 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.170025119 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.829867232 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.830766531 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.830149538 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.830469089 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.831347187 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.042855959 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.85866449 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.365511883 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.970872916 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10020491 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.142763379 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.081223898 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.876225291 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.834545619 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.091437942 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.831975664 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.896185985 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.832203039 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855055021 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065454211 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.830658909 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.042767005 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.110734125 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.877858172 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884641702 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.833729978 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832296228 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.831069523 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.979000725 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923581249 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.832748535 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.830679685 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950892519 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.954654766 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.044808952 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.831624097 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.866169842 seconds)
  done (took 893.947358373 seconds)
done (took 1208.005010106 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.831011301 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.833851176 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.818424186 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.834880677 seconds)
  done (took 29.08279581 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.840985068 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.838858767 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.839604578 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.838354211 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.840016892 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.838676407 seconds)
  done (took 12.800752488 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.8705087 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.247350596 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.833446583 seconds)
  done (took 21.716909861 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.907401083 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.219475004 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.94334661 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.265751411 seconds)
  done (took 10.099916196 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.840489913 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.840474463 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.840403662 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.841387498 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.842279998 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.843453051 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.84003244 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.840832296 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.843336144 seconds)
  done (took 18.339519566 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.270670213 seconds)
done (took 98.073990944 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.175076656 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.855208465 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.833368982 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.006112245 seconds)
    (5/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.705359735 seconds)
    (6/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.978740247 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.969316295 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.524325173 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.879441025 seconds)
    (10/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.159512496 seconds)
    (11/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.821104069 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.96396527 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.862803678 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.988776605 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.976791343 seconds)
    (16/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.834752194 seconds)
    (17/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.594277407 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.162336086 seconds)
    (19/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.473897528 seconds)
    (20/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.92132744 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.05265886 seconds)
    (22/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.127377642 seconds)
    (23/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.933609102 seconds)
    (24/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.834194401 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.830468879 seconds)
    (26/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.960665885 seconds)
    (27/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.830545764 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.798450779 seconds)
    (29/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.300425703 seconds)
    (30/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.295590453 seconds)
    (31/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.018920078 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.837524817 seconds)
    (33/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.685204149 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.934587153 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.052868182 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.213661314 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.51288928 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.082799368 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.932682168 seconds)
    (40/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.021373942 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.840719054 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.199733029 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.942199435 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.836183759 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.976526754 seconds)
    (46/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.9040385 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.128220787 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.987751049 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.085047818 seconds)
    (50/309) benchmarking ("sort", Float32, false)...
    done (took 5.526328332 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.838242154 seconds)
    (52/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.696395536 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.135313151 seconds)
    (54/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.839177472 seconds)
    (55/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.424686935 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.143974355 seconds)
    (57/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.874647938 seconds)
    (58/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.918297679 seconds)
    (59/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.275300857 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.839579468 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.838212597 seconds)
    (62/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.907775128 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.932692191 seconds)
    (64/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.036225705 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.159599451 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.518585003 seconds)
    (67/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.934551075 seconds)
    (68/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.856477141 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.053701848 seconds)
    (70/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.16271315 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.903702318 seconds)
    (72/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.854640687 seconds)
    (73/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.837885326 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 5.491792672 seconds)
    (75/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.961531409 seconds)
    (76/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.999513464 seconds)
    (77/309) benchmarking ("sort", Float64, false)...
    done (took 5.569004212 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.903390197 seconds)
    (79/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.930819832 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.837988912 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.020666849 seconds)
    (82/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.826325708 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.921343592 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.489033397 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.826389705 seconds)
    (86/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.260352074 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.8382115 seconds)
    (88/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.128416376 seconds)
    (89/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.97045511 seconds)
    (90/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.356243446 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.134577366 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.915175868 seconds)
    (93/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.935205645 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.16823326 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.845382172 seconds)
    (96/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.667722385 seconds)
    (97/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.05690491 seconds)
    (98/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.90523263 seconds)
    (99/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.866642052 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.822951261 seconds)
    (101/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.164792784 seconds)
    (102/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.827582174 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.505211147 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.987280658 seconds)
    (105/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.938934135 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.838567968 seconds)
    (107/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.949614488 seconds)
    (108/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.95309238 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.269437957 seconds)
    (110/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.978396515 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.202298733 seconds)
    (112/309) benchmarking ("sort", Bool, false)...
    done (took 2.066312616 seconds)
    (113/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.861437323 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.218451867 seconds)
    (115/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.933036309 seconds)
    (116/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.459239924 seconds)
    (117/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.094354246 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.842116173 seconds)
    (119/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.455219862 seconds)
    (120/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.297274163 seconds)
    (121/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.244522349 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.849163409 seconds)
    (123/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.228587421 seconds)
    (124/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.955125076 seconds)
    (125/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.834016141 seconds)
    (126/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.743740154 seconds)
    (127/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.326296273 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.840054436 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.158391921 seconds)
    (130/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.879738887 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.984878653 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.806705531 seconds)
    (133/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.89172719 seconds)
    (134/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.908430319 seconds)
    (135/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.364303802 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.793875202 seconds)
    (137/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.872195701 seconds)
    (138/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.932195051 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.945109425 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.929346852 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.851830128 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.997497816 seconds)
    (143/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.873781509 seconds)
    (144/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.174652872 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.840609129 seconds)
    (146/309) benchmarking ("sort", Int8, false)...
    done (took 4.879496874 seconds)
    (147/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.929097144 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.802343385 seconds)
    (149/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.879057083 seconds)
    (150/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.013898649 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.146549432 seconds)
    (152/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.855018486 seconds)
    (153/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.033110482 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.838859389 seconds)
    (155/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.94076849 seconds)
    (156/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.961042618 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.150196492 seconds)
    (158/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.873902942 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.850991027 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.918125062 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.04869273 seconds)
    (162/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.140444331 seconds)
    (163/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.289277885 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.210622668 seconds)
    (165/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.146546984 seconds)
    (166/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.907601163 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.854886266 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.958552205 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.126124656 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.024182189 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.896002038 seconds)
    (172/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.319907858 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.957270656 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.242121858 seconds)
    (175/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.889498877 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.945912425 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.040245074 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.881485514 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.838940263 seconds)
    (180/309) benchmarking ("sort", BigInt, false)...
    done (took 6.855738801 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.783586906 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.96060129 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.853929461 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.159357782 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.59539019 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.500893974 seconds)
    (187/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.561915434 seconds)
    (188/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.249473269 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.66562622 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.859430614 seconds)
    (191/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.928642899 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.925520969 seconds)
    (193/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.965997788 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.854541779 seconds)
    (195/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.944855197 seconds)
    (196/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.879751904 seconds)
    (197/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.881101765 seconds)
    (198/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.95603902 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.153716585 seconds)
    (200/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.954006744 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.244828429 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.163656666 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.9630273 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.673410844 seconds)
    (205/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.96421704 seconds)
    (206/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.051790436 seconds)
    (207/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.95813198 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.976745459 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.993167362 seconds)
    (210/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.267829274 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.952612548 seconds)
    (212/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.994675151 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.674063903 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.291761444 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.880234058 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.188397501 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.004459506 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.001544141 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.770688333 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.89863886 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.864353885 seconds)
    (222/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.858130256 seconds)
    (223/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.817487258 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.298219016 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.147806506 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.876408048 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.722603459 seconds)
    (228/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.951821522 seconds)
    (229/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.091003411 seconds)
    (230/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.926714276 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.943585056 seconds)
    (232/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.883906999 seconds)
    (233/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.282349754 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.886698288 seconds)
    (235/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.882274884 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.887547338 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.052119464 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.291477619 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.866071147 seconds)
    (240/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.372313351 seconds)
    (241/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.088795582 seconds)
    (242/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.921111509 seconds)
    (243/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.048952352 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.215807777 seconds)
    (245/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.861984084 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.043730553 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.431852247 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.89093156 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.247432856 seconds)
    (250/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.051745749 seconds)
    (251/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.125377463 seconds)
    (252/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.188069279 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.388055725 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.886264699 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.431618091 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.115173264 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.865143463 seconds)
    (258/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.874687542 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.803122448 seconds)
    (260/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.167995759 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.207153271 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.000574145 seconds)
    (263/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.977541512 seconds)
    (264/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.952198799 seconds)
    (265/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.868538883 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.099265677 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.896752081 seconds)
    (268/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.856340649 seconds)
    (269/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.862066948 seconds)
    (270/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.104226015 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.892022913 seconds)
    (272/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.84322661 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.780888406 seconds)
    (274/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.948447692 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.029684156 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.884359771 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.843011142 seconds)
    (278/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.033547216 seconds)
    (279/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.022510718 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.976898106 seconds)
    (281/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.250360723 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.951570604 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.858947116 seconds)
    (284/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 8.071450584 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.056812505 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.195744991 seconds)
    (287/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.723689065 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.660243273 seconds)
    (289/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.945590811 seconds)
    (290/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.218832294 seconds)
    (291/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.978697826 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.552794471 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.91592531 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.958586743 seconds)
    (295/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.978890442 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.867899145 seconds)
    (297/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.938406314 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.434762659 seconds)
    (299/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.016319603 seconds)
    (300/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.852401513 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.973192627 seconds)
    (302/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.947213683 seconds)
    (303/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.373988623 seconds)
    (304/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.069832444 seconds)
    (305/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.965575998 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.192365596 seconds)
    (307/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.115017494 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.68876714 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.180624082 seconds)
  done (took 1001.627956825 seconds)
done (took 1003.460248906 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.899124646 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889758106 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.873446655 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.894929182 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.985295334 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.902108467 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.883320639 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.87531421 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.921209623 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.923257148 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.872665005 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.900874861 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.875076017 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.873803488 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.874377614 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.889311178 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.196343395 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.910249296 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.890298659 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.883925728 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.890753822 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.87517626 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.923632001 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.899951163 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.877687958 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.87528544 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.878254809 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.894490642 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.987258926 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.878227583 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.877966282 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.887817709 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.198144162 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.907271677 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.869288109 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.893941775 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.886609381 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.884811429 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.879609528 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.907673772 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.291477681 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.919163926 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.879198112 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.875720256 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.876194534 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.880315497 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.878133827 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.883827065 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888307657 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.889988555 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.284092638 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.935285741 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.880554086 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.877239118 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.88560477 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.876092081 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.879785682 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892694591 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.896941223 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.892795094 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.189385196 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.914924377 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.879996229 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.894402061 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.884269486 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.321625773 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.916418417 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.88026485 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.292464127 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.925750537 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.321947167 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.930549168 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.878229177 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.891467237 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.909666949 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.196892163 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.905969487 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.877433577 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.886308816 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.875941729 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.886633757 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892759689 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.882294761 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.879234737 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890698714 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.906626208 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.888278907 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.879476467 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.887823084 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.897380888 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.886850814 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.890257265 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.881567946 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.873605366 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.889119541 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.881568614 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.882487019 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.882226648 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.883199338 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.89033783 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.28982278 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.937257337 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.875166888 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.875722063 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.878528372 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.892762919 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.292440134 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.924248852 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.900467756 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.927250839 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.881260391 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.190209194 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.921187452 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.895349321 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.889608566 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.883325829 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.874501272 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.190061278 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.324511845 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.940760007 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.882001634 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.879364571 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.896679975 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.88303959 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.878438275 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.201836945 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.916374103 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893766384 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.001692363 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.88950953 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.913031555 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.879195278 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.883908587 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.909119764 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897091443 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.913500113 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.884084282 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.896829967 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.89703501 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.877311766 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.892858755 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.891645045 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.88220244 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.885903242 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.874799633 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.911195086 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.893892817 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893051615 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.90219683 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.002059093 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.87915539 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.191469686 seconds)
done (took 295.421882802 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.95209256 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.873348405 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.975683246 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.876853996 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.960577331 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.967358603 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.87364519 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.875115712 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.874079558 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.274548963 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.874159745 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.874643762 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.869483234 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.874803685 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.960689164 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.878754444 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.874585924 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.230621677 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.878321816 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.949934748 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.874780976 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.875207498 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.878372291 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.272945219 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.876937717 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.879894068 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.954633438 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.877755525 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.222276822 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.87130201 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.878163468 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.234517472 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.973165212 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.896399378 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.888343552 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.885912182 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.965170095 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.882635915 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.961399448 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.960782637 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.978054781 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.919744735 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.871958533 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.87324075 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.885706942 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.879857493 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.87601187 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.90849804 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.877705431 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.877233865 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.236588769 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.889485569 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.886616498 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.876927063 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.877642265 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.902147032 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.876493823 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.881877659 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.971143295 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.881129586 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.942026493 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.260922739 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.270981714 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.87983196 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.88070146 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.877631795 seconds)
  done (took 185.021949373 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.94549143 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.953287859 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.948591697 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.884520693 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.929562714 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.948984727 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.885511913 seconds)
  done (took 15.298934102 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.887187984 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.881759157 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.933951039 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.93299236 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.881577388 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.031857001 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.881995643 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.892779066 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.878697053 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.934522577 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.881968689 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.88182252 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.88796751 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.879146259 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.932931176 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.893429181 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.998938421 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.882928179 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.882372438 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.033680517 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.879931982 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.888484701 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.936523271 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.893860512 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.882859385 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.887863022 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.478049741 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882748686 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.880028821 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.882855649 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.878699028 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.924947394 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.884017532 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.878027658 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879227245 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.997586084 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.882236391 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879435618 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.882523931 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.878292552 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.882423454 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.88257779 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.883382573 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.879777584 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.883163106 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.907076092 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.882121624 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.883601791 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.87581777 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.878254445 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.928198423 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.877521734 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.874303303 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.87385502 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.932105123 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.88488945 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.878194987 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.874452972 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.878237668 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.875173174 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.029435093 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.929201421 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.877374258 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.928800081 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.877516888 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.878460116 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.877416628 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.877892204 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.975208736 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.877970607 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.928670672 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.875856058 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.037744847 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.902778353 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.879145039 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.881104495 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.882934602 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.87920337 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.877407522 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.885851813 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.874504861 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.881087394 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.884713816 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8764315 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.87566246 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.990292191 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.987005273 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.875753172 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.891359494 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.886212688 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.876336018 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.932150289 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.879592298 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.876342545 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.936338628 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.997262801 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.934665437 seconds)
  done (took 206.888164737 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.884915499 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.887812192 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.880369709 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.895989163 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.880066983 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.880349561 seconds)
  done (took 13.110874119 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.88188858 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.880890073 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.879540767 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.879703228 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.879653607 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.880951965 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.88094454 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.883795662 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.885011346 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.879830899 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.880925095 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.881443583 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.88104109 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.879260689 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.881175085 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.880967908 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.881445879 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.87753995 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.880150449 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.881144721 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.039031679 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.880658301 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.881205875 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.883133667 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.885693768 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.882371709 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.891274531 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.881623913 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.880791852 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.891094511 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.88505421 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.882394057 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.882508447 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.88822206 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.885987994 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.882138814 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886321696 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.882272794 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.878793885 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.881549532 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.882996582 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.881579399 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.881644156 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.882348197 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.883842382 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.887139276 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.886931085 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.889997675 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.883502392 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.88292532 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.88332479 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.881238003 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.883754147 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.882939369 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.884891144 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888247037 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.887336736 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.883328158 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.883805297 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.884739538 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.884331464 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.883301624 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.885727581 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.887947032 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.890347556 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.8848984 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.884208377 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.887827119 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885088102 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.88328967 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.885011371 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.880422928 seconds)
  done (took 138.562902777 seconds)
done (took 560.703152328 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.015610818 seconds)
  done (took 8.821938771 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.972657249 seconds)
  done (took 8.818041464 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.450983018 seconds)
  done (took 10.257924292 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.893658161 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.913473147 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.890396389 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.880389663 seconds)
  done (took 29.411168053 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.062342344 seconds)
  done (took 8.868102745 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.900714459 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.877543935 seconds)
  done (took 15.61868851 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.88099335 seconds)
  done (took 8.687942029 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.039604372 seconds)
  done (took 8.872711063 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.899598475 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.915116438 seconds)
  done (took 15.634582572 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.861847991 seconds)
  done (took 8.668399193 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.509831746 seconds)
  done (took 11.411298877 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.895276863 seconds)
  done (took 8.805591671 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.910177441 seconds)
  done (took 8.716968257 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.943970399 seconds)
  done (took 8.750518785 seconds)
done (took 163.150643246 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.883606663 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.880851282 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.880684405 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.879637982 seconds)
  done (took 29.331360876 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.918854261 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.919093799 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.920262183 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.929947886 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.921650401 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.918481692 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.911393824 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.911395557 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.930409877 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.922530458 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.921338944 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.921380526 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.918402556 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.910891441 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.921940191 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.920872372 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.929755072 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.92187967 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.913067977 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.925657371 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.887973629 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.930260101 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.922762265 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.886913151 seconds)
  done (took 47.845597468 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.083096828 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.957935795 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.039929094 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.937940075 seconds)
  done (took 9.826745866 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.938201918 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.939602736 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.951889511 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.991551211 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.012883532 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.949369434 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.914251696 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.908262062 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.894549779 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.939230937 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.015668652 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.940622836 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.024676154 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.887503803 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.089729447 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.88757347 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.887641563 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.939425295 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.990771075 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.00373486 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.888894459 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.938753711 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.945633512 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.936563561 seconds)
  done (took 48.626035805 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.88602568 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.894541294 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.892047863 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.887187638 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.886393772 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.887249539 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.892252196 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.887739939 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.907414051 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.888066213 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.885351255 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.886951442 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.885723672 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.886675239 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.886437103 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.898907131 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.900708702 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.886811679 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.889767104 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.892675245 seconds)
  done (took 39.61958205 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.881909346 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.73549806 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.232637465 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.13690657 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.882142256 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.883805911 seconds)
  done (took 31.563182137 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.902772969 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.894626667 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.88789579 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.94612634 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.030143676 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.896444001 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.888256266 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.902325577 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.937840511 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.953948595 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.91019695 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.918996782 seconds)
  done (took 24.880108857 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.885285825 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.887401193 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.883712116 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.904004225 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.898683561 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.897136604 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.895648283 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.88142891 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.901733733 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.909993024 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.897313412 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.901973766 seconds)
  done (took 44.558966248 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971370709 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.771597166 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.939947759 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.601751252 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419373017 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095661919 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.404603682 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.229103797 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.888250605 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156187672 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.816138442 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128017807 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139764733 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884783406 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.959968812 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.322856173 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180542446 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11198007 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912310575 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508393823 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003615938 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.494664502 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.637742773 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.010470831 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098524684 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.016680232 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.186847071 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.842948939 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015113809 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921499833 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894956111 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.885894258 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159238814 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257109899 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999858181 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89578326 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547093007 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.603997266 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.872932723 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.686091562 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.71628443 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.015338876 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894555206 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886805074 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.821489123 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.488233933 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243786245 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.891825593 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.5894256 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.885720062 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897222008 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977312666 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.890877678 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.702061048 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839162079 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.167994706 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.884281661 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893522482 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458158422 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.937424615 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.597272174 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.835312725 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.980444977 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.540239567 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349510904 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.0339286 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.890876304 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890686681 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822349479 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.601959578 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009752843 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03372211 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.908084246 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.538255193 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19348287 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.886472337 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968585433 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176966314 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.84307466 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.835469159 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116968528 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.845776247 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823126333 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.737117008 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82215501 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152414883 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926736463 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.520636041 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928811753 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.229713473 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.899197063 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91143462 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895673296 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113028636 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.771797043 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888750767 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.599531104 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171966276 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912324557 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.234676254 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824364261 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.893320058 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14556907 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.101403156 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.224759862 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.338137048 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05047306 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890543567 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.981307443 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.890256244 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905929278 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.164101917 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94798066 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.932322832 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017644803 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.848055735 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186703697 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918532236 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.066981183 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.864097939 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153385935 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.199241906 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143670501 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972690942 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893402162 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.885711561 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.601248329 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.513746276 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.113991101 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.890202172 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.476368188 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.908605908 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.890578336 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823320614 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.549191611 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.854826929 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.007939812 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113425347 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.88974025 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16349759 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820031364 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031858499 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.997765165 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.108129704 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.530845435 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.962672636 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143611122 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484541311 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221216909 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902955957 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899493263 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973638379 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901737681 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.413198592 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.143819613 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.881984286 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.882628365 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.55636411 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.961813862 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89551923 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.895900372 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.695738481 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175347876 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913894599 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.899236162 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.779198579 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.903096102 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956396789 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894391136 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.900129416 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.394619018 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.643300116 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.900810471 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.541403134 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114954363 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89868795 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.528220754 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084863561 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.977060269 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.172489607 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953417834 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.828716488 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.595269462 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.597179109 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892571739 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828201221 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.891176583 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900980725 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901935805 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.089597241 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.176668067 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9341245 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.528810901 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.007093233 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903989019 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.898434671 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894908104 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.388355258 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.967834578 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.622616133 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.91428057 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031267762 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.907660782 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.827824018 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.898204015 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899271636 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.895017235 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.860697578 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943174877 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.534711997 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352321315 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156488235 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.550461846 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914252022 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.562980416 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.024091277 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.92308248 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.630779118 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.054482849 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.905846431 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980800719 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.906185927 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.546539685 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.66446187 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.465462445 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204117924 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203693678 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329316989 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.47564769 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.126157575 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243240111 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.131734363 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.424432902 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.957683977 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244351762 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840317449 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986588418 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.542927115 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252249281 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911385922 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124191237 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277661519 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.698962683 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059115187 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107316744 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930981776 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.898277057 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824148591 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.100533794 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048915696 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.623525476 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127727703 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239594309 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.664090702 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.007421055 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.897771422 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.594507708 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983852152 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.610803829 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.257054229 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.513295183 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.870747155 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400594895 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905980823 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.343477242 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248085487 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.314027449 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.995458527 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828517579 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.905034039 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.900580739 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.889303789 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.868634012 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.785205469 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.159271447 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897780488 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122405013 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.26899651 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158324784 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.790777307 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.891647869 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885326092 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187729916 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.768423374 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022876078 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.419872255 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.362224166 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890939522 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.812307318 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812339623 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.581303254 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.87818429 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.849588729 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106626983 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.990059645 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832693169 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452835363 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090908674 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.128171937 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.884879519 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149995147 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148746729 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.609473502 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899225679 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.970243075 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.628197329 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.581605518 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.098346098 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109619753 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.677955736 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106384952 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.922468291 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.841203469 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.871736145 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.086803213 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.095003302 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.856379215 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130497055 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.599120632 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.880852344 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283523774 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963142857 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.933461223 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.120451274 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.998518742 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916208036 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984768786 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913700224 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.915022384 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.915295129 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955603617 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.936522837 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.040424636 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.918377155 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996426429 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.991150799 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.496299939 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.915759663 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187589174 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272651622 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.237772988 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96788251 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.905215533 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910964495 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839636843 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043767351 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351354666 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178679049 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.037702867 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.046607531 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931372292 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.679165067 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.25986338 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254631383 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18065127 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.799596589 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906507261 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.001321486 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.130979127 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916944589 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.116753592 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142458004 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23413809 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381492454 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.121991566 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366482004 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180583054 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.274711372 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906986 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.500285211 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.913696503 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.681513979 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.951002339 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.957280599 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196476797 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918223049 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304596783 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.931615953 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.107061115 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.424071853 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.651469452 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273373829 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.904792804 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.971824778 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188875761 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.310995474 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223029279 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976776501 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919198703 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.606778923 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046659783 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.83270214 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.163678166 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909153305 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119888124 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.620852217 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918195617 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199656067 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221133097 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.906374819 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.865247608 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960779387 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.918537672 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13342543 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183782722 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165017433 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920092854 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.910490736 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.724216729 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196837239 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969573935 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843555557 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.913094416 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010633777 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.158848949 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929252509 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.427127203 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.612684908 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214796746 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.849845487 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933757845 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3850757 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371562381 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252218026 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.438225628 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147264178 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.471234761 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.82068963 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.294138397 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.9088435 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374100615 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.295576864 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.904541037 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.485435023 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023821297 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.177265957 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223666919 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.909544947 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.639013883 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.947266785 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120551905 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.500425348 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840681024 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901387884 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.955765497 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.896291209 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.024594839 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90534532 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.868702704 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832935961 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.740263875 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379196404 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.893741694 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.878862917 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.713519983 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.490229998 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004221637 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036474467 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886609912 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.581712695 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.168807879 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13254433 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.450120854 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.956380157 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.876484822 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873117963 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.802055649 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.06790593 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.093186339 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173045153 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.294489684 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.993122695 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.868737881 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.080970526 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076518672 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.889964121 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025072265 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318194406 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98478923 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.778429905 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.574008496 seconds)
  done (took 1699.085205655 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.873821304 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.877129421 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.901083193 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.950703183 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.902175037 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913147369 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.907432422 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.917974712 seconds)
  done (took 57.030322322 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.858427814 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.067512472 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.867847182 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.859841484 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.885620446 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.859327555 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.052008733 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.87144883 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.93724969 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.868662304 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.859239673 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.892437052 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.243097314 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.886151434 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.859227628 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.842385493 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.88615053 seconds)
  done (took 74.420100342 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.860051887 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.048262669 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.879454128 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.878384619 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.741743465 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.863703329 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.837856784 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.88887978 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.862153191 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.034254199 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.196099216 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.866563254 seconds)
  done (took 89.745617171 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.876908443 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.866011383 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.866578842 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.867101367 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.866882325 seconds)
  done (took 11.139112151 seconds)
done (took 2209.502757895 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.168066757 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.083148094 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.096752522 seconds)
  done (took 5.968043182 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.012779775 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.060056429 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.178100012 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.18450835 seconds)
  done (took 10.230959095 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.152048474 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.245602985 seconds)
  done (took 6.18844061 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.19816591 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.88821743 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.242873709 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.862668975 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.86418741 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.865584247 seconds)
  done (took 22.38898266 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.867145528 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.869225259 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.866881578 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.869191529 seconds)
  done (took 9.263346313 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.846756399 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.58651083 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.848912652 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.862733563 seconds)
  done (took 20.936049815 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.615570183 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.264101911 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.610515658 seconds)
  done (took 9.281401587 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.339614133 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.254279613 seconds)
  done (took 9.385209512 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.11004506 seconds)
  done (took 3.902653973 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.895561873 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.138046315 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.409644593 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.435349243 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.524048582 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.107859962 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.214659654 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.103821829 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.323325517 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.354720326 seconds)
  done (took 25.299961406 seconds)
done (took 138.132493973 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.52288088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.901586398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.071698166 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.234527417 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.098327489 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.070849055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.066868164 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.235867443 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.776430799 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.767107104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.284853668 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.101832592 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.02130428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.89037678 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.032132083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885983892 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.09703947 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.337042327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.955666569 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.13625069 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.091809134 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.876244289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.070906894 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.893532794 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.095267111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.011667649 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.416097864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.8841587 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.081249857 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.429212067 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.01195524 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.264711925 seconds)
  done (took 168.409588766 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.858710024 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.859451439 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.857657481 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.8582633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.168473871 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.861161649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.859878497 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.858000481 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.902114563 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.883204447 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.859610424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.15843079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.855906424 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.8541205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.852756783 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.849563712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.042121103 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.850087993 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.848774577 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.848208091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.846741451 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.995742402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.849455217 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.006259982 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 4.996001128 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.849947544 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.848438499 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.849632257 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.8487191 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.850017188 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.848566244 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.845654956 seconds)
  done (took 206.410051571 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.840242056 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.844696853 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.841208473 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.838712902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.8402326 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.859476131 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.840819997 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.837975215 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.335647643 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.338347637 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.839087751 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.839866127 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.861240465 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.83827606 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.838646754 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.838780793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.838004856 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.837926947 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.838946604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.83923157 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.84030983 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.448753427 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.839177374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.454115899 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.840199503 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.841719628 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.839731787 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.845489102 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.84977699 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.852468467 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.854506296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.839364649 seconds)
  done (took 218.945759028 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.028823347 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.845445046 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.846435462 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.841717266 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.846674132 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.845175673 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.838517427 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.02849857 seconds)
  done (took 18.910539282 seconds)
done (took 614.478381791 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.321593365 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.168785695 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.026895826 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.872117364 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.110297428 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.907184353 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.866194354 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.937360669 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.608327654 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.942939714 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.517446542 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.89236576 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.606088514 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.89834884 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.992184661 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.927294885 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.416038824 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.508525203 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.047300868 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.921628268 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.041049681 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.833607386 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.953801989 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.642729574 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.627406824 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.881905084 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.043785172 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.423835738 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.87944615 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.029778505 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.618541144 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.256420371 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.882575367 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.865343608 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.926306959 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.90134508 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.218159672 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.879001347 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.988373058 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.630336933 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.925854847 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.486797156 seconds)
  done (took 102.194247898 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.836078608 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.834820561 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.833543425 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.83450864 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.835167224 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.83445686 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.833610871 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.833100567 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.834644057 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.833881351 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.833780411 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.83572764 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.834004768 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.836001485 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.834356724 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.834308831 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.835048773 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.837061734 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.833943774 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.833854897 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.834939619 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.83484401 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.850047797 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.834867908 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.83594426 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.83499608 seconds)
  done (took 49.498932241 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.849297567 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.003032973 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.088370435 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.871658797 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.849281541 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.852670834 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.868263833 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.854085216 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.852149476 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.85188656 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.947455464 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.856415262 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.869969591 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.087194634 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.868306848 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.84957092 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.850458663 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.850965103 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.009088719 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.868447743 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.871101152 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.856006751 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.870947305 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.86469157 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.852792839 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.851313366 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.855029221 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.313084753 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.861245185 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.949553258 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.909906296 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.880146871 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.260153858 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.106200974 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.910758874 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.86353164 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.85254347 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.94907171 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.858041737 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.852175365 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.869943169 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.856553928 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.085663876 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.354082909 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.867717661 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.851406088 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.323925224 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.961117755 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.8935122 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.864087987 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.090518242 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.872198623 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.852767334 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.853994347 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.888718753 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.861017401 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.852997849 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.201922666 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.865175386 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.871209974 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.857591634 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.853938277 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.01496426 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.863184858 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.004341952 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.864352561 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.861179335 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.854786636 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.091191141 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.87298565 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.350244913 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.868513871 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.853569011 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.94681836 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.007244208 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.353137568 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.8675303 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.01626878 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.280942831 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.881302777 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.863617021 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.305141614 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.883121307 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.863114022 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.856590449 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.85567461 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.854125726 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.898769401 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.87106276 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.282449204 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.358013889 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.222348042 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.882500442 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.869544938 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.854397348 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.203688886 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.864965532 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.854891022 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.083394295 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.364037808 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.870422719 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.862643255 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.34625164 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.872086417 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.874496534 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.864988055 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.095280486 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.873964241 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.89954958 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.854882314 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.862111629 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.859081831 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.873943786 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.862451636 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.856048472 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.33356255 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.971261234 seconds)
  done (took 230.190222352 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.852125668 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.874290662 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.848420647 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.879128434 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.849624442 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.856370737 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.849427013 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.84813491 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.85554518 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.849843035 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.851841285 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.851713963 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.850474169 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.876873238 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.872681785 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.856534803 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.460153409 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.852303315 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.851495139 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.856395213 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.600435752 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.857997981 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.852252442 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.858235605 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.859112552 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.854778973 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.861197986 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.860991027 seconds)
  done (took 167.13019893 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.856701905 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.97548135 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.878691308 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.885763407 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.868274846 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.854395257 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.881419226 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.875086919 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.863516423 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.857712846 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.856366459 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.92175359 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.870235143 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.958983832 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.888766251 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.890798786 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.965305833 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.865663638 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.857017382 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.855919039 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.887824835 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.852016932 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.921202854 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.98987576 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.879981757 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.97837351 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.865268012 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.859446822 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.858336497 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.976068066 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.876581476 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.921170742 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.889607838 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.876503779 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.983217246 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.983086279 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.965171429 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.886746526 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.863993175 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.85681183 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.857719596 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.845650463 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.976401462 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.878885783 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.862236904 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.966661881 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.880393338 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.85943216 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.867142234 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.856521436 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.872159183 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.877761831 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.927685656 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.996387948 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.895120712 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.883862919 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.886821058 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.141302351 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.868415226 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.960707947 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.852077813 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.978122904 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.88329018 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.847996767 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.859884626 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.86559619 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.887540183 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.891510176 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.968368997 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.869503661 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.961384485 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.895890634 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.866737312 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.858924369 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.86435159 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.979007579 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.981672666 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.897294748 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.898042679 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.894123554 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.857899605 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.861364496 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.849199632 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.881119813 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.864304003 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.980768201 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.980605667 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.869453772 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.86219821 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.861554153 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.863427244 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.886919207 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.989766998 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.897461127 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.960047485 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.930096379 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.939618344 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.878840021 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.873641407 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.864162932 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.926529887 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.878051361 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.871545544 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.186668542 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.932100733 seconds)
  done (took 201.592873017 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.331315644 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.916200837 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.921069145 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.190979519 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.296471645 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.725875647 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.911515789 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.912118613 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.935114029 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.098359588 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.983626435 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.933541897 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.900959041 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.886170388 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.914174674 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.934110063 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.928382142 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.235764462 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.035471051 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.022039685 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.895213413 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.199353237 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.233057191 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.311445351 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.948298501 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.251684949 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.592719702 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.054172088 seconds)
  done (took 61.291149813 seconds)
done (took 813.666792846 seconds)
SAVING RESULT...
DONE!
