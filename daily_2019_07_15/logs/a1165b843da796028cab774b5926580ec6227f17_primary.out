cset: moving following pidspec: 9723
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.318303348 seconds)
loading group "string"... done (took 0.553153202 seconds)
loading group "linalg"... done (took 6.943030876 seconds)
loading group "parallel"... done (took 0.239624748 seconds)
loading group "find"... done (took 1.125754643 seconds)
loading group "tuple"... done (took 1.736665225 seconds)
loading group "dates"... done (took 1.188230208 seconds)
loading group "micro"... done (took 0.223265841 seconds)
loading group "io"... done (took 0.996019586 seconds)
loading group "scalar"... done (took 39.058853953 seconds)
loading group "sparse"... done (took 13.362514126 seconds)
loading group "broadcast"... done (took 0.992658651 seconds)
loading group "union"... done (took 13.189440026 seconds)
loading group "simd"... done (took 4.500485348 seconds)
loading group "random"... done (took 9.152906834 seconds)
loading group "problem"... done (took 2.009548931 seconds)
loading group "array"... done (took 21.384698982 seconds)
loading group "misc"... done (took 1.836429096 seconds)
loading group "sort"... done (took 3.304739558 seconds)
loading group "collection"... done (took 17.672154983 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513716863 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140928973 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132193138 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.136314111 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.17224923 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130696452 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140829471 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100597688 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.125603202 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.161723214 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13473548 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.469125564 seconds)
done (took 5.253963301 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.207005387 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084451132 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096462976 seconds)
  done (took 1.022589957 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067377251 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122160556 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065954643 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066252342 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065712131 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065717074 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.087190213 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068315955 seconds)
  done (took 1.388310931 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07389775 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068386632 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085192236 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069154652 seconds)
  done (took 1.148532293 seconds)
done (took 4.689352569 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.844126284 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.242647649 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183895805 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452304852 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153521335 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183998632 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665095383 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337228169 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.201938673 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082704502 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.122120624 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.359034013 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124616529 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68472561 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078028473 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109370341 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.168268648 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.418241161 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082825594 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084080159 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104828006 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130184361 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.102865102 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091591052 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157791448 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082854191 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147073002 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081224576 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083725661 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226846052 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189489503 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.672004255 seconds)
  done (took 10.538370862 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096979442 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114071213 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069443278 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141445752 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099003615 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069543988 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070966644 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068505799 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108171533 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.145227251 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08947038 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.119330888 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065991405 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086460233 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085867715 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.222916109 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083141943 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102083232 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071361038 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.093263468 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108164444 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095036659 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079961315 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094592521 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130173043 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.198370365 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101805213 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.11616302 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070932249 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101269297 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132991181 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131174062 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067314296 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08617404 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128460535 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114868537 seconds)
  done (took 4.622536598 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.067320667 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110127366 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141630623 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.109207141 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.180446603 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069415011 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127803907 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082920031 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085328058 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216600319 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.085747947 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.4680117 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129490703 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101653719 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069148248 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068701942 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084424131 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.545297035 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149425515 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113372492 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108513532 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076146989 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089875594 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359233848 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068787223 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068202261 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087458925 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061671263 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.132791962 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069965357 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.138348197 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110215378 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069291325 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119587913 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185234061 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093119964 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.154692771 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084159559 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066453729 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168198646 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091690969 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068310453 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083680588 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124020706 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124158458 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065470241 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086711671 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180706451 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071087578 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067774098 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10380803 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.864873806 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.170226562 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094356605 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069189744 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285186839 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08590659 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084594839 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06563233 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.259595085 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083001851 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.151399584 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069207606 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.087447237 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068747749 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069425461 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378632529 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08598345 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.749649611 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069741348 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077096056 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068071678 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065819712 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092382611 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073113227 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102490648 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067833706 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067766095 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084069905 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066876452 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067672656 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08184843 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084909867 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.20621949 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084982558 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06774491 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082637934 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087855105 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113227933 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073196372 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067449065 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120303614 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072267226 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087954471 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104511039 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088409207 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087732584 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08811764 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.133947878 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070596582 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.151925087 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068485932 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115529902 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072197534 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116336463 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081948078 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068525325 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.244221062 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064421046 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064068167 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067473479 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087602953 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070197663 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070140926 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.101564698 seconds)
  done (took 21.220889154 seconds)
done (took 38.299805639 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.299514144 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098894752 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079462277 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.096288022 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095066228 seconds)
  done (took 1.593656989 seconds)
done (took 2.490561726 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119581447 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118898585 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064161278 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114040323 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064062499 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.119199594 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098202319 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09953221 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116320305 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065094133 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095446702 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083215616 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064244233 seconds)
  done (took 2.148116589 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084039532 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084530987 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089853339 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084483691 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064222623 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102566362 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08264368 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109097283 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082550221 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073306038 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085316573 seconds)
  done (took 1.836041247 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082952626 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082920899 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090016718 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083877925 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064648019 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102450532 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082839003 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105818719 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082843283 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092834484 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067423977 seconds)
  done (took 1.832966478 seconds)
done (took 6.704298596 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078638106 seconds)
  done (took 0.967556201 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.694667667 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.092475095 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080602895 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134062749 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.209183685 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.145319091 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.330779878 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089845576 seconds)
  done (took 9.864826122 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090367366 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089642912 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084220946 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09269442 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073955588 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071561451 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094691455 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069827697 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090961598 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073895425 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071044885 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088850558 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070619474 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091410798 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07241858 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091067046 seconds)
  done (took 2.270810971 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091429325 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110938162 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073683071 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.095528893 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071894999 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.092063855 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075143779 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.093779532 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072057274 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092504519 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078139999 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09420879 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073529099 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085219084 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076224324 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.095808028 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07375835 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.093524206 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079450863 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094748887 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077793321 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065427217 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.093066493 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076078817 seconds)
  done (took 3.009433528 seconds)
done (took 17.00782117 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112954377 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089616883 seconds)
  done (took 1.095678191 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082066273 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100539984 seconds)
  done (took 1.080449885 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083951755 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082376808 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092863259 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097045688 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066350001 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084881166 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10788417 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068969089 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067207438 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.087621969 seconds)
  done (took 1.738641373 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069458743 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094652622 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072110789 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.10086843 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077166561 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083783967 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077101774 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087301528 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082911219 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064498654 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071994308 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.103894605 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075303058 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105610417 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076730964 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088864484 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073477801 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068440778 seconds)
  done (took 2.373381438 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067866052 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067439434 seconds)
  done (took 1.039355754 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068250321 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063662325 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085163973 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067835035 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083851381 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064687518 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082502552 seconds)
  done (took 1.419392219 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.414760617 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111247696 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340960453 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072967918 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105746402 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.291192863 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067679031 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072564973 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093707809 seconds)
  done (took 2.516922487 seconds)
done (took 12.165343195 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080420657 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085298489 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113789143 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.380463848 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093753632 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084220839 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132673476 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.232242714 seconds)
done (took 2.107795357 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126839594 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.619719973 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.414066296 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.221240105 seconds)
  done (took 2.162092 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335277485 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112432368 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061023901 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.086883962 seconds)
  done (took 1.506857066 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067143134 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06919182 seconds)
  done (took 1.043736699 seconds)
done (took 5.748475332 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067959706 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065391783 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.104091338 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064131412 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082718036 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067102902 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066443999 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.082626378 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064495145 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066252685 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064976583 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.0677951 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065175784 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087117444 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06457474 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063381638 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082192921 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066826023 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063258821 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081346618 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063865867 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0662489 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083674985 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065584628 seconds)
  done (took 2.66259419 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085071653 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084206171 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073253797 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072580614 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095017955 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072980323 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093233788 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068468806 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.092565649 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071316789 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089836619 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072901184 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070224223 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091087433 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069876774 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.091706664 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07482696 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086850963 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071796155 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089700089 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075892978 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067358309 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091485684 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073592122 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090769391 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071815545 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089093425 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069628158 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090622317 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073231904 seconds)
  done (took 3.32508262 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.0709837 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063703976 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08203084 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071583035 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065399903 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086170631 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066139426 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06524125 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.085586177 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06600585 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066036452 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.085697646 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065862613 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08511327 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067350282 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06870568 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.100665654 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066355276 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065234207 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.085970949 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069450045 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064877352 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085698221 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065418659 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.085081759 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066893421 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066514075 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.084217058 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067600858 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066082181 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.087691526 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069961622 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065009093 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091941763 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069764962 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065222652 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.089292305 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066027235 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06577791 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085162361 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065497667 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064941394 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064739274 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071411239 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.086502889 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068697954 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065873721 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086676733 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066784308 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068054775 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085267446 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066645014 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085517697 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068364488 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070091296 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083332845 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067386954 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064922638 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.086073672 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06694912 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064644407 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08424539 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068331441 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06592728 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100481336 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072707404 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.084415571 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068099686 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067164301 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086842906 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067763188 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078912522 seconds)
  done (took 6.238707836 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092337708 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106692549 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065502152 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084456642 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062145901 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082634733 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069005258 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063708413 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085944288 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073540589 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085801852 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068031443 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067219822 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098031401 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066195737 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085480566 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072846855 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063868877 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.085995324 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.181491078 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084400003 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071294607 seconds)
  done (took 2.738269804 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.176117735 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07087781 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.126365376 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092077193 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069814659 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092313551 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071731604 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071575264 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091076453 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069291041 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089664497 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072412405 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089233829 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07107774 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088773403 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071293259 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090601468 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071868733 seconds)
  done (took 2.500494173 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079320073 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06591225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105652979 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067193222 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085088463 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068788202 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09027221 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075764132 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086029053 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067753451 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074355068 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087525043 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068804824 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084938683 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069628896 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066003309 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087764955 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066525636 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094128418 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071434396 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090248094 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075355185 seconds)
  done (took 2.65318489 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08157574 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06821309 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10284869 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068951628 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081831633 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065259271 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088058423 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067381598 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069729242 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.088364199 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066931601 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064824288 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069652702 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065804677 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.092315658 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066759933 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086884228 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068012142 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06736395 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08053385 seconds)
  done (took 2.43749161 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089035334 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086316248 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069245847 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094092334 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068924556 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085782066 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077348521 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086241012 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069599581 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105895769 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068817462 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067677556 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074071956 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092327586 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069175343 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094991121 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07639958 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095179281 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068049061 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086257676 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089459319 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067380545 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075031228 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088451156 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068072556 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086694205 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068720926 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090782876 seconds)
  done (took 3.187946051 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067724849 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066772561 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082133157 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06450044 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063484223 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082067902 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064911241 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063638514 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08480724 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065584312 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066158527 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084619115 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06739498 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065525804 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085182529 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066728351 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06624775 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083718185 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065123198 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064950489 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086576836 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066683602 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065727905 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083208859 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064452466 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083797662 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065979845 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064095868 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084320639 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064671209 seconds)
  done (took 3.078291769 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077340528 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073424748 seconds)
  done (took 1.081480092 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06531151 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08028889 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083012145 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070775437 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08886917 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067909235 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073560408 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069168782 seconds)
  done (took 1.528711417 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082441761 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078011144 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067991657 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079508183 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098164867 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083632899 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157188438 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086396496 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074178959 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064113274 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.100861368 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065682222 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092185779 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068083197 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072793761 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094460872 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065681733 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093678573 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069828827 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06542324 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08801769 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075370226 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088246739 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063653636 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067596092 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109237838 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095488401 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067939289 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069322477 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092674822 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072176677 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078914004 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.0678788 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066890474 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083540969 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077083635 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100346187 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070474075 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093586113 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069622296 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096070381 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063380014 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071656639 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092691887 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077244266 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085022053 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069839991 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061632222 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084050709 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069638775 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061895361 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086844284 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062251631 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093931109 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071706439 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080160031 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085999121 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068178787 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088234432 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071360329 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072919551 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087783173 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069182561 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084379202 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076935222 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070659911 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075007281 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062110449 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.084162189 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066665834 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076664385 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109504869 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073052135 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087055583 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067902309 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083541919 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070558059 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067692994 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092228988 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072900784 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085853103 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072770122 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09216522 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067821549 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069283846 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094725597 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065331134 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089103489 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065597183 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102149217 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065750282 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064499569 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083853849 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077476235 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088943449 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067503514 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064595255 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092767629 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060896652 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085600203 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068913672 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067623051 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096321086 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071089977 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091776762 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075788894 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093655706 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067565314 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087311332 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064942195 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067351799 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084766277 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075588284 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060905759 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089139979 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06788895 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086028275 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077026795 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064648289 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08653221 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074075129 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091824028 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065985212 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063242401 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089307091 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067163688 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089004496 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075945819 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06481071 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.0620448 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062843019 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093548945 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068703144 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072070982 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093767785 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069239607 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.081902881 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066648487 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.093180045 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077829831 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066625521 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08702627 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072873563 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.087077509 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067562445 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073057798 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088557515 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065792011 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091761637 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068140281 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062242297 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08982204 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069861797 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083809884 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071902501 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071091598 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090868431 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069323012 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086594447 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07796657 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088232136 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068677521 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068430513 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087018714 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080582652 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089336291 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06492507 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065278796 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099242289 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06626686 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086620057 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068990512 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070666387 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090134424 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067652779 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06801473 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091322734 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079785116 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093088975 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068803934 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092909469 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079250778 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084690501 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070798994 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066985854 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087043776 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06861845 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094005587 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073886639 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071826527 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089674554 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064063141 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091873289 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075611885 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065328793 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084079044 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066125389 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090226604 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073553383 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071008447 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066235592 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064119198 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089230034 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070170118 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088082286 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068042496 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066577701 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095700874 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067484115 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.096280976 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070345952 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097929945 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072975474 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063762381 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092984934 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066661468 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094292698 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065542079 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065875877 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088003058 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070781738 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067310019 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091294139 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062903312 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096233852 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077525176 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069290832 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088491089 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069384487 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094636933 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071220503 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072534243 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092531652 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075526753 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099495315 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069357209 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071556493 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.099059564 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068869075 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061761541 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072381537 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065693719 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.091324314 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067682603 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086734806 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072844106 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097029427 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077963587 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062482008 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091566746 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067880516 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067224571 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.085814116 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07344024 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091444808 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071046652 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07565973 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090012098 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069119638 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091917363 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066979246 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068164019 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088784933 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069679075 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088218932 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06952816 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066768017 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090948657 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067239248 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.086286544 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072069255 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069371032 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089073216 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07532455 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067612762 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067551159 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069507185 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.091881134 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069577547 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088430173 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069022897 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072225156 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089833209 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069414372 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070112684 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.084476172 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076290891 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08821349 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077620643 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068803667 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085989991 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077171058 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09134018 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076157126 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089277437 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070109295 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069613562 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088851063 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072185043 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094940715 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067078198 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079985955 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097622221 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068854572 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091957259 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070053046 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069789525 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087934896 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070021741 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089150327 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069993896 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06794557 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093618104 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071637127 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088330653 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071875262 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06964793 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08955768 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070488257 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063005593 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08932226 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069622098 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088280145 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080426416 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068911097 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088072028 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067111744 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089825472 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067918191 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063420404 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09577412 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076793641 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087453803 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073964781 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08624267 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069340028 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096333843 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062890864 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064802484 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084853724 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065849912 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073555059 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088198312 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07560678 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087057873 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067009444 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064063461 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.0871949 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066090457 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080035325 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067300829 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072213929 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088268003 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068943837 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068277021 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091972403 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069951972 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098838711 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067892083 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068991439 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088977043 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064315743 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086458059 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069146704 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069851503 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089835808 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065932798 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065895395 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089409009 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068987033 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090086035 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068934677 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069125847 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095732943 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06828168 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092130925 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072175814 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064632673 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090579409 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066942597 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08634185 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067353312 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070374355 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091156895 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069325143 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097963931 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068178286 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068739889 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089860547 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066770707 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088458243 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069951451 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069424938 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08874612 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070527021 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096381453 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067892469 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071346342 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088824944 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069271548 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074829094 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06798442 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070225131 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099472929 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068806071 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091279363 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077917923 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092652601 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073005052 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069656225 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091312413 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075181804 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087109173 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076603851 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068675129 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.090257021 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071385753 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06651758 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089340566 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068161016 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087356608 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075935229 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068775294 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089973323 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06838154 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.086627251 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071033905 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071844864 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096846578 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071121466 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092329156 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064677965 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065288245 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090421375 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067242899 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069777582 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092731182 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073876204 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091715548 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069654949 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066940731 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09891551 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07473062 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093291096 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066556395 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091454689 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070936294 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071085299 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091001762 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06958004 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069571732 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093014781 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06876571 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085692371 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074624764 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070481275 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088908472 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068976289 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088176077 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068205282 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062154413 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066844499 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068100886 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092977842 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070260482 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066216114 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098731927 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065353387 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086459377 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07187469 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066502006 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092152506 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062790064 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.088617974 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069190931 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067823166 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082353849 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067031011 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064088397 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068650735 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064885775 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083757124 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07847838 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095689509 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070938394 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066169003 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08611167 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062533241 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061922694 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086560055 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068995299 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.0891305 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078598082 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064907748 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086558194 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062516135 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087351702 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071063836 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07036752 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085478369 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062265114 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066451062 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092451389 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071925481 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064667598 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065254898 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068875352 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092361903 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064754795 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091016025 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06434504 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070058353 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101595756 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06742442 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088550194 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073544309 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096262924 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06798086 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062303381 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087860735 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070421467 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087233082 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069052921 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.0668976 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102597143 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069653646 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086568059 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066693257 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.0890193 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069096977 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076313618 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091281628 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070389526 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093311374 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072090446 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078099082 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070639147 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075534035 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095598901 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07184473 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066831408 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067944373 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065580283 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091467533 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070840634 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069059474 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097336336 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077025206 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089839324 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079755466 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.100246296 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071371897 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08506331 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069647781 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068061474 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084618675 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070809435 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066388402 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08811505 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067812064 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066589066 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091765538 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074356239 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090500952 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070074781 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068281222 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.084930504 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07121598 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09084797 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071019813 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065313318 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089574927 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.07015195 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072278507 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071010454 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065827189 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093419339 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070996965 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069227636 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.085981968 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075286065 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088393395 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071851397 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06839279 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090238082 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070589748 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091878219 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075434444 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069879127 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093861517 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072990157 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091947268 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067136339 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065255042 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095754553 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067854558 seconds)
  done (took 47.261252896 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101486543 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083984465 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063440276 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062369361 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097203486 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064123389 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084515276 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064668688 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063956073 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065872381 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062997102 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087556945 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074307695 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102565472 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076229118 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091951844 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06387839 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08667339 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065227541 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06510079 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071738964 seconds)
  done (took 2.579351904 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075444387 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069731354 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071418339 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099222195 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069055941 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091528968 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074005298 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092467538 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076814593 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088820675 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076843851 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092168305 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067048762 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.08851526 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066928067 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093244779 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078466665 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091724904 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072741014 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0972637 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072684521 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097364331 seconds)
  done (took 2.781766443 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068243483 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065645692 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087187671 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063468537 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067296479 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.093813997 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07207344 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065368406 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069720713 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065783076 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.089550517 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067330902 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069068102 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.085946147 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068655623 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065148204 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133395952 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091111236 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066674647 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089179489 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064653758 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069794842 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.085899511 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064877644 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066715217 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.093626566 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069057338 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086511962 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069444298 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066772647 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.089271886 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066740753 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069106755 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090652352 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06784761 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066835125 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.090329222 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068546742 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.084463189 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067325311 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069156765 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085335803 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069260857 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068572146 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.088156345 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06667881 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089758103 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068949845 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063318301 seconds)
  done (took 4.692817932 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080876428 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.134376557 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069607074 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088774226 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.107517326 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075407629 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.094978453 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114675597 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06687525 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066763373 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.108878816 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.108261677 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068907759 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.095405293 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076117443 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088661262 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070732312 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06712986 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.095290606 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06773862 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093513557 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074190848 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105129559 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.102571604 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072615246 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087829978 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069415444 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072068057 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.10346914 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094177073 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073748435 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094712972 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083943087 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095097399 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067988311 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.09183098 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085984722 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.090687139 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071375105 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086893531 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072507104 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092653089 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077034068 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106141228 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068916498 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094089485 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069709996 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065360861 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.103334115 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071199238 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074971584 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.106739812 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072238346 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.090855979 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07424786 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104821197 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068964683 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088464572 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072891742 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.102816138 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067476545 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093057062 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084400407 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091971806 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077354468 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104688281 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074280384 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093444239 seconds)
  done (took 6.946513898 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076956357 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093491817 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08266601 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103019065 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07275548 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.095591643 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093196493 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074946185 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093519379 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080621721 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096409361 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116356579 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070409906 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098234488 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076762307 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0968588 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076579564 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096412683 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076302273 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097113737 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076024377 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081048394 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073765896 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08089187 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127087857 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.0707411 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097885569 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075965952 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106337231 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09603468 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083702045 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.096701348 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076121405 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105496891 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082123103 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073907324 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06672823 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099839741 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075200933 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098403476 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069884548 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104741378 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093462073 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069947731 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094179135 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07468106 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080423386 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079281213 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099773645 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099183462 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07470196 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103152604 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073096098 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094973341 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102559384 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107135214 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103804336 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102097421 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073930358 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103369893 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101957864 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08834741 seconds)
  done (took 6.494141769 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086036072 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096064946 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077887859 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083251848 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066031962 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092624549 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065534336 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065926056 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099856267 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077774946 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101984179 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093472363 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077156355 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10209611 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073286772 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098537436 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072416211 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09530125 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077491734 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095872015 seconds)
  done (took 2.691465861 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076422429 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082252174 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.090271817 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072875885 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091339009 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074231361 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092291791 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070985846 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090664895 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073264874 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078499814 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101730329 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068652169 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097228614 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098979179 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07622966 seconds)
  done (took 2.328612939 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077124136 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093857423 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081949126 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088300069 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069024627 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065553492 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.092144131 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064565538 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065056139 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104730796 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068754348 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.094888763 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069581467 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.089193443 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06694817 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071345414 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.087716513 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067524051 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089665281 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.0827926 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10095655 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069907227 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069015088 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091575412 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069250825 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.097491688 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068919647 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.087714109 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067983336 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068905878 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.092520595 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072425601 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.088112985 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067459771 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066877339 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.089162302 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068969912 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090572484 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072410342 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06789979 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.090161239 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069049185 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090834322 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070250825 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065036658 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091844561 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065120496 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093464507 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06687917 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090238693 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.07025732 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070730524 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.091669129 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076341135 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.094341247 seconds)
  done (took 5.352866196 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081503763 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070054571 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085428326 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068018747 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071261484 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069999847 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070584506 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095440307 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070817622 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088219752 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072084182 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07092236 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092691971 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073646683 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092083609 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073508838 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064510905 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.093336975 seconds)
  done (took 2.399070011 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073988875 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067352771 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09506978 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068396136 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066015705 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091134003 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062832779 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08679456 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06710636 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068141227 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089439196 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069909844 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087374784 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072170291 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068691612 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090209287 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071860411 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067302201 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092064671 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065694329 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09229891 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068525988 seconds)
  done (took 2.679453019 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074021842 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092592403 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162288623 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.10699405 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083104931 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.07958992 seconds)
  done (took 1.598926809 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092558761 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102861547 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068699292 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088673814 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097640961 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068659803 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091614151 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069461173 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099676802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099009142 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070433602 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099062155 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078090203 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098959849 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094647358 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07735414 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089342479 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070815112 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066968123 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107896036 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090143083 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0780759 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0896184 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069836796 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090268965 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077830167 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09917428 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077542318 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067131719 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099149177 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074878931 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091519835 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079047953 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100195364 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070909982 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099773723 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069037095 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108251186 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095650408 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078399229 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090957475 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076176438 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099109418 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074551973 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099640996 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068645384 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095330737 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06860712 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091704347 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109074072 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075676265 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098617393 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074592527 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100109259 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098182018 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088298191 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100153706 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097733419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075760847 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099161299 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077554199 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096379662 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097565755 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079809618 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096961822 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080280005 seconds)
  done (took 6.755740075 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084343148 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108687232 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070015536 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075822495 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074761655 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092523636 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068902018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091464366 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069173924 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089865218 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130975611 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070904768 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098465424 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077807073 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091094593 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068686745 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090752603 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076576965 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090483506 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109753646 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069547164 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098065421 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077446432 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099380876 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099182448 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075869914 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089859271 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069551194 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090344129 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069841457 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095154281 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069662561 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099270127 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068534374 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075563595 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067734613 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092712217 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073502353 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091946987 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074467371 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099731477 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107133745 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069484693 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090564758 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078543685 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068053022 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067729259 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092735745 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069252326 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090381044 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079168026 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10010047 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098049771 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078927028 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090821039 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069646712 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090037443 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069885241 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090659108 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076073299 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098001139 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068737855 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110430391 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067949936 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067359496 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075466257 seconds)
  done (took 6.55252879 seconds)
done (took 133.458541821 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202688151 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188323908 seconds)
  done (took 1.39256572 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070188494 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09668536 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100744721 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129212301 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08925403 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101235618 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099170955 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101145257 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067343459 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08812995 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067935084 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068491661 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.154376773 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067727662 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066668571 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09114656 seconds)
  done (took 2.467865463 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099870315 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196875204 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10061764 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088831239 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098259313 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096227495 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065701569 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097567845 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072830003 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065662762 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.096055098 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071579761 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.087679575 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071746906 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.092234573 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07551933 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065859751 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095687795 seconds)
  done (took 2.650355579 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102104982 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145573862 seconds)
  done (took 1.258038768 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.185543126 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.140097398 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208346992 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.411527155 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207929542 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.284892764 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.180007149 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177654907 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158483027 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175705954 seconds)
  done (took 3.137159098 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10021566 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17282116 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.281417008 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115270819 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.099031545 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116681051 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119173154 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.101800432 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079931908 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101467532 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.100220443 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078739503 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120005304 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076217516 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09581892 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077863969 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122810934 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074277787 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097563819 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076706185 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119756147 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068172213 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075553355 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095878356 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07619922 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098056755 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066098676 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087975812 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077077844 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09538886 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080297735 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114133822 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075752059 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129520107 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093009074 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131601296 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077998737 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094351957 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075022573 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093727882 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078555374 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075953109 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071929475 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099248115 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067439944 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077010554 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088595079 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067393853 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10103437 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068697234 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100552794 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079828294 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.132728738 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.08901335 seconds)
  done (took 6.239268135 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.712260333 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127076916 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070860742 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.131898053 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117062167 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075062433 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.743032832 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114277423 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.201869199 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094310963 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110169579 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072708991 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102896308 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086387752 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.132813773 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103097264 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1163837 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072267926 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124912925 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.123094634 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070113141 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116180445 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09206748 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407248281 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068941179 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092245293 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069152953 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070652096 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155616067 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08145925 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070966109 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166355859 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088111212 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.146831247 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.090185909 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069151344 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069247116 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.10386042 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.205337813 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.182063323 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.153715729 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06898586 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069591329 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092029585 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090321451 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08994748 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136664052 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08154814 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.142906908 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09271983 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07143162 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089280209 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070995811 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081206589 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076678844 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104597616 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.255599481 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089613212 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070711282 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072397586 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.226598946 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08081086 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103498796 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093048715 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.180462065 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070067211 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.742838136 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087738992 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068502133 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09383957 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069453303 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092365064 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070884959 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143060771 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.380794376 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071713839 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070554337 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091019106 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.176668578 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079234602 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09217031 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.13808863 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06808147 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090582943 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07109451 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069567485 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164026091 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082511613 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069723515 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091072892 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071008767 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090284144 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0684495 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.186605628 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.10220983 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082240311 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.156943302 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092976057 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.137192326 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081148565 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091979686 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082146107 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090025068 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072482636 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070460435 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.102733953 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.117936818 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081693573 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092079074 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069492602 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.121041741 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080908804 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091275563 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080352965 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.422469376 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.10350534 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068572422 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103979818 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069115194 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136879619 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092257544 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.208083153 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068512748 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102692851 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069364386 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089983364 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069157812 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.136121861 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09240994 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070587142 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069614494 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093295162 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080195671 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.180939032 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071662546 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.183511064 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.15742942 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092300693 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.143660555 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069483748 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141260945 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091673057 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071348952 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070820198 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.738658143 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069774615 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068892566 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093852247 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161841156 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070154344 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101975487 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080054719 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067788403 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77147103 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080576776 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100923268 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080801564 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093612343 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069440505 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.090250188 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071949621 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137372121 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198100595 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074038261 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070335372 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.105075551 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140428762 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070057843 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10469822 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081342692 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105402029 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071304809 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096338185 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08507812 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145539399 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.104890716 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.167352607 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.559880424 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072013607 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103222786 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.176980635 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071028135 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112566295 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070208644 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109454541 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141978909 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102845668 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.261981629 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.14431889 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.166046833 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083899524 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109522226 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068840999 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068112801 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078470065 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095290261 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073238238 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.104642344 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073757129 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071242512 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112171782 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068815621 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200183213 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090780909 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080763265 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.090341987 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071781521 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106578721 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069696878 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070495549 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106115375 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073015 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105213575 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.824801819 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100800552 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069797699 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070051725 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185462413 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.13821695 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068205243 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091906886 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070968478 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.134342901 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184213074 seconds)
  done (took 31.211107215 seconds)
done (took 49.367419466 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.262426782 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178718467 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.252228051 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142808494 seconds)
  done (took 1.945823182 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145923283 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102194486 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120542345 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065643429 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.126385565 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087627725 seconds)
  done (took 1.68030346 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.389386651 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.241531418 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238155219 seconds)
  done (took 1.900249662 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.221492016 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237623366 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.416960404 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.301981371 seconds)
  done (took 2.31970908 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.167935516 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114353768 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068174916 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107251014 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.167323372 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211131329 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125547259 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174846503 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078680811 seconds)
  done (took 2.295557224 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194186362 seconds)
done (took 11.36520709 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.221421615 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.108085956 seconds)
    (3/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.241513899 seconds)
    (4/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08096362 seconds)
    (5/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.171136682 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.200799709 seconds)
    (7/309) benchmarking ("sort", BigInt, false)...
    done (took 0.21776428 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082962246 seconds)
    (9/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.162276025 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.212957683 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08396878 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103039625 seconds)
    (13/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.192660558 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.097387718 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160803765 seconds)
    (16/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078057607 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097338987 seconds)
    (18/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.160054783 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096137947 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078987398 seconds)
    (21/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.183267326 seconds)
    (22/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132523483 seconds)
    (23/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.173094427 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089600453 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.137217057 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090869286 seconds)
    (27/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075456519 seconds)
    (28/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.176197958 seconds)
    (29/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.228711895 seconds)
    (30/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072078074 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.190806186 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.172413939 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.167806024 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076576023 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.102487456 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.101713035 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077238492 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.105823579 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155963565 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.110031961 seconds)
    (41/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.194996435 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114478772 seconds)
    (43/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.125717004 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.211154157 seconds)
    (45/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.070108397 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.193955774 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096464506 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.098864914 seconds)
    (49/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.143839777 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.151904848 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073689159 seconds)
    (52/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105807469 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095344273 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101696459 seconds)
    (55/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.190716612 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068324233 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093586867 seconds)
    (58/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072563009 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.127314905 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169435329 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.162271646 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.118253753 seconds)
    (63/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074984962 seconds)
    (64/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085814957 seconds)
    (65/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.104719935 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098655596 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121151231 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065593907 seconds)
    (69/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.129844273 seconds)
    (70/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080338401 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092110068 seconds)
    (72/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066478257 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.123431744 seconds)
    (74/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06941886 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094212325 seconds)
    (76/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.09547528 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.170109425 seconds)
    (78/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.129037398 seconds)
    (79/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07090668 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.094111364 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094136786 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.182957893 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09722205 seconds)
    (84/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.098842011 seconds)
    (85/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112692649 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.219367337 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175935105 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076151582 seconds)
    (89/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.179406124 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175203228 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.211854609 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07712348 seconds)
    (93/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097681867 seconds)
    (94/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064965489 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.115903882 seconds)
    (96/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.154957864 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078147524 seconds)
    (98/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076280899 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.064224844 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099502454 seconds)
    (101/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079901767 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.186134618 seconds)
    (103/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074092298 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.124898145 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.0685186 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.199906964 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.208116865 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078491879 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.183424513 seconds)
    (110/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054354696 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124824272 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074120257 seconds)
    (113/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.189281047 seconds)
    (114/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077559185 seconds)
    (115/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.100949366 seconds)
    (116/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.144244498 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.174519567 seconds)
    (118/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069761373 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094908504 seconds)
    (120/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.1489256 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099794288 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118022931 seconds)
    (123/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107642839 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057335642 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078647116 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116520439 seconds)
    (127/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.37944898 seconds)
    (128/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055405524 seconds)
    (129/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053224538 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.160538961 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073799626 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.182090651 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095739123 seconds)
    (134/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082323858 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07251259 seconds)
    (136/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07779553 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073603073 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.11798749 seconds)
    (139/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06907138 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068102574 seconds)
    (141/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.165206324 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.186554474 seconds)
    (143/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055347077 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067538082 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099398731 seconds)
    (146/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.144118558 seconds)
    (147/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.104284828 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079293055 seconds)
    (149/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117008907 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06917019 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090150076 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.100511283 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068359757 seconds)
    (154/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053368918 seconds)
    (155/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.102212339 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053767668 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073959603 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093677943 seconds)
    (159/309) benchmarking ("sort", Float32, false)...
    done (took 0.130511148 seconds)
    (160/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.096458095 seconds)
    (161/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10747853 seconds)
    (162/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.126224114 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057197681 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07581778 seconds)
    (165/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.101317148 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09912325 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054896005 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.203950686 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.167151589 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.190543017 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054761476 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199778424 seconds)
    (173/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082657895 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075982797 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098271775 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079619848 seconds)
    (177/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.180792377 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069305 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093965271 seconds)
    (180/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.174130941 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.146718521 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055477663 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054782667 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081429307 seconds)
    (185/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06837584 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053439155 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075584989 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074095038 seconds)
    (189/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066120676 seconds)
    (190/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081101431 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070537658 seconds)
    (192/309) benchmarking ("sort", Int8, false)...
    done (took 0.172895972 seconds)
    (193/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.086318114 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 0.15611586 seconds)
    (195/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.200380517 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05546017 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068746264 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092853056 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075984468 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.074895745 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.077588564 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078620876 seconds)
    (203/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065849041 seconds)
    (204/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052732509 seconds)
    (205/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.091512011 seconds)
    (206/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053882868 seconds)
    (207/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114690038 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076170941 seconds)
    (209/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075550575 seconds)
    (210/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098819007 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117958099 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070870985 seconds)
    (213/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.101085226 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09044515 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091922323 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074771386 seconds)
    (217/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063641169 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.121168924 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068517723 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.169109707 seconds)
    (221/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063657919 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074724964 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.102689048 seconds)
    (224/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081899143 seconds)
    (225/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.106731471 seconds)
    (226/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054349525 seconds)
    (227/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069398343 seconds)
    (228/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.147037297 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056367064 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.114106443 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064255407 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073938089 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092725634 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151225607 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053239954 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.08037444 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071332141 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065690507 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079033047 seconds)
    (240/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072482844 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139561806 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067885311 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068692097 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.211502732 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079103956 seconds)
    (246/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054568435 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09321278 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.116881925 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053826524 seconds)
    (250/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054312995 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.157160043 seconds)
    (252/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07514398 seconds)
    (253/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.080052376 seconds)
    (254/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.114034822 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067729983 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095236901 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054898174 seconds)
    (258/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052926861 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.0804322 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076007238 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054769994 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.100689509 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054244855 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.167939627 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055718808 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094894287 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095110901 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093698216 seconds)
    (269/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081802349 seconds)
    (270/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.056663064 seconds)
    (271/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053985647 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055107948 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104731999 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124217709 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055214473 seconds)
    (276/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08137309 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068956787 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10909766 seconds)
    (279/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055856434 seconds)
    (280/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053716872 seconds)
    (281/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06985071 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131328791 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074030196 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.091159369 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066895838 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097468734 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.115541853 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065982362 seconds)
    (289/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09175205 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07528809 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068888532 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095078676 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052140947 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07430074 seconds)
    (295/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079043011 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073331242 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05385251 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07998176 seconds)
    (299/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055904419 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068278448 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.094996915 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056444896 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098949517 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122753947 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074210264 seconds)
    (306/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.078961454 seconds)
    (307/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091738166 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067999703 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.119111458 seconds)
  done (took 33.955338522 seconds)
done (took 34.995593241 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08253319 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116205849 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078653922 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09458948 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.108893565 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079335179 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073609933 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079323201 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.110732769 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085017925 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.107739435 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058389538 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076575555 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.103300812 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076809088 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120638332 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080996663 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09954913 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077594158 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067273518 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.101335848 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069111319 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069713794 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.083157321 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08131698 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073552841 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.101256595 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076547353 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.093236785 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068947677 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071406208 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.100770795 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068721155 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079505967 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.100249378 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075912068 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101959647 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080091038 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070111493 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.094324799 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077411854 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068452435 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.100726333 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076384409 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073281001 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.100025822 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075745774 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105505374 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095882182 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09715101 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078427156 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07929779 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.105453612 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074472067 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.096632024 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077613778 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073715837 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121748665 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076639029 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097294385 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077510733 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075944404 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.099393031 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076017674 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074362694 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104600053 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078082449 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099260481 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078321956 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073166506 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.093980256 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076403433 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071546049 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070407895 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079199726 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.103700237 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068963611 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073713764 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.100363062 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074754301 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066983846 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097494988 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071034837 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073630169 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097399308 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058479806 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071932561 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.100766065 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067779443 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.099459587 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075962105 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074850156 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.095662667 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080108871 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067309408 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09955411 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069049155 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068364857 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095861123 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072575179 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067573068 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097121575 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077085508 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070070695 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.100461529 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08284772 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093759203 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075220714 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067206063 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.093229773 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.0837134 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102341745 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069590526 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071454358 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.092564177 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076208114 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067289814 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09358053 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069009707 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068599126 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099694181 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069012424 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070527406 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.10101892 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081207362 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092860142 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073010248 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071487277 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.093137016 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074799541 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067872926 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.094077728 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071070663 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065013963 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096719334 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068895165 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075126982 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09754899 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076442647 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069483001 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102170252 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073289492 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.099429523 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075800699 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067384233 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.085342259 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073095891 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071010863 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.094178621 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069569608 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070411128 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.09299787 seconds)
done (took 13.77173153 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068339497 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.17051539 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127694365 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101037589 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.115944766 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069540319 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079031229 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.133188797 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.095226935 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.108053334 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.115880661 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089229285 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.145318674 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067532403 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.09478819 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073660521 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069445156 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.118645201 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.130455454 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091191131 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.141084397 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067938414 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125055524 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093010732 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119266879 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.131007212 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070075871 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072265343 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071674177 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093431398 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.117981999 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073661289 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068905392 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.130427558 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122673112 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087847188 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.093091912 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087300703 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067578284 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.094388535 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.090907008 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.128339117 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108542199 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086202828 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.099498302 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073005547 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070172782 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11423498 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093619076 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109348683 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.115725097 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.110015206 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.097880495 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084296216 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.092600696 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090862673 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.083482315 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070502284 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068107623 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.099581836 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069087311 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071535842 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117796012 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.119149846 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073807634 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.109445443 seconds)
  done (took 7.529998209 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087279099 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09343217 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.113859508 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086079457 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.095206058 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069812894 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068681887 seconds)
  done (took 1.719288618 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071432011 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09144153 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118841187 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092830827 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11460348 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091128544 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105277687 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070590034 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.085938016 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.098209889 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091299711 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133346844 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07132615 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075732665 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092806116 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068241235 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124267184 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069540383 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09974803 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094676685 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097554859 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09092085 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071583223 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096252802 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085235903 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069302819 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115118113 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100651357 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071716732 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072197164 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094760734 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112518407 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110729682 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077638408 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068275235 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111849048 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08479436 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094416502 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087039994 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099943669 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085782485 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069740971 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096838775 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068487203 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.0737277 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.107347188 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070841603 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069547555 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099368965 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090112686 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096850668 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085080158 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069553566 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.10088056 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071633566 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100417202 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081374018 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070800354 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.116846581 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071567959 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113039362 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088239604 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083171079 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113971663 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071544513 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108365348 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084002631 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071786322 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068920959 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070036531 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110513784 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065814344 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06912156 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106970309 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072503345 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120403383 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094534679 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070862165 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.108658555 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070461811 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09587656 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07157311 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092425444 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100633382 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069531442 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099263723 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074997038 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067082588 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.094559658 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074715606 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067532516 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.097458999 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073689711 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070666105 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099402787 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08812704 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.096118983 seconds)
  done (took 9.678616624 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072176534 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070657999 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098434791 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072048098 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070451975 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097504704 seconds)
  done (took 1.594789808 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098003455 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093946011 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082808051 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072297562 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1309323 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081337096 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.10922461 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103982002 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086922225 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079277391 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108990071 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.083844849 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.118183009 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076431661 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.111862031 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075687567 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.111624382 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080499281 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.107798946 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078323837 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115668245 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074841299 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075021321 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112038464 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071374787 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099268459 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077848617 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105019618 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080597717 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.105159482 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074549679 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071391439 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09627548 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079521185 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108222593 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071601632 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098407828 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072771338 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102985522 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073036539 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.11052285 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078232279 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078148162 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.102533388 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082851369 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.101291868 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07456667 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105675673 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085530968 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.10003126 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076270665 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074722148 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.100861612 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07452365 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.10030659 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084061515 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073695252 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083945961 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074975657 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.104258362 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072790848 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100995413 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.083360691 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.10100702 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084386316 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.099657601 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075202556 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074758374 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099800756 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073110389 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096961242 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071190837 seconds)
  done (took 7.574226189 seconds)
done (took 29.192997854 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.676764792 seconds)
  done (took 1.78967228 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.741069838 seconds)
  done (took 1.855501571 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.888455744 seconds)
  done (took 17.002970471 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.611550389 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.781763093 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.852445493 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15816762 seconds)
  done (took 3.510280462 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.928328941 seconds)
  done (took 2.060305966 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240911082 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22718469 seconds)
  done (took 1.580996499 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.780397085 seconds)
  done (took 1.906157011 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.260975276 seconds)
  done (took 2.37904592 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.295527947 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181427146 seconds)
  done (took 1.606111446 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.498722385 seconds)
  done (took 1.627089168 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.895768553 seconds)
  done (took 8.030642513 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211369134 seconds)
  done (took 1.36002185 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.271492471 seconds)
  done (took 1.413085901 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.432186667 seconds)
  done (took 4.565697988 seconds)
done (took 51.813521754 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082686217 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083213872 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106614413 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079113478 seconds)
  done (took 1.482051621 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082028449 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074763053 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105984762 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07576424 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106679748 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076743081 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076484452 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.104852442 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073334644 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098347429 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07380925 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072792092 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.102101793 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075018011 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096429552 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076759142 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101782316 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075915438 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.078210548 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.102929946 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074247029 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077175906 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.106164096 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074510599 seconds)
  done (took 3.205865553 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081774633 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075234262 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.104349898 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075376644 seconds)
  done (took 1.478797632 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082105049 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094369401 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.121103497 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079244041 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.12212841 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087432877 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070010064 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070277391 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102584326 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080849138 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070239056 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.125712633 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114339963 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079176465 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079537285 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092419655 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068886015 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.115057733 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078232396 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078692103 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099344909 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078730346 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093718714 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093360555 seconds)
  done (took 3.319845013 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07965487 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102483013 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.105100764 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087627576 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117244946 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065347215 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073585808 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088135609 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.153413119 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066702888 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096677552 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067793374 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072519234 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.091508693 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078822617 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.130687863 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110433403 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068715137 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122908155 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065961832 seconds)
  done (took 2.989703609 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07645252 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071849638 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092879388 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072376468 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078864724 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098297797 seconds)
  done (took 1.638958574 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072828555 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070075508 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093917946 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069952578 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073807527 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096120513 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070325338 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069423068 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09674357 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070794581 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069701132 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09663448 seconds)
  done (took 2.08999122 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.400379831 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096946818 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070574094 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091895892 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071573159 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091603479 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082131664 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068830734 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117613236 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06773456 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066516163 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095693438 seconds)
  done (took 2.464367563 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266129759 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07853639 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295714114 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165308664 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110453741 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146573155 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133959185 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141951885 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173296714 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13167079 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224335001 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19861623 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134999726 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166427896 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115867732 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099982639 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213946609 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192921032 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13213936 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221798606 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175358495 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154592514 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17617334 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129814932 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134164178 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152870579 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072588994 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10876944 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202805291 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166265752 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182492455 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145806461 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127545261 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210584773 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238867376 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178818009 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167278069 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087407255 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161932074 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170255288 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260570748 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116686923 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196932527 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106899367 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109157116 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170366918 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149850927 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147941647 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135537595 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090664531 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202188705 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181315087 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197489674 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087713321 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140890847 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143910525 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145546658 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105215727 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247964755 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196551827 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160873204 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101292792 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10274238 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216333163 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165417919 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111948765 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161021434 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125118187 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167602498 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191161666 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154005035 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204804589 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166056055 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118188411 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124671466 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173001352 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162641531 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206242543 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125275709 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.106430205 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159517487 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135965277 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084248579 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.172574315 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077600932 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240981121 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129542828 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.111170466 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145387249 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141581733 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142235848 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227156809 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182245503 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135878101 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069214229 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13539409 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.153658597 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184672057 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118874536 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139417213 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149732142 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082536775 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140236231 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.107296173 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156491764 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078732229 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157498251 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160420576 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.107331085 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158607074 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105607894 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132360761 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165292172 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219403426 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088812171 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110633647 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195573306 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175391072 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107400394 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201087958 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186780289 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126537286 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130151957 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181665183 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239921419 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089841674 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221021892 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136351666 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084122854 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115744037 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154010124 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141462786 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150332081 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083476149 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117197837 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200597711 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075388587 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126218329 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162780499 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106920302 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081849619 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133265011 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129188874 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.122153238 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102860484 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134626727 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169889525 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123351518 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10422555 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160023683 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128202577 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230474122 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120676639 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105412468 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138377993 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099131499 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173058386 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194772908 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108301446 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198414497 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.152793451 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134763493 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147000723 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109666041 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170032206 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079957773 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069628833 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174724814 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140497218 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140674964 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183390549 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132776194 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159055329 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153589868 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171234415 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167971136 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16286654 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13881792 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.119523339 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116667079 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191176827 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077383408 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124442272 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084388639 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137314 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12979996 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086700049 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206613426 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161629152 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13130443 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117022256 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129590781 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182564517 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108640213 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164091412 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153874907 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126818618 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.190007181 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188884584 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194672007 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104094186 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21056319 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073830679 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104696076 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095627094 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156399263 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11332776 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084173276 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147157973 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205864768 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16087174 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169277666 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111082466 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154636833 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191251794 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099306236 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118744252 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210238863 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15393967 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.135283661 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123484642 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102462958 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206877332 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113723195 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247653442 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115907751 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159351692 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221426982 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102273632 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08140617 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13740548 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167034426 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135333346 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175726842 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128639932 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116500267 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142072433 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078027612 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135437673 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164064517 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156235723 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200197466 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120426698 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197028499 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081139636 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157409576 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155021985 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157298593 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.09542685 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154981626 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201170912 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126645689 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153722214 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217484899 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084937183 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156743831 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240711454 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180160707 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085169401 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140148018 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148603338 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157758278 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148924649 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171747097 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140927565 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16633439 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137751608 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087383799 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116543827 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098303332 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134545721 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123722567 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138297087 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.143837535 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095039601 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16067847 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130907705 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111614032 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148591733 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124775331 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090653391 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126318033 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233369917 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151086979 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209437846 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.133363831 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180955506 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228925844 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103524674 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084348468 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.109623954 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176884922 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088096929 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165855784 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.131843088 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138600852 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159654542 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146988725 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129098372 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072371848 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143690346 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172415578 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146191678 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132102154 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139680676 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202556429 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134397866 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083980457 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149848123 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138467752 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107601286 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241503489 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.093399097 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102120675 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107554631 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085581342 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163667324 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219001492 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083617577 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.157874497 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151398775 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145787923 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164597132 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136317653 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104541954 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148383379 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216926934 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166039537 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094754464 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145925401 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190605559 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194695767 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136591517 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.128175555 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211041584 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218592164 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.199691358 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.122560012 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148031293 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146380794 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139204156 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177542033 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114445771 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206541798 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114834959 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173183279 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139831133 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142109739 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167338371 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.130495218 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094099441 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213929037 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150869144 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087380377 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109620429 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153572427 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155602111 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14257593 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079944198 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173556406 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.104169268 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170499722 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235233761 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086522024 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138722346 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100116998 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110724177 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14125352 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136791086 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090006411 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.155405116 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242397912 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09329636 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2173667 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177466668 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147441765 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201865161 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104535507 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670450954 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.111360537 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19308736 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151829801 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237573786 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127181059 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151275321 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1413227 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158871751 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183541345 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137452394 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202574314 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164582494 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.146617961 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080637419 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132070554 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133132706 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118471459 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106332261 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143011776 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148150948 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123907183 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.14670501 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153801634 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109714363 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098200253 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184621623 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146383087 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177571264 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171612945 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11406565 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118072064 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172363206 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114317039 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159027614 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156313506 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14368226 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132753205 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.112633541 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.107551081 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23849036 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075974708 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230747212 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154900782 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144353619 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147862427 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150873789 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16735915 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143275543 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123409863 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12856537 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14571581 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146638827 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086191148 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.1102717 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1362284 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11923388 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130431268 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130016704 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123256348 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210865577 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072879766 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129214732 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135156188 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184803069 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242801119 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091197646 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113099636 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150505179 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146719167 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148456478 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157163753 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084145115 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115281717 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085668676 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.137556223 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113934043 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144760505 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138273791 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147348233 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232895758 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087334657 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.258729108 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09934951 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139781722 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.100194256 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083798912 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129669232 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130245009 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115785806 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134859928 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236262411 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099223432 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.124769748 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096553137 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075443543 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11617375 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165688922 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145786517 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15325451 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103028458 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095145964 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144969751 seconds)
  done (took 71.528012723 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.139865023 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108647623 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.124764877 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177035632 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151815023 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242849056 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184608656 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.229195123 seconds)
  done (took 2.579501289 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073013293 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121950263 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104088055 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114211732 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068256496 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.095898803 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.251908409 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.0807284 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.097021678 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090112108 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.108195816 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096095036 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.504106463 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068509537 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.098032571 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065384377 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.095314016 seconds)
  done (took 3.34792713 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.437610009 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.665421379 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.424919872 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074346022 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.071786694 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114441267 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.558825569 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.170102596 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095945593 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.451381957 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.72641878 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.164514566 seconds)
  done (took 18.175266181 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078877671 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071992842 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.116245085 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087186075 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074647725 seconds)
  done (took 1.654653348 seconds)
done (took 117.09321423 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08401048 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.363099121 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053871999 seconds)
  done (took 1.681950808 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087690998 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087124587 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.118061895 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08515891 seconds)
  done (took 1.613923483 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07824879 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078936344 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115643383 seconds)
  done (took 1.508068042 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.287716703 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140718915 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.117614357 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084193768 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077886764 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106065635 seconds)
  done (took 1.500063957 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07710661 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07597042 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103352199 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077448221 seconds)
  done (took 1.561910079 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079193877 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05485103 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056429469 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088269142 seconds)
  done (took 1.513796417 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08894212 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077993901 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105818573 seconds)
  done (took 1.498785932 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109651591 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112674231 seconds)
  done (took 1.448933116 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084199497 seconds)
  done (took 1.307263461 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102094082 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142551694 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.161025949 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138686357 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168028253 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137805124 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086052611 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.117168652 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105554086 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088502387 seconds)
  done (took 2.479255787 seconds)
done (took 17.975887355 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081940786 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392967055 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363368085 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09019025 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.699383922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356069738 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.009425858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09320351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157648497 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096376971 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085115511 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647251879 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.999194508 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32455368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.985454443 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.420931267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648566502 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067152364 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066619141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097500738 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964926731 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067924591 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096657192 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068902799 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674403657 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373264476 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067969839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.441655942 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068961117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095312911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357053366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068440149 seconds)
  done (took 16.249481516 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075107515 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.150298074 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07854578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087368904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103369157 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07213872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102751074 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072230983 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158350207 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070451554 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11661078 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07248309 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074523041 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101748804 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089143297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067353496 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067608136 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06735683 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097611346 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069746728 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086055442 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096892685 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06948563 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095261278 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070035451 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079228703 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0968965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068933951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067930411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098556661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070676794 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096182866 seconds)
  done (took 4.029558838 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119643287 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15547705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077799599 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132372307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117250417 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103391732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143067044 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124335687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158368579 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070449397 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112993066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068853558 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128259154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072472767 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087264454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097209411 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070062693 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095887834 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069569585 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068155604 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115789074 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068311877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095113722 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070847486 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068568547 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109628385 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070032543 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067805521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09734656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070076593 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099027019 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070374422 seconds)
  done (took 4.309483043 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075099371 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07625312 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111378413 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084144962 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069120708 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.101076656 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072229532 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096635736 seconds)
  done (took 1.928425823 seconds)
done (took 27.750884214 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080551973 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069925683 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099905647 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082261264 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073099054 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.106929578 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067294484 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102008626 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073666827 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072454565 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103704433 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068131465 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071005837 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095735658 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074980144 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06699239 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.108245564 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071986384 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.108258958 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079617325 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096570129 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074929569 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073494604 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.106992275 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080292209 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.106443976 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078545953 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072035827 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.097552463 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070829424 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075915869 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.113222765 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069366196 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080704073 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068989479 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068974282 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.107255411 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070951576 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.111898461 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080379872 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072044795 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076850706 seconds)
  done (took 4.761339266 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091005378 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093009265 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119276495 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064224519 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069215436 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06642226 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088189356 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.090230329 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061020106 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087958307 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.085044913 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060958292 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062546736 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05399627 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.08908166 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057266906 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061796939 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084098599 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060463279 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059431315 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057304099 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.082366193 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061037457 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062074634 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.084921116 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063333228 seconds)
  done (took 3.168372955 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079757597 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087097417 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117830512 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127316384 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136260418 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078277888 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.11254692 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090793254 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115166862 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069469387 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072873237 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124239111 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090004041 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102846597 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071751804 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084204911 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.111136113 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069756951 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102033725 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092424166 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084549825 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106602961 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093085562 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108783102 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068030533 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069295279 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100442734 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082545209 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099400425 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077882221 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071508815 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.10035343 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069797233 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078641328 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070262643 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068261766 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.12084782 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077956349 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105449161 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069737397 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07077357 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.096811406 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090767232 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.155340092 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07028056 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076472842 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10941189 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080073497 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09937601 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089930824 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080718759 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09994979 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073576007 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068582752 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097051238 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080915249 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097145911 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072034356 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076508384 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099326013 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081097372 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.0711945 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112669749 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067829859 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104060791 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068190412 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068945464 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095926543 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09393732 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096670126 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110526608 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070120874 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.099538287 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076792964 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103968268 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075030623 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06793474 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112135878 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08048953 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10267347 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079079556 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073585518 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.10089105 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089117272 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070334701 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.098109284 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068584173 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.111760846 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07164218 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06861467 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109960333 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06786708 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070861649 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082646986 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066036874 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.099419687 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074582268 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071536916 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097501899 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078730445 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100945531 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069833278 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076817501 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097764778 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072000853 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.10696777 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076708866 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068894989 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103161471 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074775062 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068393207 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099279713 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070724961 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098037553 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079386022 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074041111 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101852537 seconds)
  done (took 11.550434777 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.194181034 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154344398 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.100440235 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.174506561 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07820659 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078341192 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177055112 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124685268 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068358799 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068126858 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.09990447 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115915861 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.141060514 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.157258672 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079588787 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101134307 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086381564 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14920663 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.180434136 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143229221 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114387634 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076795184 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.099822646 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069747576 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074446876 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.11233259 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090908101 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105518723 seconds)
  done (took 4.47308409 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084369044 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.132749122 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074959212 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088904172 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120849601 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067300307 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099092452 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071037152 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080010226 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.109573725 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066659798 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104085977 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074340398 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.101926734 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070033176 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075165028 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.10442747 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069522502 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070665794 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102692369 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077998863 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.110033645 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072664537 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067328866 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10432075 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067379165 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093846919 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085632085 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097563974 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090598817 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066392951 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105083151 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08151281 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097877802 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069207455 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068227667 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097183027 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069467154 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07033629 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096043001 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067841804 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058451783 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096883849 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081849989 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103786191 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058291815 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072854894 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102757172 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07396573 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066670777 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100852427 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070842804 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070559077 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104744044 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073463827 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100970092 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071047724 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065821691 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074742287 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067112863 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063967411 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09717441 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073614755 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066265507 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.106615274 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072885798 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09442522 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069594245 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069675852 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103174764 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068500183 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070891975 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094673122 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07062014 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072035927 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099127445 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069354205 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066212049 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097546546 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069547859 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055773175 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098389798 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054629802 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070462445 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095861302 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066595202 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09476835 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074773325 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081113709 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069077566 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072189773 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098913816 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069107894 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07068224 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.090104119 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072742857 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082872971 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113703695 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067521598 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.095255149 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083279016 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.10053179 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068922843 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056850708 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103749218 seconds)
  done (took 9.912272898 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099005055 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089695678 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100404662 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084076861 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.120016392 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088744265 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075481978 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.107540597 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070548241 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111132027 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074784205 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076479076 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097718698 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078639839 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093523022 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.108191347 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070404732 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.105529623 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073500944 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100721356 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112949522 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082600383 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.104282586 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069791937 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075791627 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079185349 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088545852 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.111010721 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079841098 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074940262 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110101358 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089988296 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.103982426 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073528484 seconds)
  done (took 4.348286327 seconds)
done (took 39.449032983 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.340636703 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.581860334 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.32031776 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.333317555 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.336358417 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.344574187 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.336532004 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.322825084 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.876939712 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.326039445 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.595507778 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.099437701 seconds)
done (took 61.080141249 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.373860385 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.469534062 seconds)
    (2/2) benchmarking "String"...
    done (took 1.598672056 seconds)
  done (took 4.335916174 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.696195473 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.263553435 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.586221185 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.326630682 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.324001875 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.638111774 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.096191441 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.227420234 seconds)
  done (took 28.727964291 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.326222734 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.731075015 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.938147741 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.943930232 seconds)
  done (took 19.207054995 seconds)
done (took 62.605874853 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.309973946 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.375937522 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.349612679 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.320445289 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.440432484 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.368449058 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.740899049 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.362399638 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.33470576 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.312932816 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.336948692 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.323018494 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.348516057 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.705912734 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.330541604 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.329445248 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.339122897 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.84607538 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.731384224 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.332433998 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.340305641 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.340932773 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.339438404 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.323445488 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.34789368 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.338419866 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.323554757 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.325656342 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.765066435 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.328146506 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.328038121 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.879398664 seconds)
  done (took 194.785215144 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.324772201 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.471200385 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.538126878 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.371035895 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.972443122 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.534217712 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.475973141 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.040880722 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.340309816 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.335252643 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.595596113 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.325540733 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.657524653 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.334433253 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.339256801 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.330401321 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.512420543 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.656301443 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.34091454 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.607522312 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.348284209 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.626743299 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.55324987 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.555076635 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.386697439 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.385938041 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.336919309 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.359140409 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.526278025 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.454396994 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.362826309 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.328934709 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.941943728 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.186101554 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.3433201 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.359283689 seconds)
  done (took 155.426181897 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.881297834 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.330299647 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.328460217 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.329381479 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.329290687 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.360107141 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.328548001 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.899236839 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883770139 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.845312825 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.551416826 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.392107756 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623811449 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.329683366 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.423394858 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.340462849 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.331321925 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.344400688 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.353587391 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.328592541 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.330222198 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.880417024 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.33999886 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.539760887 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.334039594 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.328203445 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362781556 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.726101613 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.327138815 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360644019 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.654321886 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.376313187 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.328566298 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.68238978 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.634900588 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.441923042 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.32939932 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363468445 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.331611874 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.607284735 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.331538474 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.332112072 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.334639228 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956738967 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.332912716 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.330926625 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.903409243 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.294505051 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.334185836 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.331325433 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.331172539 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.976509024 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.935916944 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.332763745 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.331002106 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.334602407 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.329626628 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.331898498 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.3653769 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.941852345 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.331064798 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.430599722 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.332819031 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.334148393 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36398466 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.330434246 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.355982556 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.328218218 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.573983352 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.386899836 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.444471494 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.887413287 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.33092394 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.427506581 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.450325749 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.329791863 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.331401785 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.331442028 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.332554637 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.439754289 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.32947309 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.332349119 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.749097243 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.336248663 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.334688856 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.395663355 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.430212124 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.330497466 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.682432153 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.334630512 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.331924765 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.078992333 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.426365545 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.33186977 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.334477882 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.33274852 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.751390715 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.886414951 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.563813634 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.333524294 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.960743099 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.333768648 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.767077803 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.877404343 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.975357695 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.334898869 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.442804995 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.335392229 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.335398884 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.332529515 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.363953531 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.335537437 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.393134258 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.33429053 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.731592001 seconds)
  done (took 361.455068688 seconds)
done (took 714.813874768 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.027577874 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.02642702 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.132859862 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.012380064 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.983133947 seconds)
  done (took 11.456208797 seconds)
done (took 12.72953583 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.532244275 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528376664 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.396086049 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.531048691 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.361829843 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.548674163 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.510216064 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.354632468 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.443474732 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.418689664 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.439174148 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.39065786 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.362699817 seconds)
  done (took 20.091639232 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.668707656 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.654906719 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.397157819 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.667916206 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.374286852 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.676342386 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.534404828 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.544993867 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.532284985 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.346853554 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.347890399 seconds)
  done (took 18.0210868 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.668466544 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.664704978 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.398108542 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.67387749 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.373481655 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.671977176 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.542451097 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.548180585 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.540194523 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.346295577 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.349207099 seconds)
  done (took 18.051966763 seconds)
done (took 57.438685738 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.344444675 seconds)
  done (took 2.618916137 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.377565848 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.544325274 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.361360653 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.34862298 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.345910781 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.348352674 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.349942287 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.344014785 seconds)
  done (took 12.296703616 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.341934383 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.33948223 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.343380253 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.345607 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.34567096 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.343096837 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.344156264 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.340583407 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.343652948 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.344519898 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.341371268 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.342904169 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.34280857 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.344125829 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.340641587 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.34540256 seconds)
  done (took 22.764336463 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.343072737 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.343675495 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.341574147 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.341771728 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.342909756 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.344371057 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.344958173 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.341942445 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.342416715 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.342566463 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.344348158 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.342744856 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.342609218 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.342337311 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.341360484 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.343463434 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.341091934 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.342408335 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.347083928 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.342443131 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.344751744 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.343768115 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.342138874 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.341754558 seconds)
  done (took 33.510697475 seconds)
done (took 72.465365425 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.449299374 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.013687877 seconds)
  done (took 9.740171284 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.345611159 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.344626153 seconds)
  done (took 3.969671741 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.34378921 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.344782397 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.347028926 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.346169373 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.345441601 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.346105478 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.345870281 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.345344494 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.344945727 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.34580894 seconds)
  done (took 14.733718297 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.346048518 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.346786056 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.346093482 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.345874894 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.346614002 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.344345801 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.345427739 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.347211353 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.34695186 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.344003805 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.34604473 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.343682095 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.348661154 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.345109504 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.346464509 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.343379114 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.343989549 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.344577982 seconds)
  done (took 25.500428914 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.345554285 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.347534821 seconds)
  done (took 3.971436707 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.345867234 seconds)
    (2/7) benchmarking "second"...
    done (took 1.342534365 seconds)
    (3/7) benchmarking "month"...
    done (took 1.344130163 seconds)
    (4/7) benchmarking "year"...
    done (took 1.34451069 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.343772952 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.344565851 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.34417862 seconds)
  done (took 10.690504433 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.349258513 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.535912054 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.624219006 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.042566643 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.350984877 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.352488982 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.251694652 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.353380557 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.354817831 seconds)
  done (took 15.494807285 seconds)
done (took 85.375402616 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.354503795 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.337574077 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.35644937 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.347012253 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.358013701 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.686140463 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.350567 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.602415872 seconds)
done (took 39.673250241 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.356459998 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.082788129 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.123728896 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.339474644 seconds)
  done (took 11.829451702 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.329855429 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.316331618 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.345612386 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.409576156 seconds)
  done (took 18.681426015 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.005025927 seconds)
    (2/2) benchmarking "read"...
    done (took 1.677527203 seconds)
  done (took 4.964108231 seconds)
done (took 43.111090997 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350359751 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.351378883 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.349015321 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.346322062 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.347914205 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.34916102 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.351869432 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.349213092 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.347799526 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.348174518 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.350008771 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.350531028 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.35031976 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352592952 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348545077 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347762327 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.347618873 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350051363 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.347778903 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349278427 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348084096 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351299474 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.348281608 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.34844828 seconds)
  done (took 33.662512016 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.351657129 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.349259868 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.350855193 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.352495637 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.349774813 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.352133074 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.352906441 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.35103831 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.351482583 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.351018968 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348333281 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.351044604 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.350206275 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.349074505 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353440946 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.349136936 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.3509587 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349907455 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350829512 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.350019611 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.354458799 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346991804 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.349787889 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354535978 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.348791574 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.34970453 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.351833451 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.348466863 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.351659003 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.347491044 seconds)
  done (took 41.803455463 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.356424352 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.3593395 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.352256697 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.352339642 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.352013335 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.352954269 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.353112909 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.352224581 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.354287794 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.351531341 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.353540205 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.353436008 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.352475774 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.353086016 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.353739032 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.353219389 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.35243698 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.352746294 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.352643251 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.352398173 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.35264481 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.352484549 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.351367441 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.351691686 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.353526202 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.353279103 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.353892755 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.352540385 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.353445649 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.353012337 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.353308697 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.353583155 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.353649987 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.354326255 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.355570539 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.353547535 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.357661238 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.360461716 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.353024024 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.354531718 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.355501881 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.354507017 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.353122028 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.354044977 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.355358306 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.355527428 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.35408936 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.354943246 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.355676738 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.35619571 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.354953617 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.355786047 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.356409834 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.355803206 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.355534999 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.356013641 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.356705301 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.353860857 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.354573427 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.355793289 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.355116912 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.356079654 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.354314367 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.355984794 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.356614396 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.356685867 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.355139946 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.355551421 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.356644977 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.354913927 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.354052308 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.356850351 seconds)
  done (took 98.803763279 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.356657734 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.352721673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.353013495 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.352631995 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353151743 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.359107498 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.354912985 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356823639 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352545463 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.359734509 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355971992 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.354820704 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355526628 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.35708633 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358037066 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.354002341 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.357632027 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.354089855 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.356380952 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.357374356 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.356041439 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.35485445 seconds)
  done (took 31.111245872 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.357918801 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.357727703 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.354744068 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.356570403 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.35480069 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.355756707 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.358439152 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.358984737 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359066078 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355458916 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355950171 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357314978 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.355398575 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35426215 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354487892 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.355391545 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35607282 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.355259074 seconds)
  done (took 25.702908715 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.356659538 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.356602713 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.358675469 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.354227482 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.356435395 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.358351051 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355082911 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.36016831 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.358831191 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.356021712 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.358521519 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358159707 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.360389531 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356680959 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.360097159 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.354822862 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.35801397 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357009325 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359072992 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.357256164 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.355903784 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359214532 seconds)
  done (took 31.156613128 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.358493853 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.357668562 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.355495899 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.35801047 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.357444696 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.361313847 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.35870414 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.357904825 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.359161337 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.361339869 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.356549291 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.358724724 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.357216808 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.358262598 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.35819232 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.356693647 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.358982754 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.357897428 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.359621178 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.357833356 seconds)
  done (took 28.457585383 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.363735513 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.364029819 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.363723533 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.363725472 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.364016815 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.364219815 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362170728 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.362127328 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363440571 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.364045247 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.363262803 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.364554146 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363364823 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.364885487 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.364173626 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.364612203 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.364593017 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363023362 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.364721822 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363155007 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.364257206 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.364691768 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363499744 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.365083374 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.363742478 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363525652 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363902825 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.365352195 seconds)
  done (took 39.485829624 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.362893026 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.361872051 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.359236545 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.360490196 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.357955316 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.359073901 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.360312023 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.356992633 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.361535688 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.359021521 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.360933619 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.360889392 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.364231267 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.362759977 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.362568531 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.365282389 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362727386 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.360222418 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360716258 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358692883 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.364795544 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363080786 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.363779129 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.361884122 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3606425 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.363392928 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.361270326 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.361816733 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363466534 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.360956408 seconds)
  done (took 42.13772363 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.380750916 seconds)
    (2/2) benchmarking "in"...
    done (took 1.379190961 seconds)
  done (took 4.055664738 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.361173848 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363533475 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.36398855 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.360452655 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.360996765 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.363240823 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.364107723 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.36136872 seconds)
  done (took 12.194552353 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.363069374 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.364519766 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.365509095 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.363356712 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.366755847 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.366246212 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.37411522 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.379881514 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.366419836 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.364401922 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.36800097 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.370425345 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.369871057 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.365267568 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.366124775 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.366468454 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.364825737 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.367132465 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.364901274 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.363640733 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.364493566 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.368405362 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.367920473 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.361919322 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.365845572 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.377541767 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.372529264 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.363888562 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.365976817 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.372666113 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.365638087 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.36245127 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.367957679 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.367449858 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.366601903 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.367162588 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.379191451 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.387588713 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.377714048 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.366938734 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.367566606 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.364160148 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.367818898 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.368274648 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.367406656 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.3688795 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.366744121 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.363289007 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.366159006 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.369370486 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.371503748 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.362810302 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.364619174 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.372166632 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.372061521 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.378085352 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.3859158 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.369426269 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.375738163 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.377792211 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.382911516 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.372383384 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.366631845 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.369270577 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.378515129 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.390698322 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.375297571 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.380869689 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.363755809 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.364876467 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.376234035 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.37893693 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.37622254 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.366481492 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.365825198 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.366081909 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365777657 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.367528883 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.378592506 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.388388841 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.36494654 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.369896058 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.372732784 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.390122606 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.365745596 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.366555907 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.368693006 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.365842289 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.36775545 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.379937633 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.385743879 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.367110972 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.367820332 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.364906749 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.369378182 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.367370727 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.367777468 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.367388694 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.365935451 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.368278036 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.367874022 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.374506852 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.375891254 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.36716267 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.370978864 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.376849538 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.367516444 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.366317733 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.381188408 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.369685121 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.367457735 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.368598657 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.377671581 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.364059444 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.373010557 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.376310298 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.36810188 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.371829915 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.369962483 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.369611304 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.37972162 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.397289652 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.366124106 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.371041975 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.377326294 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.381655473 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366794251 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.372810512 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.366856091 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.367065227 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.368331133 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.369620446 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.366549865 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.372104158 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.372406147 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.371360975 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.36747275 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.369373957 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.372680841 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.369767307 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.373920943 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.370351824 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.371117575 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.375095396 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.373318491 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.372139331 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.37950106 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.372109806 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.374248965 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.369800276 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.367251172 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.371154181 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.373643921 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.373155393 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.37204643 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.374338773 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.371267367 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.372644633 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.370976973 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.371018765 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.372216703 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.370464487 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.377206884 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.372955109 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.376534045 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.371870093 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.371338191 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.373001854 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.373499363 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.372898036 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.371703315 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.373281669 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.377695879 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.378714821 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.373119715 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.375257502 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.376688762 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.37162039 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.369881278 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.374006434 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.375087109 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.380913146 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.372782758 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.383023694 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.373291137 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372873279 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.370631263 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.373581929 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.373462973 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.373148521 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.373765465 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.380788489 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.387469007 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.3822924 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.373659873 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.377768852 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.375990549 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.37738155 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.380841822 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.372348639 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.373190622 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.37519469 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.373402258 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372450962 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.375129372 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.371956781 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.372283698 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.375382592 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.3752891 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.377971599 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.37575325 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.3752997 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.37691478 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.371929294 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.372931697 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.372168098 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.372280613 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.369223277 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.37055596 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.373766266 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.37384012 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.376904419 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.386217433 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.371009749 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.375003151 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.372756427 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.373890739 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.372033455 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.376036182 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377433455 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.375036283 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.38771263 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.393082024 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.372767876 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.383161426 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.391342711 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.37563538 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.378760361 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.375346019 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.373129153 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.3805833 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.38365327 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.378554745 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.37752793 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.374993438 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.378435282 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.371861317 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.384546477 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.370870861 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.373849641 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.375997151 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.378617223 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.372673998 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.377252851 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.377102882 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.380009699 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.378275791 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.374683634 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.376886174 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.379084742 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.375848051 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.377746315 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.376763337 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.380475067 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.386607588 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.381728827 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.375324189 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.37976332 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.377611379 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.383441675 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.379875319 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.379863502 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.375723818 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.392020633 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.386121444 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.388940595 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.380545968 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.38197466 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.386684034 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.377497476 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.382893374 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.378922308 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.381968822 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.381520613 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.378301407 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.378406607 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.378957127 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.380798345 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.381697071 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.37623002 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.383127404 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.380146028 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.379143971 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.38057464 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.378305756 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.380977191 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.382198333 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.381564742 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.387351403 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.382577302 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.378927554 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.378266558 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.389967664 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.394920458 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.381253001 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.380153028 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.378858496 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.379721593 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.37770729 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.379687848 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.380433923 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.388046632 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.378973058 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.39209031 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.381946903 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.392901479 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.377468479 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.3832979 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.389188722 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.375913292 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.378121282 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.380425603 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.377652729 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.390992688 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.397550156 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.377650317 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.385505239 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.382013246 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.378659554 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.38041457 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.382978131 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.38219163 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.382611688 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.39319758 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.402802332 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.384950624 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.38234071 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.376919945 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.380326724 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.378637183 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.382730046 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.389425006 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.38320048 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.381276744 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.384057149 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.383264871 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.383804533 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.380646894 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.380452971 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.378942339 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.380156292 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.393817374 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.399304934 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.388518604 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.379932323 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.396133804 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.381310055 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.391211861 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.399844881 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.380673998 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.381412414 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.381001041 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.388196036 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.380904615 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.381840239 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.381558671 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.379417763 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.386597543 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.381241018 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.384186641 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.380315556 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.381349738 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.381596411 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.394635756 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.406010394 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.384030786 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.387834387 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.378372623 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.385836411 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.389438144 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.382000635 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.383431812 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.38769515 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.394622082 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.391080325 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.385806639 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.38641423 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.386785674 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.386857317 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.383558674 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.383949724 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.386223657 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.384283924 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.386137175 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.385631263 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.393290603 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.383501385 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.386863818 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.389439069 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.388842993 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.400090559 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.385691687 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.387503965 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387221526 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.384872015 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.386492665 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.385978023 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.387122612 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.386365357 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.387215106 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.387207339 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.39068425 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.390959143 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.391612936 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.383366578 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.388333119 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.385036174 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.390716442 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.388037706 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.387178913 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386011833 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.386798799 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.384549243 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.389898334 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.385057259 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.387949473 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.388563611 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.387142659 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.39184132 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.393200202 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.387987774 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.385488684 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.386385747 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.386642952 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.389111386 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.389807382 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.39999124 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.388783842 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.397634052 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.395075507 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.389866028 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.388698329 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.392120672 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.395830172 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.387347477 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.392110943 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.391036126 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.393380619 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.39072501 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.390694212 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.391229308 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.398556618 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.383504946 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.389937232 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.40297383 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.410156555 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.390571709 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.384576161 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.390423995 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.387323222 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.386592734 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.391220602 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.386322183 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.401715557 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.406028512 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.389921211 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.387816088 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.383815653 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.388145074 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.391873768 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.387021018 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.387526807 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.381285635 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.387062364 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.385777638 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.38712868 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.380254796 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.389966712 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.387773651 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.389928841 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.396111976 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.384416881 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.39255442 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.38841197 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.391579959 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.390578792 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.389780228 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.385791945 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.383179321 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.387434247 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389409118 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.393095533 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.39503528 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.389071072 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.391307578 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.388836893 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.389611334 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.389662705 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.400059567 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.396194579 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.385552657 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.387371608 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.390716012 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.393221272 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.389397642 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.387056454 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.387479753 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.390413144 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.388595545 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.386747291 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.39044345 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.394804226 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.408344268 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.411470515 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.391713338 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.391332971 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.399411933 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.387078507 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.386344819 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.391957586 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.395347613 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.394994761 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.398548652 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.390966847 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.397540568 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.405096134 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.391952684 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.393143425 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.394997386 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.400345727 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.398260163 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.391446913 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.39343078 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.39717007 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.41164067 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.389347617 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.402597494 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.426058191 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.410229644 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.394165174 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.391646707 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.392344281 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.392321287 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.394623414 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.391122297 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.391904736 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.391835813 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.391421785 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.390140715 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.399720108 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.390532003 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.390700276 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.391103342 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.391685926 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.395449747 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.388665024 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.391624454 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.392117164 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.392551423 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.393038338 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.39265601 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.393514185 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.40709223 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.405239347 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.392652943 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.395852425 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.388732516 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.398829543 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.39546784 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.405346085 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.402522024 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.392225294 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.393486849 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.398451933 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396588262 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.389038337 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.394597871 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.392772215 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.394732938 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.392092723 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.411895443 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.40363846 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.400210157 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.394337506 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397067693 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.392977645 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.394075313 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.394167435 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394232763 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.398015952 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.39672848 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.399311138 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.393967119 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.393304382 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.398653647 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.404005875 seconds)
  done (took 824.887408607 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.396366737 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.391994109 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.391847715 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.392243225 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.392800929 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.392061992 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390966978 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.390918199 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.395599056 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.394949527 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.393554266 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.391301946 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.392527539 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.392993613 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390872699 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.393091036 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.39217185 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.391007698 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.393944725 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.393705123 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.392478957 seconds)
  done (took 30.575751296 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.396808801 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.392096918 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.392912497 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.396824568 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.391788124 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.395547949 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.393862936 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397329768 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.39546377 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394433366 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.395441398 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.396221553 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.392598324 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.392215025 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395989858 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.397916047 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.396550475 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.395763167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.397472245 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.392524944 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.398731362 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.392721118 seconds)
  done (took 32.021120855 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.399766112 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.395168608 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.396218011 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.395283434 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.396586373 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.392812892 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.398519491 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.395750947 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.399353699 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.400635926 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.400643136 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.40053888 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.403344456 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.402444129 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.402224442 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.399101544 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.542498437 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.401111127 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.397326758 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.400753944 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.396950825 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.404810469 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.396365874 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.395353066 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.398425092 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.397915228 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.398400399 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.396407006 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.400931132 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.396364998 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.403126919 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.396581099 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.396128318 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.403998045 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.399516203 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.398581196 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.402801398 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.396610023 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.39610292 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.400270691 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.408746511 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.421777281 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.399523838 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.404540921 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.397385616 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.397566329 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.403290154 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.409243603 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.395122046 seconds)
  done (took 70.06491868 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.400097137 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.40023483 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.399418221 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.397879804 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.40037287 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.399101902 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.39916991 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.399459175 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.398156894 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.398256265 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.398703732 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.394942964 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.39660052 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.401233302 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.398894569 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.396807809 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.398045503 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.396393925 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.396447965 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.398070982 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.397060885 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.403115307 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.39886505 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.396153954 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.399871223 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.397137204 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.394863494 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.399545368 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.39925176 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.396734959 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.399393716 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.399705045 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.401282733 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.401783559 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.398313669 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.402566527 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.39937128 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.398779239 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.398976665 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.39675814 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.399773786 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.401723719 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.401869786 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.400131941 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.398125268 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.400594275 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.396396564 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.39975332 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.401090153 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.404656242 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.400396699 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.400268743 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.404434839 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.399706949 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.402681223 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.402568432 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.400999828 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.398396368 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.401347632 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.400953864 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.398401873 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.4049449 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.402551707 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.400512043 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.404028258 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.397955249 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.406280672 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.405361503 seconds)
  done (took 96.519661249 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.405167358 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.405555484 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.404594078 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.402031277 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.403477351 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.405200284 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.406952971 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.405014102 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.403725371 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.402777171 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.404558728 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.400997045 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.400154398 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.400030469 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.402470205 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.401634156 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.401223786 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.404272307 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.401330144 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.403936389 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.40572362 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.404458965 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.40709624 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.40464575 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.40255806 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.406448513 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.406737246 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.405373349 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.401206785 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.40369577 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.407375979 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.404300982 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.404492963 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.407998175 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.405393445 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.407033749 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.406751506 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.406731862 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.403160395 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.407546059 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.403380139 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.409026741 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.402131603 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.406243855 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.405997018 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.405931024 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.408952273 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.409455698 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.406837147 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.405450204 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.410257287 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.406645315 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.40806374 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.408494036 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.406470542 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.408666048 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.41145123 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.409066768 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.409553743 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.409685483 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.408358233 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.406816585 seconds)
  done (took 88.480350811 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.404914826 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.405385279 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.402478086 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.401322274 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.404532528 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.3978508 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.401478121 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.401041827 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.399748943 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.401434523 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399777259 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.399027401 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397112699 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400289713 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.398151371 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395676457 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.39515045 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.395550224 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.399576628 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.395595471 seconds)
  done (took 29.338978325 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.395936654 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.398032711 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.395095942 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.396571563 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.401029189 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.395258306 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.395688552 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39562802 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394742075 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.395611682 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.395235036 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.395494149 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392277214 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.392661657 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.394331964 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.392534723 seconds)
  done (took 23.659462577 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.393599724 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.394769608 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.396330191 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.395521881 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.391948241 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.392265238 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.393834592 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.392045722 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.392204397 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.395464883 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.39380686 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.395546357 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.394614682 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.395141736 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.392558514 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.394577777 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.391825238 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.392577935 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.394391726 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.395280995 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.392507132 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.391717135 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.393942928 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.395140917 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.392744609 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.392849301 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.392121989 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.392489506 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.39258615 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.395157333 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.392985319 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.393027209 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.39272487 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.392890092 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.395905112 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.393066518 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.394719962 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.395036378 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.395437637 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.395745105 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.395227125 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.393464967 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.395250166 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.395149218 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.392134745 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.396124029 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.394007269 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.394011752 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.393588324 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.393332975 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.395768228 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.397236381 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.397384341 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.396866131 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.396138867 seconds)
  done (took 78.007626847 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.396211772 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.396521479 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.39447102 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.396909835 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.396938043 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.393819189 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.396687268 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.39410497 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.393884928 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.396326194 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.394905143 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.397050177 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.394414201 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.397041742 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.395294393 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.397101301 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.394340641 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.393491984 seconds)
  done (took 26.44970171 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.394725193 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.395732828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.39723558 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.394423359 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.394746111 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.397905832 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.395337781 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.397829288 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39831883 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.394506007 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394185519 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.397713557 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.397030624 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.39788675 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.396189629 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395532916 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.397244049 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.398613352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.395645924 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.395298901 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.397951976 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.39973447 seconds)
  done (took 32.054787513 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.39823906 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.39789748 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.416035444 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.442545732 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.428714999 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.39789555 seconds)
  done (took 9.812467362 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397193103 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398601818 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395727848 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399344317 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39791573 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396056013 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395642905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395728116 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398770391 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395390903 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396665 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398093742 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399561994 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396752946 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39832554 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398997567 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396813205 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396658028 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397599297 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399542502 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397084722 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399634822 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395744193 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397182072 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396592349 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397228267 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39970171 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397297358 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396052776 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399182979 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399439109 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397170343 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399751132 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398207451 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40020546 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399122571 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39702547 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399413404 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400008778 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396880769 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.400013096 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400016063 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398560486 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396492353 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399792061 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396413499 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397618873 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396873469 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396194535 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399478973 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398352345 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395582918 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399037113 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398553307 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398090345 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399188857 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396769519 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395791491 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399195089 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396742885 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396377097 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39917542 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397616476 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397578407 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398573192 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396324544 seconds)
  done (took 93.59105555 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397116122 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.396678831 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397555903 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397262926 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397187837 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396939403 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396399208 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3965158 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396736394 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397292589 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399139182 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396499352 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397042414 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396574583 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396135476 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396311754 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396653418 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397742876 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396879766 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400174358 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396626434 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396425676 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397837905 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398057275 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398180998 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400666901 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397639865 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397745763 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397853454 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398057875 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397699378 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398110767 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397922723 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.397657669 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398061794 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397806705 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39706514 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398300042 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398160715 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400431774 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398115155 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400482457 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398177146 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398173858 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398324035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398132439 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398901578 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39903013 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397937347 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398618316 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398750461 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399144763 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398216959 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398899539 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398412794 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398203839 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399953338 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399131702 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399491771 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402403784 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.398948776 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398122687 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402004257 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398245406 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399700418 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399228377 seconds)
  done (took 93.613032631 seconds)
done (took 1918.92760161 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.400127002 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.429825149 seconds)
  done (took 14.164709107 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.563133406 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.515813148 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.399006262 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.44637556 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.399718038 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.420370272 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.41484353 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.399422585 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.398155885 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.398354407 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.398819581 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.585383692 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.394460682 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.398058508 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.397903061 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.49259877 seconds)
  done (took 44.358241899 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.402600186 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.402451022 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.436500443 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.402140087 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.402566423 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.443753693 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.469671423 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.402986156 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.572785262 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.448594813 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.792056008 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.402414971 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.401666158 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.680129511 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.435282731 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.4423423 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.670404872 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.792086123 seconds)
  done (took 28.333993385 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.845594714 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.409079986 seconds)
  done (took 9.587477096 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.433035904 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.403102981 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.401667209 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.437417486 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.433367445 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.451317115 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.444261374 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.462542469 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.443396238 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.412632911 seconds)
  done (took 65.656841573 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.420942418 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.402129388 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.401208568 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.400361547 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.393182382 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.39319685 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.399460311 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.39312722 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.885597395 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.525945916 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.420142589 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.405480456 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.399716052 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.404024575 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.396335556 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.434809007 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.524027463 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.396691331 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.396077956 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.403916022 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.401487811 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.495170002 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.438672808 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.396911715 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.520554347 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.865453772 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.405684482 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.405761463 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.535920365 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.397435248 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.398153747 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.399319384 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.401787738 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.988934432 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.904834525 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.407377118 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.423735734 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.407835538 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.395522746 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.533003232 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.400279051 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.404630832 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.402014667 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.879386749 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.54939967 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.508133844 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.546669007 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.40012779 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.400157748 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.460130122 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.399520606 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.399419723 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.427673557 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.151768042 seconds)
  done (took 114.586149578 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.429427323 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.880441872 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560914506 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.410398899 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.898770529 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.840657537 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.390892771 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.656280294 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.418362443 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.856994796 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.670196888 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.735307353 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.390991992 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.390912165 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.391489336 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.388995203 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.645103782 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.68544544 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.390907741 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.390754061 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.440048795 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.883884071 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.615669783 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.568031621 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.427909779 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.826803289 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.614768177 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.729611786 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.388589224 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.388220655 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.669466653 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.396799138 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.388959961 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.393284286 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.656975366 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.717043244 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.692810871 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.38874424 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.402526648 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.390323497 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.410063617 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821975849 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.704763294 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.625556012 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.751334802 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.837892167 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.389357559 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.388902267 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.391690839 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.596382021 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.635364649 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.870296627 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.618550883 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.402359442 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.736639043 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.389743157 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.485748265 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.85323542 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.719468137 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.72112555 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.400469607 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.390940754 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.388539538 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.918539229 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.393861168 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.709384152 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.534226359 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.391659862 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.709742657 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.711064537 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.723084963 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.851040517 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.431775993 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.402211815 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.467549559 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.885536994 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.669116928 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.851446188 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.38976009 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.389354285 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.69594511 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.394071913 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.672974184 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.928997804 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.865866985 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.444390343 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.413164229 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.392961233 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.850388919 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.849570061 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.637666615 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.758369985 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.670494251 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.441457742 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.389691533 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.391778417 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.41414381 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.627811008 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.404106164 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.752724111 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.84832935 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.163139128 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.438107276 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.922828703 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.629828672 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.40528961 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.393924856 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.391269408 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.610647557 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.462100428 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.411643862 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.3927067 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.849300324 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.26217644 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.533188472 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.095164255 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.6680196 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.392577154 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.872847773 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.400335754 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.848064001 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.414806897 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917296165 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.0154897 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.449408534 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.618582551 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.757523464 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.407677682 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.870620489 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.913259588 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.616449549 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.861365934 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.125800431 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.395047214 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.901706469 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.407208832 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.426328057 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.574935915 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.415899851 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.664567117 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.411991713 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.874501464 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.433275082 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.666135758 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.43305893 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.88796469 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.45255187 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.671375734 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.419598437 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52560822 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.412548334 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.390304879 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.593453214 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.791713484 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.395335899 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.960092645 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.394679045 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553944128 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.924769327 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.434099089 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.681844088 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.397523004 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.402047378 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.703015269 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.438612631 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.16345228 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.400056136 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.668368462 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.36516234 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.847024475 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.396013875 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.924396805 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.619956413 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.411181473 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.402000973 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.196199772 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.395461937 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.455491462 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.56871628 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.729400879 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.39853454 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.830913533 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.399913038 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.630738427 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.412046163 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.396889579 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.74739657 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.482768532 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.39660759 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.437191933 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.398418175 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.396551171 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.840693933 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.439979974 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.120607385 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.5486365 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.878274721 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.711074221 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.879540097 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.460069213 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.413678228 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.920430535 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.434280674 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.678106578 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.399419242 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.435144704 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.854699604 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.399522483 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.8414222 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.908307838 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.461290192 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.657962213 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.401548353 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.736497562 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.397748609 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.640770245 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.721296751 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.397900417 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.397325709 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.617317111 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.636728258 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.614884969 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.411999419 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.442582392 seconds)
  done (took 863.867448071 seconds)
done (took 1141.889846801 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.40082064 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.399526862 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.389147927 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.391604256 seconds)
  done (took 26.918869963 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.398528736 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.395939556 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.400437923 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.39944391 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.39934655 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.398607314 seconds)
  done (took 9.717194376 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.446500105 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.389056431 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.389667668 seconds)
  done (took 19.556050065 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.606050472 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.585870292 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.739790632 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.422913348 seconds)
  done (took 10.681408939 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.3947496 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.38915172 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.38997446 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.39086538 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.398103568 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.392430618 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.39027469 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.387562375 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.38904871 seconds)
  done (took 13.84631377 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.000861868 seconds)
done (took 87.058544907 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.723241095 seconds)
    (2/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.475472796 seconds)
    (3/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.628332755 seconds)
    (4/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.376574464 seconds)
    (5/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.802863589 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.980291983 seconds)
    (7/309) benchmarking ("sort", BigInt, false)...
    done (took 6.372642628 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.600789134 seconds)
    (9/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.773994346 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.427514933 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.157725361 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.408744875 seconds)
    (13/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.526283123 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.707100017 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.37914877 seconds)
    (16/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.482168108 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.392502999 seconds)
    (18/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.691756236 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.460282442 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.372204261 seconds)
    (21/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.54425503 seconds)
    (22/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.379169269 seconds)
    (23/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.638254621 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.189207926 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.71779339 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.760863654 seconds)
    (27/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.397296577 seconds)
    (28/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.34337337 seconds)
    (29/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.179559469 seconds)
    (30/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.554441742 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.368535325 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.385381495 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.64325238 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.382826048 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.406597879 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.487756025 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.385109371 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.441269495 seconds)
    (39/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.692759735 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.398158438 seconds)
    (41/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.524898582 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.649844013 seconds)
    (43/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.565509809 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.170427357 seconds)
    (45/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.866959259 seconds)
    (46/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.383602174 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.559574373 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.470714956 seconds)
    (49/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.06317342 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.345334969 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.635388881 seconds)
    (52/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.048261608 seconds)
    (53/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.437676036 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.911602752 seconds)
    (55/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.823357173 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.840828716 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.415406256 seconds)
    (58/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.445304866 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.374344939 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.354874582 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.379032317 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.201489934 seconds)
    (63/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.664281411 seconds)
    (64/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.591184196 seconds)
    (65/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.485175635 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.392705456 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.433876634 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.969773549 seconds)
    (69/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.923546192 seconds)
    (70/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.3607093 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.762007731 seconds)
    (72/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.13603585 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.225293583 seconds)
    (74/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.65072309 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.40356483 seconds)
    (76/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.507566513 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.957576939 seconds)
    (78/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.931477821 seconds)
    (79/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.424517225 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.500070964 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.669211075 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.382837772 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.756570306 seconds)
    (84/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.696146455 seconds)
    (85/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.552162269 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.36357679 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.362051077 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.094221165 seconds)
    (89/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.056471615 seconds)
    (90/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.362764346 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.344652256 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.356288994 seconds)
    (93/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.496099056 seconds)
    (94/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.540398265 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.695392461 seconds)
    (96/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.883083162 seconds)
    (97/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.613871045 seconds)
    (98/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.386799769 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.640568641 seconds)
    (100/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.388470493 seconds)
    (101/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.447091927 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.667424782 seconds)
    (103/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.388364557 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.221125421 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.141754916 seconds)
    (106/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.138091745 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.357920474 seconds)
    (108/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.399220999 seconds)
    (109/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.976699067 seconds)
    (110/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.81500571 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.364876811 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.571528673 seconds)
    (113/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.404772775 seconds)
    (114/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.474336312 seconds)
    (115/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.371363984 seconds)
    (116/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.085736483 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.363243313 seconds)
    (118/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.35777102 seconds)
    (119/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.378169296 seconds)
    (120/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.554598096 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.779241482 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.484526267 seconds)
    (123/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.639348777 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.352983014 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.358948217 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.361777416 seconds)
    (127/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.51559006 seconds)
    (128/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.346320807 seconds)
    (129/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.540866344 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 1.862065213 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.385717488 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.844643721 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.376474556 seconds)
    (134/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.43021283 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.621542013 seconds)
    (136/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.979731264 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.070638041 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.620775491 seconds)
    (139/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.36349273 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.375026603 seconds)
    (141/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.559278248 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.824155422 seconds)
    (143/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.959692269 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.22729057 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.464384824 seconds)
    (146/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.544968923 seconds)
    (147/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.373108931 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.465284601 seconds)
    (149/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.391781773 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.08485302 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.378671575 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.39054669 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.599947918 seconds)
    (154/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.640966488 seconds)
    (155/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.466546871 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.82827719 seconds)
    (157/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.390468272 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.921477912 seconds)
    (159/309) benchmarking ("sort", Float32, false)...
    done (took 5.358136546 seconds)
    (160/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.429781426 seconds)
    (161/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.353842553 seconds)
    (162/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.560667509 seconds)
    (163/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.351574451 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.417182147 seconds)
    (165/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.494192289 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.4136625 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.347562353 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.762465438 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.478088885 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.626320826 seconds)
    (171/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.980074192 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.361455222 seconds)
    (173/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.481259316 seconds)
    (174/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.367180379 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.363692645 seconds)
    (176/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.382739597 seconds)
    (177/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.657325856 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.426478805 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.056925217 seconds)
    (180/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.386635763 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.370466971 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.369570761 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.16091664 seconds)
    (184/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.788911045 seconds)
    (185/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.457602903 seconds)
    (186/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.583653227 seconds)
    (187/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.471264913 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.385841215 seconds)
    (189/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.445103359 seconds)
    (190/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.92240299 seconds)
    (191/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.373677656 seconds)
    (192/309) benchmarking ("sort", Int8, false)...
    done (took 4.371815221 seconds)
    (193/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.037172634 seconds)
    (194/309) benchmarking ("sort", Float64, false)...
    done (took 5.573267977 seconds)
    (195/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.359832341 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.156822959 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.175448258 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.163875189 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.378550902 seconds)
    (200/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.549411587 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.638773385 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.409282762 seconds)
    (203/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.336183321 seconds)
    (204/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.6370061 seconds)
    (205/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.878179118 seconds)
    (206/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.95891554 seconds)
    (207/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.443242063 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.370495312 seconds)
    (209/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.43001867 seconds)
    (210/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.451247606 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.417571438 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.363023306 seconds)
    (213/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.370776487 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.674160351 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.403141875 seconds)
    (216/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.043849662 seconds)
    (217/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.521753725 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.178003743 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.801323503 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.34951059 seconds)
    (221/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.712739263 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.562279152 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.956079168 seconds)
    (224/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.415812601 seconds)
    (225/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.045555626 seconds)
    (226/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.541554981 seconds)
    (227/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.439342263 seconds)
    (228/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.339361487 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.329287932 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.72072426 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.701057914 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.36560224 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.340489305 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.362062654 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.744539814 seconds)
    (236/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.957718733 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.407418728 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.379566911 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.2897239 seconds)
    (240/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.446110205 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.339635696 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.351427756 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.465360885 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.33835392 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.398812273 seconds)
    (246/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.675279269 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.358343494 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.694189448 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.71718911 seconds)
    (250/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.340865529 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.448260818 seconds)
    (252/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.347219381 seconds)
    (253/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.182829947 seconds)
    (254/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.086205662 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.535292803 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.359676921 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.349975133 seconds)
    (258/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.890537105 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.336036432 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.365781284 seconds)
    (261/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.814849588 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.722485159 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.603901911 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.446274457 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.321376315 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.135009223 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.338495896 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.583044228 seconds)
    (269/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.340625636 seconds)
    (270/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.687690673 seconds)
    (271/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.865399674 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.627275221 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.686210188 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.382149608 seconds)
    (275/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.883078007 seconds)
    (276/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.83467923 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.205430789 seconds)
    (278/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.558557216 seconds)
    (279/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.929868689 seconds)
    (280/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.475699742 seconds)
    (281/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.42921311 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.417107685 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.420850859 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.425261791 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.449731074 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.349670249 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.148045263 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.064135223 seconds)
    (289/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.354065578 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.502112272 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.367786797 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.89812508 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.865728442 seconds)
    (294/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.370588589 seconds)
    (295/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.191573592 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.38523112 seconds)
    (297/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.72263252 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.698048455 seconds)
    (299/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.70862837 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.746126886 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.408419238 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.33056084 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.335432858 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.140014731 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.366943358 seconds)
    (306/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.907221209 seconds)
    (307/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.344456399 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.742102286 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.652501541 seconds)
  done (took 925.765263727 seconds)
done (took 927.089120368 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.374219641 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369266107 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.350886995 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.372443192 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.46478667 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.386665659 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.365670137 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.353146759 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.400549904 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.400813431 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.35323753 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.385839367 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.356090267 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.354709653 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.353334522 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365951314 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.281292188 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.351904827 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.371236346 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.363431109 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.370729322 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.354837494 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.401885057 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.386199151 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.354622052 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353492594 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.357430759 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.373186207 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.465397197 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.356490326 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.353691562 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.366396632 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.280109026 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.351514374 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.349503011 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.371038011 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.36710232 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.359963709 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.357578856 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.386794935 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.646647701 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.353109948 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.358218506 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.355910184 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.353771874 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.359041413 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.353570129 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.361090345 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364001483 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.369628745 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.639606539 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.370813679 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.358361534 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.354534574 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.365694764 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.355514355 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.356461236 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369829662 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.37576934 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370617692 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.283461226 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.357771397 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.355702712 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.371533966 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.363930315 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.668289275 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.341717013 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.353460332 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.639374777 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.352309353 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.703352473 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.364253111 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.352952913 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.364955819 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.384308546 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.291507447 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.350296146 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.348673457 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.358178323 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.348789289 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.358107828 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363171568 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.354955528 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349183376 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359723526 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.37653147 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.353005094 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.344809127 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.353717441 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.363075618 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.351526472 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.356267826 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.347780798 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.339264787 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.352135252 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.347567473 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.346790091 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.345554104 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.349209637 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.352179187 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.652299317 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36538013 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.342006555 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.34125819 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.344417154 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.358269447 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.635705087 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.346062119 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.366798855 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.39228593 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.346036785 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.276942731 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.352505846 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361915054 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.353291078 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.349708227 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.340206221 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.277169164 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.65531893 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.365919654 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.348048958 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.343410271 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36324057 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.348556966 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.342141647 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.291375957 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.350245789 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361949196 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.466681324 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.356362996 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.379518527 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.346157342 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.351636049 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.373678195 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363091852 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.379923271 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.350435386 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360515124 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.361254757 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.346071516 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.360275375 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.355673007 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.347920619 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.355255504 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.341949285 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.377309942 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362545784 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.359147557 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.368626624 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.471129099 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.345589829 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.281348228 seconds)
done (took 226.131674441 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.407043606 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.341269645 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.440411547 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.343574281 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.439907471 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.440285256 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.341603467 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.342483069 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.342861551 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.722895737 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.34298752 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.339218413 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.337820162 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344020433 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.427015445 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.345427193 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.341856729 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.68774641 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.344636785 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.414282778 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.336662327 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.343986206 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.344310271 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.725992448 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.344165577 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.345958158 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.415424852 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.343391355 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.691475588 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.344654026 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.342854364 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.691431088 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.434851355 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.361042849 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.353959973 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.352675252 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.44404111 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.363448175 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.427677803 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.424725953 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.440738217 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386167271 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.339963357 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.347826047 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.349415079 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.347055254 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.341851028 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.373983346 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.343738872 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.343867492 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.687096931 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.354963061 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.353048573 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.342900646 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.343736266 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.364940605 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.34459814 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.347962974 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.435162008 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.349030206 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.409786099 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.728541869 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.72797268 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.346042714 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.344170874 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.345481105 seconds)
  done (took 149.246261345 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.413934532 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.42189483 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.456151105 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.352509149 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.397351898 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.45661467 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.352178892 seconds)
  done (took 11.134336085 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.355921836 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346023976 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397260432 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.398017002 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.346004741 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.498736728 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.347143133 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.360563899 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.345546343 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.400836853 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.349184114 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348688284 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.3557352 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.342760579 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396090131 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.360830921 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.462281264 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.349761293 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.347770995 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.50659617 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345508948 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.352575368 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.399055814 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.359946407 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.346185738 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.355749871 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.936054829 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350355827 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344746175 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.349151211 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344554454 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.386703102 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.347530288 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.343837081 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345451704 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.46530457 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.350635408 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346250727 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.346454083 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.347477443 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.34921154 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.348583181 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.349950281 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.346292781 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.349569093 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.374057141 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.348767811 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.351002276 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.351112247 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.350380992 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.401028616 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352537841 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.347190813 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.346830876 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.405413916 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357522719 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.350705122 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.348044544 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.350652771 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347415163 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.505538243 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.397959629 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.348021085 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397380601 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.349372609 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.348680109 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.34919212 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.34996869 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.405386927 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.349087313 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.398230908 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.347764575 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.507016351 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37335946 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350363444 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.353173253 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.353563194 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350505421 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.345258733 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.356690302 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.34827431 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.352175084 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.356694165 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.347687702 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348103168 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.458025362 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459531305 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.349494851 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.36458502 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.359010727 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.349320795 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.403262977 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.353258936 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.349222833 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.40358273 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.4658351 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.405233506 seconds)
  done (took 154.802142061 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.360201552 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.360940517 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.353456071 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.367725114 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.354888965 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.351833583 seconds)
  done (took 9.441169763 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.358575314 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.35155025 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.352464617 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.352845528 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.352033112 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.35124876 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.352588358 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354503859 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.356478427 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.35405665 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.353262365 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.351597955 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.353344111 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.352005914 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.353159703 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.351927114 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.352889059 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.349575696 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.35332283 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353127659 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.448345124 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.353094071 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352431244 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.354113364 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.356648123 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.353556802 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360066783 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.35285119 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.352545491 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.359209433 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.355952062 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.35332831 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.355164603 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.358998927 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.356778155 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.355880644 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35665048 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.355439741 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.757632722 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.354793497 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.354587742 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.353903129 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.355317756 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.355096121 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.35560056 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.359592385 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.358398008 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363366678 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.35584949 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.355632643 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.356818183 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.355982465 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.353435652 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.355689209 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.355779527 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359283044 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.356973027 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.354288154 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.355992894 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.355769743 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.354743161 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.35397472 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356765593 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.358802655 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.363409672 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.35787193 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.358695244 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356590379 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355382815 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.356367637 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.358536654 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.352227368 seconds)
  done (took 100.36689136 seconds)
done (took 426.274644808 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.807318515 seconds)
  done (took 8.103876532 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.398907078 seconds)
  done (took 7.687852109 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.866489755 seconds)
  done (took 20.161038938 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.445434957 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.419388187 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.352823918 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.348414741 seconds)
  done (took 26.863167089 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.594990557 seconds)
  done (took 7.890705926 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.351960061 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.354104979 seconds)
  done (took 14.005264613 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.834222884 seconds)
  done (took 8.126934918 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.143509419 seconds)
  done (took 8.441356982 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.359392366 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.362962964 seconds)
  done (took 14.024519258 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.336015155 seconds)
  done (took 7.632008729 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.073199505 seconds)
  done (took 8.364667156 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.359611635 seconds)
  done (took 7.653575478 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.353427754 seconds)
  done (took 7.646246904 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.704410638 seconds)
  done (took 8.997913335 seconds)
done (took 156.890801285 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.347932131 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.355892099 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.347386737 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.352034438 seconds)
  done (took 26.701479988 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.390946023 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.39012745 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.390170717 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.400748677 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.392737124 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.390220559 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.381791435 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.381944916 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.400968632 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.392203869 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.39184775 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.392664461 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.390736021 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.381702939 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.391645009 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.391468075 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.399576729 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.389022037 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.381202507 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.393426299 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.357770632 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.400859986 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.39260785 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.358972951 seconds)
  done (took 34.624190148 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.553846043 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.428135358 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.510080962 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.410324432 seconds)
  done (took 7.198403821 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.408626373 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.410164447 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.421318234 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.460216123 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.507646354 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.419698417 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.382127192 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.378038042 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.364994827 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.410744992 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.486480309 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.424866145 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.506223479 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.357285551 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.544867461 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.356720773 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.358724685 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.410131025 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.461474039 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.473932048 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.357084646 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.409298023 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.41457218 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.427895569 seconds)
  done (took 35.449201433 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.358278359 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.365766256 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.362392601 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.357340598 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.35852189 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.357245256 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.364325993 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.35945882 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.378795781 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.358271107 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.358013292 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.357651935 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.357613499 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.357466532 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.358962422 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.370815159 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.371774395 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.358305922 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.362724869 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.363783809 seconds)
  done (took 28.537285717 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.354960929 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.207693881 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.705363042 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.608872118 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.354102117 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.358170124 seconds)
  done (took 27.887056603 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.426524167 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.545998256 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.363580501 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.686402693 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.766894289 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.367306693 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.360588156 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.57608001 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.853568825 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.864395786 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.412941598 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.411201159 seconds)
  done (took 19.937052958 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.354223346 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.355933192 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.358563591 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.373939217 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.410016134 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.363021649 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.368232304 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.353530127 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.416584699 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.414225351 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.363967943 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.410252145 seconds)
  done (took 37.844840082 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442142246 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398403974 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.191153129 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158176922 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.73034925 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566765074 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.125569501 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.809287986 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.357406342 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627561151 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348867826 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462652452 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.610760727 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355730613 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360339185 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.334627829 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583288394 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82761315 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355038288 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.189935598 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380874431 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.354988072 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.348913845 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.384336327 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567205854 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.489265447 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.616546209 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35579911 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624609566 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367736525 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366713481 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355068525 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629660186 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995342248 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447105942 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366502196 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.122340297 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.066070451 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.355552382 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.239465361 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.098136356 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358473702 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365925732 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35569107 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.289821011 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356001496 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82221668 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.360751138 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.06763678 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356353564 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365303363 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451336094 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.361693438 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.171783209 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454289335 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356933046 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.354214106 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361529405 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930013884 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.65769761 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3600684 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.298393041 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.463778555 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.243835935 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993977224 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.462644689 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.36115841 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361364552 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291459325 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.252997611 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375232576 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706644597 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.377826425 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00736295 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062917101 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.339462094 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308847933 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889191423 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369831184 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.298659797 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584624295 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358003506 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292868369 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.303142602 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29197317 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024353714 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367068445 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.701431729 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365076186 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.81411818 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.368907462 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376882429 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381374561 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583556302 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.24242238 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358499415 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.109149724 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510823271 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381030969 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.815339427 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293287936 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.362265087 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614305377 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.570027878 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367773044 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.352688929 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571411294 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37021302 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.37848003 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.362195752 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.374253706 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.951747691 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376247678 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.663570476 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376111179 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358901675 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060276761 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372142091 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.466067564 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.361794378 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597950981 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.090560521 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360118129 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442288862 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369491896 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360350477 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.298850701 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8769468 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.360167908 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.362403736 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36247495 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378109932 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.36162295 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31004329 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.358988386 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367396099 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.362493098 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584870742 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359931391 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640400588 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295393034 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709516236 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.452439303 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.585122109 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.519266031 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.360456502 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62283856 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370967747 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373212491 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377879673 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380262417 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459803246 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385926976 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.36690377 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.62550459 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.365770406 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.366695638 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.289727364 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365033538 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36076257 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.367991062 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263908248 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953994695 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347862195 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367552086 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250289338 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.373823338 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425849104 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36632069 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.371430424 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.089132825 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.258723542 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.366077401 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.359966892 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600924042 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372431576 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.18460295 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445120138 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.570269118 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957563175 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379492606 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.297820178 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.073619258 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.055153028 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363292844 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.298039057 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36279642 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37256127 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374130265 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.588746593 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958746452 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369304221 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.217345304 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.369892111 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375048415 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.368701136 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363512332 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.061881585 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.686794414 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367203298 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.383666723 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510457837 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.37712808 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300825804 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.367755061 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368688616 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364518894 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364793196 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396727701 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.1893568 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856965483 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62743814 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.124281366 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377013931 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.312097053 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.396937837 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.367583419 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.176630024 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397808115 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.392489156 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372752256 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.375505194 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.225562886 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.036015145 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936176494 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089341609 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903301119 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330127014 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.367304686 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373110739 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.826385905 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299464082 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922626637 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542604324 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.827719674 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309457798 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574839448 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.531817112 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092971 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376899597 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594435696 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322059655 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.179772643 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39705997 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577944282 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401740655 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.373628955 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303188135 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.651328268 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634520479 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.110587408 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45254533 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824456869 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.163085109 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390476022 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.366842484 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.645697233 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534180001 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.080337544 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.538311441 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375117274 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377761522 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858673794 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372056132 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.592151181 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997890891 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378304768 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.582542771 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303416812 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.378977138 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.37738667 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.368883176 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.558481174 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.371809436 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.627263356 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378065521 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300934544 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370140376 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914556914 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.231345134 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.374406589 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367751691 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070411798 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372498009 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652238866 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.38175979 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.03890959 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381152815 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30292116 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302581868 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.061232976 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373968714 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343967644 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846310661 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.45729163 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.492269041 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389130238 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428720775 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627338555 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.383695641 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964334114 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602515091 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.234680238 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395441459 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.468070401 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.199267737 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.3798303 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369309055 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.605796054 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273143866 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595555646 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.228797268 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.278929129 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.367991997 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580083384 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369842301 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379358543 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604999146 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.085246238 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.378843989 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082578945 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394639464 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368490612 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.290490902 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476638476 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377565406 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449171899 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380334038 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.381616143 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.380536104 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539842302 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381224856 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372373866 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.385515542 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464121104 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.697080529 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.067713328 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.374601599 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971971362 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112330471 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.969823718 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386239124 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371594626 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380540952 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306126081 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519972055 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.598195084 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644853348 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500288371 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.515905241 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399136431 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.217065961 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408064858 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590860869 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646291172 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26672723 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37276555 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.392261385 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.372372661 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385224279 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.58577549 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854666763 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916840155 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494062253 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381207674 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.840384429 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646917493 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371055175 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372516085 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.962178552 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.387087845 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.663976644 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.378524111 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383368898 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527797044 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386851392 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014779448 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.384651975 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.529376035 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.148802706 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.218020299 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.634506199 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.794806169 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.383120646 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974266812 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106880252 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640822056 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441954803 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384171439 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.48238222 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523761292 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.374080567 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375235526 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374556749 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424808878 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.081911458 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.383769718 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976483101 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642376897 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.373617353 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.372877033 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397682223 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.385630549 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.596950891 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046215237 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604160746 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383613772 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381897409 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190720009 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975133878 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393826132 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310065887 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.379858703 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61687033 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615820288 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399000946 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.829977656 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.087218947 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918705417 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.350531969 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398694008 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382829306 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.114818238 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979040491 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.073079889 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856819776 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.937787931 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385324044 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653818204 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.382347411 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384619204 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65881659 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.379320038 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388592235 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391274957 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.974896974 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112262268 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.394145834 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.256419434 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.317966345 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.719477969 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.090849096 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313644979 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385496069 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.56015756 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375162096 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507366702 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388284638 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.376909961 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389882007 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.141222353 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650538848 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.382030947 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.36724516 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.253242373 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388326911 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393803698 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647498192 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379863601 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.070771287 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.728304044 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634531611 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378437705 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.368636184 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.381583136 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377437864 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.364464813 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.577652066 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.60575013 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933649149 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.38122788 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.393125657 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381116067 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.59487751 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589610529 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39054983 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390638307 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382071563 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397387806 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.326424067 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.887552694 seconds)
  done (took 1604.738030377 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.421325005 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.399113605 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.381009862 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.442241531 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.400779065 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.410646008 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.454738938 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.397908899 seconds)
  done (took 52.628769853 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.382372915 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.613039103 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.406980122 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.382047717 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.392729958 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.384309092 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.804962567 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.398943799 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.387892019 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.391522607 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.387598602 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.391159614 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.991761681 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.388861619 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.390801757 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.379297483 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.389715554 seconds)
  done (took 66.186066172 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.38961785 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.741894786 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.469434837 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.40052603 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.195234371 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.391381321 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.797571956 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.447231297 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.381657251 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.542325589 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.021065873 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.384154138 seconds)
  done (took 84.484753668 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.391627179 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.389676202 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.388943177 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.38898285 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.388594666 seconds)
  done (took 8.270481064 seconds)
done (took 2035.787704281 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.637875248 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.06533144 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.00858175 seconds)
  done (took 5.400127137 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.538559803 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.584570711 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.707728636 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.724012808 seconds)
  done (took 7.879559493 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.67214361 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.772596753 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.587403446 seconds)
  done (took 6.358341488 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.702531417 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.389474697 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.466739885 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.387291814 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.387956347 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.389427208 seconds)
  done (took 20.49295582 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.393326163 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.395740606 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.394533575 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.396384169 seconds)
  done (took 6.906157916 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.374200583 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.092996565 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.374394797 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.387946154 seconds)
  done (took 18.555685798 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.139715246 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.153350434 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.136629975 seconds)
  done (took 7.756280082 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.391006487 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.233077547 seconds)
  done (took 9.951056158 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.707870677 seconds)
  done (took 3.03394084 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.524849027 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.657883291 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.45213389 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.324805325 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.479938836 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.933414768 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.918585883 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.510493615 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.314788202 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.407589862 seconds)
  done (took 27.851979883 seconds)
done (took 127.709302705 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.011590533 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.619901211 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.594831432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.021648037 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.605315129 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.59520553 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.613443257 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.988099147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.487382944 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.47933592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.980632321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.610183574 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.557097586 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.624489536 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.556102288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.75146961 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.615894816 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.045188828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.662360742 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.859651166 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.605188247 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.620138386 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.808085838 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.63371216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.608921089 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.544078263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.194932398 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.755127777 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.833424827 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.207452106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.541934103 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.034630033 seconds)
  done (took 190.995937903 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.405642434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.383630684 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.402014542 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.387796727 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.405977693 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.389371577 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.386920376 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.401278688 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.387494597 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.385609105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.390195099 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.389258461 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.387501249 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.401600091 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.402386291 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.387614096 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.403649211 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.389491339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.386425077 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.38916569 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.404281098 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.397509893 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.399271982 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.397579691 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.38898762 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.388897044 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.402250589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.400017372 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.388286678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.406983783 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.390001964 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.389149277 seconds)
  done (took 205.94686046 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.4000018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.387919602 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.391625466 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.401309335 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.403030348 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.389293941 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.39086949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.390363683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.401480254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.398105279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.390657142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.400656608 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.390479724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.390570607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.390237938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.387621339 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.390052859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.394195361 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.38661951 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.388880015 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.390562885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.39290324 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.391743417 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.394117032 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.390412311 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.405318897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.389581022 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.389275721 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.390384793 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.393871071 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.390231286 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.391532972 seconds)
  done (took 205.905357852 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.590193341 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.40308137 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.403193209 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.336740742 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.403240758 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.402848293 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.395996939 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.596891045 seconds)
  done (took 14.864425525 seconds)
done (took 619.038807242 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.602896934 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.317111426 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.589103523 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.41931281 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.115787029 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.418479023 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.423402655 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.584271425 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.878284521 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.565764469 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.647549733 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.415352969 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.794760923 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.41473045 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.664086418 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.51524581 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.254711482 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.361273974 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.719809414 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.886705419 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.66205182 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.91992175 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.58033481 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.919364076 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.783464583 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.944966328 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.097964635 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.248403874 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.419802923 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.724133456 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.966655345 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.318566653 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.472429672 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.454611988 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.513868705 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.498392146 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.331359074 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.453094779 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.597607503 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.687060304 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.895065628 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.68785516 seconds)
  done (took 95.098455842 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.393133618 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.392570417 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.391843702 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.391911542 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.391015473 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.39239838 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.390334286 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.391887881 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.395144746 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.390896995 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.386969134 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.391584548 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.388530715 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.392104832 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.388664101 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.389250587 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.390968877 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.39169476 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.390840164 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.388879693 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.391501505 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.392396884 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.391057766 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.389554345 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.390120023 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.392017972 seconds)
  done (took 37.502842026 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.403772661 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.630934872 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.799768386 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.411859803 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.404783762 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.408885383 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.479181803 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.408709974 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.408830074 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.406983591 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.551439842 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.406033104 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.436843104 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.805679915 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.402798539 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.401164895 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.404656009 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.40275509 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.63952785 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.41155737 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.491904712 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.407122576 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.477576021 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.413172191 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.420578678 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.403134292 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.406435398 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.946507766 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.409839339 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.55525031 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.132129412 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.477360625 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.89945792 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.812952759 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.138908571 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.4064522 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.405832207 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.557562823 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.405807329 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.406718828 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.477848389 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.407428317 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.809166465 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.008079701 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.420282478 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.404423428 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.972524375 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.557561372 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.631327851 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.415477912 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.826915455 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.405371374 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.404184194 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.40481679 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.631153507 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.407738048 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.40216705 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.827888065 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.411662898 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.474118923 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.403487321 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.405183804 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.64447694 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.405724325 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.634723821 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.407074159 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.412464624 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.404987233 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.812835688 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.406842093 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.030349596 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.418994842 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.407373353 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.555140202 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.634499323 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.999896971 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.405361849 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.653748786 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.91303866 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.478800105 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.410091883 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.939248245 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.481237687 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.411773303 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.407470484 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.405499003 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.407112192 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.453421893 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.476217487 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.966280129 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.023893103 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.842717357 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.48106379 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.417550495 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.407046196 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.826405008 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.405751641 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.406927386 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.805773025 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.030365456 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.420525713 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.417051668 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.012856121 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.423102879 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.483937114 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.412697384 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.817222625 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.408786964 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.453601181 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.407580589 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.415590933 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.411066312 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.478187899 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.413081254 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.41312654 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.008239016 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.576685771 seconds)
  done (took 183.256231011 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.413156716 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.400771618 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.405497283 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.400981253 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.405054678 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.410955873 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.402769862 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.405757808 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.406227344 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.403305884 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.401540639 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.408157397 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.403565541 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.416941314 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.426385251 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.411789372 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.014234424 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.405999453 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.400572231 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.401679811 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.187037539 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.40677024 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.398042365 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.402174249 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.402591834 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.409494988 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.40708549 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.402555846 seconds)
  done (took 154.103752185 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.412501212 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.937909312 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.415908411 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.531709784 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.429943592 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.409900766 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.532095598 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.463117313 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.409405186 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.408544979 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.409680269 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.694805826 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.414837204 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.888415318 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.584353453 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.533737769 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.891672563 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.407779025 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.408317753 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.408866619 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.536327482 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.421871267 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.69666532 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.944823473 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.41376072 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.943100876 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.40447078 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.415718733 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.412972384 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.948989281 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.413923866 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.700105199 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.481110634 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.470943574 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.944980998 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.892422993 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.891865166 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.546699132 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.410599356 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.412977633 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.408362768 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.401266203 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.942513526 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.40977578 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.414659843 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.936386331 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.426308366 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.414743468 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.420519406 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.410146554 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.470490367 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.469861436 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.698314314 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.947015956 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.481713726 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.438130848 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.535603935 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.775958835 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.411629654 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.89548406 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.401879583 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.94392727 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.414192771 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.404062125 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.411810037 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.420685074 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.553748497 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.538289066 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.893319425 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.412258132 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.892336386 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.550432885 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.414265421 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.411517771 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.413893867 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.943218384 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.894856068 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.551504256 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.540049729 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.596115043 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.408561706 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.413668695 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.399851314 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.485138204 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.416421644 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.94360542 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.894333316 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.414105631 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.415072623 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.416863999 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.415028851 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.576320836 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.948525203 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.484031561 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.895278523 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.708450091 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.696322972 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.414626749 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.468858187 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.415100463 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.702705517 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.414881646 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.466543137 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.841715603 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.69974766 seconds)
  done (took 166.512517446 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.639585383 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.528242295 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.498291612 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.52070023 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.922802708 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.979630088 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.495695329 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.480578062 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.499364611 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.531234642 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.038485322 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.501132983 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.584386346 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.483987724 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.093444492 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.472112035 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.500232398 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.522525028 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.51597639 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.433514688 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.989453058 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.691071754 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.55469754 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.322711999 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.466479817 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.139736538 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.147112538 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.911562651 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.572469446 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.484024607 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.905395153 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.518254879 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.097319382 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.011975004 seconds)
  done (took 65.403995709 seconds)
done (took 703.210884852 seconds)
SAVING RESULT...
DONE!
