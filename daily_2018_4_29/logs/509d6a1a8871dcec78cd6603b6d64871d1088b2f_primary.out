cset: moving following pidspec: 8542
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.424617048 seconds)
loading group "string"... done (took 0.507974667 seconds)
loading group "linalg"... done (took 8.764433973 seconds)
loading group "parallel"... done (took 0.172575506 seconds)
loading group "find"... done (took 1.228258503 seconds)
loading group "tuple"... done (took 1.978491127 seconds)
loading group "dates"... done (took 1.463387431 seconds)
loading group "micro"... done (took 0.203229644 seconds)
loading group "io"... done (took 0.533126148 seconds)
loading group "scalar"... done (took 51.376982522 seconds)
loading group "sparse"... done (took 14.34740343 seconds)
loading group "broadcast"... done (took 1.288880642 seconds)
loading group "union"... done (took 9.81650477 seconds)
loading group "simd"... done (took 3.286756425 seconds)
loading group "random"... done (took 12.096455596 seconds)
loading group "problem"... done (took 2.181060805 seconds)
loading group "array"... done (took 24.494478762 seconds)
loading group "misc"... done (took 1.093760663 seconds)
loading group "sort"... done (took 3.684305092 seconds)
loading group "collection"... done (took 19.027750899 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.597804568 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129204987 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.199783609 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.339796989 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.228650008 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168513109 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146390453 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.24536545 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.482265781 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.203209905 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137391777 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.49941284 seconds)
done (took 6.097253374 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.246209634 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.240221732 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161203462 seconds)
  done (took 1.069010632 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075556341 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.155277447 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106404043 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093304241 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093288381 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.1082493 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093753013 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108054579 seconds)
  done (took 1.43048875 seconds)
done (took 3.489575552 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.494087536 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.847222949 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.508324783 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141525752 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.308066617 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290194228 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267619556 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.199118399 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093235466 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090915939 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173258832 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.378820545 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.377911146 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.928875713 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090264855 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092415744 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.128385901 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.745215245 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080663765 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110532905 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.494611269 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.183486652 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097602266 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120457502 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.183550531 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131496341 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.158526645 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.098956195 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.66169071 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132340747 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.176108186 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095490173 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157893164 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.181863452 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.190197198 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108233741 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676719833 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198471404 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08781796 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09904245 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66392996 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118534029 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.17868135 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102232311 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086823275 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177638273 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.091433706 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075668848 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109673221 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087064625 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161763087 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.465452557 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105100042 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.175860474 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093005527 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.691125213 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097859382 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273896096 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124504735 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095151373 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090030161 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088602482 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156091228 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092275363 seconds)
  done (took 19.688028468 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144502257 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.162029368 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078703468 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156279296 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120488815 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081401914 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102750238 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079623091 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.109931585 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.196706493 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138215203 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152044622 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092808419 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091194754 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.130408965 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248310422 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109108654 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120634718 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090538179 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091462882 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13883718 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096188298 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090050452 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107749428 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169975954 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201984545 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111271419 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12460557 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091450946 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098012002 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143077549 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146657031 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092337558 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087731912 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170927294 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120226436 seconds)
  done (took 5.173346717 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195495925 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119909504 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.203032615 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.157549694 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143712556 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164711219 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121317962 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.267435519 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.217933404 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176632888 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114497077 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.121446592 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080242462 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079870319 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078431995 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.465096758 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147971759 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.161685502 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126334805 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101259893 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080212932 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.392476818 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086417986 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096601394 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084238744 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064705396 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.191649155 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080670742 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.121621446 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082871148 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103115808 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113294569 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208570837 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127796779 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119778558 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099004303 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077597424 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22680218 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086913911 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078207308 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.133781257 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133575854 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116011953 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095700107 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086305255 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221094742 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080989217 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116395232 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.046171345 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195809945 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.153205877 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095273898 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.271470593 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11913987 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078687869 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076316319 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.804472641 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.11525992 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154705294 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079309747 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076377494 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100004518 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07803272 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.426755457 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080160352 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.152372648 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097910783 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.142737184 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096389638 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081903652 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100032181 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085084617 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101066231 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.101378075 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080527287 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079226584 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096026667 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081347886 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081134645 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.13093721 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084765866 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077807806 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159582264 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099719758 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100345936 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124627593 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083828411 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095335403 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115800045 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101061049 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083482487 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080555584 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.165721491 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081972054 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.129821634 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081086505 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143954204 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082762503 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.242614777 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082218906 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123368603 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101739647 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127457511 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102519189 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08139714 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102110167 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080806794 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081466977 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100671024 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080603024 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146665189 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09823235 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08405495 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.092588356 seconds)
  done (took 27.657478354 seconds)
done (took 53.18655868 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.444773616 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080694759 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082454044 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101865519 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.0847433 seconds)
  done (took 1.538686835 seconds)
done (took 2.260978363 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.3154115 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.186318546 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100684146 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.184909403 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084092681 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191636613 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177604549 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092414447 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20250281 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082636699 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.184640407 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083534876 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104269276 seconds)
  done (took 2.736500426 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103156708 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112783425 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121580081 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105906521 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087537895 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103743373 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122441671 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115585683 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103365592 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114477135 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087460651 seconds)
  done (took 1.896729442 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099793587 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108025256 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101494801 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120209304 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088861801 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102460202 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119110029 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112516306 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101557609 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114764563 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088364803 seconds)
  done (took 1.879144358 seconds)
done (took 7.231534022 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.072617962 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.338833076 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.163656859 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207209272 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346117495 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.231980811 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.555460213 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.149780033 seconds)
  done (took 13.932605989 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.125542753 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.150224947 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093703349 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093879555 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093348491 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.111234408 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096693647 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093697419 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.111563975 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091766292 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091723607 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.109625675 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091581927 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092541398 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091016485 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.111189163 seconds)
  done (took 2.433875383 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.14422931 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138967026 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097284642 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.09893281 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111982201 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100099048 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10242873 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116682545 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095124686 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09573752 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10271577 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.117035794 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09780041 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094305192 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116536738 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118515607 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094595408 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115857725 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11847888 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.11554908 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100281453 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096316089 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114394174 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099368766 seconds)
  done (took 3.408840405 seconds)
done (took 20.499501548 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.144902589 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098367679 seconds)
  done (took 0.969827392 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.13637999 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.15418917 seconds)
  done (took 1.021267639 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109559125 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.087938231 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133779974 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.1009221 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088857171 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105516096 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113879678 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10567441 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091302145 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092130951 seconds)
  done (took 1.763878727 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092926104 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092662459 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12088109 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.136513363 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.099512446 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.113334238 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0964084 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094809605 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.115392706 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092792183 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.09702849 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126675249 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096995067 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127416419 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096967867 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098462434 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116776953 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096524206 seconds)
  done (took 2.648245889 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088833771 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090249174 seconds)
  done (took 0.915338767 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092205824 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089816803 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090941355 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106412929 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089179603 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089784032 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10695313 seconds)
  done (took 1.401398069 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.479905248 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.257516813 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.365991541 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109650955 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146871856 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.351651121 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.14304157 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.101727332 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.221065548 seconds)
  done (took 2.951823618 seconds)
done (took 12.406241032 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088683566 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.216930294 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.615481852 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.110851756 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088532467 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161074209 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.281175999 seconds)
done (took 2.306748034 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335649592 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.142621805 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082918506 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094506438 seconds)
  done (took 1.39440687 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08141929 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100068333 seconds)
  done (took 0.929803858 seconds)
done (took 3.072252579 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.122713529 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089852712 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.107478061 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089893412 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.09088304 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089743479 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.108273021 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089278608 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08974702 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087818991 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.110367754 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.0905788 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088888756 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106766968 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089955389 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089524506 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08893337 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.105496518 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089929453 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089185639 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104806313 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088976427 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090867348 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088891359 seconds)
  done (took 3.070055678 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10487331 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090971316 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110889436 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095246228 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095001283 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.11137477 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095272672 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092053434 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111500509 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093774136 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095184748 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093476006 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109636159 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095748819 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091116555 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112035595 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095206359 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091908047 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10914025 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095883668 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09430298 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109347912 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096051408 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094325882 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111071922 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095350014 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091861718 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109989194 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095465932 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094700794 seconds)
  done (took 3.732781382 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095877603 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08654406 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089995333 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115507366 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089053942 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090531394 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104952753 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089018312 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093121755 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089457443 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110126927 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091389724 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087835878 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107934309 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092343177 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093491134 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098774205 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.107993995 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089439039 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091609491 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110769504 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088414329 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090465042 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089583929 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108863806 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087798158 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090881135 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10710618 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092535827 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091008298 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093119135 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.11053531 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091681457 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099884525 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110585636 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090795195 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096218825 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104570194 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092003899 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08818831 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08667019 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108025729 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088774324 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097168402 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.108367777 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09178987 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088906541 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091312538 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.108947876 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095642409 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087410354 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.104686854 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094353089 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093708888 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093195496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.105957956 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092360781 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087658451 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108963264 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091141415 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089351821 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086725758 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.113005938 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093473787 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.105592535 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11616869 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088619273 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092870591 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.109300969 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097312455 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095470253 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.117180726 seconds)
  done (took 7.733278884 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100102801 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100491358 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091860055 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.110094577 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091906071 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092084393 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115646628 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093024633 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092826064 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116454459 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092578538 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093416868 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092384002 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111335242 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092976419 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092341742 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114607989 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093588403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093611759 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110046906 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092018856 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097027735 seconds)
  done (took 2.933812458 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.230577029 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095197679 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142244848 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121462724 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109493502 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12303393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096742737 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097632672 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112877203 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101983872 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10070421 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113350285 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111628051 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100743515 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117676036 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103350128 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112879665 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102711305 seconds)
  done (took 2.851922743 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.101056415 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091006779 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.134454637 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094600984 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09486734 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092597314 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116553241 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112788571 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111752311 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095948267 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100665685 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096783891 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.111188366 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095421168 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094698979 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112431415 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095094969 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093934628 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118859425 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099451477 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098913888 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118343867 seconds)
  done (took 3.040096536 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103551504 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091509105 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124893216 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09468351 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090754488 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092097469 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113672479 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093403191 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099274285 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111276898 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095564547 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093854599 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125549035 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095799145 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098145987 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112952358 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094213552 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094263359 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111669299 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095179493 seconds)
  done (took 2.788019264 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167117349 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1205181 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10673084 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113454177 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122469189 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105542575 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113852713 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123258834 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105443196 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.132748574 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106245879 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106010833 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130071832 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111648345 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104912404 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130770656 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113765025 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130247261 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106305291 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105854879 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133133246 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105147621 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130168897 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106958238 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105127505 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122645278 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106207791 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110045768 seconds)
  done (took 4.036457909 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089936562 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089182984 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08980683 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109043961 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093295904 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092960526 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091914166 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110948543 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094983046 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091606746 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109964615 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09384148 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092957467 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091662477 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111304605 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093482149 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092784479 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109862532 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09419685 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092575763 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09247466 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111293646 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093190014 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092750925 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09285542 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.112058922 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093083416 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091803436 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110158721 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093812152 seconds)
  done (took 3.682994622 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101436577 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099115058 seconds)
  done (took 0.96417566 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.0966752 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103210332 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08793229 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107256831 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095452498 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090054421 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115650506 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096622594 seconds)
  done (took 1.557559692 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.138348641 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.156645058 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095394909 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.1000601 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.156898258 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.148959064 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130147261 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093434673 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105887378 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083555409 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.134975087 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.100976811 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090682829 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088680773 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108906073 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096771493 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.090879978 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.118600423 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09739067 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091355625 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112873015 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095429312 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092575473 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119154513 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08468457 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093023557 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112566488 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105790966 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090137194 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.115201451 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.094490761 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093896973 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.116918012 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099437675 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094793536 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162688676 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098878392 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086298646 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110993045 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096771298 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126830712 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.113239279 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096861092 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091517213 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115961678 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100378722 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098834022 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.113994845 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088699634 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089486106 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.113757335 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090756611 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094291182 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113358548 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096142892 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101652177 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.114287734 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092173864 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091976288 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.109279251 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09497733 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091357814 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096594344 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116448524 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09682507 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09554621 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111462355 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095308014 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095124034 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.114222513 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095203328 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109981425 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114010055 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100320344 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099084508 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.11473653 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092792084 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099779009 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111251474 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093379757 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09746065 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141814706 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096084298 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090871841 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.109048379 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102521095 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097324808 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097053892 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.107266922 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104937046 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096779034 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.114897242 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08951693 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093717653 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.109448288 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098736069 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087920031 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114129331 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095134084 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099958923 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116880893 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095755421 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097495395 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.117529677 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102349659 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094832795 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156515909 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089968516 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088601587 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.111661907 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095949547 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086963511 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.113776957 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094381286 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093802436 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090106537 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.119075809 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095760614 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096432653 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.119030729 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098763007 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096515673 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.116727121 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095935385 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091558103 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.116877824 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105859046 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097832351 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.114689404 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096550467 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09715151 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094649643 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.116862697 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093703878 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099484357 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111341967 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095905981 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095324522 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.117619336 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096168834 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091184041 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111860794 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.098349334 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.095607558 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.117233584 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.097330737 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091936613 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.106829276 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09814256 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.092300323 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096107952 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124614187 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.092220208 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097529565 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.111922558 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104230979 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091831116 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.120205389 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098685215 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101548665 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117970763 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086507234 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093842141 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.116218296 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097842894 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092534854 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09519173 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.113723976 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103924677 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089701715 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.118390847 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088339927 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092549534 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116997565 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098089318 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098897362 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108124254 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133933598 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10488288 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115982526 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093656096 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095455726 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098050302 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.114013653 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099007274 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100004615 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120279881 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094152224 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.094888024 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118813494 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090316048 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099318271 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111241558 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095275214 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087527329 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.114321011 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084201468 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095931888 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091777205 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.113787765 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096526738 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092124434 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109057065 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099567061 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087980989 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.115933773 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085052246 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100259048 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.122893353 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103100365 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103416293 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115906312 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095705017 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097610441 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103429751 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115526667 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092153311 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.091268704 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104040079 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085638283 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095318994 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.110879707 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088032442 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091697456 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112274545 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094858951 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089338837 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084624264 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.114235063 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095299671 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085544454 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110903718 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088419805 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088316926 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117003907 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086642698 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091559594 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115362655 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097039736 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090543226 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110367998 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095132886 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098225371 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.11145094 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09511165 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089159795 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097833968 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107999534 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.09158655 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087142063 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.115377908 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087511721 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097904007 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.114746341 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.094867338 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.093469804 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119659894 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102777173 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102517307 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112451228 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096148388 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.098910292 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099920117 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108289137 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096571386 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086628122 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10365168 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088829957 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084399129 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.110612609 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088498133 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096693179 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.107399281 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092075645 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095457104 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110972824 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090016471 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.097127233 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118713306 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.097062507 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084006264 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106989499 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092529105 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08914045 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086914009 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.112067248 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093991099 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.094855059 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113136502 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089099024 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09200149 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.115217894 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08876108 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097450572 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.114770171 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.09909879 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087281326 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.095108539 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107802067 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096472816 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08506885 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110302074 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090208104 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090633771 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107401992 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090364315 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087438072 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104428327 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088819628 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.097062535 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.108873159 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.095883728 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.099994274 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107313925 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089105779 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08718151 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.11510019 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0906844 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098169238 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092055347 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10377457 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085611931 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.095805184 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111294586 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098371584 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087334673 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.116188318 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098174731 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096127998 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.091414514 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.119221417 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100399343 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.095963106 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11629617 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085427536 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088505039 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114156121 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091913332 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.092667812 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.110662283 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086642705 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093900751 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.114680708 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093768005 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089898146 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084244598 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.112186808 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.097127573 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.093291575 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.113488141 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.093962787 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091543073 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105280739 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096055415 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096291094 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109462583 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097979919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092202888 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09462381 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106958932 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.097928405 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.092497124 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105168048 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085482645 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088916915 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.115596928 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086863971 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097489742 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.095905466 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108266557 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090436671 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.094992204 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107732188 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095624532 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096637205 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108390984 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102473491 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.092669626 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108654206 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097887082 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.096995097 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103158865 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092332466 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090945853 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098560075 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109679106 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096708815 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091972933 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116751697 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.094948576 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097043042 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.115154425 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.09761586 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086413089 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.116363397 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096512307 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.094268556 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089930019 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111280553 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086707598 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091082192 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.118067869 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09125315 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099035414 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.11605171 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090426555 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089213081 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.116457896 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091708454 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098044146 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107644051 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094719278 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085650981 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11240583 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09217584 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09802645 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08865853 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.105666366 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09706478 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.095775594 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115275837 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094704247 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.097800184 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.1049885 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08675421 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.094296706 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107126887 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101752301 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095383914 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108947801 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091864893 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094273637 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.092375704 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117674678 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088401813 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089438733 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.112750773 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095468033 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090754358 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106990797 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097129763 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090998226 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112074249 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092673663 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087162131 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109619897 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099689105 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091796022 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088135341 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109889648 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09956665 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091538302 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108316951 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087449818 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097931216 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114082488 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100244848 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089528513 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.113069572 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091684438 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095536993 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.117190635 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092293903 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093797552 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109685864 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099898578 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097692769 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088027872 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.109643667 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102953164 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096113904 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113729759 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095886492 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091443318 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118740843 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101932046 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.094769772 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105407131 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089501457 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091706971 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086169617 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.115238472 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099502784 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091231632 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110323403 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097418213 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095911287 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.114349385 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096164642 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08781051 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118914854 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091475589 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096251127 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085375787 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106385566 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.095239902 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096751968 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111313536 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093931635 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.093932091 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.111987998 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089163668 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08996619 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114753812 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097950523 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.099242462 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091741551 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.11132862 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096363695 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103601693 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.113964589 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092275002 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099890024 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.118392364 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094955057 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092150203 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116963277 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.099547297 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.094939011 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.117560914 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092065879 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092451895 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.118428672 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100254308 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10643543 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114331823 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08807087 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102741256 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095978956 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.113119304 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.102778443 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100198133 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.119422814 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094077549 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089658568 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122886655 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099093778 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092393116 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111104248 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091651929 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.097100476 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110629929 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098222807 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090776122 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120153454 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101602741 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099139598 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.100937625 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107661423 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099559492 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095386224 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.121669977 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095141935 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088638164 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.106934137 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09710798 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.100042829 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.098802784 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.118429343 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097341286 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.097662158 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115464897 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094940908 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090124024 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.119182085 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100048679 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094334194 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.114478297 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092759288 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095659633 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094158512 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.119008915 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100108224 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093684122 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123036411 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10099581 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092406506 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110777995 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095629478 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095030906 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114432017 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098755447 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090777538 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106684508 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100928589 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.100098116 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092072703 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120286932 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100766105 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092040778 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117307429 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101527741 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098172456 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.114696974 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096288441 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.096158141 seconds)
  done (took 61.00541071 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142877515 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101180841 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114920875 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095933934 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113043994 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11675527 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097308193 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097125047 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116703306 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106113322 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095427518 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114499106 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11315897 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115084564 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133026649 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10571178 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11463434 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097920775 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101170435 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104195414 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13785725 seconds)
  done (took 3.151050632 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114444909 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109014929 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126166151 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111289092 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102308707 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.126897269 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107888523 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125994399 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111147703 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103810095 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130779707 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106480203 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124330762 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105252034 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104741187 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124380506 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110987658 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102052382 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127714878 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10761995 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125445007 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108795003 seconds)
  done (took 3.33230408 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.126371469 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099865556 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093460832 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.115517463 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099707988 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09551087 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.117380267 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096911772 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103506669 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.090928481 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107148923 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091888635 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.093985321 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115198621 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091805695 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095965869 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.123281393 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.099735557 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10118264 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.094981576 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107225212 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.096805848 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096828267 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.105625863 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102326769 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100580248 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096818403 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.11922215 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08825209 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099072977 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.115171286 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091154998 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087668298 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086402598 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107129851 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10016672 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.097624931 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.114987857 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098071838 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087203303 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096679985 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.120056363 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088113401 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095667665 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.115582985 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091857893 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099162781 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096564252 seconds)
  done (took 5.67633681 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127225256 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163212895 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100891775 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.138590343 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131394367 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106806654 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10021742 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137022237 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099096233 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.1214543 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112407911 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.109587817 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123198195 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.103718122 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101705705 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123329005 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.1026678 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099200017 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125314076 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101849939 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123147762 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103664822 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110437092 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129742542 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104518271 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.33582769 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119329392 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105044888 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.108489955 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125348873 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104551467 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102547789 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.130510081 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102686695 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118881343 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103010689 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111554804 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120356159 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.101724782 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097793511 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.119427907 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.103856139 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10079885 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131358076 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102812411 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100765666 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120581159 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09844152 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109179654 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.120432466 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107421628 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110263032 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12213291 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100896826 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101476344 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.130854065 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.099792888 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.119208585 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.102869404 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.1083177 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.117228578 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105901021 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.1095438 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120029659 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.105960675 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.108917971 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.12209613 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102444831 seconds)
  done (took 8.853047648 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129751632 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102975098 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132366964 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111930304 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102162357 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124101073 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103182999 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102669908 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124945943 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108272687 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122736812 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.195488911 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120871478 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108652462 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103499956 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123888114 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105142007 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102415496 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124635938 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104387457 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102080053 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130570108 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103690409 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130045563 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116490798 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099650174 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124583598 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104900313 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110200432 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125356488 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115035652 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124760674 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105651731 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110954532 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135418875 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105113549 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099023805 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12413559 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104211297 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102853254 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.121371112 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112642862 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122664643 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102418163 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103790688 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124544039 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112503516 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114881328 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129449244 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108717888 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.124446162 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113073822 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10397295 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.124138779 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113162012 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138126033 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113834435 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111559104 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12477379 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113142453 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132049495 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120062797 seconds)
  done (took 8.047103066 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098239729 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09767088 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09737294 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116965734 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098027367 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097048653 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097394088 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.11810998 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097640514 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097459119 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118207748 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098284256 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097232532 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096682264 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117603871 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098763499 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097356473 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116675671 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098998768 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097883143 seconds)
  done (took 2.889170112 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108156168 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115184926 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120538849 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106124149 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.099173885 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125534179 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100955792 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099937362 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097915168 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122034737 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108213408 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127128915 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100582438 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105560557 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128450607 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107237997 seconds)
  done (took 2.609961406 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118332403 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114652888 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185626841 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10218125 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121184948 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107765151 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100143972 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10187886 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.122169956 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106119904 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.102893834 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124210277 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102325793 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101135159 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123622447 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.103854825 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099091307 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123332097 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100972636 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.16173686 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.124995476 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10097789 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.099667181 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.12467582 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101735283 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.103405585 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.127962397 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.099189266 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101235111 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.12174749 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102854968 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106071435 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121804729 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10507401 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100570654 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.1205078 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101614554 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101133052 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123762162 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.100153369 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101601322 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.100889944 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.120563062 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102918742 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.097686426 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.12215261 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100180906 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105430567 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.121649069 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102382775 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.09950267 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.126203629 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105861127 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108005357 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127817373 seconds)
  done (took 6.993861062 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111559785 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100677484 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.131573525 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099202116 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10095217 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.099242181 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123487306 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10200565 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100493926 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120047937 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102174493 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101182027 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121162935 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10227601 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.100969408 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122550281 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099144788 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100756475 seconds)
  done (took 2.777063033 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106005362 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099488785 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103148986 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121845988 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10026059 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099524913 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121554668 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.099519436 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098686619 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099249365 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122439723 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10134565 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097931364 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122139212 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100719643 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099141251 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121580008 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100292174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100559186 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097955836 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121513404 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099859123 seconds)
  done (took 3.1793966 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110676129 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.179197359 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106181222 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.190540395 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097356225 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095380919 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127221016 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098098471 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.110951585 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117218898 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096016223 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.094139617 seconds)
  done (took 2.268541085 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127297275 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136930936 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121716841 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101340599 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109145546 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126927952 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104231705 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104259064 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133793417 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115623133 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125533516 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112267401 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110797505 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13404007 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10807074 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128945376 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105182551 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105361312 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121633185 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121383251 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104560341 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133176402 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105321168 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104462734 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126304895 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113678997 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13269622 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116435062 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104148192 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133407388 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108757741 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125664263 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114625213 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115183584 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122299027 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113848578 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103582484 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14092187 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109166636 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134466662 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101384267 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108489664 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133534869 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110416763 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131586774 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106757894 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109913182 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126147591 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106394132 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125574853 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132229585 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11315259 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129346186 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113626538 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11175338 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148852308 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115056229 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135467934 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109652362 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139805721 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113881226 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108809124 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134957316 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115822431 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130689949 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113477683 seconds)
  done (took 8.693479257 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139707883 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10145606 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126634003 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117891932 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134643616 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106600373 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107633265 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127336771 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106074711 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101307893 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167865606 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106348226 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113209218 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13598071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105190055 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126375922 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106512072 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113173958 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123533436 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126815872 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125633162 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113579776 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112510219 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133953762 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117361482 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131016883 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105931043 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105474848 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127131967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106725001 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11109693 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128142921 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115244466 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10235714 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135828443 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105404947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127208505 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111294442 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105815874 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13144051 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114066226 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120503909 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130249451 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105760604 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13866931 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106598314 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10604772 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124239151 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10713273 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102553846 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139752825 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118029242 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139403488 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114779405 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106771776 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12762321 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10745426 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105409639 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127487235 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11038137 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134026938 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107521533 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127038163 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127313114 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107169977 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135448643 seconds)
  done (took 8.692988005 seconds)
done (took 165.310410632 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.144540685 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.181762582 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.142256628 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175891839 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093332413 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.125781964 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145102689 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.143466438 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090063468 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114170367 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09189354 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.093579243 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.179421542 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09275186 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091749449 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093070722 seconds)
  done (took 2.845658869 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.189971774 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.304261454 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10624849 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.116571681 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098749246 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096689437 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117116861 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09935865 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096704278 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.123994618 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097454479 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092898509 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123919324 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093287352 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095939909 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096476346 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125246608 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096645599 seconds)
  done (took 3.032281928 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117483094 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139919015 seconds)
  done (took 1.1182828 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12628119 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.208869448 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276990222 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165351896 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117591791 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136722796 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145034172 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130541194 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.185091509 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131969366 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109844928 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095288142 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144688343 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102873448 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.133036276 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09727665 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12390041 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.132050399 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112010076 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098588712 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140544431 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103289309 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102580448 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132651496 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.175943936 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131939511 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.100858593 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099666186 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120842605 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111738732 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102638815 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137047499 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109265718 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175980584 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100189835 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171138255 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102564207 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119038031 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11067901 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096770295 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122417022 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100437707 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131433057 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096546722 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100896448 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124500578 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102307419 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100896685 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.126972192 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.10477282 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.103572973 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12529403 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168620983 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.105845507 seconds)
  done (took 7.693141331 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.851000227 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.13932541 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097427873 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.996712273 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146752391 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11182009 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.847856819 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.141772354 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253344284 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.87575478 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114380724 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110325246 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.253914134 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255891904 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.25470329 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.374251419 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.691924275 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132819508 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127498335 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161053174 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106066961 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144829088 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119455346 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517972844 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100048427 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098791277 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128570638 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111366858 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173908944 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100069259 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124325775 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171698056 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289319177 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203635949 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119380792 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098960557 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099110313 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.180384326 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264835796 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213480736 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.189561947 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095172651 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096863872 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127826601 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117714716 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094589265 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177753191 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188230108 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188496796 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102466166 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131186999 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109449768 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106528933 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175135235 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095742891 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375387241 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359407753 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097788675 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10651733 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135911209 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264968534 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099518693 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23051472 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147465745 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209947165 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099052144 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.840506518 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181793103 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098208777 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127437189 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106935603 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103239339 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128596596 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164889906 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.500232365 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109682404 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12527576 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098369711 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227534737 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098595477 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120051697 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156339706 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12170799 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107626548 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133537298 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112676498 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186709514 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265872398 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112609418 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106660934 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126189974 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112879456 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098322908 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229851513 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221736527 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173461135 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229006404 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10757392 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178543351 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183944884 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10598155 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186350069 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104905612 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137481089 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10858584 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218474777 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.154877133 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101278214 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126526586 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108382749 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155760614 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1033614 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107610975 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186693402 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554409244 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180227456 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096630478 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103744733 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128742586 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154302105 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127721469 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259054723 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108235902 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.181994283 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106442506 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095340585 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129912669 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178280895 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109486133 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106981836 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130224909 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10828534 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.275926498 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216632743 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112025206 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.267785394 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175166253 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105206543 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1891095 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129553399 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162805063 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131317083 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107183789 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098549531 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.850168884 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114202268 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106723973 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126932074 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183197054 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119736757 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10208149 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09995184 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095424371 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81429341 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125400737 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097403252 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100856994 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129075385 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107293341 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12895078 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105577919 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175769039 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241262867 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111570322 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128504491 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09995101 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.175110597 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.10007223 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099301443 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122174879 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102736221 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107859898 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125850944 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103690153 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190955789 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.172015173 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226729811 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.6310695 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100211294 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099074814 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.257560782 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101114658 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319670225 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106801904 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227780674 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1825552 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119702781 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.355357968 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.182710501 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189052611 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101807137 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187329449 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096794405 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130311701 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.175877495 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098762945 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106678998 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174493644 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134726513 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113360369 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.271532781 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098489066 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249659203 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09589708 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186854638 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121694861 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108014513 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321429268 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098850863 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139231129 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177206917 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104075619 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099450681 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.671303776 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099543843 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133732928 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106934876 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.227447212 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182127586 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130048393 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109588602 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112865934 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.177121659 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228465987 seconds)
  done (took 47.173388494 seconds)
done (took 62.715738508 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.294215315 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255038868 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.301049995 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.207764334 seconds)
  done (took 2.013309068 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.254234467 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160359044 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.225941647 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096315372 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.234371526 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.094864072 seconds)
  done (took 1.953610182 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.481610256 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.363643187 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.301787197 seconds)
  done (took 2.03810799 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252154104 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237638621 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.326955959 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.412422015 seconds)
  done (took 2.233175503 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.258441538 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122194233 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12250584 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.204869185 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.225791111 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207200554 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12610619 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175122793 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.126880514 seconds)
  done (took 2.507510424 seconds)
done (took 11.631066044 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.147035991 seconds)
    (2/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.188760282 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.256257532 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.323505664 seconds)
    (5/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128046388 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.211874915 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.163893452 seconds)
    (8/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.313074581 seconds)
    (9/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.245633759 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.106955366 seconds)
    (11/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.192036833 seconds)
    (12/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.292955902 seconds)
    (13/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.21044463 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.15485245 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.189305296 seconds)
    (16/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.172312009 seconds)
    (17/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.322635191 seconds)
    (18/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.179703333 seconds)
    (19/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.211146315 seconds)
    (20/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.173296396 seconds)
    (21/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.211556977 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098766538 seconds)
    (23/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.133060784 seconds)
    (24/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.134764745 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126610024 seconds)
    (26/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.169989421 seconds)
    (27/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.243610856 seconds)
    (28/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.195011581 seconds)
    (29/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.13069533 seconds)
    (30/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106205552 seconds)
    (31/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.230523337 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100213181 seconds)
    (33/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.170458991 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123574659 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.129521945 seconds)
    (36/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.097940315 seconds)
    (37/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.215783381 seconds)
    (38/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.092699437 seconds)
    (39/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.106069716 seconds)
    (40/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.19186727 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.166788789 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.14584239 seconds)
    (43/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.17047667 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108389244 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.121704261 seconds)
    (46/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.207294345 seconds)
    (47/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.178813937 seconds)
    (48/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.131858125 seconds)
    (49/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.074455336 seconds)
    (50/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.257193718 seconds)
    (51/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108539713 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.130905354 seconds)
    (53/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.174060717 seconds)
    (54/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.077221392 seconds)
    (55/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083117314 seconds)
    (56/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.297588128 seconds)
    (57/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.080942072 seconds)
    (58/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.075663246 seconds)
    (59/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.162286782 seconds)
    (60/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.170042075 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.074740712 seconds)
    (62/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.190299936 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079440775 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.131174071 seconds)
    (65/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.081413767 seconds)
    (66/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.132887921 seconds)
    (67/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.211911206 seconds)
    (68/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.077683939 seconds)
    (69/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.128219519 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121303772 seconds)
    (71/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.148028844 seconds)
    (72/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.190962013 seconds)
    (73/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.139685677 seconds)
    (74/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.139989259 seconds)
    (75/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.192641156 seconds)
    (76/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.134430009 seconds)
    (77/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.182237267 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.169524062 seconds)
    (79/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.184506986 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.1453847 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097532743 seconds)
    (82/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.208715384 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.103889117 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.138071962 seconds)
    (85/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.138760419 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.100773811 seconds)
    (87/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.074586714 seconds)
    (88/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.18408307 seconds)
    (89/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.158920708 seconds)
    (90/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.074652687 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.124384627 seconds)
    (92/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105945092 seconds)
    (93/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125922952 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099188208 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.188013039 seconds)
    (96/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.075430379 seconds)
    (97/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103718959 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.121378374 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.108101702 seconds)
    (100/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075262265 seconds)
    (101/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.073936106 seconds)
    (102/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.130958479 seconds)
    (103/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078135294 seconds)
    (104/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.086015318 seconds)
    (105/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.169816762 seconds)
    (106/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.099161957 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125469442 seconds)
    (108/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085393491 seconds)
    (109/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.0996687 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.126228217 seconds)
    (111/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.082785584 seconds)
    (112/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098502706 seconds)
    (113/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.132789232 seconds)
    (114/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.075956018 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.075695326 seconds)
    (116/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07668088 seconds)
    (117/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.211210067 seconds)
    (118/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.111684509 seconds)
    (119/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084944045 seconds)
    (120/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.074698504 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.130409539 seconds)
    (122/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084332943 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075945125 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.100502815 seconds)
    (125/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.074051758 seconds)
    (126/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.098004162 seconds)
    (127/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110818228 seconds)
    (128/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080858712 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10907302 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100569039 seconds)
    (131/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.172560031 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100128725 seconds)
    (133/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.192703584 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.100488977 seconds)
    (135/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107204112 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.145372527 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121196919 seconds)
    (138/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.083622608 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.074697085 seconds)
    (140/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.192059992 seconds)
    (141/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.171017779 seconds)
    (142/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.074755039 seconds)
    (143/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.109133991 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109555372 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100563984 seconds)
    (146/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.07439251 seconds)
    (147/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.165934671 seconds)
    (148/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.111802036 seconds)
    (149/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.106171426 seconds)
    (150/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.138610044 seconds)
    (151/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.076672351 seconds)
    (152/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.077460518 seconds)
    (153/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075564502 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12587852 seconds)
    (155/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100245749 seconds)
    (156/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097901504 seconds)
    (157/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100690394 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.099633811 seconds)
    (159/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078152957 seconds)
    (160/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077065138 seconds)
    (161/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.084673438 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.096465911 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.100159491 seconds)
    (164/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.101612453 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.097834319 seconds)
    (166/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.16429204 seconds)
    (167/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107404414 seconds)
    (168/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.075628404 seconds)
    (169/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.109887634 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.131842703 seconds)
    (171/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078428353 seconds)
    (172/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.075378948 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12136462 seconds)
    (174/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.100896885 seconds)
    (175/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.075781321 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102279371 seconds)
    (177/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075634613 seconds)
    (178/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.081740156 seconds)
    (179/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.098574153 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.101155 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.075031706 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.120020332 seconds)
    (183/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.099272001 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101482979 seconds)
    (185/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077490131 seconds)
    (186/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.07776081 seconds)
    (187/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.074877336 seconds)
    (188/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.101710921 seconds)
    (189/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.078054235 seconds)
    (190/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076757191 seconds)
    (191/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078082147 seconds)
    (192/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.074755457 seconds)
  done (took 25.931106167 seconds)
done (took 26.832621672 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.20736215 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126160435 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10806775 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.106808681 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.198294318 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114971111 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.14662244 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11075901 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118599647 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.107350611 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.123888884 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119597214 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107503665 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.199616033 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110286825 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.124728399 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100174927 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117950098 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146746743 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12417781 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.197481815 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101593217 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117042538 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12235987 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.174859945 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125169182 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107862724 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109373344 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.142857323 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109756388 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108803794 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099071955 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.149470265 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123758955 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098599799 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132406938 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100097921 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08318552 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132449749 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110835414 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121034968 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133917089 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109686237 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102075741 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.133277079 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110386372 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100768402 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.110725717 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.122332386 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.109994693 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102292565 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.1484228 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108869232 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098183919 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.12201701 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.101984156 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119089638 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123482965 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122040429 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09992877 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100105072 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125694361 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112088648 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099506715 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133369582 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100591522 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.108317095 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.134306595 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108696017 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101443463 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123390822 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.109393232 seconds)
done (took 9.664076915 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.104875073 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143653234 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.196007358 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.206467289 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12686593 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113835248 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.139333331 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.123285476 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.110818745 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143290039 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137297294 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.155301035 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.178690836 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.139621893 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114234078 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112521382 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.135627169 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108427151 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.203337595 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124379437 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124466066 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.142133431 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127555858 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140782149 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.104832615 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134928033 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13182711 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113172559 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10391909 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.136219816 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125647782 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.102820291 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.131600043 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12356014 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120391018 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.13795019 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115757726 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112767005 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.12899481 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.10477033 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112593474 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.144098197 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104862258 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.114203535 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138506413 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119831467 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.111092682 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.141300679 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106477294 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110490205 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130234648 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130349395 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115854145 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.14686692 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11587494 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.11576779 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.142905727 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11746674 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.106663916 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.141147057 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105620644 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104154842 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130992947 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.128866119 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.1317348 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120206351 seconds)
  done (took 9.401294874 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.122670201 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133107178 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13871713 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.114509015 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108794983 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122720452 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098160061 seconds)
  done (took 1.786835957 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100695547 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181732248 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.204374973 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.205641555 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.17707176 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.215260885 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147110758 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100728395 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133775748 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135034226 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182457286 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.235119585 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110023966 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14014434 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.183490163 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.123956472 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.184337616 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.125261248 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114606389 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208309883 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116046184 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130635693 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.13850654 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100183389 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.202820085 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102061326 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.25897873 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118544424 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13336422 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115065556 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114131969 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203578893 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.17869371 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.139178008 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108120687 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.207253379 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.175077801 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140307261 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.190945078 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.131257913 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.176810352 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.140420054 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115562784 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.113125244 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.141056443 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.166784759 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.144531118 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116518204 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.112907709 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.21188512 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.109511204 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.207069069 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.110866928 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.139559836 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110512487 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115916476 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148605465 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115438425 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210874532 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118162587 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.205535477 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.180631631 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.205655466 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209217863 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124247346 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206535609 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.175045425 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.139021701 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109481055 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114897904 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.208866733 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.113391822 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.141561251 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170184116 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142930272 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.183682167 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.209362668 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111423367 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.139700463 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103514286 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112130375 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.125948116 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.173533175 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.13776696 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113196426 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117957414 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137668079 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115744257 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.104279413 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.148142345 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114694096 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11120324 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.143963591 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114815127 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115333033 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.211493461 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.109333726 seconds)
  done (took 15.393899198 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.103768386 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102662869 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105337676 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.127908905 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103376851 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102190257 seconds)
  done (took 1.609652686 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.138081791 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115765609 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148581229 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117613949 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158693463 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.212158066 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.215815092 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109524271 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156400937 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.124568862 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.212339524 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.189919515 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.212928083 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.117703725 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.217173507 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11658387 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.218071419 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113773091 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.150778688 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114255558 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113503986 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146116559 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114283706 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.206232429 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116076121 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.115912618 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.13498419 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.123928682 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.121367355 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.136157193 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117729274 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.140464152 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110198776 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.10994314 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.217112168 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107529933 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137132994 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120034059 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118337537 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.141517225 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.191725437 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137969328 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121585324 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.117323015 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13586679 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108979795 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.118151888 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134625391 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.192561285 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.144071316 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119300961 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114978043 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.142050763 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118656008 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.13400578 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111720429 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118494443 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.21997419 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.117646214 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.133768783 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117594182 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.115436774 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.136487096 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121540065 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.116085072 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144609788 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108707554 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115399253 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139097384 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116914848 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.117455041 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.141919131 seconds)
  done (took 10.999325183 seconds)
done (took 40.133786554 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.480610834 seconds)
  done (took 2.439857968 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.903947587 seconds)
  done (took 1.862715627 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.884609147 seconds)
  done (took 18.877255671 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.517135217 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.589848172 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.018313568 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149287023 seconds)
  done (took 3.236726773 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.073797442 seconds)
  done (took 2.055801765 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295091233 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265318947 seconds)
  done (took 1.531057658 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.713097264 seconds)
  done (took 1.694279632 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.489054032 seconds)
  done (took 2.458272722 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.346507478 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176390359 seconds)
  done (took 1.504736598 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.602981217 seconds)
  done (took 1.585862971 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.059049059 seconds)
  done (took 21.041713718 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245674776 seconds)
  done (took 1.236995141 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282473922 seconds)
  done (took 1.272994803 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.594186694 seconds)
  done (took 4.584764071 seconds)
done (took 66.351367569 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112920139 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.114969287 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.113767945 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.137918099 seconds)
  done (took 1.456031185 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.119815831 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116384389 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.137904893 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141463508 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.120458661 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115558775 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.139693732 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.116670822 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.113934142 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143024359 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.114883525 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114298849 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143275066 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.114098021 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.111604992 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14361764 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.118681224 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115944579 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.140704479 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116048872 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116649916 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.142109257 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.119244169 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117994704 seconds)
  done (took 3.98080069 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111149807 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10538873 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108136418 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131486643 seconds)
  done (took 1.447882885 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124446516 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.126930015 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.149699543 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.123718911 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127431372 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152035996 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114747385 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.111261961 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.13977256 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124111429 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131693742 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152841224 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.126935949 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11545355 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152485774 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110459329 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115752037 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152675696 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123894043 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12345305 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141619338 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122701255 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119416775 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.149881714 seconds)
  done (took 4.122164485 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189142256 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127258816 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171482565 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157787608 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17265952 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.1146278 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.141176518 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.146241846 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121745921 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116238512 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144549188 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.157415688 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.146880004 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117375744 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114771983 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.145553539 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.127020498 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120682011 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186559142 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.119397527 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146276285 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127692245 seconds)
  done (took 4.102655145 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.118582984 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107040553 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102426634 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132632588 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117779837 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.107446221 seconds)
  done (took 1.68360334 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10589645 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101203539 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100527982 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126021069 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105336285 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100262825 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098584938 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.126948763 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100682539 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100266466 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.125699269 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.100460533 seconds)
  done (took 2.288911153 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.3263705 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.105784423 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132368363 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108253143 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11213063 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103719592 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.142348037 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105343934 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.266102632 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100432927 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.142699738 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.190345412 seconds)
  done (took 2.83338 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19753308 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142821131 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310705909 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360957011 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157974855 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183784435 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265008481 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185752322 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.172212835 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160726151 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207617275 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156560155 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175187945 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180572386 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161682137 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157144085 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189371214 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201808997 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163915602 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234428713 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153272853 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196993697 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184992473 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173477216 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134177145 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183588219 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114782433 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124093347 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187810717 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185699823 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167707251 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172774198 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136544138 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212101343 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2474973 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166811052 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266487856 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155532157 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.168101087 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211356231 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253596432 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13577467 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208885119 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174013504 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126824072 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211578825 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149921062 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.206732642 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130442215 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166828706 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175910504 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200733973 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196991756 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134180092 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299767022 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130736892 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164146035 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163502861 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212245484 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220518498 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173422841 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118926591 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200758006 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214260071 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233510876 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139868632 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186146836 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122991269 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188637848 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202290738 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203078139 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182682226 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.195665324 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155590759 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165990434 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193948635 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149701945 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226668526 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193669292 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116277217 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17099916 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131169463 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121563088 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213175838 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118760137 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238471436 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127135259 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341052603 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205436072 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150566179 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181880179 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154624009 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185654117 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14209915 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126006833 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138555433 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.1836735 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152861892 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123569878 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177275238 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135912704 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.148647824 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147494429 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.145893245 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163545999 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.129774652 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18520805 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190094797 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128944396 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198502564 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144767701 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.182567055 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163534287 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215801331 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127198872 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154859834 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213228055 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191417964 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132976791 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19917118 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219077737 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149034545 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129899045 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186145834 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217111553 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139604067 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223151209 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133486293 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157981551 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13472796 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196426947 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154705338 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.178206784 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125167511 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.187233469 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186705433 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.150677974 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135939679 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204493105 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129106201 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121379627 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159816173 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13225276 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.166817938 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14597292 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134267404 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176629219 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160070024 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188039107 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176049216 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131289496 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192096489 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12872008 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.162323474 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172077342 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.114618016 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196152824 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217200719 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125677709 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173338593 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186557022 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206035351 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165725654 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152712451 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176979319 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153140824 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116492766 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18559749 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16408888 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183437103 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18215909 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205236158 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.187539151 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158007994 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171632372 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187953289 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181223512 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179493065 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140241657 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194164922 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163777847 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.143600388 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120914944 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12414345 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159188595 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126534612 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132734216 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198656122 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184859545 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176342159 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189177171 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133329396 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214730506 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121408866 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182699363 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.169720405 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163479553 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212543797 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18768711 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200253372 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136641375 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1835088 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118368137 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121841825 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.157145753 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157406584 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16068991 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132493744 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163668675 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188331557 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195337614 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143659544 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216081613 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187744371 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221913913 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118668923 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159649345 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195066424 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162133789 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.207621942 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131147976 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.180831605 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189151527 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164626231 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186061403 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190486153 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171142021 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216582715 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.187615675 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127163898 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169979924 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159167753 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13251067 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188142978 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14211277 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155107079 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146344603 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.161521107 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135896465 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206323759 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138668156 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200517601 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.1558186 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193092398 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121789874 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164696988 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173076927 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168795105 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103859343 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191876046 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190337272 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17310254 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150293083 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199084742 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126181794 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.338392507 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181804885 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198635007 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158885884 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13470912 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165395534 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1888184 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184454955 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180202154 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163734788 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201614913 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192313798 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138162817 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154139748 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144743318 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173496062 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136039995 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.171493048 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.158268581 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138572185 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2058391 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161539436 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165288909 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199960397 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144733518 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.173944234 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136078661 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247559582 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163093089 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195917422 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.158260019 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191929938 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205269335 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120824681 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123786053 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.154919474 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18200708 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125305873 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199387119 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192527383 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207594645 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169997029 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186315223 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136644798 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.150168898 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163722652 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141816059 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211348017 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157738714 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134005645 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214352058 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124511237 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155765178 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157269163 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294291352 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143296454 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197212303 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104305173 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.290240722 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126423088 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127762809 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187232335 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190710044 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.129894795 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178434861 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196353811 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136070447 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189398613 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131081462 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203474945 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210709816 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160962665 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194613541 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140495759 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185331492 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154124996 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200089166 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141382245 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.17325116 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153908174 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217373944 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.176023643 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.15651349 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162910058 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192124432 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165579533 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195343891 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135804517 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206560491 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123883654 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188000654 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136820037 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150446974 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154291139 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193107709 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126700312 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19947431 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164945618 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157116563 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123428522 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169470062 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160283908 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161883713 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126182911 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204831306 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126954007 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201287297 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200259984 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154110484 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16407967 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169485033 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127224551 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133775513 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167446831 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127871715 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170311918 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202092414 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127233604 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201910796 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184750909 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158233796 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180527598 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139803021 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.328724075 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.15265792 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186113799 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174976772 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219094304 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147211859 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198186111 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16498782 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171587335 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15717065 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170645896 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.21860896 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186717319 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.162425195 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154390155 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139159152 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133541558 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.159425555 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147110529 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193031295 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1374744 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.159716636 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163992099 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167721406 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142581865 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137553357 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223349378 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146108359 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206443436 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210792824 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133345902 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199718084 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167214595 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154357963 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158545385 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195537308 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139441779 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174848733 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131590934 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133346829 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237079434 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122145301 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183080851 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195115716 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165998528 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195699463 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.130734153 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201111108 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13725656 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197535492 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125131781 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148939104 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197122222 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131869552 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.151504899 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167860823 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182710653 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161107739 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165681273 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172139249 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218776518 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121547699 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129669143 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294781245 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155886637 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217701023 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13243435 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161850628 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141418722 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182171646 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.15871486 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195658684 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.125723301 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153608368 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141909912 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.177869947 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142059202 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164618485 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196126222 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155375736 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209417741 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13221647 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281775578 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137070145 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195098548 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.112818217 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.153337602 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137522944 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130624733 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165400173 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206417215 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207074048 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.188706633 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.142815789 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160554626 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124284283 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126751104 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191154655 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14543548 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19301707 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142556181 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.128782203 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137162328 seconds)
  done (took 84.091196366 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158984073 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149938442 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16603556 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218849373 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190481938 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286468006 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226705171 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241172727 seconds)
  done (took 2.724835591 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.11646554 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155675059 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137736964 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141356047 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107345085 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.435532558 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.128219912 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144262041 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.1573159 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148709716 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131678389 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.500332917 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.145616007 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.115747225 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.143736085 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.106537362 seconds)
  done (took 3.891400473 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.991753536 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532557256 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.282944302 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.292358001 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.246925285 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.198871975 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.740207503 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.184372058 seconds)
  done (took 12.557979836 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152318632 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.139886812 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.413730338 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.244946708 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.199835245 seconds)
  done (took 2.245075805 seconds)
done (took 128.405285273 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120516423 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.119998409 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119383169 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149665243 seconds)
  done (took 1.591103809 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.172679913 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089729882 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091198581 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116110087 seconds)
  done (took 1.560459249 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.423251985 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088717635 seconds)
  done (took 1.632407981 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.144567145 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136561931 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.161674372 seconds)
  done (took 1.547192789 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13529925 seconds)
  done (took 1.229528979 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.11841568 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.113185192 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.232451464 seconds)
  done (took 1.563515632 seconds)
done (took 10.221351882 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116008668 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.920748919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428284896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129604225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.705618976 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423083705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.433165527 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170694608 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170519229 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133931677 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129427951 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685785437 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.44629416 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.871082521 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.398539423 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.897936746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.690038653 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.107278311 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.140791331 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110545471 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.412078866 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.134405039 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109089038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.107990672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.713235452 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.416405881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.105794796 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.909869271 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106199529 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11002245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424087495 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107524487 seconds)
  done (took 20.851864626 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114007841 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.162013811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142517036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109311825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109867509 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13527188 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119154194 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118907452 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198093702 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.106801107 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.155845995 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.107048517 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.111171945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135288838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132344142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106436155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.137396267 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109910115 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115123015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.135610177 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.129424719 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10619537 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.134806922 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110520137 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107086579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.154739518 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107552539 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119031111 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134096126 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112382791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.111631177 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10716021 seconds)
  done (took 5.097457806 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154003994 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171631272 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144020687 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143082959 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182533539 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.109638304 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.217629683 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144374389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.198806011 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10813726 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128230573 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.134704662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147250573 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107835912 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.160367148 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107458183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.109195689 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138188848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11655365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108522931 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.157123587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107321607 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10833611 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13866554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108909487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129179378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136781576 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121215729 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107652781 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139612363 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11435153 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107093438 seconds)
  done (took 5.412563243 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.122027334 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.122837038 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.128901869 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.158815524 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.116825581 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.120301798 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.149822127 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.116945905 seconds)
  done (took 2.145568057 seconds)
done (took 34.606926496 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134537032 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126912731 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129763692 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.152019425 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.18379552 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145528846 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126200947 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116416606 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152120909 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13074401 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107312924 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116561787 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.157789492 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119611417 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.213443594 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125649718 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.219719521 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185791816 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.147044272 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127380064 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.1176639 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.218970938 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120844129 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.145253819 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.189438597 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.109594059 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.209342675 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119211229 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.150430716 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.109633796 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.215483555 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123360227 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118289115 seconds)
  done (took 5.961904802 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.202444082 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.117727828 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146779282 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116599646 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117303865 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.144529556 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.205523476 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145168971 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117379191 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115691952 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.114926349 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.217157409 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121178985 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142165753 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119776177 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107355714 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.235181779 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119188853 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.107665594 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.119052616 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113611598 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116549253 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.246990725 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.111829649 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116448232 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.143306306 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120555382 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121058439 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.117550803 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.14782649 seconds)
  done (took 5.302331491 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.122029692 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129367226 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133634167 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.211801358 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.143863025 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.156230144 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13620766 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.129491113 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.1665436 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111081515 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124212613 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.174111583 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126676275 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.119782293 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142400425 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.128409899 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131080051 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.138608155 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.11804404 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126002595 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.15858688 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127574954 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.132972972 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.146445139 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109140299 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11700793 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.147696197 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.124662352 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.117853414 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123968269 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.141082001 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.113458317 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.112169676 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.173910613 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113495681 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.122255344 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.162595235 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122904793 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.121793087 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.170581532 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113474664 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.110268301 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.164343355 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16254653 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.111543007 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.152065929 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122278527 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.123820083 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.138176834 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128682155 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151984494 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141342559 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131678429 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.108895139 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138144284 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119555022 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110475914 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.143061878 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.124990258 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.112017788 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.162891047 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.11860457 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120319042 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.111759521 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.149764521 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110216039 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.108504163 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.144330598 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136191816 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116935939 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.174895575 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.110771165 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121014962 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.151516405 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.121777259 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121198494 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.139074544 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122406858 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120883106 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.115226745 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.151969345 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113913929 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113215349 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.155814866 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131821468 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123746606 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151105808 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124374333 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.112965574 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.14049986 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12796003 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.111016849 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.143455114 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124609347 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111221977 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.140070104 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125172252 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121467679 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.108075946 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.165035792 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.114191383 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110006124 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.164313931 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11463327 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.115318162 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.148724535 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.152829513 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.110306479 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.150037198 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.123840029 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11092815 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.147006105 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.114514776 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.10967345 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.127167568 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157034779 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.117942646 seconds)
  done (took 16.52153054 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.312351239 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.268691825 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206565022 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.303632969 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.122672235 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.234090298 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.298896379 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.298977201 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110929013 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.176894499 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161744412 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.268987762 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.140941054 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141588744 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.301220289 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.353758766 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171020575 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149075525 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.1763697 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125844684 seconds)
  done (took 5.451713796 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.131711435 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.145980735 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162835538 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139575921 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120989468 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.157685036 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111448719 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131986012 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.151095807 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.120806706 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.112985854 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.155649954 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12423945 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127529359 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155356695 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.144532171 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118417579 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.145726954 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133283809 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115604907 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.128798009 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.136738918 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.11913112 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161744664 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13024274 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.120902916 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.138717515 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.116201404 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117528716 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.149190038 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117168817 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.128845211 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.146095459 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103703065 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123347748 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125156515 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.14670012 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11416684 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115188935 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.141850499 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127388762 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123874171 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.147803273 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097529753 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.129903818 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108082687 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.153432469 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.124606934 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105469189 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130025021 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.153082672 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127004454 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.117818356 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.164420076 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119652826 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126619527 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151807731 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126220028 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.11508618 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.138549179 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110776031 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.114130682 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.147156799 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127820826 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125526502 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.157869947 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128635438 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11151452 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.143122937 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117463478 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115132209 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.124194915 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.162189754 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.120712063 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.11888579 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153609923 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119969719 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093052407 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.148032715 seconds)
  done (took 11.454949078 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136126993 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123432156 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.129526594 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.17708861 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127520145 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117135787 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15383048 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.130399664 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127459152 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161066864 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128633866 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.123539516 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162557979 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122278591 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122988267 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.156744755 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130142431 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.148242647 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15975614 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141285117 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156768053 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.117027524 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.123731713 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.122122109 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170487144 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.123622711 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166547144 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.129488073 seconds)
  done (took 5.019311575 seconds)
done (took 50.821249912 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.251003734 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.458229873 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.235797306 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.230948084 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.265069968 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.259783673 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.234146811 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.230775494 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.615089183 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.205162138 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.232640086 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.229064063 seconds)
done (took 28.580975368 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.287335608 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.784013972 seconds)
    (2/2) benchmarking "String"...
    done (took 1.525729784 seconds)
  done (took 4.431787525 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.226321349 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.219948818 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.479099189 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.221064236 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.237354599 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.239722192 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.223137034 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.239929516 seconds)
  done (took 15.980483164 seconds)
done (took 26.051900222 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.268910821 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.403325724 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.453985566 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.232614639 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.233661981 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.221252121 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.241996776 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.246550984 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.234806748 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.240494201 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.633372108 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.484810676 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.227299983 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.595788726 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.23319089 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.221851867 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.238787526 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.454798325 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.227884925 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.251873906 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.200980008 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.206087204 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.250139096 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.223523278 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.229941526 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.23602951 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.282722939 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.231653731 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.397480363 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.244385263 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.251437225 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.225942726 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.283889027 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.225408135 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.232641183 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.228248443 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.410889971 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.23177383 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.205557651 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.253761079 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.414870218 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.235887906 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.223436419 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.248483511 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.228316956 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.276459492 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.207389862 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.356628361 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.248321571 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.235338282 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.293511296 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.587558863 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.227855057 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.225679946 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.236630655 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.436463527 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.238199078 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.282491812 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.252005517 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.228659517 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.226026733 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.250699251 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.240178785 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.226966434 seconds)
  done (took 145.153298772 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.224854921 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.224459042 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.229712385 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.229485693 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.228915157 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.226058021 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.226052702 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.224667734 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.227849539 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.244839521 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.228025995 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.22739574 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.231464885 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.236709851 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.235156506 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.247456644 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.230587601 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.247138425 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.235309088 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.225922111 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.231581916 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.229759547 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.241287889 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.228421253 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.270449189 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.308478857 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.261036423 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.261185545 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.241073102 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.226145458 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.270015934 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.237238494 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.842278022 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.102652254 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.23420063 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.248231353 seconds)
  done (took 81.194989425 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.227357506 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.228318932 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.22855817 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.261754709 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.228047381 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.801849088 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80435579 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.197897075 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.357186847 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.568647606 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.439718001 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.227851722 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320189366 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.24156955 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.230020377 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.244979956 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.254585714 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.234348523 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.229354883 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797700686 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.242961156 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.447216406 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.404507506 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.245320486 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.26321905 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.621245909 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228676573 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.262657938 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.560474605 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.279251625 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.228516892 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.564049192 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.576309329 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.342292891 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.233825382 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263463739 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.22909745 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.512081321 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.233785498 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.231101141 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.234132072 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.857030453 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.23545097 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.80380455 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.236232768 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.164203267 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.231457957 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.231484939 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.144429681 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.915861804 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.23571901 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.23147314 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.233522467 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.230155944 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.231815143 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.264912774 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.204499426 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.329643461 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.232486873 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.2301858 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.235743186 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.265326579 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.230108077 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.375949939 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.232844396 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.686689308 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.296023051 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.333255261 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.801830384 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.233463003 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325536574 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351500539 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.23385379 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.231584167 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.233011381 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.231820862 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.232400203 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.342995429 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.232830544 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.902757451 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.410010932 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.250021365 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.586214653 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.33308933 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.233170397 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.56393821 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.237568549 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.233021146 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.922694793 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.233965658 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328547466 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.235198766 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.23163349 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.234575764 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.905762712 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808714306 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.469812081 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.238521133 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.813724296 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.238531695 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.086694664 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.793768474 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.884686559 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.239991686 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.343513133 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.41050289 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.252675481 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.233476915 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.234211276 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.235727689 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.595532125 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.239311441 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.290736276 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.637570377 seconds)
  done (took 376.70411112 seconds)
done (took 604.175838057 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.103470999 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.055423092 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.205029028 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.064011331 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.049812886 seconds)
  done (took 11.611890646 seconds)
done (took 12.747314601 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.426938958 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.425347369 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297574128 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.430217047 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268623915 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.444173791 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410544016 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.250487667 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.344751191 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.317626697 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.34627614 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28904828 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.267639209 seconds)
  done (took 18.654910439 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.513287291 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.249286505 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30295368 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.496537994 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.283814419 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.547129037 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.556337664 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.253137255 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.388872808 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.259946642 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.257730139 seconds)
  done (took 18.246408893 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.515667114 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.252231417 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.305795395 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509391641 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.285411321 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.527071319 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.558148452 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.252742609 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.3890168 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.262012626 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.257669987 seconds)
  done (took 18.251117929 seconds)
done (took 56.288958122 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.276406448 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.337897934 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.277264806 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.259105695 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.253259388 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.253954561 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.260401355 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.254302447 seconds)
  done (took 11.310669923 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.253604455 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.253223242 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.254373116 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.253358343 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.252846169 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.252699938 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.252769377 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.252848436 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.253824341 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.252860995 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.253750858 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.254523128 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.253112157 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.253604218 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.254532034 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.25328356 seconds)
  done (took 21.192707963 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.256526219 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.254679754 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.252378273 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.256209012 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.25426403 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.256059009 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.253073467 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.252689726 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.255224696 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.254594857 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.255823202 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.254463222 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.254868189 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.254281311 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.255001959 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.256567683 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.256766956 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.255028875 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.259743683 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.253301805 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.254752581 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.256077298 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.25592468 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.255653636 seconds)
  done (took 31.26253604 seconds)
done (took 64.903250644 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.25688301 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.26110693 seconds)
  done (took 5.656538385 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.316910949 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.314573352 seconds)
  done (took 3.769613375 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.256982918 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.256202948 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.256067681 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.256253192 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.25592305 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.256956766 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.255824114 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.258146053 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.256408803 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.256452091 seconds)
  done (took 13.706006914 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.257335035 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.25421354 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.257413665 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.256082915 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.256376839 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.255842616 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.255258894 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.257959211 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.256330789 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.257047111 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.256945807 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.259381612 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.257760229 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.256831952 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.257754626 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.257130491 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.256312535 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.257314356 seconds)
  done (took 23.765208326 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.271729813 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.275841808 seconds)
  done (took 3.687935641 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.386634232 seconds)
    (2/7) benchmarking "second"...
    done (took 1.301014176 seconds)
    (3/7) benchmarking "month"...
    done (took 1.363354322 seconds)
    (4/7) benchmarking "year"...
    done (took 1.356570493 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.300187429 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.278536479 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.301626017 seconds)
  done (took 10.430227155 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.259868617 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.458216906 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.590283283 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.845086405 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.260985306 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.262913878 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.150303635 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.262342013 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.264260774 seconds)
  done (took 14.497031902 seconds)
done (took 76.653748248 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.243957446 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.332536251 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.262299288 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.265011364 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.600004104 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.264150627 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.249067434 seconds)
done (took 16.361708115 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.224053083 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.229646298 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.231541592 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.259947961 seconds)
  done (took 10.086518782 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.245833322 seconds)
    (2/2) benchmarking "read"...
    done (took 1.572887581 seconds)
  done (took 4.961227979 seconds)
done (took 16.191517752 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.262421798 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260029049 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.258798014 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.262116902 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.26015091 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.260725824 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.260036719 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.260352956 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.260715204 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.261088083 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.259889961 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.261046936 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.262986923 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262762706 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261550475 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260481573 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260422595 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.261435492 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260933619 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.260527297 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260808086 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261142323 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.26236007 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.263649441 seconds)
  done (took 31.410898334 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.260658069 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.260787775 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.261904813 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.262214359 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.262139464 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.262252484 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.262410609 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.261257885 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.261151879 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.262685056 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.263237982 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.262436223 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.26218809 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.260844679 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263270558 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.261073759 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.263215541 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262784949 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26424453 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.263483766 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.263139577 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.263880584 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.262929825 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.263347181 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.263212806 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262511486 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.263125962 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.263085932 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261727513 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.265053223 seconds)
  done (took 39.021025965 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.266045336 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.262948778 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.263318885 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.263744021 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.263979692 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.263059517 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.265819417 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.26555792 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.263380908 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.264453534 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.265443718 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.264498045 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.265505582 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.265093747 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.264299771 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.263366806 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.263425593 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.26434192 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.264894645 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.264390007 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.265280798 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.263566584 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.264887863 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.265863206 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.266426477 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.266367744 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.264736629 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.26422979 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.265279797 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.265199188 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.265404772 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.264537092 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.264973843 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.266396497 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.264683683 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.2638561 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.267047499 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.265435633 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.267448779 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.265642561 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.264518977 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.264007169 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.26468617 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.265021967 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.265753287 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.26638229 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.266916292 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.266211777 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.265242627 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.267766934 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.266560798 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.267271527 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.267613288 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.265350022 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.265081402 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.267002383 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.266999092 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.267502084 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.268652711 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.26795601 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.2661636 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.267183638 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.267305975 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.267763111 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.26660178 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.26829946 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.269142915 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.266899164 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.266772764 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.267114999 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.27023939 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.267303734 seconds)
  done (took 92.279590454 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.268309342 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269510396 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267127582 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.268347225 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267850677 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.267977725 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.270024546 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267911295 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26819279 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.269131721 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265792605 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.269143547 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267526383 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269239842 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268795662 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.269229329 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.269039025 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268580499 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.26849473 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268988412 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269870628 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.268038688 seconds)
  done (took 29.057650977 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270873687 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269485956 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.270108109 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.27132167 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.270671452 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.271477076 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.270080598 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.269392566 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270220915 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271706836 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271151615 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271289263 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.271422248 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269931879 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269518711 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.27235833 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271823785 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.270227621 seconds)
  done (took 24.025917253 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.271202634 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.2705253 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.270650649 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.272244693 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.272325094 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.270017961 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270914258 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.271621728 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.272059866 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.271194954 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.27034244 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.272320081 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.272589988 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271928 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272473476 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.271946055 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.271905125 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27060485 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271938324 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27389452 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.271325788 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271264635 seconds)
  done (took 29.128296011 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271925271 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272098837 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271322254 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272535272 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272640029 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.272781328 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.271070927 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.272069508 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.27408721 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.270867571 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269905418 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.272451841 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.272527458 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274350294 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.273547495 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271630261 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.27287834 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270211864 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273065647 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.274208923 seconds)
  done (took 26.601195778 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.272890642 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273382048 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.2722425 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274974904 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27432316 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27334977 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274658671 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.273914295 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.27346879 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273204833 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.27550806 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274928836 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275108506 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2738208 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274390688 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27412839 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274377961 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273292194 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.273586138 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273835015 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274435301 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273541708 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.273988227 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272628883 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274414495 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.27482429 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275679543 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274827354 seconds)
  done (took 36.828597804 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.274932562 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.275287749 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.276407501 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.275250171 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.275193856 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.275790663 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.275025167 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.274981968 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275906592 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280634526 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.276644656 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.27632321 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.274702468 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.27466598 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276411537 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.273576092 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275391768 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.274718488 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275959133 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273834191 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.275991965 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275354807 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.274719978 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.275377891 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275004429 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.276086853 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277278572 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277380861 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277061535 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.276632532 seconds)
  done (took 39.431382723 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.296368044 seconds)
    (2/2) benchmarking "in"...
    done (took 1.294599113 seconds)
  done (took 3.749914739 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.27498531 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277947358 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.278101589 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.274403579 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.277435596 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.276432311 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.277749873 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277827183 seconds)
  done (took 11.371624815 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.268764214 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.278511283 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.278272685 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.277616522 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.278410172 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.269798375 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275574088 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.282881848 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.270020509 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.268108606 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.272711135 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.270519498 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.27340904 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274028749 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.272738535 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275767561 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.28020073 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.278004527 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.282451594 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.279214324 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280401051 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275091584 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276098031 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.283350525 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.271807622 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.280222554 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.278621226 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.282223732 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273456172 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.276826973 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.274635032 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.282473819 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.279590346 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.28027563 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.279453621 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.280363089 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278584511 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278845512 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.281645457 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285480852 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279868026 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.281024464 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.274921178 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.278374496 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.278683777 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.284531157 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.280513944 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.280113474 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.274144771 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.275928177 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.282979413 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272138518 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.282186156 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277547717 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.278674814 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281089992 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.289707263 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.275307281 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.276968469 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.282945796 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.289722381 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.281460254 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279787921 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.285300313 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280036625 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.283423439 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285089807 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.286686509 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.283392345 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.280076274 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.282784763 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293460019 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.286812346 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.288159511 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.282724581 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.28487813 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273680556 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287408878 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.286328641 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.28650129 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.286437187 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278406897 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279523624 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280544785 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.276558607 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.282917725 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.281450603 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.276448058 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.274771633 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284764903 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.291296317 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.285521726 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.274949296 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.277342476 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.281133763 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.283906148 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.273769783 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277509179 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.28339599 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.281554183 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28083105 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27914524 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.28163045 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287913792 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284810879 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.286700159 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.292685208 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278717256 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.285332695 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.29436377 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.28297821 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.27641489 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.282089982 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.284142336 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.277914146 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.282551343 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.289816885 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.279332332 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.288282368 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.284241249 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280980483 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.285482504 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.285691979 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.284562846 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.277122907 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.286850972 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283577845 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.283614377 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.291319668 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.283361165 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.281404218 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.283885147 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.291928207 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.277438902 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285833913 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277346108 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.285655426 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.283502268 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.282196556 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.278067342 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.283892836 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.282755775 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.284671779 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.285517785 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.291306084 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.280489449 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.292328465 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.288685855 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.285018632 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.283656589 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.287049636 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284666054 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.28159885 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.286988934 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.279622387 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.288149758 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.277719813 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.28895847 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286014984 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.284168203 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.287824157 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.273938304 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283750798 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.288972641 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.286593 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.281888278 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.28885797 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.285405856 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.285241069 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.276534724 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.288862553 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.280739522 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.281990566 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.293840731 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.284054406 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.287600179 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.286425589 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.297504058 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288583356 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.285776579 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.281669463 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.284348346 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.296140419 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.289215108 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.29576443 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28740418 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.289578092 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.282477334 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.28716388 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.287770358 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.281395006 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.292333163 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290804339 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.294797134 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.283545815 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.287901935 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.280234237 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.288619935 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.288404576 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.298883042 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.289701674 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286768448 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.283778013 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290122885 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.284406263 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.287590411 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.280633622 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.292291707 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.286562466 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.290186736 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.290409574 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.280613719 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290307391 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.294231046 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287188518 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288106646 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.285825597 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.289019471 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.28058397 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.285746985 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.295490732 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.286640648 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.292152154 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.298068803 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.290451708 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296012098 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.292787691 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.285847467 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.291167856 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288910742 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.290825668 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297710284 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.291840403 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.283187226 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.297641748 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.294712459 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.286553712 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.291431725 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.301416061 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.288659588 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.284022025 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.297397942 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.29224067 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.292449646 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.290653683 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286646597 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29835969 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.2968024 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.30184255 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.283089462 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.296545067 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.287950961 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.295396352 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.289345457 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.293214199 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.29409581 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.297846702 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.302095695 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.294407323 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.287791447 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.298107685 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.292441992 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.296070882 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287659212 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.295718237 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.295151873 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.29427997 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.291613866 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.287261923 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.29310165 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.287166587 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.297471206 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.286014816 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.304527961 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.308738939 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295609099 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.30139785 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.298645712 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29616712 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.297229051 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.289597931 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.293426168 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.291743219 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.293700172 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.292502467 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.301112393 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291489493 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.30023139 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.294864903 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.298845298 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.299667961 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.295951131 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.289874115 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.302161122 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.296520106 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.296975469 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.287667402 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.298515145 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.2906681 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.299297543 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.298084964 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.291667577 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.300381595 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.302206825 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.295279565 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.29255289 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.291845999 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.290130832 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.294344772 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.301527172 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.290650102 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.299471183 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.291953938 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.295619931 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.292895309 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.302391517 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.305053245 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.291032798 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.301995662 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.29768071 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.288308753 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.288700635 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.30039753 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301928495 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.309531219 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.29158769 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.300312009 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.298886644 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.295333305 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.297726812 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.299174676 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.300054983 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.299685177 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.304725723 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.30356975 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.295326149 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300917332 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.30870512 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.299031933 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.297016277 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.291316464 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.29628706 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.309213102 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.293565002 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.299467625 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.294452597 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.301559779 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.298003081 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.299079164 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.300446257 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.297778189 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.302762582 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.303180433 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301319953 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.299925593 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.305175175 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.312833553 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.305261316 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.312813336 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.296686885 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.307823787 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.300621709 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.296162505 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.295600165 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.295377787 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.305089242 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.292415292 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.305046394 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.30067335 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.297630796 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.300127217 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.306753098 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.291259547 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30123319 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.309845739 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.295053944 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.303273503 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.299794108 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.295064774 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.304041202 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.302485191 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.29105582 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.295345804 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.296367539 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.307085724 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.297218881 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.300995811 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.298666326 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.305243945 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.304269817 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.302280352 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.30205004 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.302698909 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.295712971 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.305874375 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302474763 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.312410804 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.296488967 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.302307456 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.298414299 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.307586141 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.312585456 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.29905886 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.309765862 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.304552635 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.298698995 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.301688101 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.307665921 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.297774875 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.304874637 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.297540826 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.29906189 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.297519275 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.305522095 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.305417362 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.307972553 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.296169375 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.29921383 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.307484355 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.304109826 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303434243 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.301534775 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.312597986 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.298418865 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.297618195 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.305231702 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.300336547 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.308972643 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296803981 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.30095476 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.302880721 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.309503732 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.305018558 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307838693 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.296369995 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.300743494 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.311145061 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310408415 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.302456652 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.299279164 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.306422382 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.300395742 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30476675 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.30370221 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.302002767 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.300759424 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.309261045 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.300748138 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.301968608 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.300418308 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.308471758 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.310713936 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.310408583 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.300014803 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31287171 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.314351881 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.314116886 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.29864186 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.302812033 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.301543882 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.308568602 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.306006607 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.301572354 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.314093269 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.312712548 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.310888149 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307346435 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.307714217 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.298739521 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.310543194 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307305275 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.302062714 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.313480618 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.304618459 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.313862252 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.308092332 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.306781918 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.300893587 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.302977252 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.302345753 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.303598155 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.311195031 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.306293078 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.310239278 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.304618023 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311569535 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.30709208 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.307143924 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.306079177 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.300368826 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.30854873 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.299349318 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.309464034 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.310328329 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.299712741 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.307981512 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.307826847 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.300683239 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.30416874 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.310824524 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.307187803 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.30153471 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.305092111 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.313085679 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.316752603 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.307667569 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.301587039 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.306290993 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.311729564 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307988688 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.30954739 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.301438724 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.318133647 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.321674498 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.301856115 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.30488807 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.311811932 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.316795115 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.306550471 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.308145884 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.305424627 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.306777381 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.312411306 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.310732229 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.313501793 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.31589242 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.305426205 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.312001645 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.301671424 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.30568147 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.310506644 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318805313 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.309648034 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.303579715 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.317828385 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.31945834 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.307843635 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321685721 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.315483792 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.310611877 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.314613166 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303748296 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.312856848 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.307154448 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.314169919 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.310663428 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.310067804 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.311292995 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.302309308 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.312395183 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.317470245 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.319627546 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.31118715 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.303569046 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.307518344 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.313919859 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.311613229 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.312026138 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.311357673 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.312788502 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.312558551 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.305163316 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.322027286 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.326184812 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.317281894 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.312647923 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.312390098 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.313503669 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.316522545 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.309741685 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.315745733 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.311702595 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.312106625 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.311626025 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.321665982 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.313784231 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.306562817 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.308712178 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.308019626 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.31551766 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.320928462 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.331116149 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.316309243 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.317251361 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.316464248 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.314178561 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308997301 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.31756589 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.313753639 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.309501538 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.309990502 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.315851318 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.315670116 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.312924449 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.308741148 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.31760553 seconds)
  done (took 773.353704471 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.31261215 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313761721 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314500015 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.313899242 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314345046 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313984279 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313171122 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313606246 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.314824463 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.315885187 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.315047422 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314691011 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.313396113 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.314993841 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315352493 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.314305486 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314362779 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.315679587 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.314240666 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.31308032 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315978405 seconds)
  done (took 28.790924696 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.316612853 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.314330874 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315071188 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315108618 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314861576 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.315490852 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.315956662 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316571718 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315851098 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316363026 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.3150305 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315716548 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.316647604 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.316322621 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314710133 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315815757 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.315129096 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316356609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.317310798 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.317309214 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317346224 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.317518538 seconds)
  done (took 30.141806534 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.31720834 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.318115184 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.311029254 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.321246891 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.318353931 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.316044934 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.318664486 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.318281089 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.318409033 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.311039831 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.311328248 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.311522814 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.314089519 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.32055388 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.313452733 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.323494854 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.31848059 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.317826224 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.318967248 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.316811376 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.322447076 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.330108748 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.318362219 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.309441019 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.321607585 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.317635679 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.31830783 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.318650027 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.310759736 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.321916107 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.318995183 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.310792566 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.319137951 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.321236914 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.310732928 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.321760069 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.318783677 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.319648447 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.320825421 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.315466627 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.326803704 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.320191354 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.323225069 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.332570126 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.320443524 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.313138096 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.323725516 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.320672294 seconds)
  done (took 64.474700998 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.319790736 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.321649465 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.321311234 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.320784413 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.32062712 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.321674448 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.320659746 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.320963649 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.31972911 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.32163222 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.320187486 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.320665979 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.32179596 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.32003343 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.320698453 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.320390197 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.320217763 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.321481614 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.320971542 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.32117987 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.320099122 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.320979089 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.320972826 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.321485944 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.321100114 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.320814312 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.321457906 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.320371837 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.322190164 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.320898438 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.322214657 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.321350893 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.322631045 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.320951856 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.32254532 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.32261882 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.322540975 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.320788362 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.322475946 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.321904996 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.32305733 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.322738177 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.322197267 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.323554628 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.322807203 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.323449327 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.32190674 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.323736495 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.322718532 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.323906536 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.323294272 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.323170941 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.322921229 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.323897488 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.324473389 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.324088255 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.323828928 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.323300351 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.323537435 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.323311765 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.323526871 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.323865911 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.322499031 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.324821702 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.324191058 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.32396849 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.323461649 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.323972379 seconds)
  done (took 91.100124808 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.325558443 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.324847453 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.324903272 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.323946465 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.325592581 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.326156753 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.325482586 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.32545015 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.325428248 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.325123364 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.325009307 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.32391092 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.325075453 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.325183464 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.326013298 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.325990238 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.325748871 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.324919159 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.325424074 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327381763 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.325834393 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.324299413 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.32687662 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.325676216 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.325573937 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.327413026 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.325759438 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.326613827 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.326268286 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.327372316 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.326564725 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.327862406 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.327629323 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.326425711 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.32761808 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.327808129 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.326632619 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327212345 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.326734727 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.327875204 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.325206516 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.329123411 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.327668317 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.327503773 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.327376786 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.32642736 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.328768692 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.327484733 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.326959655 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.327256462 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.330092741 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.32634603 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.324973597 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.32583859 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.327400562 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.326237413 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32581228 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.325612418 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328839324 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.326217616 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.325982972 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.328279207 seconds)
  done (took 83.43644536 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.326690368 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.325931698 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.326402629 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.326365921 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.325345801 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.326593547 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.325467907 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.327481645 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.327632459 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.32722571 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330231043 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325734789 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328235016 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327301995 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.325777865 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326597331 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325441465 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.32686584 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327295108 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.324916271 seconds)
  done (took 27.732587285 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.326277321 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.325388228 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.326414895 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.325081209 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.328917448 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.324450919 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.325797509 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325844461 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325451231 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326019857 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.326003752 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.326277466 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326614146 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.326403514 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.327558478 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.325996778 seconds)
  done (took 22.418030776 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.326509282 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.326219115 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.325576313 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.326463974 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.326196488 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.32593381 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.326208378 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.325183509 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.32456771 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.326984493 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.327429187 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.325882277 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.327606659 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.327323416 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.327085988 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.325790608 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.325586515 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.32622043 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.326093365 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.325748007 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.327384982 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.325201728 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.326953188 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.327795719 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.327257543 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.32744277 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.325807814 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.32672317 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.325889472 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.328229411 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.327535174 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.326049121 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.326679038 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.328136094 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.327556352 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.325936933 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.326552127 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.32761796 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.327286781 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.327313101 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.327009886 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.326517427 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.328447907 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.326513798 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.327525052 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.327263455 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.328070259 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.328798989 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.326539757 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.328864404 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.329117177 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.328109156 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.329175846 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.328679421 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.326025191 seconds)
  done (took 74.18169749 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328650398 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.328961601 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.326539272 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.328667489 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.329600838 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.328841928 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.328634743 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.329801588 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328744206 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.328523948 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.328127559 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.328780694 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327996155 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.32985185 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.32778261 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.328628117 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.330116033 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.330558451 seconds)
  done (took 25.117858408 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.330498712 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.3294186 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.330523372 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.330453661 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.329802219 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.330116857 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.329086333 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.329124237 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33046687 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.330209687 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329328137 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.33011205 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329750948 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.328689411 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.331684228 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329882997 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.331584421 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330748692 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.329988907 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329261072 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331899478 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330384367 seconds)
  done (took 30.464762706 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.320424335 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.321986809 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.320884067 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.334982196 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.331116031 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.321619674 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.32014155 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.321574804 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.337502728 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.34590225 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.34161713 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.330682397 seconds)
  done (took 17.150379975 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330389068 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331495876 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.332549812 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332125066 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332226836 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332313918 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332725487 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33239795 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333231741 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33215957 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331084623 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332844181 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333899829 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331423206 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332204299 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330867838 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332419765 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331729821 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332682517 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332393755 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332372378 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331490106 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332564501 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33346629 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331634253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332432331 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333735093 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333962185 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333026524 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33308349 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3334758 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333756823 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333853368 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333725431 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33235718 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334079357 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333997073 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333289896 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333968021 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332550832 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.335058758 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334696324 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.333290844 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334745946 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335258017 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335736482 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335778625 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335218832 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.334488405 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334032208 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335725923 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.335313969 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335622855 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334925291 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336005251 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336033245 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.335445492 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336625613 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335533302 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335644019 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334571922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335826274 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335972768 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335380137 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336378872 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336518459 seconds)
  done (took 89.231126322 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336164622 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.336554938 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335924704 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336097773 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336674958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335965644 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336425168 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336243725 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334880562 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.334706092 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336880951 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.334101712 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335687242 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337315614 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33563373 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337470852 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335979342 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337297783 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337163637 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337319893 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337251182 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.335944347 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336322105 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33571632 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337938663 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336989994 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336219764 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337079175 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337970679 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336357875 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336866536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336983013 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338643715 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.336611888 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33938284 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337864709 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336950458 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.335697446 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338152253 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337523814 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336711102 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.336882251 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337299234 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339741048 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337111079 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337258931 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337524372 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337677911 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337130195 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336580824 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337407617 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337465608 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337496475 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336995813 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337082647 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.336935089 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337453461 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337552332 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337616918 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336939092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33795436 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.336032411 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33865324 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338653099 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337330092 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337552878 seconds)
  done (took 89.4495502 seconds)
done (took 1811.094293327 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.493161516 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.449719867 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.326613351 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.335197545 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.328590975 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.324937791 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.338949804 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.328045636 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.328283564 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.328420975 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.328146428 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.517950956 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.36148128 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.329081306 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.32868135 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.424000116 seconds)
  done (took 27.079929183 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.355156013 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.334663775 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.449661673 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.33818436 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.356211215 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.521428684 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.396271772 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.337556495 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.504016894 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.355782702 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.335732514 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.354135689 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.333418429 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.332501485 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.351331432 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.521680338 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.596691275 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.335624504 seconds)
  done (took 29.319375891 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.78707259 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.356236849 seconds)
  done (took 5.351179395 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.353100788 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.33254234 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.334489916 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.332522287 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.325643068 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.340546617 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.332657979 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.329177662 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.351009388 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.458641054 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.334432885 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.344525055 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.332597204 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.331488671 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.341713329 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.37957177 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.497603365 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.343258747 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.340908021 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.338356727 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.333262363 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.426936647 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.37407481 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.345845489 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.457560616 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.32894164 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.335649899 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.339930198 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.44721993 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.343086308 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.332234513 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.332761609 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.335006888 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.271175258 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.878091332 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.337316097 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.356528699 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.340076392 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.340468205 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.48431224 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.334774514 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.337933721 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.34048247 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.873216648 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.436793606 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.449304949 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.33209515 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.33923264 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.333814081 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.398060605 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.335186537 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.335186553 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.392323135 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.121436877 seconds)
  done (took 85.387878735 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.326295329 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.326100556 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.510682245 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.349068236 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.340193896 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.329653699 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.332621123 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.613571307 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.356675665 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329054131 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.647124144 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.964280888 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.33219799 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.394104686 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.362129002 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.384981453 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.329400016 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.349391415 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.32746164 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.327779435 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.902697502 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332457646 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.329969901 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.419830128 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.369229242 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.866519422 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.330533915 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.34830113 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.329842132 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.330176517 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.920671892 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.337426413 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.376323795 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.332349791 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.619409521 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.725966747 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679450559 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.335998365 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.371152466 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.330836299 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.354703106 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.858163311 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.701821464 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.337153207 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.330155764 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.856262248 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.328950842 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.335555265 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.332454479 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.600465213 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.329375535 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.329858936 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.341935421 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.329619683 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.329977596 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.394848757 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.403190478 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.869574462 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33000255 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.327394466 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.340629943 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.329511726 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.330470956 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.331718662 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.331749255 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.704036585 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.600484746 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.335861929 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.703660169 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.909908828 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.330393961 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.000643644 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.344932895 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.347942149 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.377331456 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331884454 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.332869177 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.867202297 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.368756845 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.330095147 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.680576633 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.335850205 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.637368174 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.353441666 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.333308798 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.923639009 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.337545429 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.369559665 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.332465336 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.329892857 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.336014362 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.338143778 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.623409676 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.392823672 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.331908114 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.332507778 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.365052463 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331508334 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.347400221 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.333284783 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.982539097 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.335022246 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.333170734 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.351260282 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334325844 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.331372128 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.332804873 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.335690879 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.619797835 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.333526674 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.336025611 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.333618588 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.331009237 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.340937348 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.426257937 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.34087382 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.641238718 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.333630978 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331994189 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.331578883 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.344521495 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.351947073 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.335143798 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.336166946 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.332492819 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.633416 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.350678664 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.34970227 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334868903 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332797725 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.337204145 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.355411257 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.384809459 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.336171792 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.188809841 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333534306 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.354605225 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.333649094 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.333206482 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331519784 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.334031693 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.335651826 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.631229122 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.620892891 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.59010429 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.334416602 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.332880658 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.168274169 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.337994042 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.516148237 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.352747935 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.332522151 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.614436236 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.569066488 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.335012884 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.332709651 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.336613695 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.611909989 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.333994787 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.669134274 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.942011606 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.332348808 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.342495721 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.17787491 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.147556306 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.338411835 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.332653507 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.628408883 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.34802272 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.333537957 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.333983457 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.334231756 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.332732481 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.337934696 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.333813368 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.333957862 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.332191644 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.624985144 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.52655354 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.347598073 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.341463615 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.857165363 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.355480149 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33248648 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.340225167 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.336786949 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.331588697 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.392410587 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.335972321 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.343982696 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.334558397 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.340275612 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.883262097 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.332635915 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.347954237 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.525926696 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091668488 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.332116915 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.332446762 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.332448072 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.387394872 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.886935342 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.380432541 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.631364958 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.339154697 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.373670089 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.332625301 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.340469274 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.889872566 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.3343865 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.350074057 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.065617548 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.330617484 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.812306719 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.33270907 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.333958665 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.990309235 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.333325296 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.333672428 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.345000273 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332926635 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.667944807 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.33489573 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.364984708 seconds)
  done (took 499.102291945 seconds)
done (took 647.449548084 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.333789798 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.33403919 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.318070299 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.339457511 seconds)
  done (took 10.541861374 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.352951064 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.341708802 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.349879385 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.340857606 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.351770702 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.340406559 seconds)
  done (took 9.292915836 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.335499877 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.335676912 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.340015145 seconds)
  done (took 8.228612495 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.556857962 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.36337527 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.685395288 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.344660357 seconds)
  done (took 9.167095632 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.351178101 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.350641295 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.351605618 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.352469431 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.352707966 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.353686971 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.353768942 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.352358407 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.353245762 seconds)
  done (took 13.387083915 seconds)
done (took 51.835415162 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.377898261 seconds)
    (2/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.448472067 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.48662353 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.60434701 seconds)
    (5/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.418215881 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.483413695 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.40359102 seconds)
    (8/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.14712454 seconds)
    (9/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.417314172 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.372235888 seconds)
    (11/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.395460212 seconds)
    (12/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.317886882 seconds)
    (13/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.1709342 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.458234126 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.579106686 seconds)
    (16/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.557316491 seconds)
    (17/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.502650292 seconds)
    (18/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.405802274 seconds)
    (19/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.412093314 seconds)
    (20/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.364667388 seconds)
    (21/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.482071965 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.488630877 seconds)
    (23/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.410923285 seconds)
    (24/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.369686145 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.418773272 seconds)
    (26/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.503063628 seconds)
    (27/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.31673395 seconds)
    (28/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.467642811 seconds)
    (29/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.380068888 seconds)
    (30/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.368145195 seconds)
    (31/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.339080257 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.48515468 seconds)
    (33/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.343081674 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.46412728 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.441734923 seconds)
    (36/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.407860341 seconds)
    (37/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.302251822 seconds)
    (38/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.521793742 seconds)
    (39/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374058322 seconds)
    (40/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.12958417 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.44668842 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.420356407 seconds)
    (43/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.519229736 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.412668841 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.325644318 seconds)
    (46/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.184128276 seconds)
    (47/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.374667223 seconds)
    (48/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.484928305 seconds)
    (49/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.578736459 seconds)
    (50/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.318126407 seconds)
    (51/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.404615722 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.338443711 seconds)
    (53/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.326604405 seconds)
    (54/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.416196578 seconds)
    (55/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.31936082 seconds)
    (56/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.34574359 seconds)
    (57/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.551469613 seconds)
    (58/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.324518423 seconds)
    (59/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.562819494 seconds)
    (60/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.228929995 seconds)
    (61/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.324783082 seconds)
    (62/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.326357407 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.325022579 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.372677584 seconds)
    (65/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.554850976 seconds)
    (66/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.376575917 seconds)
    (67/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.081371359 seconds)
    (68/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.045060032 seconds)
    (69/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.457431166 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.434712356 seconds)
    (71/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.321084251 seconds)
    (72/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.162383738 seconds)
    (73/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.465460133 seconds)
    (74/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.590411273 seconds)
    (75/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17784877 seconds)
    (76/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.374915912 seconds)
    (77/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.321454912 seconds)
    (78/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.24163565 seconds)
    (79/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.102999142 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.42643692 seconds)
    (81/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.457014091 seconds)
    (82/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.532108334 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.452045145 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.429043351 seconds)
    (85/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.353049167 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.473515065 seconds)
    (87/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.48512469 seconds)
    (88/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.595938578 seconds)
    (89/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.325808997 seconds)
    (90/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.326423018 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.381577314 seconds)
    (92/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.42437726 seconds)
    (93/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.413107704 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.34352502 seconds)
    (95/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.340604816 seconds)
    (96/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.532795751 seconds)
    (97/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.526127253 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.465126662 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.37606705 seconds)
    (100/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.1926951 seconds)
    (101/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.493697654 seconds)
    (102/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.383818021 seconds)
    (103/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.442042529 seconds)
    (104/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.327459107 seconds)
    (105/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.322944086 seconds)
    (106/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.327873881 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.424504655 seconds)
    (108/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.323580712 seconds)
    (109/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.366157237 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.401751037 seconds)
    (111/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.471344444 seconds)
    (112/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.45431701 seconds)
    (113/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.413249256 seconds)
    (114/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.523240225 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.35324474 seconds)
    (116/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.324843045 seconds)
    (117/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.33702341 seconds)
    (118/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.498618589 seconds)
    (119/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.323459567 seconds)
    (120/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.153088672 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.385687155 seconds)
    (122/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.695052026 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.197445231 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.504626258 seconds)
    (125/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.446750585 seconds)
    (126/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.196320917 seconds)
    (127/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.428441542 seconds)
    (128/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.474606707 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.461129264 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.357694685 seconds)
    (131/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.461995994 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.498695817 seconds)
    (133/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.47902071 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.466130516 seconds)
    (135/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.38119586 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.47572564 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.43763705 seconds)
    (138/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.463182948 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.102559701 seconds)
    (140/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.085280391 seconds)
    (141/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.46126934 seconds)
    (142/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.131279722 seconds)
    (143/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.325828082 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.413182345 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.451290944 seconds)
    (146/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.533214899 seconds)
    (147/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.596699465 seconds)
    (148/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.390263743 seconds)
    (149/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.383397568 seconds)
    (150/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.374540392 seconds)
    (151/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.329260882 seconds)
    (152/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.380379154 seconds)
    (153/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.495768999 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.597580993 seconds)
    (155/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.527929651 seconds)
    (156/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.454427428 seconds)
    (157/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.349390476 seconds)
    (158/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.333011908 seconds)
    (159/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.334799886 seconds)
    (160/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.335883939 seconds)
    (161/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.32225131 seconds)
    (162/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.439475214 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.327639589 seconds)
    (164/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.358560258 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.419162636 seconds)
    (166/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.51661319 seconds)
    (167/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.377749767 seconds)
    (168/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.497210625 seconds)
    (169/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.424446367 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.385971028 seconds)
    (171/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.369066393 seconds)
    (172/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.04011283 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.461301988 seconds)
    (174/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.326612717 seconds)
    (175/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.033412726 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.592897019 seconds)
    (177/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.3285817 seconds)
    (178/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.598539785 seconds)
    (179/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.055921123 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.447915711 seconds)
    (181/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.169687712 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.548025355 seconds)
    (183/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.328716468 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.446672048 seconds)
    (185/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.327465681 seconds)
    (186/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.451184156 seconds)
    (187/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.445923697 seconds)
    (188/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.42883473 seconds)
    (189/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.33017327 seconds)
    (190/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.336466431 seconds)
    (191/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.413927664 seconds)
    (192/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.483994307 seconds)
  done (took 342.261000859 seconds)
done (took 343.478835373 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378072013 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.443768323 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.35626388 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.356940156 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358198653 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.3483239 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.395184689 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.357697211 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.371900981 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.371989328 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.350752153 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.382129052 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.373252799 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.369434052 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.393451666 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.357857161 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357609602 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.36943852 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.373295366 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.376494393 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359801169 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359064482 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.386252638 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.358261208 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368721621 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367643526 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.364798015 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.361257696 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.367045803 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.372783673 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.351968031 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.367605184 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375086514 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.3724477 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36152892 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.37019245 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362471601 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.445584131 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.380711917 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.371016744 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.368453443 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.378154765 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.366097608 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.366297349 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.370790834 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.387148823 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370092227 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.375415572 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.363123915 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.352255255 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385879679 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.37356425 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.37147816 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.354829531 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.363111056 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.377047386 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.371289017 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381284919 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.36772352 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363561617 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394356672 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382201329 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.371583427 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370994935 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.369925696 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.377446747 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.369780658 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.378138914 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.369271456 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362803175 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36336422 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.370918875 seconds)
done (took 107.986222488 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.486734237 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.358936701 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.520309264 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.37135989 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.527133525 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.484461607 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.370911418 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.370094044 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.370626556 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.16408433 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.371968278 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.369565318 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.36086963 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.371326197 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.48120316 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.371208191 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.37154592 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.064043371 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.370819914 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.502677455 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.362571033 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.37275582 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.371240509 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.166221445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.361004646 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.356300047 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.503906953 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.372135822 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.06666948 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.356895154 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.360560603 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.067714292 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.505416771 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.391591441 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.382264676 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.38069868 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.528021098 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.375278341 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.490164819 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.491050877 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.522260726 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.409536626 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.356997662 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.363821126 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.375310276 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.374464554 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.371876306 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.400520152 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.360746676 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.372482262 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.066265235 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.381660458 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.382215781 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.373665774 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.373750342 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.394209319 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.374278211 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.374228217 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.507855641 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.373320654 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.491219362 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.169143372 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.168603408 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.374435356 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.36206425 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.37461224 seconds)
  done (took 110.606268054 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.434626701 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.440865981 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.475973215 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.366742307 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.416339439 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.479133111 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.366529162 seconds)
  done (took 11.216194557 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.370642328 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.374408893 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.41311636 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.420037852 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.373565644 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.538722681 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375214131 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.377644864 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.374677569 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.416746464 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.377603104 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376367922 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.385258022 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.36550725 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.413914168 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.378787859 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.484520342 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.368670048 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.376167207 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.518866541 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374913553 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.385864154 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.417382283 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.376746535 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.380250489 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.374538849 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.150770804 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.377716984 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377145043 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.376448836 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377800623 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.432336703 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.37644736 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.368437374 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377871625 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.481684929 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.377553094 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377684313 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.377451365 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.371101683 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.377753862 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.378412622 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.379058125 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.377347028 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.377440693 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.392072146 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.378109291 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.377844926 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.378861488 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378149108 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.423267257 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.377000831 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.376889033 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.377165582 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.421139774 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.387011757 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.377167403 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.380302952 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378176516 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37763529 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.520071753 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.415843381 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.376565804 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416231927 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37917311 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386233099 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.379464301 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.377621292 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45749159 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.377967992 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.419590042 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.376195129 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.553504019 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.392513566 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379010031 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.371545745 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.371856406 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378479091 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.36849106 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.375653095 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.377234247 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.368667292 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.37548835 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376041695 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377907255 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.530523404 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476165923 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.37830968 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.385248524 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.375926241 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.37830394 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.421103653 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.38232453 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.378585213 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419715918 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.489614448 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.420959352 seconds)
  done (took 141.487196032 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.382626721 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.382427559 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.375236623 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.396186457 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.371044009 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370001413 seconds)
  done (took 9.518439082 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.373098511 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.38224033 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.380989797 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.379262979 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.379937049 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.381719923 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.380737994 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371989575 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.383432092 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.38087649 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.383417285 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.38270279 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.381185313 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.37985957 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.380985648 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.382267509 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.381292467 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37937646 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.37962622 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381458628 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.367523713 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.380877174 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381478338 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.374267747 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.384558636 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.380941065 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.397234712 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.381202343 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.380784394 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379342875 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.385429619 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.383902683 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.373393973 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.377697591 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.38324941 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.374453001 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385777149 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.386481064 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37881079 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.381934887 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.384664651 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381182864 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.382887987 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.384746415 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.375608865 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.380820112 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.386810981 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397353178 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.382297526 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.384538112 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.384423925 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.380857256 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.387653641 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.38446494 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.375797688 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378890563 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.385887668 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.383176989 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.381835168 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.376099768 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.384158403 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.38401623 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.374843733 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.385343745 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.381434618 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.38621861 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.378131068 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.386360642 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382323285 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.381930525 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.384476658 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.38133365 seconds)
  done (took 101.720683661 seconds)
done (took 375.782902886 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.585877824 seconds)
  done (took 3.828867937 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.411186155 seconds)
  done (took 3.657143097 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.348623332 seconds)
  done (took 22.596303099 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.388982634 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.394978937 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.384006882 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.375215959 seconds)
  done (took 10.78532796 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.756917819 seconds)
  done (took 4.000850538 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.380752245 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.384652809 seconds)
  done (took 6.010530045 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.563633953 seconds)
  done (took 3.807662597 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.689429011 seconds)
  done (took 3.933332551 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.37704505 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.394178034 seconds)
  done (took 6.023189867 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.347872887 seconds)
  done (took 3.592924254 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.831230213 seconds)
  done (took 21.076177665 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.391209914 seconds)
  done (took 3.638361159 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.400408157 seconds)
  done (took 3.643607195 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.865967396 seconds)
  done (took 6.109857358 seconds)
done (took 103.948641737 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.368251151 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.369584942 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.370822365 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.367553536 seconds)
  done (took 10.720699554 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.4464826 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.446088056 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.456196189 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.441179777 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.443133625 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.450055613 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.408771135 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.409927897 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.438782368 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.43633126 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.450382576 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.434890997 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.451823384 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.409661583 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.435236793 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.450160823 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.438741756 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.455685003 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.407984031 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.441105341 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.385474729 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.441877561 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.436227551 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.385022643 seconds)
  done (took 35.645938938 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.872369189 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.446071978 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.530066186 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.426776529 seconds)
  done (took 7.519538769 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.488407054 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.489351937 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.508124421 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.543734772 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.59104213 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.503634454 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408317474 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.405420329 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.394209163 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.489993714 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.576116329 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.488760871 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.703633826 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.386245818 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.703561405 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.385838939 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.385923604 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.488451234 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.539184211 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.567045708 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.38726164 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.490234723 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.493529168 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.488946061 seconds)
  done (took 37.152010178 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.394625713 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.403659205 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.388049329 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.402467169 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.387192516 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.386995328 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.389196928 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.393443508 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.386917384 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.385436497 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.387850001 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.402299026 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.386153779 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.387565201 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.394898901 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.387248836 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.38949846 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.393722039 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.397243096 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.387443273 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.387607354 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.393293957 seconds)
  done (took 31.860592754 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.371452591 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.372178039 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.723036055 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.628041723 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.373302551 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.371715268 seconds)
  done (took 14.087077414 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.442258108 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.584708464 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.38316096 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.711825268 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.796040177 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.380186608 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.380407319 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.61544115 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.902978109 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.89510082 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.434985778 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.44789156 seconds)
  done (took 20.223864194 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.382592085 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.377168395 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.380746745 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.393386044 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.432747823 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.384024418 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.385567072 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.373905783 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.435279387 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.43397483 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.385009021 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.431129552 seconds)
  done (took 22.047128914 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462012385 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383069034 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383385759 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455449991 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387551469 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38387718 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410018771 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.093416331 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.392848419 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659927197 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393188564 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46893278 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630027342 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387805717 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389387292 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.343631876 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610813896 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844915674 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389765382 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388372548 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42020903 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383800906 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38865036 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.587023595 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390679463 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38486594 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.64563456 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384151023 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651961511 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628712448 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630093935 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387213576 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659328837 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013569999 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495338723 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580746726 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387154102 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387792175 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.37688306 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.390966951 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392087394 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3898922 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62782441 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39016067 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386204043 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385659896 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109146598 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.399064607 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.385753212 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387601363 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631640604 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469804959 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.392283184 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386087344 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4386589 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392088 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.392336375 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513718562 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027394436 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388368003 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398379041 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.392360425 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386525468 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418162414 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009876258 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.39488951 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.39176583 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396129137 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387086929 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397668063 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414856525 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38674728 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.406718434 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388092113 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137714545 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396608937 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393665139 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902406606 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389257153 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.394062826 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.612028169 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387540398 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388113248 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.387712177 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388836737 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092006247 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39523394 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.358128724 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450609195 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093389239 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589370034 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411921602 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418245429 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610163058 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.357823214 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389890374 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.389047639 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396288863 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410150103 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.097659295 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392587618 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.39523906 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635673463 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.599771301 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401842768 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.361417459 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850437857 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406433689 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.416617392 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401494595 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.589988916 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.988143315 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639342229 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391693995 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42861317 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3893098 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148726678 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402008682 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.400291623 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394854779 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668185449 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.190763772 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391523206 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462636678 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389385411 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390536327 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397158327 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396455838 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390760807 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.565220324 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40618948 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63847222 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.395549281 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389938294 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.400560829 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405868754 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.397916634 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610598264 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401105563 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669757135 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391247884 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392545885 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392132022 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.607894706 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.404480135 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.399299485 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730746322 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403067586 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406637036 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642396477 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425318158 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503654434 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422651337 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.399580183 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644317497 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.397516005 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.397567488 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402236108 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39787568 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394543323 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.401402432 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405780671 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983933077 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371689193 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400753993 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394197124 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.408623187 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466958661 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398157029 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589599959 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.397874952 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390140856 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.401061097 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.392947593 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614403231 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637144651 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.395813182 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573667549 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.852592917 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992699612 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410707512 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.393688814 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.394841037 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.392586601 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396020858 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393973026 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398952307 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590570059 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650691954 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40890171 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.993747133 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397841535 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395240179 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.406477905 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639174829 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.404203382 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394205718 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.400601575 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399016949 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414628094 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64345768 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616293529 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.40966875 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394648429 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.913194444 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403970731 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398001822 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395591546 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422273893 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395411639 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257360118 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738231993 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399986913 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640670814 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398276382 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.41798334 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.3953796 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40865867 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409482812 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.405130289 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40424827 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.593546596 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416310342 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40472511 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038210891 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155065522 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935973085 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401198718 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.412086893 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403424442 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115461916 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400940584 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398588859 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635490784 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107723528 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402200665 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857061951 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.41381102 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129862939 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640120522 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628829322 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39587729 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.409199673 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650160027 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616978849 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424285293 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398021206 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404334039 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.368302536 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943218907 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41013888 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583526773 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115055317 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411331601 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405142218 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.451631715 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.40882039 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77397641 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403368005 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398517751 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399782125 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40310702 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22290469 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406468817 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399178571 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027559532 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404773693 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.864478193 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401995827 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.59574579 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.648810543 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.626180821 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.406590095 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.410832989 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.64321653 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644605507 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408576597 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404509126 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952103126 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.255257832 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.408340826 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403366128 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158064339 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417084088 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673267813 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.41797278 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.409522139 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411058402 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401575339 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400000012 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.401998177 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408449694 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374371696 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85719214 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.395659491 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39719442 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418935355 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405787283 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64748068 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.417367371 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.995301076 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632994046 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401021316 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434374896 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.407216108 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41648299 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.377582972 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.400309235 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400525452 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467258043 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625961067 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400355034 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.371707749 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425681611 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617273713 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401341876 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402241756 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616430549 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.40927648 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.410656187 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161827261 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43255299 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403185998 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40974423 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405037177 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441860422 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475981207 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600997747 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.64953548 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649172847 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78078334 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42072071 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404675083 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.418760248 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483440615 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402068425 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.412070056 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.408342008 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996114291 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162470357 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010391966 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654735495 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407588174 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402439643 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403781571 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644496074 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404569175 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68046301 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403687977 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.401373962 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427120931 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415282546 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406314713 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620202455 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678780785 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404031334 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40319425 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425390956 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.406509109 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65747936 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.618971682 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865537199 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920368618 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408294444 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405728574 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.100292183 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681732005 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404585833 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408086681 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40723616 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.42409507 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409787285 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.41530995 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405606167 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632692246 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648410309 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045403856 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.658056494 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.591439469 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.323197014 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405718722 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.658661932 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243351704 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604554605 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007700876 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.103997778 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660206573 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481641555 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606073199 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.40886971 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644645264 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.409768467 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406743555 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407205533 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406920516 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.408402366 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.649837438 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014824253 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665319311 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.412536033 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.410583083 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437417021 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.604507304 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635338004 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113286252 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632741849 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655360328 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419271104 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409574532 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022811916 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663571355 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416484388 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.415889469 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615426991 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415857689 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443154789 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.283514923 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.408064794 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926998143 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.621326328 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428885339 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41365232 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.117401595 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018828844 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.420762205 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872578165 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412084481 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409702312 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704873625 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.416804546 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417466105 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696502423 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.415406342 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420824291 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615377605 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.006735458 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155042067 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.421332615 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442588323 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.418945036 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412092554 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433846511 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416062575 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420994744 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.792057542 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416730413 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413071095 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424753865 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.41033242 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426053777 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.414848699 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412749338 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.419406674 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.4126356 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.40254967 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430619108 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537435197 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943088966 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416240254 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.028339509 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.74774796 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658339273 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416320469 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.388289398 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.420132285 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413085936 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411483834 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412898398 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411854938 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932602939 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.421331988 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.665092966 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425941925 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.623285804 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624586818 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413353552 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619772594 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43146301 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438060384 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.382332919 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41257584 seconds)
  done (took 991.9755084 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.448011461 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.416440675 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.410418737 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.436483156 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.419112746 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.492379393 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.46185716 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.466617763 seconds)
  done (took 20.826308253 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.418494488 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.413196585 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.418669403 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.416370122 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.410038213 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.879309194 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.416609646 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.416156015 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.42826314 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.415202779 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.414601256 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.031308597 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.421231905 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.415065298 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.417460517 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.417718273 seconds)
  done (took 33.030152287 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.03203726 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.755156859 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.819950155 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.419994342 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.423210192 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.399836467 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.506056716 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.407444214 seconds)
  done (took 26.041826795 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.406325357 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.407234587 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.407116825 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.406743926 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.407088821 seconds)
  done (took 8.301502547 seconds)
done (took 1260.679780737 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.407203234 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.408012523 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.408442116 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.407200849 seconds)
  done (took 6.898203254 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.371390306 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.373138132 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.375840419 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.388106356 seconds)
  done (took 9.775666835 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.058687172 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.90084278 seconds)
  done (took 5.224105981 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.94735954 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.947205449 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.943319385 seconds)
  done (took 7.105138312 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.683902045 seconds)
  done (took 2.951632526 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.393010963 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.412059986 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.134662597 seconds)
  done (took 8.207891346 seconds)
done (took 41.431545177 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.397853991 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.159676564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.54874656 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.396298354 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.554250152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.546989387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.64359681 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.394399468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.394244762 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393699425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.398314345 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.557627448 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.632345368 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.156078353 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.632929504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.155251672 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.558061726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405166909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.394427037 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.393778228 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.644025919 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.392854312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.395533106 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.423734172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.562596561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.540602281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.395721799 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.159985897 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.394623903 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405389944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.547200948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.395836181 seconds)
  done (took 83.240105057 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.400877012 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.40154174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.405711045 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.397663362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.416397625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.404079913 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.397250954 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.397202652 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.397470177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.395969895 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.412370519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.416841961 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.398838113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.411059022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.397627125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.410122079 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.407370192 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.407979018 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395929963 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.412071607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.397719754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.394953492 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417877231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39516215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.399634834 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.412798615 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.397037176 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.397787907 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.396371023 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.397041238 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.394813082 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414384316 seconds)
  done (took 78.170288861 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.396084001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.421258121 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.394538568 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.400792708 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.39520335 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.396301796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.395202717 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.397265991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396793238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.397468741 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.397491512 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.396952813 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.400043915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.412624533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.412701289 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.411614575 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.411219625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.396661667 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.408845771 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.396688665 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.399629268 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.395825609 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.395570987 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.397400014 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.409565507 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.396653278 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.397571919 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.396424529 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.397383566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.397251112 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.401853813 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.39917881 seconds)
  done (took 78.089842976 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.635431231 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.411724303 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.415647262 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.407393243 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.416992098 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.412536067 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.406654156 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.646047515 seconds)
  done (took 15.023235668 seconds)
done (took 255.79306022 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.417545832 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.88195896 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.43896911 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.416480303 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.428873734 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.433489428 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.627675693 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.438623304 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.624262008 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.429661125 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.441612947 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.408132048 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.170184768 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.565086341 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.208972644 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.320012421 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.25117241 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.404118553 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.944810129 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.685160503 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.437195253 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.399832219 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.211647735 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.269207306 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.387935264 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.482273781 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.504664192 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.635323811 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.564041149 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.485398322 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.893342153 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.426783981 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.419908714 seconds)
  done (took 64.925682391 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.405876835 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.417805272 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.416359575 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.415938646 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.41784288 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.414460548 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.405474907 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.414919747 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.418905859 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.41558413 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.418094383 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.417839516 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.418717697 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.416076942 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.414167287 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.390552983 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.406523056 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.418216679 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.408172208 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.389970506 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.417525737 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.418179081 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.417711585 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.418115718 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.417604114 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.416799686 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.417084597 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.416336805 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.419613887 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.417104953 seconds)
  done (took 43.691860054 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.418801433 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.94499042 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.1180229 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.413277153 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.40823216 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.413696494 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.682265968 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.418794193 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.414590135 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.413960213 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.852075002 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.423217969 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.443416176 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.123882274 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.414728989 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.419843437 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.418934206 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.409708878 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.956429653 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.420317392 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.683657103 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.421584168 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.684571412 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.423610404 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.413129899 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.411180423 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.415858398 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.218305222 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.43207326 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.855149589 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.150218353 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.68354139 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.148197409 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.175741041 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.149663246 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.426562061 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.421122672 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.858768774 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.411826356 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.411349051 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.678860329 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.410698248 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.131528705 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.088803975 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.429541478 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420153996 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.244330133 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.856161955 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.642216257 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.416741184 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.166648057 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.419759876 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.42153357 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.414261128 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.641958925 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.41400984 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.410691595 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.232650519 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.416223321 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.681403286 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.421073805 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.414652312 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.951913878 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.413633694 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.947717187 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.414538066 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.421058721 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.413605958 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.134300593 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.416172316 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.110721811 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.429443112 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.421819249 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.859289035 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.952091767 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.293635366 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.41719103 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.958877614 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.179292839 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.69939049 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.417967289 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.194971554 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.699440527 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.41880021 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.426429719 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.425463334 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.423956614 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.487155046 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.682923797 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.031951919 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.102688349 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.239085959 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.687716595 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.423568513 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.414962666 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.236579627 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.422779865 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.421714317 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.129027612 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.103660256 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.432654913 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.42292318 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.091322828 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.434060828 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.689429618 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.420188269 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.180212724 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.417403274 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.486330124 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.423669533 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.421977835 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.420586242 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.687618521 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.419605983 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.4252892 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.086753936 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.886546283 seconds)
  done (took 196.151432575 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.412024572 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.409482914 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.409766624 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.409318653 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.410758681 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.417609418 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.411135132 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.411215125 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.414922983 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.410564561 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.410400387 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.420500909 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.415543842 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.412096801 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.412370568 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.413502968 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.409759713 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.416161678 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.412923476 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.411727521 seconds)
  done (took 45.532897129 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.42656259 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.948430043 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.92310749 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.428997529 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.426868749 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.417335137 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.470773254 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.427093764 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.426641707 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.698449095 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.581869936 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.431906342 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.425694712 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.426168881 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.919888431 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.400697443 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.699733443 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.946128018 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.427772292 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.94535276 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.401372259 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.426766958 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.417793284 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.944533861 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.712791557 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.689642448 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.473586747 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.949422474 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.428869008 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.429158863 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.946034128 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.428983551 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.41940907 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.938718568 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.428383377 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.441635236 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.429337652 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.475643787 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.475046878 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.706673399 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.952674151 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.702718212 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.440930047 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.575950882 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.431079881 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.400904324 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.961944048 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.430550304 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.401695888 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.430010023 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.436080366 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.937952142 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.424190493 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.938398113 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.430762994 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.429394563 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.951658678 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.938258857 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.925540521 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.584217531 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.420971961 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.691194266 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.429962131 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.961934175 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.432408332 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.430117449 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.430717878 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.585683597 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.954994171 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.690960573 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.71158524 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.7103387 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.430783347 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.48688483 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.431672723 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.70828652 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.489507811 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.794481588 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.71338999 seconds)
  done (took 127.880118582 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.690989604 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.536803052 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.78436398 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.985930466 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.909407559 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.56045377 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.532484923 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.663503463 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.431293553 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.538680522 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.044090691 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.511151456 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.158628145 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.485934667 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.527207357 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.540203914 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.806843362 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.357262802 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.035859153 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.030872227 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.44080239 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.523964587 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.923971443 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.627245135 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.418141341 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.990542982 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.321844617 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.92827684 seconds)
  done (took 53.59391047 seconds)
done (took 533.050457315 seconds)
SAVING RESULT...
DONE!
