cset: moving following pidspec: 24457
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.244113047 seconds)
loading group "string"... done (took 0.470335559 seconds)
loading group "linalg"... done (took 7.639291056 seconds)
loading group "parallel"... done (took 0.173520003 seconds)
loading group "find"... done (took 1.191329888 seconds)
loading group "tuple"... done (took 2.114676349 seconds)
loading group "dates"... done (took 1.344380638 seconds)
loading group "micro"... done (took 0.246046653 seconds)
loading group "io"... done (took 0.656922904 seconds)
loading group "scalar"... done (took 42.132144726 seconds)
loading group "sparse"... done (took 12.694101261 seconds)
loading group "broadcast"... done (took 1.125892048 seconds)
loading group "union"... done (took 14.474299423 seconds)
loading group "simd"... done (took 5.028900406 seconds)
loading group "random"... done (took 10.061101493 seconds)
loading group "problem"... done (took 1.981173232 seconds)
loading group "array"... done (took 22.488979235 seconds)
loading group "misc"... done (took 1.421191498 seconds)
loading group "sort"... done (took 3.585623605 seconds)
loading group "collection"... done (took 19.513280233 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.523416258 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141335227 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135776048 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.150706614 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20812604 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144056683 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159637049 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.1160709 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.986053166 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.187426916 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.158305341 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.516957102 seconds)
done (took 5.186014961 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.227077788 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096208565 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104968899 seconds)
  done (took 0.879882305 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078837514 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.148506749 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095938296 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.08071396 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097140332 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080269043 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096698547 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079525338 seconds)
  done (took 1.364002932 seconds)
done (took 3.243620521 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.737712345 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.289699341 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206029671 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466574648 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.200801257 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216819792 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673826046 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.355155717 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253501756 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100147709 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144496492 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389949669 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135984348 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687278691 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089334125 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123323905 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177588359 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.455051503 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082854119 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111424647 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116864351 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141261723 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132112808 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093761818 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185097397 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081651798 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194008012 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108083457 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08134741 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290614299 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201849485 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.713188987 seconds)
  done (took 10.96234283 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112862894 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136881779 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099840602 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140619698 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136688226 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.10209654 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087925625 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098207079 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12409803 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180029836 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116796518 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138527108 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097407449 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084474352 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117699368 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246962401 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122248155 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105481008 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102836295 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106259657 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121553502 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115676493 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110238703 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094043808 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168769634 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.220736449 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111003358 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125986852 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097123764 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113732222 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144527571 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143768894 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097724767 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080242596 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171423527 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126526077 seconds)
  done (took 5.198716597 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187533791 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11998638 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167908716 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163762668 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141213939 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158962951 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112140907 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245454216 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.110514224 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.12819091 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162433957 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14093814 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114506339 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080554609 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098739654 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095497161 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.670692314 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122648891 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154632344 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114531558 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102903574 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084404712 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363297795 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103760427 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079772673 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098757678 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065146075 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158670018 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099089046 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.146258361 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121579798 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086474208 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135409497 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207259705 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109737768 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134868788 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096028759 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080573944 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179131584 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105648214 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.104109684 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098378039 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12088393 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134185563 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118072486 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09941236 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096384501 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20498815 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09673483 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080233039 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114487695 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.945584567 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182133292 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091809952 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098739491 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323153063 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097659195 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098370703 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077525553 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273360578 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185775222 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097914064 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079614477 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097462226 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081013789 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.427605837 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080374349 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.778018826 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089182197 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109538221 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084585145 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097328735 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103545372 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087429582 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11453762 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079718446 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098712454 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079301267 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096484691 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081847403 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108410236 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10192527 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080211748 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164946499 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079104248 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095515794 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098429327 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129666319 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10181108 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080127028 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135528054 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100868292 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081769926 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133461398 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100506076 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108936634 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083072459 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143994596 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098228778 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181322404 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081295306 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130504153 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100456804 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114630034 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112895332 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09861996 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084794317 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097507954 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078454694 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166376919 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082262858 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099804651 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084363583 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113538844 seconds)
  done (took 22.752037304 seconds)
done (took 39.598434013 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.339013924 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106093795 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106078666 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.1057567 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103607739 seconds)
  done (took 1.518628996 seconds)
done (took 2.251323628 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291570998 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172506263 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094754009 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166793674 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094376231 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173459855 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160478437 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112308242 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217306825 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077658517 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163391241 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093805133 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077242884 seconds)
  done (took 2.653552245 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096823001 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118567672 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084480483 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113612406 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078075851 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114049042 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095731199 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120450391 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112593738 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086554236 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096312847 seconds)
  done (took 1.846415343 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096740961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115283596 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084564831 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112101347 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077935228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112513964 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093967332 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118575585 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111966683 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086442105 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095531215 seconds)
  done (took 1.831670735 seconds)
done (took 7.052316772 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092526844 seconds)
  done (took 0.812138379 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.927581815 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.911921943 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112800406 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149974133 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301199662 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.198208785 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.477675253 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124916457 seconds)
  done (took 11.139586555 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.148007061 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086292296 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104193298 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087083956 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100531438 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084564528 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099456116 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101084314 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08356712 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10199748 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084030134 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099194375 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101850913 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083543649 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103463017 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083672267 seconds)
  done (took 2.344132133 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122396351 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120148711 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106793041 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108113351 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08742327 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104874719 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10629637 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089977921 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10178018 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103927894 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090312707 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10572874 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103894772 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079651968 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105695566 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107656915 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085945852 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106671924 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107409466 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090122426 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106729698 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095979781 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087225131 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106190892 seconds)
  done (took 3.269582976 seconds)
done (took 18.291846819 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16224199 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108741423 seconds)
  done (took 1.00303661 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096009019 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11408192 seconds)
  done (took 0.94319499 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100354718 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096653384 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120880063 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109494151 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080972439 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095943767 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120240836 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08088855 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095852395 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08024855 seconds)
  done (took 1.718774601 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08410182 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109448256 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10192806 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095180923 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105559452 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095750228 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087868804 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098965738 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109784892 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076735712 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103720208 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114768975 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086195402 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115663191 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104880323 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083742738 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102322188 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099647978 seconds)
  done (took 2.514065123 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081242479 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098227229 seconds)
  done (took 0.918022565 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083125549 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094452358 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082140808 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097873077 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094671672 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076343842 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094640654 seconds)
  done (took 1.363075931 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.474747215 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136041214 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252822525 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085581248 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119728723 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30452327 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097716254 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084833567 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103278856 seconds)
  done (took 2.455316049 seconds)
done (took 11.650391359 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095856775 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120658973 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115495998 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.471749235 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106998273 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097487368 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.161059029 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252274153 seconds)
done (took 2.165446759 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.150696614 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328342403 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.115638066 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068209638 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097765041 seconds)
  done (took 1.357994295 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08199844 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102795284 seconds)
  done (took 0.930865431 seconds)
done (took 3.184586268 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083837585 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100240774 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079421622 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.135236344 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082255603 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.099477889 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079834341 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098640811 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100312066 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082119555 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098735957 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081675389 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099210749 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079340425 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096653415 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082648696 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.097353609 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07901054 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099304052 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07971768 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099701355 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079663132 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.098039664 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079734807 seconds)
  done (took 2.976524298 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101535083 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099213161 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102862982 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085754211 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101339657 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086325528 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102620514 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098050125 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086630622 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100177979 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101058324 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084734645 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099521995 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084264958 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099399156 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10099666 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086058589 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097419556 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082787713 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100879316 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10240104 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081446993 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101173538 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102177649 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084935095 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101380886 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083841133 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098619974 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102434929 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084965023 seconds)
  done (took 3.595847306 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085695138 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096714222 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079364412 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104891061 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079742823 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099280323 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07968326 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098421142 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0808059 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097323159 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08127407 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097150766 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080705459 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099274603 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081590289 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101837249 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110302539 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078662712 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096991718 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079692457 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100871152 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078834129 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.097058223 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077946912 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095711053 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078835447 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095732545 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079562659 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098134718 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079867038 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100775285 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083426771 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09757195 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087480577 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101872467 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080310687 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101697151 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080430352 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098862928 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.0974284 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080253597 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098252226 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079776315 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104974049 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079895421 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101004559 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080864685 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098571512 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079173239 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098599551 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077479074 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095208244 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079856979 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096094173 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098882766 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077997523 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09638344 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078029212 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096488377 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079339606 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096976585 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080072446 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100271573 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081252791 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113918879 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086532605 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097837981 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082483943 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09913304 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082643515 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099951927 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112256534 seconds)
  done (took 7.285018719 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084427229 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107964322 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082430966 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10034048 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079413438 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097224042 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099331183 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078675916 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09901756 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085804198 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095908408 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080754301 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099702326 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111599575 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08123446 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100105136 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087427718 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09546665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080822168 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102047628 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080859673 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102331569 seconds)
  done (took 2.787820198 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211805068 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104561541 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142465933 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107987402 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085852991 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106547831 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102142741 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087360254 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102855841 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083519379 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100482134 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102285665 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083425352 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100911714 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101590603 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086324587 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104946922 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086771476 seconds)
  done (took 2.662251788 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095310846 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10143531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104427601 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099931997 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101425173 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083728071 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104988264 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107961623 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084292666 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099251489 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090895484 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099972136 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101679711 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081945341 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102074783 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082318833 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099950258 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082057881 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110066998 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10502749 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105942007 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091723775 seconds)
  done (took 2.898511786 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098371318 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101079286 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118268593 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084192502 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096137382 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08109096 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106271306 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081350957 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107024 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100241051 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081897612 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097243419 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089762988 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101330719 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107143959 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083530441 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103956431 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083697903 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103442249 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079780752 seconds)
  done (took 2.668503598 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106023848 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102255203 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103412401 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094466094 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10312535 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084999658 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111598579 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102446603 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08486626 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126752253 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101089701 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083744904 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109067286 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106857277 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09951093 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092094119 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109825151 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109752732 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082660568 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100585709 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126104999 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082694997 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108846488 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.210018708 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083289982 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1009972 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100002159 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08941833 seconds)
  done (took 3.681431571 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083562134 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102196709 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081000219 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100190901 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080902303 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099812472 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082237553 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099673617 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083220697 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09875493 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083048994 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102458732 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083027559 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101235363 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085463371 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101613541 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083246747 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099033399 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080786426 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098863688 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083368527 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101672251 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082677332 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097657519 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078876019 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098433861 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079336223 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096191269 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081100493 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095792758 seconds)
  done (took 3.489796787 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091385439 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106701562 seconds)
  done (took 0.96361717 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081780065 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116531793 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07830636 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103168338 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087097174 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099905445 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108141501 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087244714 seconds)
  done (took 1.528819774 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097675796 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112123503 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083946055 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111766104 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109268485 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095867624 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159712258 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101352531 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08758427 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098075347 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095507328 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.098466506 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106339202 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082019453 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105243168 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088091358 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097240274 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088719746 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102734646 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098461193 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084289519 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110723414 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084772757 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097399222 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083589732 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110742116 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109245229 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083728511 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103230599 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109474048 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087684713 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093755431 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08190313 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100753602 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080257966 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10850946 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113021896 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084646171 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109069204 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084069491 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111388629 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09559951 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087294148 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106549232 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093291517 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100681408 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.08456182 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094169858 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097206199 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08476322 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09562759 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08229256 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094505333 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090286692 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104533251 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1120791 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080889411 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101352508 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085176851 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102728246 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088866181 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103018274 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085370486 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098600285 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107861981 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085825223 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107251727 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076850308 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094177994 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080353022 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108626276 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121789188 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091202591 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101031049 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083065324 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097971643 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103500119 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083871735 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107782958 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090806002 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101018935 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108207002 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090312622 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100069956 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085784662 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107648276 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098531315 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084980976 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098484694 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097001766 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099980005 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081433085 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.09805692 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110527035 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085580709 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100816369 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080420113 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110546067 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076684959 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102188328 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084406152 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101873923 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108668336 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088265552 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106666435 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108088752 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090441212 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10083215 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087170136 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099028261 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085495911 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103389321 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089581193 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095118346 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103331593 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08385195 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102987179 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089111068 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099409478 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08255995 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108123267 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107053765 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081625117 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096928202 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085641781 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101443668 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086283923 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107187442 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098494435 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077760176 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095910603 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086473262 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100138229 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087006029 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107025772 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10304175 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077218361 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098462442 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08747007 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107942026 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100761754 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084065067 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104545358 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083617601 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100673416 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088226654 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102919932 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081672278 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105388872 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102111753 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078060341 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105360647 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086000506 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099547019 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086767649 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104586452 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103485589 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083379557 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099320219 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088883328 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102403079 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081075995 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101197129 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081162243 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109674401 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102841515 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078256699 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097445114 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090374394 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09889793 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.0824391 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099451218 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103161089 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083913599 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098846666 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082269861 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101925176 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095081812 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106943189 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102494991 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088564597 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111403023 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083324171 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102840011 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101701706 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084580814 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102108112 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089618874 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10594368 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106248296 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085114682 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096824017 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088586453 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107635028 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08286743 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099639658 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082429618 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104949994 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107556385 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086123336 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102008252 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080578817 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101095893 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104462852 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085565575 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100577771 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082346892 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10590209 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082283026 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108023534 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102980499 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092761456 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105405508 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078609648 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105799225 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100532486 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089203308 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096185372 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080975075 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100343257 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084695555 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100408163 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085715145 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095665664 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09071871 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109199782 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100847102 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082175679 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100871861 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091868761 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102960003 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087390433 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104763899 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106759432 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096442314 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100537719 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086994317 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110935137 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10146473 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076388651 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106659813 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081335751 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100942377 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082147641 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099357319 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086621283 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111207226 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106287763 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076770102 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104411481 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081743194 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100568227 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079002126 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107353218 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104692733 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084333098 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110408996 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085372657 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102416441 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087739109 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101724632 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10260699 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084252707 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10525183 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08486408 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104326799 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082771786 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103249918 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09999833 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082026255 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103685409 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086000886 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100976526 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090527712 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101270107 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082925384 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104174634 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10195965 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084398177 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101771309 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08312219 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104681059 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084655473 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101518985 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085570656 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096719314 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107996476 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083083078 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110129307 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084034515 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098058485 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088853166 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10532804 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107146826 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083198113 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101932532 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085460047 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101764956 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085662398 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110699735 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102000744 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094491625 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111633352 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087265707 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108443338 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086189693 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107230845 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084969398 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.107209079 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106354965 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086412247 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10501963 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091125898 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.107892191 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086795458 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106394844 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106297131 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083713614 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103463348 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078070652 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100787372 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085234544 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105773038 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094139291 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104434836 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105016024 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082753581 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103434518 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082004863 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098025736 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092009199 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111649377 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101971721 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091537687 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101019594 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084459317 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112645931 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095396972 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081399078 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100098337 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081042976 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109803551 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083927542 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.1099468 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083832158 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100796165 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098382494 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084493197 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101029986 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078846904 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099606068 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087002314 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104775421 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0839302 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10405671 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08733917 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105508112 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109063607 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082982752 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103986457 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08447531 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099125151 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082764628 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101177956 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08634431 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103310923 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104359549 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083454826 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105179705 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086999976 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.106625692 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.086547136 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107431193 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102474197 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105414638 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.109347519 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09052988 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098539711 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087475069 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102945532 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083177378 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100822779 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087436911 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106045597 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103457606 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091170154 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102896897 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085203878 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10323967 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082262997 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103023033 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102598165 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084601514 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101114956 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084570469 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111053658 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081811764 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104750013 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083200673 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102331943 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106788131 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085491576 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104439972 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092034397 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105491115 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103150082 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090487464 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105753615 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0872369 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103764089 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085778408 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108671057 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101906217 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092189311 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102805329 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08541909 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104286527 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081372427 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102132969 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083341675 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100937021 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107873149 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085019078 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10249746 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082666415 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100672545 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085730862 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106928948 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110361119 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086666138 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105509396 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079322643 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099963932 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085966233 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100345898 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085293767 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10526081 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108622368 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086579491 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103150687 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083399916 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110303077 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090182616 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106981717 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099976502 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089357834 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103091758 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086348993 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103432778 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083807563 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103655836 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107643987 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085420992 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101815722 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091220031 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106516219 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085529577 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104516502 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084592505 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103591607 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097703586 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084957026 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104305327 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090889952 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104956349 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083964713 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111997888 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102066884 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083675351 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10691217 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083314544 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108936468 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078943146 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10370949 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103804255 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085191371 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098167389 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083548064 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099923431 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086843342 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101410893 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079173576 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112632382 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109834079 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086495064 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10159699 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082991676 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097996629 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079786481 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102219095 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085220041 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104845694 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11193696 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083612102 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101409928 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079797719 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102860904 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087250752 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10637018 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080942697 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098071907 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082566196 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106098033 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110154833 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083014013 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103642712 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088255808 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10602702 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081228915 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107765462 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099659375 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088070399 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113794105 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085794615 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104517244 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089934794 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112474782 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103828011 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079611391 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.104107496 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086476916 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102611868 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085284258 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104316658 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117331657 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087495945 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102269018 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083489783 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105834931 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083895084 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111059594 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104463951 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086017738 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.108200553 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086158341 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112751323 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105668097 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090140453 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105605878 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086447173 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101962038 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084854868 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101394089 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082279306 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104375342 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104348213 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089469113 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111862051 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083560903 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113192611 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111026586 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089507486 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100269999 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083173123 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102536749 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079227128 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105024556 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082750647 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101916054 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101297826 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083712967 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10371057 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089787702 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105481363 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085340333 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103582556 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078268112 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105502852 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105527335 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087677061 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100647249 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084775293 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104661184 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091096054 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107863396 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084930976 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106223097 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105014418 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08565271 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099171249 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091007545 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103354144 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087313066 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103061794 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084817565 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105056214 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106860274 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090116926 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104510321 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087277906 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11612469 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106051044 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081870732 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100249893 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089763543 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101766574 seconds)
  done (took 58.062103474 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149733392 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080823989 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098914955 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079319939 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114080423 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100044478 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079566968 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100702156 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08116974 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102658569 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079833873 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099302684 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109277526 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125031004 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093791921 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104849866 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07953148 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100796808 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098165475 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080965576 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109360059 seconds)
  done (took 2.882967389 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107921522 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11799217 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115163926 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119561853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090707345 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115650545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114763548 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115631666 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100214426 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111845066 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118459047 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116117648 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091652596 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111077011 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111385317 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093715088 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118849174 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109001205 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116003262 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095707782 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113447586 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115140459 seconds)
  done (took 3.233241357 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088154074 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104577363 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085575407 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098218547 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083482319 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098091591 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088341348 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101388877 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087491466 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10363633 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08209509 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102882432 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104984165 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079663493 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103118833 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081934844 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152435382 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107707818 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084152836 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105727083 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099063452 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086857861 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099432915 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079760775 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102196323 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088494626 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103856015 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083002078 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103525239 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082747068 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104007031 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082116136 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105736477 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10352436 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082846009 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101752711 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084431296 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103131395 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079986878 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101154746 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084845734 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099632555 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084647892 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104539327 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082064378 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.1016299 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085850374 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103970911 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098612918 seconds)
  done (took 5.484519671 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.109430658 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16084391 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085983298 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143781849 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120928025 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113149643 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088232717 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142551412 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102622991 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083102663 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123872958 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121179863 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104338497 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090687682 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111989249 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103994751 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087089207 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102680843 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108748237 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084464317 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109046239 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09115734 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120472708 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117681965 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108657058 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083520068 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103312595 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109115734 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098543599 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110149728 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109225079 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090825786 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11978085 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105661441 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08414422 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107977645 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122935199 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104744745 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087845717 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100889494 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087077702 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110172577 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109770919 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104183909 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106112861 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109574301 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084437559 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101410708 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117921471 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08728149 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113598195 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11985668 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108135984 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085655307 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108930074 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121473861 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085102646 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102110204 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087840695 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11704622 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10204173 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088399422 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120121193 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106494654 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112493371 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099890754 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109463044 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109268081 seconds)
  done (took 8.15085474 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098802704 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116103686 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122911236 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121133098 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091021805 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111976302 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111711939 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091969942 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11081477 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116961886 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111433693 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13323232 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086560624 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115399374 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111697208 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092533453 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110837153 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111267152 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091084657 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111757103 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112368358 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121726471 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091247366 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121706297 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141552131 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107057524 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090672312 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111523887 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122243707 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111491564 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12377423 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092111678 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111499584 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120819798 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124588597 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0909401 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103901545 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110713468 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091919401 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111244999 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105543022 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101694157 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112876577 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106477361 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091613778 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111922871 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122349729 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125673082 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114627974 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097011582 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111816381 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122066477 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110936015 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091948836 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122207929 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147396156 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1214297 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12168701 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111005689 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1009643 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121751019 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129090754 seconds)
  done (took 7.712967541 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111894695 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115986299 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118948029 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100245518 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082974212 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109165045 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083305785 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102823882 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115125651 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095873405 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11804661 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109656574 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112454253 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098552146 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10992611 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112837473 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090066715 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109306846 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115034901 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109982661 seconds)
  done (took 2.952862295 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097610672 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124945706 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085720179 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112568407 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108821921 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091818189 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107832161 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107632543 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086726254 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108233125 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096887555 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117498333 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105728543 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091259502 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117442853 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110955748 seconds)
  done (took 2.496767184 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100211742 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119647644 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121448553 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084832481 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104869149 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081437741 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106736175 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101487007 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08162083 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122118893 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085555821 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109944752 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105709801 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086572087 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102703726 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08890948 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101353593 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082795638 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106438394 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120131541 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096838151 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104708499 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106384437 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087194906 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105592104 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091026414 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106825932 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103775871 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084234645 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10576105 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085711131 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114149815 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102195933 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085098183 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103700705 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083161965 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106113832 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085803444 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109647318 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105029126 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084720298 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105348486 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085408166 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107118417 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081811283 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106455788 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.1007899 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092162508 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104299322 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086259366 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105577633 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107538852 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086474917 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116266486 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089363693 seconds)
  done (took 6.276989429 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103384711 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110593213 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080860947 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103484751 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089190788 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108250954 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109583132 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0883077 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107804725 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083630232 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107944862 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089088448 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108108041 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108997486 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087634149 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109956449 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081988664 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107675199 seconds)
  done (took 2.628120016 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095483178 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10576356 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09349188 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106276487 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086065941 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109929295 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08054952 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105332517 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103450575 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085133528 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106561207 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087652713 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10408698 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088085507 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105560411 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085735266 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108644373 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104108231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086377363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100867408 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089259746 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10478055 seconds)
  done (took 2.980643547 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.1223848 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125113586 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092578846 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229362596 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104055855 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133347542 seconds)
  done (took 1.645944155 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113239667 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121680189 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106399077 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108413816 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11638115 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108004825 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087785905 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10860209 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118837331 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1028213 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10914943 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118734577 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118481943 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098222321 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115293981 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116181791 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107784221 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08904281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107103272 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129477136 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088985453 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119073675 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108103381 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087233223 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109236051 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118703957 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119929508 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122933825 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088241475 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119281566 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114989142 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088446521 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119587539 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123390056 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109994712 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098776013 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108638937 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129581358 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115840794 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097871583 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110166488 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114754312 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099118839 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114520133 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119347747 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108518436 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093672899 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108606735 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109390496 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13723588 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095014956 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118396774 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115409994 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118573786 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119424768 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136655618 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102740357 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117741101 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117210428 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124288905 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118707374 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095034504 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118026918 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122504329 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116011667 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118094276 seconds)
  done (took 8.201404959 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107379324 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126715634 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109055699 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123120465 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100208208 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108089165 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109362659 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088247907 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10964539 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107689804 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153902196 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089414879 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118598311 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118841764 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109069747 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089405547 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108895307 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117549946 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088077463 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135855064 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109689256 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119040946 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118223159 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0985178 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124462268 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115481147 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109121718 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089025846 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109649036 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108913256 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095012682 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109465237 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12007502 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087384838 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118883805 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109187295 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088611344 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115651989 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108555845 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116591619 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09777807 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1294973 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109490271 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108711527 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123443388 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088749965 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1087163 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087569436 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11016929 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107082279 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102583183 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123852446 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123795284 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118846891 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109436688 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088815074 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109773527 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10843436 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088745103 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116215817 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118727997 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108730628 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13777528 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089315919 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109893129 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119242736 seconds)
  done (took 8.082606494 seconds)
done (took 156.0769045 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104263886 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141520494 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101178749 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168707223 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106948885 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120114455 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138803673 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097287293 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107111266 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086636212 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108139326 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08817522 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172214275 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106457717 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086230738 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108183307 seconds)
  done (took 2.688423511 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.204861646 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256207086 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102492189 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106770707 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090062388 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11151187 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105019024 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092199963 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110822479 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086705378 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109388053 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08720417 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106887366 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086515293 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111976202 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089451143 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107227541 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087816222 seconds)
  done (took 2.902574467 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116658133 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146273055 seconds)
  done (took 1.118169222 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122754192 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180869915 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318827621 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156655071 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107444736 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128391115 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156481078 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131942216 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197598736 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124268012 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12405138 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098249004 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141159566 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116871826 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095564094 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119559656 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143300622 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093923361 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116523682 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116913722 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117992731 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107179069 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116203894 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094473121 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181510866 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120714065 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085757728 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106922934 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116798647 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095349761 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115065697 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126084093 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099495558 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177193073 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103617962 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177491871 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099193229 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11515295 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11564216 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091788892 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119788379 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118760814 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1056385 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118622576 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084674138 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119977391 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106467767 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08720934 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115861535 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098433711 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115720929 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113691681 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158348437 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119846339 seconds)
  done (took 7.589740988 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798414681 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.165455281 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090642339 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.88868129 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138992554 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104116932 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783978262 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134116681 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23485664 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766169534 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141063295 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12475301 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229828205 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238910867 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931781199 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310337974 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.675254529 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106794047 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150173188 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153753768 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120670594 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138974197 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131492965 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430933959 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09663192 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112950578 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117635794 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101530175 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160303006 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126707069 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115035013 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179304081 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247551937 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207817888 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116994446 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089758967 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112935244 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170566771 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269461197 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216358764 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182431794 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0876305 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111984959 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123181415 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112169775 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109407396 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165465934 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196499545 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174489463 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09293472 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122110351 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121792138 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122526338 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167090899 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120930026 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296971834 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323920583 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112953894 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121027364 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106094021 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26544913 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123835359 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225442068 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118345195 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215759231 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112112323 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781548943 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191993743 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090323107 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118442792 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120150355 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095641382 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12228349 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168089155 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393104095 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125234202 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09346012 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112883903 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21441149 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126321195 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112302981 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163135591 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117210617 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10049013 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126925639 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123692738 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173592294 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231093012 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125648006 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12114376 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094489121 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127100975 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11746779 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214434491 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220336293 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164307408 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210682048 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123803408 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165573666 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190930352 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099728685 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195688342 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098799955 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127157069 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123094336 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218839499 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146854276 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101671776 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117112557 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120383856 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150815131 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128136054 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098617559 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193699963 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459513701 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170169766 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110151045 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128761345 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099844442 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161690526 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119693885 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259645977 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122818597 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171213581 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121140752 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088837315 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120930109 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165466847 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123646995 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121969496 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102751954 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120373525 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237363841 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219793012 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125023635 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222231783 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184877772 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120263455 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174537895 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123142862 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169567018 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121359372 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121854598 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096883118 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797683582 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125195078 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099778978 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117621824 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189122856 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112372722 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102900777 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126242816 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110017237 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752737779 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128254674 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122291036 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102818223 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119618172 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121071941 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096520936 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117209889 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164027866 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234888496 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122702802 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120910983 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103784414 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183227399 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096063149 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.127562133 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125998373 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125971282 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101970496 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116231044 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125093763 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170661275 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163563783 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223046173 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.600642437 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091571608 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125590835 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230651897 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090850141 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292534157 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121136977 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.229540564 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166807056 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123208089 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320972034 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168346487 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190478548 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127514612 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175593285 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088725275 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11989678 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166868445 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112999339 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118289163 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164340399 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12659342 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103054905 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968042839 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11247461 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226815049 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109248491 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175259348 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097268246 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12283685 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295025552 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112505307 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108936433 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187668275 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095149897 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12765863 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.717130007 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105339893 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1240443 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119048666 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22475905 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165391875 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097800504 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120116856 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121893407 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164410945 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211111416 seconds)
  done (took 44.327673779 seconds)
done (took 59.477866961 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280939108 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214522696 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260035723 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174858289 seconds)
  done (took 1.888540013 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174685742 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149113875 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121029633 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107353199 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149907884 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085937647 seconds)
  done (took 1.667214445 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.357672561 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271626429 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239360937 seconds)
  done (took 1.751390993 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.29448229 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.25329745 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.357564031 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.422076471 seconds)
  done (took 2.332937713 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214439917 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132944564 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112020662 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105407342 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199098786 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250346158 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142320532 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203599783 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122722058 seconds)
  done (took 2.415855048 seconds)
done (took 10.94143454 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.293753531 seconds)
    (2/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.213047438 seconds)
    (3/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.158203998 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.192364293 seconds)
    (5/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.220712367 seconds)
    (6/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.20789343 seconds)
    (7/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.160778292 seconds)
    (8/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.195738459 seconds)
    (9/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114119102 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.129155729 seconds)
    (11/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094668142 seconds)
    (12/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.232424314 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123446378 seconds)
    (14/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.123313566 seconds)
    (15/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.189067303 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119474351 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.1864987 seconds)
    (18/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.241837487 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.139020026 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.114621262 seconds)
    (21/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.184586206 seconds)
    (22/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167482058 seconds)
    (23/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120258954 seconds)
    (24/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.100157628 seconds)
    (25/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.204082896 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 0.227335056 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118025357 seconds)
    (28/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10179799 seconds)
    (29/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.192459436 seconds)
    (30/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.21430045 seconds)
    (31/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095728591 seconds)
    (32/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.191722477 seconds)
    (33/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172338381 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.146872154 seconds)
    (35/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.214219351 seconds)
    (36/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.132322743 seconds)
    (37/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.07014281 seconds)
    (38/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.116000962 seconds)
    (39/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.160130926 seconds)
    (40/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.166722528 seconds)
    (41/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174349084 seconds)
    (42/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.155076215 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093996768 seconds)
    (44/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113510144 seconds)
    (45/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082986512 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.135813584 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117401784 seconds)
    (48/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.102028269 seconds)
    (49/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.136283214 seconds)
    (50/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.150825209 seconds)
    (51/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068059408 seconds)
    (52/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.12174965 seconds)
    (53/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.175208319 seconds)
    (54/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.185630827 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112736129 seconds)
    (56/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.19489512 seconds)
    (57/286) benchmarking ("sort", Float32, false)...
    done (took 0.150276009 seconds)
    (58/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115130404 seconds)
    (59/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135608892 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087708541 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.136353116 seconds)
    (62/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136001442 seconds)
    (63/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.108394532 seconds)
    (64/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.118522088 seconds)
    (65/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.223083564 seconds)
    (66/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.149718323 seconds)
    (67/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121615062 seconds)
    (68/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.17689753 seconds)
    (69/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.070972579 seconds)
    (70/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067129766 seconds)
    (71/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115782119 seconds)
    (72/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.163532337 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.087943261 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.1197599 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086609808 seconds)
    (76/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.076061592 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.095527477 seconds)
    (78/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.190106238 seconds)
    (79/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.194061753 seconds)
    (80/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121738253 seconds)
    (81/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084691204 seconds)
    (82/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120497715 seconds)
    (83/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087899194 seconds)
    (84/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.185695468 seconds)
    (85/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.179331521 seconds)
    (86/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.186666665 seconds)
    (87/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095481745 seconds)
    (88/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090485328 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087515416 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109288457 seconds)
    (91/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096334547 seconds)
    (92/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138085303 seconds)
    (93/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068751314 seconds)
    (94/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113211885 seconds)
    (95/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067442448 seconds)
    (96/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.175478789 seconds)
    (97/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067615905 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.136384757 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092458976 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118510732 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.184229099 seconds)
    (102/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134914396 seconds)
    (103/286) benchmarking ("sort", Int8, true)...
    done (took 0.200030564 seconds)
    (104/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111914378 seconds)
    (105/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125902343 seconds)
    (106/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088121361 seconds)
    (107/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234330837 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091095429 seconds)
    (109/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094292365 seconds)
    (110/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068756865 seconds)
    (111/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.155490289 seconds)
    (112/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.142648968 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087418793 seconds)
    (114/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.187184125 seconds)
    (115/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087841204 seconds)
    (116/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121916414 seconds)
    (117/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121933393 seconds)
    (118/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.150510071 seconds)
    (119/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.090739982 seconds)
    (120/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095962345 seconds)
    (121/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.09079601 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 0.182919213 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096487682 seconds)
    (124/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118779388 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09548034 seconds)
    (126/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.192489509 seconds)
    (127/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067578024 seconds)
    (128/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.149526019 seconds)
    (129/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17409823 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09333168 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118884026 seconds)
    (132/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.06749771 seconds)
    (133/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067975575 seconds)
    (134/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.13838491 seconds)
    (135/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136978213 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.139540107 seconds)
    (137/286) benchmarking ("sort", Float32, true)...
    done (took 0.233191743 seconds)
    (138/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158467391 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118891827 seconds)
    (140/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067557304 seconds)
    (141/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117209211 seconds)
    (142/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06838367 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087176773 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10990953 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094495421 seconds)
    (146/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.089229516 seconds)
    (147/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.119981459 seconds)
    (148/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.089906415 seconds)
    (149/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095896476 seconds)
    (150/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.089271242 seconds)
    (151/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087270176 seconds)
    (152/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.131630681 seconds)
    (153/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.184557431 seconds)
    (154/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075921717 seconds)
    (155/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.094012207 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11986357 seconds)
    (157/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123585107 seconds)
    (158/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.118939984 seconds)
    (159/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.187890602 seconds)
    (160/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095317455 seconds)
    (161/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160352948 seconds)
    (162/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.118737104 seconds)
    (163/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088875006 seconds)
    (164/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119087805 seconds)
    (165/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091694302 seconds)
    (166/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.124167096 seconds)
    (167/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.076723579 seconds)
    (168/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136719241 seconds)
    (169/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.173074162 seconds)
    (170/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067403493 seconds)
    (171/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135469658 seconds)
    (172/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069420274 seconds)
    (173/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.154291467 seconds)
    (174/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.089249254 seconds)
    (175/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.109157439 seconds)
    (176/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06824 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093427795 seconds)
    (178/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11646211 seconds)
    (179/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190754379 seconds)
    (180/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093853389 seconds)
    (181/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122819748 seconds)
    (182/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.06795224 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12008146 seconds)
    (184/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066889222 seconds)
    (185/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118194673 seconds)
    (186/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095239648 seconds)
    (187/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145992528 seconds)
    (188/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167175103 seconds)
    (189/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096481636 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113222891 seconds)
    (191/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.096859619 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.225440523 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110023869 seconds)
    (194/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.155413134 seconds)
    (195/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.111305392 seconds)
    (196/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091881574 seconds)
    (197/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069554622 seconds)
    (198/286) benchmarking ("sort", Float64, true)...
    done (took 0.23410119 seconds)
    (199/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137202444 seconds)
    (200/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101130858 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121235424 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096250716 seconds)
    (203/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112104589 seconds)
    (204/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068071964 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111104561 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088227506 seconds)
    (207/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.089857202 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093962902 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.11028485 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09103698 seconds)
    (211/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117734374 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096018824 seconds)
    (213/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111285929 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086611312 seconds)
    (215/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118148735 seconds)
    (216/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.289042281 seconds)
    (217/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068295792 seconds)
    (218/286) benchmarking ("sort", Float64, false)...
    done (took 0.173821679 seconds)
    (219/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112984398 seconds)
    (220/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067223728 seconds)
    (221/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067231053 seconds)
    (222/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.110731694 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095613321 seconds)
    (224/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114607355 seconds)
    (225/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088336384 seconds)
    (226/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.1113821 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087198401 seconds)
    (228/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091610833 seconds)
    (229/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093584766 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110106486 seconds)
    (231/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093701801 seconds)
    (232/286) benchmarking ("sort", Int8, false)...
    done (took 0.210974403 seconds)
    (233/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067904961 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137331647 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086818013 seconds)
    (236/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070010644 seconds)
    (237/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.233034401 seconds)
    (238/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.091748842 seconds)
    (239/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076336813 seconds)
    (240/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067087572 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117654184 seconds)
    (242/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172719268 seconds)
    (243/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.15838292 seconds)
    (244/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125173395 seconds)
    (245/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067037602 seconds)
    (246/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092472893 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096746466 seconds)
    (248/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.091639514 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087476741 seconds)
    (250/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066696219 seconds)
    (251/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.090587759 seconds)
    (252/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090266882 seconds)
    (253/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112397736 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086408305 seconds)
    (255/286) benchmarking ("sort", BigInt, false)...
    done (took 0.244047607 seconds)
    (256/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.116421855 seconds)
    (257/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.090546228 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088968293 seconds)
    (259/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069001312 seconds)
    (260/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.112322953 seconds)
    (261/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068124579 seconds)
    (262/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.090298453 seconds)
    (263/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066570052 seconds)
    (264/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06814018 seconds)
    (265/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092770859 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.095278413 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109443207 seconds)
    (268/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088281212 seconds)
    (269/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092827746 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085955013 seconds)
    (271/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136293946 seconds)
    (272/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086343204 seconds)
    (273/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.156971831 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119037657 seconds)
    (275/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076741919 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087653239 seconds)
    (277/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.100934893 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093202854 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110471844 seconds)
    (280/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.087536726 seconds)
    (281/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.091736868 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087433534 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116694343 seconds)
    (284/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078962669 seconds)
    (285/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.099373441 seconds)
    (286/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.076535547 seconds)
  done (took 36.236208392 seconds)
done (took 37.123746303 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104110527 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148401996 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09629349 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136941562 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124726213 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091775963 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118772954 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098834917 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123860952 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125155948 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099671647 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093268728 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098116099 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120303902 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096828176 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139842366 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124760957 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094394503 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119811008 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086783237 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119212667 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08973403 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112792455 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070525081 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122506585 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095180581 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116850103 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121421502 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08681921 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110673295 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09101067 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118367861 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087088089 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124170269 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093906148 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119337372 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097107943 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12126612 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112198471 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087674704 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118631207 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087257841 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11816837 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095460504 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116434186 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093215307 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120262832 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100336107 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13973776 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116595318 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095901419 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123604203 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096413806 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118390046 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092102553 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120503745 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093096694 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140730604 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119889102 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0934826 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119204657 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095139577 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116347104 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095123968 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120059785 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122023584 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099091075 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116379947 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09798805 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116122791 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087351742 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119851644 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090734358 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111424165 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09696572 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121667058 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085799236 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117011426 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117717129 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092244408 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110538759 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089839036 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112323046 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093996743 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113775251 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07003835 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114595378 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093846788 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110900032 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096954058 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116713286 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09451246 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11372943 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099070367 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110633881 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093000236 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111960111 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08756583 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113310404 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091326135 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111170705 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090223308 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121022468 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089194322 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117371609 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124769379 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087290443 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117476474 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086742622 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110964228 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102956847 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122039336 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087819028 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117282636 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086781618 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118944531 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087068921 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111203 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087935855 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111923266 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093818674 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111633005 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114086569 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.09497501 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126881406 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087178639 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115206434 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091485463 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110794351 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093244878 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112252668 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088405322 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113360367 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078273055 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114334079 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08780258 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118604449 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090578852 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120351932 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089967936 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120391374 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092857522 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117513623 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092950987 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110348968 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075084324 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117293466 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090517211 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113780077 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087388243 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114103959 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087456435 seconds)
done (took 17.022398722 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092161149 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184535784 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152480554 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143450183 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108937051 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112360505 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122810939 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118862516 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114188655 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143691682 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111271522 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132912965 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148395458 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087306131 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113777883 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092049721 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114020961 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103423101 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145922012 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133672671 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165455869 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088047515 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147808958 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135681026 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122169291 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114638327 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112741619 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09139535 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117005529 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103779527 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13321428 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115717139 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088319669 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134772457 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105947153 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121077913 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088962345 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11970634 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088337874 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112558573 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14208165 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13379764 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093358356 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118390262 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09238474 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115117255 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089758275 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121704675 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098770663 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117285169 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126903261 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156956458 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091440045 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123073029 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087200989 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123573536 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122479552 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091104232 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113370732 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091468729 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111844175 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091988204 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129126495 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14339553 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09226222 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122413401 seconds)
  done (took 8.659293002 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107809503 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140834992 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106796046 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132326282 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112459417 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088776613 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114317768 seconds)
  done (took 1.752201247 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.093235797 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135431359 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112570226 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137627972 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133670584 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112552767 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124168533 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089307598 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134332646 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089843484 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136277409 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15164215 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090550135 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122121916 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138781199 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089088631 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138187983 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089001848 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117934126 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137328221 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092035402 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135879331 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091619053 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115110526 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104071261 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114726498 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164151355 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095015003 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115523392 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09295043 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113206029 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152647803 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104391058 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125575631 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089550163 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130671262 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129271143 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08728156 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126787662 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095260595 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128340241 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091102301 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116256397 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088444236 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119697502 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100031656 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118472521 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115882773 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093319191 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134338171 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090992438 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.146285054 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090198718 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11911693 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.092161341 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120338306 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09898943 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115945833 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134441047 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091521301 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131595714 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106696805 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129296409 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131214702 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092674827 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129175657 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103574633 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117191585 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091471071 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11849691 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10525487 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112728136 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115716796 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101063795 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116741227 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113573044 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139139168 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091997836 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125114431 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114717056 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089999905 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115655556 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11307452 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118363836 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090057736 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118959786 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09301884 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113146005 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088943627 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118816593 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08815939 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11622228 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095313624 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.1146898 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092737149 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131808375 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115958417 seconds)
  done (took 11.90681596 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096390135 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115860856 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092755507 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115132351 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091445312 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115876517 seconds)
  done (took 1.583514621 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119893588 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117886046 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104439179 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121644921 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157970587 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105026701 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130625575 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12518659 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10940377 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12777906 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130973965 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105890345 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136038797 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122054494 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105866083 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121924147 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105768297 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125509851 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128107543 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097408227 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137933214 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122171537 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098366341 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132794968 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118584305 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.09646231 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127194865 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102408124 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127700359 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124695536 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09636132 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118752916 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096519656 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126456177 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130648265 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09691472 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121046121 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120109386 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10100071 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12017322 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10552786 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122536035 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128337014 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094960684 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124106907 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121601659 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094988553 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126731814 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103879938 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119633613 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122797023 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095699968 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121213562 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094715908 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124721454 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124386217 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094371768 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130835112 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121846001 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097041592 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119709585 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094912332 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124976696 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11942079 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105581126 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120345925 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121390141 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097944313 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123109352 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.097387476 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119994926 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09314413 seconds)
  done (took 9.283094539 seconds)
done (took 34.130900811 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688871822 seconds)
  done (took 1.645590539 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.814680521 seconds)
  done (took 1.774926669 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.839928405 seconds)
  done (took 17.829694621 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49405346 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.576515052 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993776078 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179568187 seconds)
  done (took 3.205298547 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.948687222 seconds)
  done (took 1.929302344 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284937898 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.236451597 seconds)
  done (took 1.484798106 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772671794 seconds)
  done (took 1.748248473 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.374861825 seconds)
  done (took 2.337933032 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329849847 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184633605 seconds)
  done (took 1.489069645 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.552311377 seconds)
  done (took 1.525813303 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.684738967 seconds)
  done (took 11.663280251 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270807403 seconds)
  done (took 1.258609011 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.306031323 seconds)
  done (took 1.284002588 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.459929484 seconds)
  done (took 4.440527354 seconds)
done (took 54.582728013 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102757978 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127869111 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102300563 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125705058 seconds)
  done (took 1.430931004 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103630869 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121648105 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101636619 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121546419 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126943885 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097874998 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123506605 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102045672 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121396474 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097054464 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121844745 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121160919 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100278274 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124243156 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094248721 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125294026 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100411848 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122265789 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125205584 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097420715 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119707153 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099348423 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125090831 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095302594 seconds)
  done (took 3.671106584 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103398907 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120384073 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097362206 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119290301 seconds)
  done (took 1.431123642 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.103220346 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131942995 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106658544 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126434932 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13139837 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106183347 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118075374 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092773994 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120800122 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101178422 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116573151 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140240678 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106544311 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125517151 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102543422 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115266974 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092329332 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132071914 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124980012 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102011539 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118935204 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100459758 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116168762 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109440245 seconds)
  done (took 3.724825419 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173772101 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128459972 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138875767 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09577033 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161397107 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141811388 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088928029 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141597549 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08826342 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132374186 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11919613 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133537625 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130942075 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08881007 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114352817 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088569709 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129173924 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129638911 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092521364 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128504009 seconds)
  done (took 3.437370548 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100369346 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118224191 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089200015 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117296231 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100047746 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121617185 seconds)
  done (took 1.635005081 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093478415 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115453043 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090585907 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115495368 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095090761 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115349623 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089373359 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116348544 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091041678 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115768242 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090183163 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113988124 seconds)
  done (took 2.230819403 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.509421116 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120194669 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121237571 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089722656 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125899083 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090611885 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131091327 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093206169 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142468977 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089761685 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116924543 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092525893 seconds)
  done (took 2.709306269 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24006586 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126852097 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286869153 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366720069 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157558443 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16557443 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280741527 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163183608 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200159947 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15170064 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231836445 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197596315 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15325511 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1934162 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139614508 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146130579 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191931674 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252770766 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153714799 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213178863 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207564931 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168607961 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181746367 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152143602 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112658764 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193641347 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095901687 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13063137 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209412921 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206739667 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192063262 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16206837 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147986622 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237846732 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250503365 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197382175 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281246544 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135341261 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.143181325 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166404841 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266858151 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140249237 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234766641 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156446028 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105618889 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222420107 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166402571 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178603836 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146471143 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139353452 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199480632 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241263844 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195194949 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139363987 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299522769 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14978372 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158507775 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190930499 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252274414 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228634393 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191226895 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122146806 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190699038 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191843993 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185672825 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153164859 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.211377419 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148094374 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184327612 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190201051 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166895131 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179406951 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.207815666 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139760256 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173353299 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174845114 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174264541 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260590891 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187463276 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122970313 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170174526 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150064567 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104872457 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196243896 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127084957 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216874093 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144592764 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164886654 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21076878 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161513948 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162914039 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220558998 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186434593 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149340526 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08430693 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155003502 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157274142 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177876871 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141671243 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159433438 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159363454 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104167916 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196823759 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09930968 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185814483 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.11973295 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174924073 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184643451 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129349019 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163280329 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154464081 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150830606 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180430554 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202567737 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141683525 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134030814 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211973883 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178557252 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142787015 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178454359 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229928343 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118181866 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150835539 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228721516 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21792039 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141443889 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203872174 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155640195 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135721587 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134933217 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183322495 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158334515 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162575143 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133034923 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185934753 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208536525 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126732738 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139944342 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196720439 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135397495 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132764062 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155743458 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121358542 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139307201 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143944991 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144454877 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177521775 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181226998 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156160521 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169029067 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150419023 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252333445 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140621604 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.125807519 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149205447 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122443291 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194689453 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226596097 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10569647 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233931552 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173308479 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200662635 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169827907 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136816722 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178501996 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1316866 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.094751532 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222817298 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169215552 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16467745 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198524796 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224490662 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184142938 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183979408 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16822032 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20182878 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.139261733 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158087656 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138494897 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161521968 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159719208 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123483517 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.113288912 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135534547 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150618183 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142814416 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106820385 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228273326 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172036545 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216440086 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133275097 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149426979 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182095821 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129862854 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179359182 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204964745 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119477588 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227388835 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195490545 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188312824 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145806919 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228888897 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094521208 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127293213 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142814875 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171271307 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108243116 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136638142 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165094361 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183138614 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208483201 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17086463 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208237639 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175447491 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219065139 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095978934 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169562531 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185793793 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177693265 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181083206 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141017232 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151557784 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178432071 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156016793 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229330331 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19847245 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177076015 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206134689 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.152397703 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133535227 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150501978 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179765443 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15519336 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177682148 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147864372 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139510084 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160790781 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10367719 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162005546 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214016874 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163557923 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189796688 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151025581 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187705269 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129685537 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164445316 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161949672 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166895565 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081816419 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175049525 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23209854 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147993719 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168774677 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189434328 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132707779 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309014342 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236316207 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197092996 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138681393 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156590747 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161541544 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163565274 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172954339 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180493909 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160499074 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190030973 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160119603 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136552723 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112142196 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152022397 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154552102 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13337912 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149944157 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179003945 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137702667 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190482984 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156774121 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160795315 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174786681 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150736408 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117413966 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152949669 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246269207 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185509556 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240479365 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125890335 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.20656474 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209270708 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127388459 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104579691 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134795049 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180824451 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137587277 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193440125 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190366816 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227860621 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182342948 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179022812 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140762282 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120982855 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15746896 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169480396 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204859636 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149173476 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.148905956 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231172055 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11094863 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133426132 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166687023 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287236051 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147705368 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197878411 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108639576 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27788738 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101297873 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132894612 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165270302 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2358198 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110158216 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17999185 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172652673 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163874495 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165443986 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150492591 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1920655 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239918114 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202876456 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183689098 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134610548 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15889155 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176853098 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221231157 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156441903 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112219409 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232833633 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197699721 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196946658 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143235323 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170400013 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169817992 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15912901 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215664408 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10822685 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236863613 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107850321 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222908639 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154806946 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138445185 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177833116 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189049599 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142281703 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189056981 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211240198 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108994469 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135170981 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167869633 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179669328 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155171517 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129052734 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184818454 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126711469 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198712196 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262622567 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134141536 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128946075 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148667079 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137143088 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15633184 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160740398 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139956918 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140634844 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230107662 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.10792578 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220934055 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2016707 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173499108 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203497235 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11846117 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.721312059 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104160274 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22450589 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121332961 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235975842 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152335488 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174800893 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160184957 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170179585 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196091926 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162545134 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.2319491 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21977169 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179393585 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132489199 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15792938 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128764956 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.14572047 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154585356 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169453387 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161129694 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147024711 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179063956 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166090318 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136756268 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14164618 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200934519 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149193212 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187484417 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181501043 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139515428 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174246369 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187872125 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134927788 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180971805 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238873845 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143887563 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150396063 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107635211 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.150867012 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265098762 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12564243 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191242182 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185485361 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159963787 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170308526 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148469034 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221142333 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158154144 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187127816 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144216872 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159722274 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156900262 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111444171 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131624168 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158116563 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169482147 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150946608 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160254112 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142203386 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220291092 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096512933 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146202512 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284980775 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202789391 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217165418 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136838961 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108158438 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163650818 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151745142 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177119336 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20812953 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109083131 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136952964 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138291412 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129890371 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139067715 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156657804 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19440944 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167526327 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20837482 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138554859 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27966327 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140432246 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155433334 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090291074 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132211368 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150864102 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119131867 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156766845 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22015166 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262683501 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.123782863 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13443019 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150470993 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097591949 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138242762 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165809106 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166809754 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17873579 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147296194 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080570486 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156907329 seconds)
  done (took 82.965639067 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166184337 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133583443 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148012739 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202914552 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177965123 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271147022 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210740315 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253684991 seconds)
  done (took 2.644667108 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095810129 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146595021 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158636411 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133609654 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092133283 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.12070773 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.344930784 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133447387 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11755527 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122809424 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175022859 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094728388 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.550077418 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091771788 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120298422 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107721687 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093536905 seconds)
  done (took 3.768482365 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.117111271 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.493450829 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.933528843 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194848712 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159985923 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.118654208 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.706850152 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096179348 seconds)
  done (took 11.90482308 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119607173 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13698628 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.124245859 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153167189 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142177654 seconds)
  done (took 1.76950879 seconds)
done (took 124.298659132 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099982704 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127916712 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098544868 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130395973 seconds)
  done (took 1.527199411 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096988292 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071381537 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100803365 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075408906 seconds)
  done (took 1.426345164 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189041955 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169014712 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40337466 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071702627 seconds)
  done (took 1.590443655 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117970259 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133577996 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105473809 seconds)
  done (took 1.448984356 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109103935 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130186951 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104092088 seconds)
  done (took 1.432187933 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108695264 seconds)
  done (took 1.197081672 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110823341 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137870601 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108938786 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136830111 seconds)
  done (took 1.582967216 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100748493 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127702411 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109844746 seconds)
  done (took 1.423830162 seconds)
done (took 13.067490281 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105504778 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.514701989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385455813 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144900563 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722768483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381181051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.036577012 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146717046 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165956046 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093810907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139474409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673939212 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.027347198 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.470274432 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.985791098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.468202416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676224959 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122066638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119933156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09470058 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.021084465 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092259407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122825178 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093499032 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704382161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426934305 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09570552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.46603222 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092573592 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12634151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383924884 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123676724 seconds)
  done (took 17.300579562 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.098251375 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173568854 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098716266 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138162227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123565208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094738136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.128292859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094730042 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179746899 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122506216 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111551935 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122333522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126164264 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095904648 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142229655 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092822426 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.1256123 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093805488 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121928791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122383309 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112968335 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120553759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094824306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121531462 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093875069 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135985957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122842505 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093542475 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121320976 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099529059 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127551845 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095287785 seconds)
  done (took 4.83465066 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143602108 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18290082 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129104777 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127056272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168857621 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124899196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199668154 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118999561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182121473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123463111 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139490833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093595051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157268555 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122313825 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114680527 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121246161 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097040705 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122686173 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09436247 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123795872 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140766837 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094235355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122768544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094476557 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123783449 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108133645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123646433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121448512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094700542 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127085045 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099944879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124611581 seconds)
  done (took 5.159608044 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099828365 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125683028 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108991312 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138840003 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095776702 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126071239 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.09834875 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124945127 seconds)
  done (took 2.011391324 seconds)
done (took 30.39755766 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113901845 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127730814 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107828648 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135431581 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10360404 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132619805 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092546134 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134258585 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13405062 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103383968 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137691559 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092474264 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122990555 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093096354 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135676101 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099099285 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133796217 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103050883 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134384011 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132397962 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095578835 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133912681 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103612809 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134372596 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104161152 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133159735 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13758062 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100207136 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123362082 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095440702 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124957799 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104125685 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124162668 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106216458 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12778736 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097117307 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124475794 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094408855 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133048583 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13337069 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100850376 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133805558 seconds)
  done (took 6.018410548 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109686621 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139730268 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105225817 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081696322 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116848215 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08163565 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138052122 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07871275 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110129233 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107810645 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074728761 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106427395 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078387984 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101948154 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077571061 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075804705 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108103721 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076728693 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076864115 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106537936 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080438295 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073101853 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108630641 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079237925 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074720245 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111197711 seconds)
  done (took 3.580987692 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102895409 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135031507 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113711301 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185118842 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161717193 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100111167 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132438441 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140150309 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109314896 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120669126 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096515937 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150594501 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110686411 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130197732 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.0923357 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137677924 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135616359 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095305656 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129114116 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113080119 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138694677 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10346399 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141451083 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13230537 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093186583 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123325914 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097094803 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135540604 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097507216 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131752763 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097191977 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125972303 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123112706 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10581871 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127085838 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09490589 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142457865 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103506428 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130875149 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093152777 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130427335 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122273907 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11439153 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161743397 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092449151 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129854774 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.096123188 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132728706 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122456404 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111550619 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131974081 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092652165 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125533718 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092833414 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122339154 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107301038 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124993494 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095545548 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132891981 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127664613 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105913197 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126147099 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109393945 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123069519 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100950387 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122051216 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094232291 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121179262 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144467657 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096206124 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162348929 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094769879 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124742513 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.103092578 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130415163 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128895736 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095044816 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138135044 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103531708 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125739695 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102405974 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127416567 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096739836 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140404522 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124008857 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095799392 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123273781 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100296897 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124493502 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094302534 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136633815 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092862533 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127392528 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111125739 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122546493 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122607689 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.1000678 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126936142 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092656957 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136762601 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09993608 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124030862 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104101492 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123515433 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125434902 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104126885 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127087934 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094081228 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127502216 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10032878 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124349025 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094139509 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125351904 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095331504 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132678307 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129317801 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099619867 seconds)
  done (took 14.88842896 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232079042 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215899218 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20793717 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.293546998 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135769571 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115506817 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214601491 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156136961 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124091861 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161082021 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173156941 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182873262 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.138842222 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.212655183 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171932265 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093900237 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143914409 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135685886 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245711084 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259495283 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144226715 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102226501 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162837397 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160683889 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138158447 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102722455 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.14071346 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135022348 seconds)
  done (took 5.822316949 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.110781298 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156560247 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099346938 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145188308 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150098259 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092595873 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12846009 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09502768 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136355894 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137139829 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093427713 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1303814 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101207616 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132832499 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124597939 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104134757 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132836258 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095304458 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127623804 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097305357 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134052667 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103074457 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128105412 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122212625 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103809356 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122975355 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087709813 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143068396 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123119724 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116169732 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122387832 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102689886 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138300683 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094673754 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124428709 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095747726 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127476466 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095749657 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12634223 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092215936 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124075306 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077668245 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122930212 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137146838 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101128982 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080643883 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130936071 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128478257 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095471553 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121155635 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097212197 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126603558 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098253528 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131496275 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097292579 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124677113 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097500511 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116672292 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100636946 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126080154 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085438478 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122363245 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099547426 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118692226 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101764373 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128373534 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093004363 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125697782 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097806848 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129975365 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096118562 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130007379 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090990416 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12688645 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096428231 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129442453 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125992111 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093035144 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123134793 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094181589 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075070571 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12471401 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073988254 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12714088 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092408655 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123076145 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096210996 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130737142 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139179692 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096928749 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133325368 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09594245 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12412787 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097892821 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114284109 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09721072 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141434894 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142179677 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09476162 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122307577 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108570612 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127258001 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09373153 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106944667 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10299136 seconds)
  done (took 13.042412712 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131646215 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154892304 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125254571 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112230585 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.1574415 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159107215 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101694697 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130951832 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09571382 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.14313954 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094556324 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132366217 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094374679 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138025055 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15808184 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104095104 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126636654 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108803127 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12944423 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169988301 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111168817 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142988814 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111199572 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124670797 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130115828 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111250644 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161873753 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108037173 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137526679 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142892481 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108424132 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16156801 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143470099 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099447386 seconds)
  done (took 5.493402785 seconds)
done (took 49.938813212 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.216128794 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.440356642 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.191436743 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.130079829 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.196128126 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.193414657 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205744688 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.192404056 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.83330482 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.193594406 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.445567251 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.796110668 seconds)
done (took 60.156323814 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.236991462 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.346432416 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474411744 seconds)
  done (took 3.938097727 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.728312227 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.140665465 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.458072244 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.193908112 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.192022126 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.486276974 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.855882194 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.543107247 seconds)
  done (took 27.988587781 seconds)
done (took 42.015230815 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.174952356 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.218901772 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.196330888 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.168808743 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.305253217 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.22072193 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.605768261 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.225742144 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.22126061 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.177938932 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.230775317 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194997558 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.199458017 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.513575737 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.202239514 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.198705666 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.268415511 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.759439229 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.603647313 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.206643318 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.213475618 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.224643159 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.210857186 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.20216063 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.270842492 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.2081146 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194832006 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.194518528 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.722125426 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.198659923 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.206540008 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.723062557 seconds)
  done (took 190.582234872 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.197764862 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.27374044 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.335532548 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.222023915 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.625137374 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.40031163 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.343355927 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.711208059 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.217568731 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.205135065 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.433008823 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.19984333 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.499613773 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.244071511 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.225649903 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.258353421 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.38072969 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.507936302 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.238201929 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.360812246 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.212953056 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.427972604 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.515756049 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.390231857 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.23961884 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.239179442 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.200710408 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.215511776 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.388217085 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.316730299 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.20494285 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.244633373 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.818841103 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.050370782 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.205318235 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.220299317 seconds)
  done (took 149.889626207 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.195609626 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.195463694 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200761997 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.230110471 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194100205 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.777227914 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781426442 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.72370556 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.195780568 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.693204196 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.600783936 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.505539331 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.200474098 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294698534 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.212619681 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200452921 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.212939104 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.244612184 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197501787 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199831073 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783429626 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.215779562 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.30513767 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.373236938 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.21626669 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229532234 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593110626 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199338852 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233764404 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535078339 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.250254035 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196041796 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.596773208 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.387423206 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312483533 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199058781 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233009662 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198647387 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.479529761 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197712647 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197535263 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.203321851 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.20456788 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.896491919 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.200252619 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779212775 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204746556 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.154352775 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198290242 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.197526388 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201790227 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.465143449 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.879432014 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.22093917 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198249723 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.202601733 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197322337 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199133209 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.230832992 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.439428497 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.297933639 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.220106079 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.204409465 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2320101 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202275163 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.421115856 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202868098 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.702917824 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.255190437 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.303026266 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.7811722 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201790315 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298238906 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.31960752 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197377219 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198790414 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198383917 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.197859036 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.309911815 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199597145 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.607213682 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.375481499 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.218215384 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.611288809 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.202858614 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295436539 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.20001937 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.606704665 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203795989 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199921752 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958673451 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297315209 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199964422 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199880844 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201454574 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.609203787 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784064553 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.484839996 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.204788479 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.46981606 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.201282901 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.627592681 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.756492488 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.887972302 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205049018 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313655168 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.37679241 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.222852943 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.201719754 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.611754257 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.205186638 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.26030645 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.201638599 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.598441341 seconds)
  done (took 365.939265145 seconds)
done (took 707.533382003 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.79243302 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.78350836 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.895433538 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.776512373 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.74234174 seconds)
  done (took 10.116009369 seconds)
done (took 11.242347095 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.392592572 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.395398895 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265811572 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.39408057 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237211139 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.409695849 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.373717523 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225388663 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302327393 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.283449777 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.303746456 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256814983 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.237342666 seconds)
  done (took 18.204611297 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.520933529 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.514515062 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267464887 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.521927004 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244622112 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523022309 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403560487 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.411964669 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422233377 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236269303 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216574769 seconds)
  done (took 16.410593048 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.542317054 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528114685 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273131318 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.526829638 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246227613 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.528190466 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409425979 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.442805571 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418300887 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.236516135 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21683877 seconds)
  done (took 16.498312271 seconds)
done (took 52.241622752 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.212981172 seconds)
  done (took 2.341812934 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246131148 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.412207761 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.231968533 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.220688253 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.213819696 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.215100479 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.220778263 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.214303284 seconds)
  done (took 11.104870073 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213059236 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21136916 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.212760244 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213785038 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.209425871 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.210310353 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.209529874 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.21263474 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.20967429 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.2119747 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.210253517 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209107375 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212746741 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.210739284 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212119964 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210747514 seconds)
  done (took 20.5097308 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.213963744 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209742863 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210659229 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.211148049 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.210506857 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210825814 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.2114264 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210367617 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210169747 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211453102 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.211949302 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212026021 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211950687 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.210898745 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211453023 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.21069121 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.210525426 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.210825934 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215941405 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211903794 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.211326983 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.210949514 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210736385 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210653898 seconds)
  done (took 30.204169704 seconds)
done (took 65.289123972 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.841103092 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.855196666 seconds)
  done (took 6.827025135 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.211173281 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.211174447 seconds)
  done (took 3.552263757 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.210692168 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21164652 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210199969 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.209725821 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210871319 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211145374 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.211702479 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.211935645 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.21112825 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.211880273 seconds)
  done (took 13.240029325 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211344311 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210857341 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209575386 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.21130838 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211066807 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209481216 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211824314 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213166098 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210603497 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.209665811 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.210871828 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.208014627 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.21142429 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.210345731 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21189394 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209904806 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.208612981 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.208367914 seconds)
  done (took 22.917789199 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.211092544 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.211139887 seconds)
  done (took 3.549953903 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.207244426 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209751757 seconds)
    (3/7) benchmarking "month"...
    done (took 1.208392558 seconds)
    (4/7) benchmarking "year"...
    done (took 1.208462442 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.209172139 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.208962581 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.207672702 seconds)
  done (took 9.587698629 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.212637041 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.381029829 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.460694386 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.840030193 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.211594398 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.213821315 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.050043856 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.214571972 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.217412664 seconds)
  done (took 13.930343541 seconds)
done (took 74.735463636 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.222810977 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.220177613 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.47739861 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.220461773 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.222560144 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.503516296 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.217011812 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.330250878 seconds)
done (took 37.543163204 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.217534813 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.184743613 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.991765284 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.198194263 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.267276204 seconds)
  done (took 18.77104489 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.238129404 seconds)
    (2/2) benchmarking "read"...
    done (took 1.549901111 seconds)
  done (took 4.917270183 seconds)
done (took 31.036197428 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213165885 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.213351475 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.211648287 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.212841654 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214366585 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.210294528 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211352601 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.211666086 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.212313016 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.214237007 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.21234219 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.213201676 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214124925 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210384206 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21104653 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21369624 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.210612156 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211182277 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.213936436 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212513377 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212887702 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.210329368 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210215267 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.210570386 seconds)
  done (took 30.222995507 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.213858079 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.210926809 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214027309 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212811869 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211526482 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213620481 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.213803212 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.212645003 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.215022456 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213491007 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212262024 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.213061641 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.213978677 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.212313101 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214739269 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.212559068 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.215383232 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211851986 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215130011 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211799596 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.21472591 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212530723 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.212282565 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214205454 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212262057 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211927537 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.215278273 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.212689234 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214659339 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.213025201 seconds)
  done (took 37.530560428 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.220324695 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.222564301 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215776353 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.215872716 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215726317 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215024853 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.21631466 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215807475 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.215383108 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.216453469 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.215591375 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.216311418 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.21570248 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.216900887 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.217046059 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.217046973 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.216519958 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.216638458 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.216312868 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.216817731 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.217438328 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.216961344 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217277512 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215675073 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217729856 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.216390239 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.218096267 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.216983073 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.216898694 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.216673133 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.218494438 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.217999114 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.217614988 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.218056708 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.217828982 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.217675728 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.223908944 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.225063345 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.21753147 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.218251354 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217356026 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.217687204 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.221626042 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.217660242 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216282727 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217834446 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217862983 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.218773429 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.218444616 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.21818947 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.218840905 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.218284495 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.218196411 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.21836274 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.217697529 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.2182115 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.218389023 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.218371984 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.218624158 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217989531 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.219173738 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.218700093 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.218913455 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.218624889 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.219081544 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.218606222 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.220198618 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.218550031 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.219651574 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.219783919 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.220126624 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.220938601 seconds)
  done (took 88.828737934 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.21974884 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.218325176 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217777832 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217177835 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217422903 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220311797 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216787255 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218760004 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216989105 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.218602504 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222276087 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217383036 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216718806 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22036878 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21954217 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216326888 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.21970444 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217064484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.223120492 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2183343 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219999432 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217905971 seconds)
  done (took 27.947038715 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220439215 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222261894 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.21705081 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220829954 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217752003 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.219463006 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219024016 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222485989 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219100576 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216534552 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216849855 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220822483 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.21749727 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217204238 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216516721 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218618086 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220314463 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218871138 seconds)
  done (took 23.078431771 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.217664688 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.217121055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219219266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217088566 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.217209143 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.220672881 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217264785 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22027239 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.218896094 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218247073 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.220662577 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219486458 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.219836858 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216873434 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219571273 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.217150852 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.220262249 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217725203 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220187291 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217798981 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.217762326 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220266206 seconds)
  done (took 27.947901626 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220727052 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.21988305 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.218705023 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.218855654 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.218771764 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220547692 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.220022402 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.217869432 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220127401 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221139204 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219506505 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221233366 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.219977121 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.219861606 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.218709251 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218438463 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221307571 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220037089 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222140261 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.219428771 seconds)
  done (took 25.535392978 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222343672 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222628033 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222498404 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222732177 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2222184 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.223369559 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.222228933 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.22349683 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223493021 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224195939 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224053391 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.223517616 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222458225 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222755375 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223035565 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22434367 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223784841 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223891801 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222528994 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223758957 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.224215251 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224458346 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224037553 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2241289 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.225130643 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22479831 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224608595 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.225246532 seconds)
  done (took 35.399008782 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225412467 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223547297 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.222218027 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.222491156 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.222205409 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.221934221 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.222049533 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.222207863 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.224042194 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.222079226 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.225112593 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.224135614 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224965536 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.225066178 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224742046 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.225388511 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22373433 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.222063242 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224891885 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221992581 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.227104063 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225458594 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.224768214 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222349254 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221887696 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.225707422 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222769398 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.223005579 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225236077 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.222955513 seconds)
  done (took 37.853046396 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.243186311 seconds)
    (2/2) benchmarking "in"...
    done (took 1.243319179 seconds)
  done (took 3.628499546 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.222730506 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226187845 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.225304681 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224286304 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.223783681 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.22637274 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22666577 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224168032 seconds)
  done (took 10.940899714 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226594655 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.226830264 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.226967242 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.227595079 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.227100548 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.227066932 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234189192 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.246947435 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.227247936 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.227058015 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.233844868 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233598735 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.230208118 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.227181329 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.227781677 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.229381446 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.227811029 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226558273 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227084125 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.228366599 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228725397 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229663073 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229464982 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.225074536 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.229703823 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.238811748 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.251152687 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.227945278 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228207937 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.231741462 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.228114553 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.224986057 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.22930858 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.227785138 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227668602 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.226821441 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.236260503 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246426934 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.234549367 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.246526526 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228717093 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.22398009 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.229110961 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.230491965 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230487599 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.227198057 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228941702 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225013855 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.229082256 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.23159876 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.232813821 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227100713 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.224638783 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230740766 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.229154743 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235377395 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246690763 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.231003967 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.23660238 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.238820784 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.260511873 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.252199022 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229222321 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.227223994 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239233645 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.251786256 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234458056 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245346479 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224350346 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226756493 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.234070047 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259392805 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.252206067 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.227743683 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228862813 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.229171699 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22937971 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228915183 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235606771 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.248717579 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.229440069 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230201362 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239541369 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252957591 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.230417642 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.227220472 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.229103321 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.229079911 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.231693567 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24029989 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.247514269 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.230704802 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23010601 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.228803809 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.230551618 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.230744177 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.229458797 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229571916 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.227309741 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.229761413 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230394608 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233768187 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.238408535 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228624462 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228953559 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.236870417 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.248002219 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231249952 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.236405814 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.231562197 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23114509 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.232726332 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.238611608 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.230813697 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233917342 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.239132097 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.230664364 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.230805583 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.231452468 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.231371076 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241110952 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.256476146 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.229442665 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.232010418 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.237019451 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.241175302 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232328567 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.233887834 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.231308477 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.226805376 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.228097121 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.23425053 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.232175402 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.23124027 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232824096 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233945234 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.229609012 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.231734115 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.233035604 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.233047784 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.233831519 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.233097188 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.230654535 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.23398737 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.2333068 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.234871079 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.238009731 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.250788452 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.232934692 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.233418811 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.229641343 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.23451378 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.233344399 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.23187435 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.230684777 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234603633 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.234501265 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.23471775 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234354026 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.234012806 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233431275 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.23347641 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240190779 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.233117916 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.238622414 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.233898495 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.230697121 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.235578858 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.234691453 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.234102412 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.235795357 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.233402337 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.237959309 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.241818679 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.238717426 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.236368034 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.239629708 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.237149855 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23760797 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237731323 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.241178841 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.247439243 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238824596 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.244669122 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.258277139 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238074005 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.238364383 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.237897722 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.23643318 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237442082 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.239903248 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.246209249 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248021898 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264744218 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.238176404 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.238921424 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.235111342 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.243347758 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.240120432 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.236093982 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.235746284 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238857592 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235834961 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.236943099 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.237138905 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.234662627 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.23630609 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.236960293 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.237211428 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.238512498 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235811117 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.238630088 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237812122 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.234448929 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239917463 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239673838 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.238052981 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.23423096 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.237547535 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.23467888 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.235386904 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239291709 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.247221298 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.237438225 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.24000412 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242479422 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.23994964 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.238782592 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.239098391 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242974335 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.240661105 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249581661 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.259003405 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.242133954 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248631589 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.258688268 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.241540722 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.241918956 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.242602475 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.241925131 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.24676465 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.247994729 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.243495359 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.24323664 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.242924965 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242341785 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242663252 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.248720853 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.255767396 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.241469812 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.241459445 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245482117 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.241829096 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.244289164 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.243874987 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.243444943 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245377918 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242650753 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241421767 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246417979 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.24222384 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.241391495 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.242721707 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246442655 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.252128084 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.248305845 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.242262258 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.246657654 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.24394298 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246873762 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.244489973 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.245117956 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.240494837 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254521502 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.269260488 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.250561058 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.264577 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.24229325 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250924205 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.262342738 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.247636857 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245459426 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245728764 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.246113396 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.245391982 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.241249353 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245819454 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.245193745 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24513152 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.247058666 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.249455976 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.246305577 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245257845 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.245895046 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.245517269 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.245100368 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.243927513 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.246058765 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246245036 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24764967 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.244546434 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247369715 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251476096 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268050308 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.245395064 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.244775766 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.245801195 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.244832456 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.248706635 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.24515673 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.247843206 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.250996841 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.246326097 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.253383151 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247175285 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252982075 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.247448787 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.251802415 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.256764187 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.24314152 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.243788826 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.246720509 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.244982513 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25295475 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268432319 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247732928 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.249830353 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247951079 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.246887858 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.247318324 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.246017518 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247802879 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.245207217 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25435302 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.266413559 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.249368492 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246500553 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.240057222 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.24678018 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.246177101 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245491537 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247906151 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.246013723 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246735007 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.245213928 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.244237266 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.243445563 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.246372624 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.24480822 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.240725489 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.245261312 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254780032 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.267737401 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25136376 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.248290708 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.252318759 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267017353 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.252671625 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.270114985 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.248883725 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.249238522 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.245723365 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.248867457 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.246685468 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.250569056 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.247029866 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.246733714 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.250801812 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.247506879 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.248871961 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.245140999 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.249553237 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.247849909 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257081058 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270723439 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.251514895 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249867089 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.246865978 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.249390038 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.253918031 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.251251909 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.245863801 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.251693739 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25920827 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259293702 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.24957488 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.249683312 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249410411 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248824708 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.246809136 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.247800833 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.250543239 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.249078912 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.249967023 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.249235884 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251168092 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.24548114 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.246447685 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.251188904 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250019793 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.261614455 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.272694907 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.250419261 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251598844 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.252402124 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.250313533 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.250239386 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.251930363 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254633609 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2507201 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.254616578 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256540619 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.259515686 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.252730631 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.24786552 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.251623562 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.24889553 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.253886706 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248506584 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.252998486 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.24983219 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.254043241 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.252933723 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.253360951 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.250953225 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.250376215 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.249711485 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254164048 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252489474 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.26016969 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252459717 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.246760011 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250630125 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250697573 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.249848271 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.254029399 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.258362694 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277167916 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.265519271 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.264007444 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.258994189 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.256289724 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257642294 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.262757921 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.25483605 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.254563509 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.255126977 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.255121408 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.25518726 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.25741278 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251777099 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.264606025 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.273999638 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.252930457 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261661056 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.277718526 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254794287 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.253100413 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.258368721 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.256941052 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.248829349 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.251833017 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.254471541 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26370935 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.276633639 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253878924 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252909111 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.252528522 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.256279789 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257284667 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.258368859 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.257028143 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.253546453 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.255397368 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252810496 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256963274 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.254170384 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.257463177 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.257353776 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.259325446 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263837511 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255327136 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258252801 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.253792073 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.255450098 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257253298 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257908958 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.25509159 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.254713248 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.258136788 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.25888112 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.256183193 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.256804215 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.255948144 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.256110354 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.258296453 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258734302 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262982531 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.269706389 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.26784899 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.257230243 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.257365227 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.261152055 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.260118292 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257512914 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.258417285 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259510899 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.257827725 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.25811092 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259684943 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.2601032 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263747526 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275370508 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.273531048 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261097973 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.261759055 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263377252 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.257132461 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.253575295 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.259751124 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.258808941 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.262481918 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.267532472 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.259938755 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267930041 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279167813 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262610766 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.263522901 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.264426568 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.268553379 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.263930231 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259757963 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.258386254 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.26284148 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.278989328 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259049069 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270838134 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293928747 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.27860236 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.262290468 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.258993442 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260971908 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.259749545 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.26281055 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.259690628 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.260656306 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26235122 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.261649834 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.261144812 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266364482 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.262687237 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.258651019 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.260273303 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.262209642 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.263141062 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.260424768 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.260312749 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.260944867 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.262170314 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.2613935 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.261692591 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.26237478 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27727043 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.290086185 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.262938489 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.263111217 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.259932262 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.262783962 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.261456829 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267619649 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.271401921 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.263241762 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.260719574 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.264981037 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262839831 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.263078828 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.263359682 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.265504984 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261801684 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.263079214 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.273006906 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290372822 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.26583284 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.26324485 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26049173 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.264805584 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264243074 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266006289 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262354156 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.266641082 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.264710259 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264064206 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.261951355 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.264009535 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.264877978 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.271337996 seconds)
  done (took 744.444427669 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265666354 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260995177 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263637608 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.261794165 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260380657 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262977906 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259994093 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.262624277 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.2619978 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260844346 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.26170525 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262707095 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263113246 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262276113 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263689942 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.263877526 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26325536 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.261346208 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262708303 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261830311 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2634373 seconds)
  done (took 27.687576609 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.265647521 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.262506425 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.260286878 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2640819 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26220583 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.264163425 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.264055554 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.265961224 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.267362435 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260857436 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26381298 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.265979037 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.263593419 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.263162134 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262375514 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266633521 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.265964464 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.265858584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.268260598 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264377627 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265464256 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.265373002 seconds)
  done (took 28.993225028 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.268207427 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.266170888 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.267172155 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.26096245 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.267186715 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.262607048 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.265436946 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.264174213 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.26755974 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.266278143 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.26607733 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.266547375 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.274647014 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.269939266 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.266241351 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.263859874 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.409960705 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.266106549 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.26638788 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.264939889 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.266102777 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.271741358 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.284795823 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.263552271 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.263383299 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.265513899 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.267347855 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.268072512 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268494078 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.268656788 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.273978314 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.266645462 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.268754524 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.268743705 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.266070534 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.268150787 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.270668 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.269596429 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.267325447 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.26894067 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.279871238 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.292622317 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.269385933 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.271925848 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.291175349 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.269251584 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.271127496 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.274664094 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.269193848 seconds)
  done (took 63.516139723 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.270796801 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.269409761 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.265812055 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.268863255 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.268034184 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.267904912 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.26796233 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267180342 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.267916958 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.266140764 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.271148531 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.265376627 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.266012742 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.270498869 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.270990369 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265784397 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.267188726 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.267142567 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.264886063 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.267071835 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.267783139 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.268909755 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.269556976 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.263676824 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.267398133 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.265002204 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.267175768 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.267453803 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.266528095 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.262532194 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.26748756 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27042117 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.267907308 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.268363831 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.268845716 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.268376653 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.267979569 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.265448299 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267445156 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.264882203 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.270380593 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.268980172 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.271737695 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.267782512 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266830365 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.267438204 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267655646 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.268372839 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.270440851 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.270727882 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.270964284 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.267277685 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.26891858 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.266827156 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.269471638 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.274038652 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.267489259 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.270002977 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.268674118 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.269834097 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.265469396 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.270887987 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.269676534 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.269762789 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.270322723 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.270327133 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.270535851 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.272722183 seconds)
  done (took 87.424711912 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269842149 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.268969929 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.270369022 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267111129 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2666256 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.271994473 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268930628 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.271896275 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.272992246 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27231084 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269197581 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.270771723 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.269413067 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269023901 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269607423 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.270479248 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269167747 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268274809 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272446351 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270559402 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.272289398 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270286582 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27237278 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.2704965 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270292034 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272608947 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27015399 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.271738644 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27216656 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.272191827 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.27045174 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.272029879 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.271524193 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.270545706 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.27444014 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.273918207 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.270588473 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273924033 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.273195627 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.273613401 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.271720754 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274159796 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.272322642 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.273464771 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273350463 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.272554486 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.271356756 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.271126791 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.272455802 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271568284 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.274671778 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.271995656 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.271381135 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273474377 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.272012098 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.273540997 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273806358 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.275733098 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272292551 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.274333059 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.271674986 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.276425062 seconds)
  done (took 80.031718811 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273249142 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276787523 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.272110007 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.271793601 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.273010936 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.271029408 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.275173067 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.274520235 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27757868 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.276819723 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273356185 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274060941 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274888122 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277179565 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.272274535 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273473413 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276659798 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.273903225 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277352349 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.272148337 seconds)
  done (took 26.675899862 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.276241543 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.274411592 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.272355986 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274302536 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.275900752 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.273765724 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.278993914 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277877844 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273764925 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273566371 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274923146 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274039989 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272272552 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273596526 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278198508 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272798431 seconds)
  done (took 21.584513334 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.277268233 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.278795542 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.278472454 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.278059455 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.275399267 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.274932543 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.276738113 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.273553273 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.275133478 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.277366197 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.278176174 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.276178736 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.276075168 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.276151317 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.276417947 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.275869104 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.277134128 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.2770792 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.27756188 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.277966588 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.274244308 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.273349889 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.281471895 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.281382924 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.275117014 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.276814738 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.275034309 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.275979081 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.276435808 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.279207012 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.27315143 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.278071614 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.276576532 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.274813634 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.279461126 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.278219253 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.276450058 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.27757793 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.279093896 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.278968638 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.280669693 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.275920543 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.280729277 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.278484128 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.27599077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.280387002 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.277547236 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.281025625 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.277347287 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.277891191 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.279209017 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.277614553 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.278137364 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.279866837 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.282752164 seconds)
  done (took 71.451303251 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281001464 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28075285 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.279993332 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.281018766 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.277745604 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.279556968 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.282879019 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279576162 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276062612 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.280768577 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.278925718 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283670582 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27856408 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282917711 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280412246 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282223738 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.278029104 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281057631 seconds)
  done (took 24.237137585 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279135684 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276653342 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.2801707 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.279494022 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.280009563 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281930706 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27769744 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.279292674 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281640229 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.280030413 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282434589 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.285506642 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282700879 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.282857225 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280358309 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282039878 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.281870476 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283563668 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.280914267 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280199099 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28362921 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283015346 seconds)
  done (took 29.378074226 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.283597951 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.283462831 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.282594808 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.302084334 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.30070417 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.305305218 seconds)
  done (took 8.952685115 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290841056 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283741539 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281133433 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28091153 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284284615 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282798992 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280772238 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279350853 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283747336 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28465148 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279516964 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284545035 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286106581 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278515845 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284217532 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286007152 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28175826 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280187172 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281142177 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286552454 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28323178 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285983565 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283847963 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280945207 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27966677 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284936557 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286245937 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285409476 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285036755 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285535016 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287636191 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281101974 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286732711 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285423037 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284369169 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285765224 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284387149 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288077289 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285948065 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284514966 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.283996524 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285770159 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285181745 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285214308 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284309222 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285482904 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285231531 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287251079 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282719701 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284892676 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286792772 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283396294 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285388416 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288435101 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288971258 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286372096 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289436856 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285937396 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288161411 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287949448 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282850077 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289942018 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287574708 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286011701 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292828812 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287983409 seconds)
  done (took 86.026460233 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291685907 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288934652 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287084841 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2877727 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286262512 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28773033 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284205842 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284991263 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287181649 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287350757 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291261461 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288227782 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285999101 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280916816 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283454448 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287501038 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284703127 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284163125 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284895528 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288071289 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285143878 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284238303 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28443776 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286926116 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287865862 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290873176 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284677174 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287128978 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286674963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288000115 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287307293 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286379029 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285401463 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28864709 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289546629 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286005908 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288367745 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288089683 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287658812 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288193445 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287572002 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290045433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2897901 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290102468 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289249863 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288738708 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288337393 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289110648 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288416037 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291114246 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288532497 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290567564 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287517602 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286971527 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288240306 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287461849 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286079056 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290381142 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286058181 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291011799 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291155705 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285872746 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293083917 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28900238 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288025245 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287946508 seconds)
  done (took 86.186906858 seconds)
done (took 1736.634208483 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.453634174 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.406289917 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.294601622 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.302068269 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.293663498 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.303340156 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.316855421 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.291674143 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.294221611 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.291469419 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.290217147 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.476467066 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.287065356 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.290783865 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.293352046 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.386630001 seconds)
  done (took 42.478104094 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.322699746 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.300716546 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.406853352 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.316402556 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.320135978 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.476651882 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.348507039 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.297678717 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.46360397 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.339510503 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.809942698 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.31917095 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.293483852 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.377348788 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.314274684 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.478951241 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.53764619 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.815474224 seconds)
  done (took 29.746916405 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.739785721 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.296979191 seconds)
  done (took 9.241519925 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.317942822 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.30268468 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.299609222 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.297312022 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.291596131 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.289418461 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.294680923 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.295157611 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.853044762 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.422714479 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.297689039 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.304557843 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.320055134 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.295172963 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.294266037 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332247826 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.454809984 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.29971447 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.296007671 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.30418906 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.297094334 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.38770104 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.338207145 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.297434384 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.419961172 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.862406443 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.302794887 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.305812168 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.432231863 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.298645652 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.296290562 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.296270588 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.300064653 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.911589104 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.815833243 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.305937457 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.336569268 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.307565037 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.296933723 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.46443289 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.302397338 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.305635661 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.288807831 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.803447915 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.444294217 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.412088792 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.530759741 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.322251506 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.297427972 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.358616486 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.29822379 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.297704245 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.327976005 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.068180688 seconds)
  done (took 109.418131793 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.313358866 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.683486557 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.45862863 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.317633182 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.917719344 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.948066942 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.315918698 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.574347549 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.32521436 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.29248414 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.597565791 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.800328981 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320639375 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.291883218 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.336848891 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.368075103 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290340092 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.04693702 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.312839788 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.296836721 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.78571887 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295000932 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.29833827 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.442937443 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.329742394 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.745483916 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.686940374 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.749263329 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.310380674 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.291448292 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.750122862 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.315160043 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.350698157 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.29698452 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.558710112 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.661794785 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.660695805 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.3155707 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336500123 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297317191 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.319284251 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75495275 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.649126651 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.308677463 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.309856311 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.742780149 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.307545456 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.299969398 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.302647975 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.496768327 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.160874 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.297650553 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.64619674 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.295625691 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.600652948 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.342370186 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.358172314 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771828776 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.312084091 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.385772633 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349673243 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.295385505 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.294922667 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.298294389 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.299522358 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.634375163 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.670774739 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.301378079 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.632854637 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.766005324 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.311747347 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.819498486 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.134204778 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.324617862 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.353438109 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.296226983 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.845564811 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.782075796 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.359630245 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.294933653 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.622374034 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315356226 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.573664308 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.311617192 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.319512245 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.805667113 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.305390824 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.29652841 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.297571078 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.296486066 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.914313865 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304968441 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.561885658 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.360859889 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.295826346 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.298238434 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.311455744 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297432351 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.303944229 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.300075542 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.820692463 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.32707626 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.410569599 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.319689445 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298615935 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297593601 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.297323269 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.299522456 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517391317 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.805275305 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.326109489 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298529766 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.297159235 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.299940566 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.444954527 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.301908055 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.599675793 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314128614 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298107493 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.324467528 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.912019451 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.353023641 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299327918 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.300233773 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.189073993 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.508823284 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.321085474 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.299742781 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297966287 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.315858724 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.506241004 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.319559375 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.322022677 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.303930671 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.994937783 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.349390544 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.318200771 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.834279025 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.301133327 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.150135026 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.319697156 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.300468125 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599209617 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.563457102 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.564454322 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.300627593 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.317698174 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.990217279 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321801845 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.436539057 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.318079745 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.420208165 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.498678635 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.404969104 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.30032734 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.894661836 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.300920167 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512157627 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.303852571 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59537892 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.780293166 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.320616848 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305559424 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.994804691 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.035999785 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.954097275 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.302807565 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.576121786 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.242346995 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.776715452 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.301478363 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.302121756 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.742075306 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.302370792 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.307608621 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.302027271 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.30197607 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.446797524 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474854527 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.919101944 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.305362366 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.744260645 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.331422331 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301535592 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.322826656 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.30240161 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.648253069 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.366226571 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.305293466 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.348340118 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.300847283 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.301523528 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.768036339 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.153504107 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.302786563 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.45365098 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.92847234 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.320124987 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.30514614 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.960317069 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.598556314 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.806941834 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.338679498 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.604986817 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.322484621 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341098353 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.871316206 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.383145972 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.768099969 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323468314 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.303079084 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.887715285 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.320873822 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.357316275 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.302377036 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.302287868 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.833009857 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.32040774 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.30840729 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.523209915 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323679362 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553425236 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.305990887 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.332391006 seconds)
  done (took 1102.480304567 seconds)
done (took 1294.566973994 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.3038253 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.309865442 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.288022691 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.316242767 seconds)
  done (took 26.43912043 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.319571459 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.316089068 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.316078995 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.313575076 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.316205244 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.313535806 seconds)
  done (took 9.12185276 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.378475963 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.314397061 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.312015467 seconds)
  done (took 19.226766592 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.517923328 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.58174859 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.635726519 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.483799864 seconds)
  done (took 10.444824782 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.314833921 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.313961958 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.313611047 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.320194814 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.317541454 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.318228448 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.318853293 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.317347554 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.318803143 seconds)
  done (took 13.079200294 seconds)
done (took 79.533748244 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.375129765 seconds)
    (2/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.073964166 seconds)
    (3/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.438025274 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.187766565 seconds)
    (5/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.295967817 seconds)
    (6/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.833878372 seconds)
    (7/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.766567965 seconds)
    (8/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.418831525 seconds)
    (9/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.373406377 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.553268889 seconds)
    (11/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.163004347 seconds)
    (12/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.533297008 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.353573019 seconds)
    (14/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.321893873 seconds)
    (15/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.522464158 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.351607077 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.294251344 seconds)
    (18/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.390011698 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.328727478 seconds)
    (20/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.026712551 seconds)
    (21/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.138527027 seconds)
    (22/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.300064429 seconds)
    (23/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.343981434 seconds)
    (24/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.356133149 seconds)
    (25/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.169872608 seconds)
    (26/286) benchmarking ("sort", Int64, true)...
    done (took 6.315122035 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.416800991 seconds)
    (28/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.464197011 seconds)
    (29/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.913102488 seconds)
    (30/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.294922104 seconds)
    (31/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.356987389 seconds)
    (32/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.787901032 seconds)
    (33/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.310199462 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.910196542 seconds)
    (35/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.319041698 seconds)
    (36/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.371702115 seconds)
    (37/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.289846386 seconds)
    (38/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.537925807 seconds)
    (39/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.678749113 seconds)
    (40/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.312995314 seconds)
    (41/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.31979604 seconds)
    (42/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.05506755 seconds)
    (43/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.422899483 seconds)
    (44/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.433898494 seconds)
    (45/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.288860115 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.731556942 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.587190859 seconds)
    (48/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.549635771 seconds)
    (49/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.024470511 seconds)
    (50/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.334687918 seconds)
    (51/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.907757983 seconds)
    (52/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.378092125 seconds)
    (53/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.290722011 seconds)
    (54/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.294328829 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.393514664 seconds)
    (56/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.32737039 seconds)
    (57/286) benchmarking ("sort", Float32, false)...
    done (took 5.315320893 seconds)
    (58/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.344292382 seconds)
    (59/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.335378436 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.671020934 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.731795398 seconds)
    (62/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.3415976 seconds)
    (63/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.683076592 seconds)
    (64/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.395480259 seconds)
    (65/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.786257424 seconds)
    (66/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.292647557 seconds)
    (67/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.318871558 seconds)
    (68/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.648301905 seconds)
    (69/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.31297234 seconds)
    (70/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.299130811 seconds)
    (71/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.789862011 seconds)
    (72/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.497645611 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 5.51513116 seconds)
    (74/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.332816719 seconds)
    (75/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.075648208 seconds)
    (76/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.086637674 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.302031857 seconds)
    (78/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.899391228 seconds)
    (79/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.828119746 seconds)
    (80/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.328320673 seconds)
    (81/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.160547979 seconds)
    (82/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.455824006 seconds)
    (83/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.311891109 seconds)
    (84/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.297886632 seconds)
    (85/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.320086852 seconds)
    (86/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.133460403 seconds)
    (87/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.415256125 seconds)
    (88/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.81781751 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.249405367 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.728623274 seconds)
    (91/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.342286349 seconds)
    (92/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.348739231 seconds)
    (93/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.302668925 seconds)
    (94/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.330609772 seconds)
    (95/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.805039137 seconds)
    (96/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.299617156 seconds)
    (97/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.299644764 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.275480107 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.090568298 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.518473634 seconds)
    (101/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.306949014 seconds)
    (102/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.328946717 seconds)
    (103/286) benchmarking ("sort", Int8, true)...
    done (took 6.313878659 seconds)
    (104/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.341141677 seconds)
    (105/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.029161928 seconds)
    (106/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.420872128 seconds)
    (107/286) benchmarking ("sort", BigInt, true)...
    done (took 6.315338874 seconds)
    (108/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.548022804 seconds)
    (109/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.358382825 seconds)
    (110/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.293912362 seconds)
    (111/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.400587372 seconds)
    (112/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.833525716 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.669423312 seconds)
    (114/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.633426825 seconds)
    (115/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.325179987 seconds)
    (116/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.330174828 seconds)
    (117/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.317073825 seconds)
    (118/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.734446504 seconds)
    (119/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.923479509 seconds)
    (120/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.347018033 seconds)
    (121/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.294474861 seconds)
    (122/286) benchmarking ("sort", Bool, false)...
    done (took 1.840527216 seconds)
    (123/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.355446296 seconds)
    (124/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.341668656 seconds)
    (125/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.59544142 seconds)
    (126/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.885787923 seconds)
    (127/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.158417259 seconds)
    (128/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.670633154 seconds)
    (129/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.295885351 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.08729657 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.599369751 seconds)
    (132/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.685611462 seconds)
    (133/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.300237879 seconds)
    (134/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.1739188 seconds)
    (135/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.349691614 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.335469701 seconds)
    (137/286) benchmarking ("sort", Float32, true)...
    done (took 6.315474473 seconds)
    (138/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.295807756 seconds)
    (139/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.45489967 seconds)
    (140/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.29740006 seconds)
    (141/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.785080774 seconds)
    (142/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.3545081 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.569526353 seconds)
    (144/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.133854914 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.347963562 seconds)
    (146/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.719971257 seconds)
    (147/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.501397902 seconds)
    (148/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.521925918 seconds)
    (149/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.346895274 seconds)
    (150/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.092383825 seconds)
    (151/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.790533665 seconds)
    (152/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.382101272 seconds)
    (153/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.333988962 seconds)
    (154/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.82338611 seconds)
    (155/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.423346795 seconds)
    (156/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.339757921 seconds)
    (157/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.426747411 seconds)
    (158/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.523267767 seconds)
    (159/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.295998286 seconds)
    (160/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.35017129 seconds)
    (161/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.413931444 seconds)
    (162/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.317298262 seconds)
    (163/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.361351704 seconds)
    (164/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.349457093 seconds)
    (165/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.38168602 seconds)
    (166/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.342992992 seconds)
    (167/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.668154914 seconds)
    (168/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.401849094 seconds)
    (169/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.317031414 seconds)
    (170/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.32097601 seconds)
    (171/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.841580808 seconds)
    (172/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.308826103 seconds)
    (173/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.111144824 seconds)
    (174/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.427902136 seconds)
    (175/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.416049976 seconds)
    (176/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.300544031 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.352231017 seconds)
    (178/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.402212491 seconds)
    (179/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.413447192 seconds)
    (180/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.344842574 seconds)
    (181/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.40433543 seconds)
    (182/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.689603496 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.383622823 seconds)
    (184/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.566455507 seconds)
    (185/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.411898765 seconds)
    (186/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.329326837 seconds)
    (187/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.129863239 seconds)
    (188/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.303838469 seconds)
    (189/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.400159894 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.915592005 seconds)
    (191/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.405417407 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 5.413996491 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.391871687 seconds)
    (194/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.638966912 seconds)
    (195/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.844510423 seconds)
    (196/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.305858207 seconds)
    (197/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.314895976 seconds)
    (198/286) benchmarking ("sort", Float64, true)...
    done (took 6.324959115 seconds)
    (199/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.744717296 seconds)
    (200/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.708591712 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.951648785 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.559236904 seconds)
    (203/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.416982717 seconds)
    (204/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.101274112 seconds)
    (205/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.345538773 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.261775657 seconds)
    (207/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.505397734 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.360979437 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.272874249 seconds)
    (210/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.389383543 seconds)
    (211/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.192640919 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.336068973 seconds)
    (213/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.355870574 seconds)
    (214/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.365733373 seconds)
    (215/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.347925091 seconds)
    (216/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.176353832 seconds)
    (217/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.353432966 seconds)
    (218/286) benchmarking ("sort", Float64, false)...
    done (took 5.669621509 seconds)
    (219/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.412067487 seconds)
    (220/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.331967911 seconds)
    (221/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.296949975 seconds)
    (222/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.348587345 seconds)
    (223/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.353093766 seconds)
    (224/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.44837343 seconds)
    (225/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.426151004 seconds)
    (226/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.322410638 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.027852416 seconds)
    (228/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.301583823 seconds)
    (229/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.345179774 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.216193235 seconds)
    (231/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.446828968 seconds)
    (232/286) benchmarking ("sort", Int8, false)...
    done (took 4.381198702 seconds)
    (233/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.908793143 seconds)
    (234/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.721567034 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.536585454 seconds)
    (236/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.318404297 seconds)
    (237/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.340467554 seconds)
    (238/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.303259638 seconds)
    (239/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.796171469 seconds)
    (240/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.547481374 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.354156574 seconds)
    (242/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.300692827 seconds)
    (243/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.431615428 seconds)
    (244/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.601604705 seconds)
    (245/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.139031429 seconds)
    (246/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.334231176 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.718382777 seconds)
    (248/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.301590234 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.131768471 seconds)
    (250/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.475153871 seconds)
    (251/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.945336786 seconds)
    (252/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.391983563 seconds)
    (253/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.443710837 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.97388971 seconds)
    (255/286) benchmarking ("sort", BigInt, false)...
    done (took 6.324890479 seconds)
    (256/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.561917969 seconds)
    (257/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.955747856 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.327179962 seconds)
    (259/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.310389206 seconds)
    (260/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.189305142 seconds)
    (261/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.301256741 seconds)
    (262/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.279915846 seconds)
    (263/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.780917177 seconds)
    (264/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.562599874 seconds)
    (265/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.310324173 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.406208154 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.404487831 seconds)
    (268/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.379910504 seconds)
    (269/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.921754028 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.438768977 seconds)
    (271/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.175079771 seconds)
    (272/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.44934177 seconds)
    (273/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.553674635 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.156486744 seconds)
    (275/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.605384566 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.73749908 seconds)
    (277/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.165940861 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.364618344 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.784216849 seconds)
    (280/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.344439399 seconds)
    (281/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.308857753 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.983901283 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.351307278 seconds)
    (284/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.302471225 seconds)
    (285/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.69495951 seconds)
    (286/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.706342531 seconds)
  done (took 935.781584851 seconds)
done (took 937.006898863 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.356106319 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.352399823 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.334564749 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.355972556 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.445902335 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.358860929 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.343226345 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.337710371 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.38263342 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.383387392 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.334614596 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.356435768 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.336441535 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.334289648 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.333900488 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35107281 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.406284849 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.341918336 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.351409847 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.343148043 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.351993771 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.333375346 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.383420508 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.358401314 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.338376146 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.337119739 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.340263126 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.356194047 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.447837692 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.338542242 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.338452756 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.346663804 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.406663504 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.340392456 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.330657066 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.355550963 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.348184523 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.346784087 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.339400787 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.369433386 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.824975936 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.358666731 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.337548013 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.336634926 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.337848387 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.340086446 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.338984753 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.343195688 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352149785 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352893668 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.828439 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.37526669 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.342108536 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.33894275 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.348698958 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.338455913 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.341092929 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355851682 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.357532117 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355949396 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.394435405 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.348310834 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.340357776 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.354839437 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.346026737 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.870436427 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.357264103 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.343779906 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.824057758 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.36712021 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.870632244 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.370896334 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.339909342 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.352746444 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.37167134 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.393351134 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.340509507 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.338820488 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.346187971 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.337288489 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.348503239 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354501807 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.344458874 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.33951568 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.353235194 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.363289596 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.349617555 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.339725062 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.348830114 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.358961219 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.347495865 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.350989873 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.343827283 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.335626626 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.354494547 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.345858989 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.34504685 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.343993207 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.344347082 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.352062538 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.82414655 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381193029 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.337729175 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.338382034 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.339884665 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.355494972 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.826422391 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.366614287 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.364744067 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.388799551 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.342879577 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.367202274 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.346735106 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360665828 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.351222464 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.345553052 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.338159001 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.372301701 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.82025194 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.380841998 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.343577238 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.341593085 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36056424 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.343985018 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.339044811 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.382316536 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.344154592 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358736009 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.46345843 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.352443872 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.375514496 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.34106302 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.347216667 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.366951625 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.363242705 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.37496306 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.345366035 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360335485 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.358828239 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.340531795 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.354696288 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.353451161 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.345225038 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.348863921 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.336603781 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.36765408 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356535859 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357025808 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.364051208 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.464022703 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.341626031 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.372941503 seconds)
done (took 227.089098571 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.404105182 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.339217714 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.426404796 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.341313117 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.440869153 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.443540595 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.338088268 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339048963 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.339049446 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.720978034 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.338771615 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.339357732 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.341750075 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.339121733 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.424054102 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.342087041 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.339666837 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.683643855 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.342600234 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.413631937 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.337586087 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.340123667 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.340976313 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.722941405 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.342198945 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.33716059 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.411685068 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.342512799 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.738334545 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.337003259 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.339370024 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.743856463 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.43276878 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.360645633 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.353395341 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.350035132 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.445130261 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.36235095 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.426258024 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.42387446 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.428808355 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.381775815 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.337555316 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.343498824 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.343796699 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.346034776 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.341933461 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.370583585 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.339925802 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.341553701 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.686461808 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.352180666 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.351607924 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.344459524 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.342970742 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.364012979 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.344414164 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.344762783 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.434024926 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.346578552 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.407232223 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.725773882 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.725721714 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.345427984 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.342600877 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.341815351 seconds)
  done (took 149.150309848 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.412226691 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.416942836 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.458406896 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.363175154 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.394450176 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.462223394 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.362948263 seconds)
  done (took 11.123157618 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.351400992 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.346633702 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.394116503 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396182106 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.348077309 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.524069 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346200753 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.358118475 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.344149875 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.398822599 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.347847815 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348392221 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.352821033 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.340214522 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.393797349 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.35752865 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.461937096 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.347463774 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.346993899 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.503846955 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344239527 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.354444392 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.399549271 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.357811138 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.348554168 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.351841127 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.157037538 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.347700076 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345566138 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.348061971 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345549209 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.425422026 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.348965117 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.344740329 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344405829 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.46181575 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.347460911 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345244721 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.3494029 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.340309444 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.348476519 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.348861445 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.347887024 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.345951984 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.349118095 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.371131879 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.348408488 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.35008405 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.348124215 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.348769949 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.399681481 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.350008295 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.347027805 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.347076202 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.405756183 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356091259 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.349468915 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.347132455 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351730839 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.346695134 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.50618 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.398161441 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.351117131 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398591282 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.349322543 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.349844493 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.350870203 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.349781511 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403616461 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.348631026 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.398822926 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.346376096 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.537427011 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.37284915 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.352273431 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.352219717 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.352973314 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350893937 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.3493443 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.355505811 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.347353596 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.352049153 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.35600894 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348209509 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348148195 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.519292309 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459154615 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.348819975 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.364581223 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.356889432 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.350089204 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.405331003 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.35054015 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.349030102 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.403357212 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.466885366 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.405468588 seconds)
  done (took 155.084609351 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.357483183 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.359993282 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.352860867 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.36908316 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.351301593 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.351520115 seconds)
  done (took 9.400885741 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.354860517 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.353480915 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.354112114 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.352940162 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.353089497 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.355093294 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.352672269 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354318009 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.358962308 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.352361662 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.355260169 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.355193619 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.354752602 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.354716191 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.354154596 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.353130674 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.352229989 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.34984784 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.354986591 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.354543637 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.461147409 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.354822169 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355411341 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.356213815 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.360567341 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.354267298 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363372602 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.35335064 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.354476548 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.360477898 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.373744552 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.357066149 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.357546156 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.36182946 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.358793946 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.355456871 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359842542 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.356002334 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355135661 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.357677424 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.35830967 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357074839 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.355076236 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.358670202 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.358813482 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.36353631 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.362752386 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364809126 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.357366197 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.35955738 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.358061238 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.357776422 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.357837803 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.358536729 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.359985285 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379645292 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363323768 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.357689805 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.358355887 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.359758998 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.360973728 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.358408092 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.359381839 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.362469149 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.356600131 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.360897351 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.359867838 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362692119 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358337559 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.358549662 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.360174014 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.355574459 seconds)
  done (took 100.13012432 seconds)
done (took 426.136510181 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.800833878 seconds)
  done (took 8.064565346 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.514973223 seconds)
  done (took 7.788404113 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.492560675 seconds)
  done (took 22.769337065 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.388652513 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.434161528 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.366183258 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.352300496 seconds)
  done (took 26.811870398 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.800574763 seconds)
  done (took 8.065853445 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.350598402 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.369487765 seconds)
  done (took 13.988261048 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.371832093 seconds)
  done (took 7.636693999 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.542372904 seconds)
  done (took 7.820420338 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.364379317 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.369038907 seconds)
  done (took 14.019118646 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.331338339 seconds)
  done (took 7.596657072 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.242568507 seconds)
  done (took 12.514461894 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.367843693 seconds)
  done (took 7.642425384 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.401573897 seconds)
  done (took 7.667074748 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.553743685 seconds)
  done (took 9.819877931 seconds)
done (took 163.470997304 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.352915107 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.360675096 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.355904096 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.351975431 seconds)
  done (took 26.688113002 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.395260374 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.394036263 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.393859001 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.404730411 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.396176401 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.395090044 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.385602235 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.385331909 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.404979663 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.398672752 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.396827756 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.395638554 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.393889187 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.385217973 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.397503651 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.400208932 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.405187926 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.411576588 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.387120197 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.396660468 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.3618861 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.405654347 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.396181812 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.361226695 seconds)
  done (took 34.715887042 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.880470931 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.433318308 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.513759862 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.414056068 seconds)
  done (took 7.509039111 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.414270462 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.414107506 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.426698044 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.466808467 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.491765999 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.423683962 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.386275411 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.38193808 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.370320021 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.415591691 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.490528839 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.431499844 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.49809434 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.362405168 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.549214447 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.362118466 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.362773012 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.413898742 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.465830966 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.49421581 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.362936059 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.413487138 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.419102507 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.430820911 seconds)
  done (took 35.518897101 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.361156554 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.381119187 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.362107133 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.359941978 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.370967483 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362096096 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.361075425 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.362940835 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.362220543 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.369449806 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.362145291 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.375329859 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.363295146 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.361781725 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.370118383 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.363552306 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.368817859 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.362154513 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.363770203 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.369269332 seconds)
  done (took 28.582415691 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.357290911 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.287043615 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.707999643 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.612633747 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.357257352 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.362878209 seconds)
  done (took 28.955867853 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.435621016 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.595307901 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.367305827 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.732619213 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.835070167 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.388747785 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.36416018 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.614233239 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.947192072 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.935872177 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.429829779 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.439347652 seconds)
  done (took 20.362456022 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.365663308 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.365527553 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.377690443 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.379666646 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.419469775 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.390304682 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.373543239 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.357484996 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.425362733 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.448298907 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.388498312 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.42162515 seconds)
  done (took 37.988191123 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446406888 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404206987 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.361870955 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425699077 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.083901848 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572803439 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368651017 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.110933966 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.391543673 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634013797 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361063289 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465624337 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617287353 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367740967 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.368343315 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.375273998 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613006714 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852371018 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367411693 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.489569239 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391488732 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.374149684 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.561308376 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605887339 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598953587 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.341589068 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.623482975 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.139602821 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656161555 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382375721 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37391603 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364296781 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637450494 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037882691 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484728635 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581639075 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395442576 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.994239505 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.349439231 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.474097903 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371871506 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365889469 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375097361 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363577973 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.297207975 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366639892 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118220959 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.395179176 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.075357174 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363727027 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629964763 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460638021 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.36862461 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.933571685 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387466817 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.375688445 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.369284009 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457361845 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960868007 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.750084761 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374641495 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.304528957 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369705937 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.485764205 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044236281 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.393971974 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.36863291 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370871012 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299490247 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.477599486 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.389372289 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511747171 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.39139467 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015465364 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092014236 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.39015248 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296006696 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911932683 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.367000019 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.322397306 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592612479 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143805301 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30023717 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.307999264 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301609731 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10051073 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382315068 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.934161621 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39505745 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132709347 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.612301416 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404569398 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390014012 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590277063 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.244196629 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36710667 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.379718057 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494776985 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38940229 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.117692071 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32836022 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.3729963 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623251228 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.578471971 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378068617 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.38946798 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893875384 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393889547 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.406766738 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.368349031 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.59257564 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.981020919 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407548944 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.754942346 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390237822 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.145101947 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128859013 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378111874 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.378878599 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383207722 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646212815 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.148367102 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.535504561 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437605871 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372263956 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.36872197 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.426506746 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.21995836 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.253115469 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.573158758 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40268597 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.385735285 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.370000001 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313537697 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.366571372 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374367591 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.167095502 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.592021015 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374244182 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650287048 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303774692 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518153705 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.379694467 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.592047185 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.592883231 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.392169761 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629018838 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370951435 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.381625146 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388328374 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387766961 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470219724 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393887624 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.369021727 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63287336 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.37536536 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.374634046 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.587842105 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.148566739 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375676652 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.377495153 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393274872 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969169549 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374141747 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378816452 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260528795 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.384057369 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43938932 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376150281 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591821932 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.67127524 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399691089 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.394299347 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.378462426 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600864153 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382839586 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.439060007 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448523635 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.870307115 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.987707255 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401969414 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.305315396 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.08466283 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.065687042 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372550266 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.567566741 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37371951 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592765842 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40958155 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373482274 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.963467932 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392312095 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.450293136 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.379195807 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384873736 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.378047747 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373285269 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.662070889 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.825810783 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382010206 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.405797569 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516229103 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.386901741 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307988902 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.89145729 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378116459 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372977045 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.14892924 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40862086 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.440379545 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259674094 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65911909 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.377168611 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641497819 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.545819094 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.407581366 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.378108454 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374077872 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393984549 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.401548723 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400286494 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.384748447 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.456461499 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.814113802 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945952064 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096056804 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944586188 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.702765363 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.403755112 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.281115432 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.127652661 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336673651 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.030865062 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621545195 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151505498 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346174813 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880142049 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.633799673 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176604181 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643203806 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.603404546 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.68064285 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.413721932 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646721011 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58944886 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409655536 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.378761758 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.312581624 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.657664708 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969890909 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403624147 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457540246 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13168613 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404144393 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.163805724 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.446431931 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.137925944 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807816946 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.947702645 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.763932461 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376013348 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401417902 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264702497 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410940771 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.904544474 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017679959 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.4000084 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.885125833 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33945374 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600574754 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.413936741 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.37261049 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.970703107 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.375368923 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.631885878 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647053891 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3208187 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38003321 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932767103 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.259361985 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.384485727 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378586763 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172693933 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394463891 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681770236 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.392213804 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.657752915 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398037695 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312557963 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31341342 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.070770618 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382862486 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355118202 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896450297 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.386306489 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418979281 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38509826 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248345498 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63555706 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.394243884 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.980999223 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629912424 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395727976 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410097659 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.384338057 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3945712 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.367802328 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277300146 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615180704 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39200792 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628537078 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.417649767 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.293824715 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.448579878 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598890402 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.262952414 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381783158 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640434517 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.118128676 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.389330075 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110644032 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431976669 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.840981877 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400704 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380338488 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42220819 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47135227 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604184831 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.418662932 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.393241266 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806422721 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414088252 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39155524 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.395122439 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476997127 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.807883273 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.669983501 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.154146621 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987469517 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198697144 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011822502 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680423344 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389739021 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391674541 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319149673 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530148164 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909749633 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656173195 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512382073 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.387181665 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426826956 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382543049 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394099004 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602114757 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657951651 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.253001532 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382502476 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04927787 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.265630132 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39395748 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.596086622 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899143375 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969715205 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491452247 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39168276 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.146448445 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685211929 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.475042703 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384323903 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.973444839 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.396852459 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.147580186 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.397783602 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393196379 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533150007 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653092354 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064594623 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.422438086 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.541263587 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.1574416 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.485874307 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640355865 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.887728699 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616958328 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009202827 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.130397801 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656184265 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455699395 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610047171 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.520610442 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53355735 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.399080149 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.275321238 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385828602 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281681228 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.096736294 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.396626681 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991520878 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674244552 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.389815945 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.383606724 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433860839 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.394920438 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609541441 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120775278 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617603535 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396568836 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391423142 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.956148217 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991719308 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685291409 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324892685 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.389604473 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640423681 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645523943 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413410986 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.840079089 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.098406428 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975524355 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.365039159 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410491365 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394732905 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.116379282 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001514368 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.70339694 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908398138 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.051816373 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387411501 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66774799 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.39210906 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387503974 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689052979 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.391870569 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401606032 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620898519 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.024325435 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20570886 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.408493166 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.512894163 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.325677255 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.615872803 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41493997 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33418697 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390913518 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.821104477 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417829373 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519903295 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401068759 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.390306419 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390381572 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.154859392 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663372842 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.394222236 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.379038838 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.390215904 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414560837 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491274674 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999254523 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423485194 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.076078154 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.74320227 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644436408 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.39187712 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.377541611 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.394391505 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39191962 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.105264771 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360895412 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402833237 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015692928 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.40162535 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.408100152 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394960275 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.60722194 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604439578 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402788835 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626715391 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422548495 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413379062 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.290873018 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.159612203 seconds)
  done (took 1683.102502382 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.402369285 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.409397559 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.434692918 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.459067921 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.434499008 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.504389879 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.479114093 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.497566042 seconds)
  done (took 52.922272385 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.392431125 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.554560738 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.425490696 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.404431577 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.408519062 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.395026546 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.875157253 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.428787915 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.408280833 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.402373453 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.401803746 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.400315861 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.07442232 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.410760511 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.402200393 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.396179725 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.407351327 seconds)
  done (took 66.49913615 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.600845616 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.48183048 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.478115402 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.461233655 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.416768101 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.39467342 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.507149761 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.411532662 seconds)
  done (took 54.055807878 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.41276599 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.412043875 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.412840497 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.411983638 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.412539216 seconds)
  done (took 8.36854802 seconds)
done (took 2086.541245782 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.397185471 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.400628493 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.397124703 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.400591391 seconds)
  done (took 6.898190993 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.373960341 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.07371602 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.384090365 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.396801108 seconds)
  done (took 18.533169025 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.393585505 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.404538053 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.126773351 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.05968023 seconds)
  done (took 5.49210702 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.144585994 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.159873538 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.143267646 seconds)
  done (took 7.755076688 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.395568202 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.403658909 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.403132543 seconds)
  done (took 20.507639836 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.694071734 seconds)
  done (took 3.002224713 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.542256276 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.592068967 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.713187219 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.720186728 seconds)
  done (took 7.874734061 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.775668069 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.768082994 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.581184136 seconds)
  done (took 6.42974367 seconds)
done (took 90.59463867 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.299773063 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.779675704 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.606569186 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.311747319 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.628347891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.605467471 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.601781294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.274778158 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.77839487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.770056446 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.315691462 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.627808757 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.554774061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.775079051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.556057823 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.773475771 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.630011248 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.351700981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.959197753 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.155693813 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.608813986 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.912198441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.144036491 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.073583704 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.634246229 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.554047342 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.498544259 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.772092683 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.131182846 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.666296673 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.562815358 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.334166248 seconds)
  done (took 194.55476578 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.400945915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.396544114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.396750688 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.402783659 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.409348553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.402042384 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.397239185 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.414934534 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.408100643 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.415825261 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.397850829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.430641074 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.398388384 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.397147667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.401477988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.397824696 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.415775338 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.415050184 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.398138353 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414837264 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.401410125 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.415433689 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.415866646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.399672623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.420367039 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.398200191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.398560657 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.404331832 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.397523263 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.397732044 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.408970554 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.411636039 seconds)
  done (took 206.290579654 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.398731893 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.403979934 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.401373576 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.397405402 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.419632383 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.405093118 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.4013365 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.402120183 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.399436055 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.405404289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.428529643 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.414040833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.400882908 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.398197458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.429889298 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.412778478 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.399911193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.406192473 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.427026225 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.399448663 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.40291359 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.419157783 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.432175226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.398422186 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.405563984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.401347309 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.42701468 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.400222266 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.421006591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.400239911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.405768317 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.407425312 seconds)
  done (took 206.382481353 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.628766961 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.408774812 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.410352783 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.361637016 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.407693222 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.407858673 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.403356534 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.599234189 seconds)
  done (took 14.938502878 seconds)
done (took 623.470787851 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.731459959 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.450134018 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.610528904 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.429384782 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.197415363 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.448866372 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.42840868 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.600933627 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.339492414 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.610952087 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.701983225 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445329008 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.846984822 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.425533414 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.6890269 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.527794956 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.290008345 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.413015535 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.750977902 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.985826943 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.697996326 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.925325017 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.62510559 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.340318706 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.893471905 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.964178032 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.158816509 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.298515899 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.451631649 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.765574208 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.082806595 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.431179194 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.494637826 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.492483759 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.552513357 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.530140818 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.378657875 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489232294 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.635457251 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.687701626 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.97077013 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.164557768 seconds)
  done (took 95.267602975 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.395213301 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.39283743 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.393995061 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.394966864 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.394707837 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.394034589 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.394381921 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.392985251 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.393997174 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.394970783 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.393259357 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.394366125 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.393901528 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.394849358 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.394799297 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.394928892 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.394041693 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.397273876 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.394460173 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.393349034 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.395173188 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.395714018 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.394586393 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.395357986 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.395525077 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.395213261 seconds)
  done (took 37.576463521 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.413307541 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.664274926 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.83270836 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.421694703 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.413546699 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.417982894 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.495349762 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.416350034 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.418027291 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.415512419 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.586992741 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.417272283 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450889218 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.856561009 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.416643731 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.415154325 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.414527162 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.414777873 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.675694124 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.424422957 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.518913776 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.420161497 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.496484651 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.42530222 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.440230177 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.41709764 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.420810718 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.98773012 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437988216 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.586805808 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.236881109 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.501332251 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.929869584 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.86819443 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.24434146 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.423793216 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.418500551 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.594895261 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.419013145 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.417942525 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.497103607 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.418558338 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.844660347 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.079721635 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.437010383 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.41992597 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.009045783 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.613351151 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.672149214 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.430242908 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.867686628 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.428094883 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.419773303 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.419012316 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.669841989 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.425012097 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.417228139 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.985568964 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.441906391 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.498909209 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.418634387 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.418092035 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.682003681 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.420700734 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.672351062 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.420778736 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.42861083 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.440074677 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.844763257 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.422083991 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.101111503 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.437524507 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.419494783 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.588358911 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.671822284 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.045733402 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442615685 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.687555186 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.943449176 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.517762294 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.424139192 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.980139997 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.525901456 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.433410249 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.422794897 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.423177375 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.421262997 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.47350229 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.498449409 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.050501546 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.116725799 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.027029887 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.527102574 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.441145369 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.420928161 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.997136016 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.446346121 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.421791219 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.845459702 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.115333484 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.447132988 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.428698344 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.111517848 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.451903607 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.504612511 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.436284209 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.857103979 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.429345856 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.473574114 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.422225099 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.429831006 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.447222865 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.50409713 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.436613591 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.423704296 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.072749742 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.618625958 seconds)
  done (took 187.032516555 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.419667067 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.414448936 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.417496872 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.416795048 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.416053756 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.423846783 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.415830619 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.41549208 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.422420806 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.417484454 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.416408321 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.414800906 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.418275814 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.418948536 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.447483255 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.425259416 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.031170783 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.416412806 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.430472449 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.418011624 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.224695808 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.425222472 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.420248435 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.43768496 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.417127036 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.419762772 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.423206587 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.418502946 seconds)
  done (took 154.530921399 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.425445819 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.001504407 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.443608185 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.560396775 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.451876716 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.424679386 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.560566806 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.488567906 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.447951046 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.422662676 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.423871811 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.74120653 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.433715526 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.951184608 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.624165395 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.577071404 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.950606979 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.445703223 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.422901693 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.424848957 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.563738373 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.431842544 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.733114671 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.003770933 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.444907992 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.002952722 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.41157207 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.426102782 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.42602901 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.005490925 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.44371993 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.73697789 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.50604719 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.489117745 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.026202247 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.969810911 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.970715615 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.578210834 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.425884722 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.425390297 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.424636972 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.409990678 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.008586733 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.447661891 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.42765397 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.99702549 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.446205959 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.427926663 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.434359547 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.42587338 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.488930141 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.514144324 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.760143477 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.012565935 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.52646497 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.445167596 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.563550945 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.814262306 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.430016343 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.954862279 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.409951984 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.015372163 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.450389565 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.410130921 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.430562794 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.431095796 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.582570777 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.563367654 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.963494939 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.450215791 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.955688885 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.601352954 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.42795092 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.428669617 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.429154058 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.015253685 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.975725626 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.603075741 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.567818464 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.63084624 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.414233424 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.428529721 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.414754677 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.506536876 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.429551682 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.015654746 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.974244984 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.447867138 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.430166738 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.430074516 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.430640484 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.614628101 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.035922129 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.527205579 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.96640265 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.76600864 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.743545024 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.429930766 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.491513588 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.454640178 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.745211574 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.430976049 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.488015678 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.893217937 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.747297013 seconds)
  done (took 170.133574598 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.685291083 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.688505839 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.526241491 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.58639466 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.038463105 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.004927966 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.748346429 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.571439104 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.545372759 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.700646002 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.639978175 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.523663326 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.647801481 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.510910096 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.171321351 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.520500145 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.544118737 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.584826798 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.594037619 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.46894858 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.123646533 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.720035887 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.621911087 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.381732959 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.528981909 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.22235096 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.003173697 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.955829634 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.607203341 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.779138228 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.968822389 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.588924267 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.418779335 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.131328073 seconds)
  done (took 68.687168466 seconds)
done (took 714.538404529 seconds)
SAVING RESULT...
DONE!
